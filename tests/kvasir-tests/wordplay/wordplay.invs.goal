===========================================================================
..alphabetic():::ENTER
::keymem == ::words2mem
::words2[] == ::words2ptrs[]
::adjacentdups == 0
::findx1 has only one value
::findx1[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
::findx2 has only one value
::findx2[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
::keymem == "ALIEN"
::largestlet == 0
::lindx1 == null
::lindx2 == null
::max_depth == 3
::maxdepthspec == 1
::ncount >= 0
::rec_anag_count == 0
::silent == 0
::specfirstword == 0
::vowelcheck == 1
::wordmasks == null
::words2[] == [ALIEN, DANGER, DARK, DRINK, DUGAN, GANDER, GARDEN, GARLAND, GASES, GNEISS, GRASSLAND, KIEV, KISS, RISK, SILVER, SLADANG, SLIVER, SURVIVAL, SURVIVE, SURVIVE, VANGUARD, VIRUS]
::words2mem == "ALIEN"
::words2ptrs[] == [ALIEN, DANGER, DARK, DRINK, DUGAN, GANDER, GARDEN, GARLAND, GASES, GNEISS, GRASSLAND, KIEV, KISS, RISK, SILVER, SLADANG, SLIVER, SURVIVAL, SURVIVE, SURVIVE, VANGUARD, VIRUS]
::wordsn[] elements > ::adjacentdups
::alphstr >= ::keymem
::alphstr >= ::words2mem
::alphstr in ::words2ptrs[]
::findx1[] elements <= ::longestlength
::findx1[] elements <= ::ncount
::findx2[] elements <= ::longestlength
::findx2[] elements <= ::ncount
::keymem in ::words2[]
::keymem in ::words2ptrs[]
::keymem < s
::wordsn[] elements > ::largestlet
::longestlength != ::max_depth
::wordsn[] elements <= ::longestlength
::wordsn[] elements > ::max_depth
::wordsn[] elements > ::maxdepthspec
::wordsn[] elements < ::ncount
::wordsn[] elements > ::rec_anag_count
::wordsn[] elements > ::silent
::wordsn[] elements > ::specfirstword
::wordsn[] elements > ::vowelcheck
::words2mem in ::words2[]
::words2[] == ::words2ptrs[] (elementwise)
s in ::words2[]
::words2mem in ::words2ptrs[]
::words2mem <= s
s in ::words2ptrs[]
===========================================================================
..alphabetic():::EXIT
::adjacentdups == orig(::adjacentdups)
::alphstr == return
::alphstr == orig(s)
::findx1 == orig(::findx1)
::findx1[] == orig(::findx1[])
::findx2 == orig(::findx2)
::findx2[] == orig(::findx2[])
::keymem == ::words2mem
::keymem == orig(::keymem)
::largestlet == orig(::largestlet)
::lindx1 == orig(::lindx1)
::lindx2 == orig(::lindx2)
::longestlength == orig(::longestlength)
::max_depth == orig(::max_depth)
::maxdepthspec == orig(::maxdepthspec)
::ncount == orig(::ncount)
::rec_anag_count == orig(::rec_anag_count)
::silent == orig(::silent)
::specfirstword == orig(::specfirstword)
::vowelcheck == orig(::vowelcheck)
::wordmasks == orig(::wordmasks)
::words2 == orig(::words2)
::words2[] == ::words2ptrs[]
::words2mem == orig(::words2mem)
::words2ptrs == orig(::words2ptrs)
::wordsn == orig(::wordsn)
::wordsn[] == orig(::wordsn[])
::wordss == orig(::wordss)
::adjacentdups == 0
::findx1 has only one value
::findx1[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
::findx2 has only one value
::findx2[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
::keymem == "ALIEN"
::largestlet == 0
::lindx1 == null
::lindx2 == null
::max_depth == 3
::maxdepthspec == 1
::ncount >= 0
::rec_anag_count == 0
::silent == 0
::specfirstword == 0
::vowelcheck == 1
::wordmasks == null
::words2[] == [ALIEN, DANGER, DARK, DRINK, DUGAN, GANDER, GARDEN, GARLAND, GASES, GNEISS, GRASSLAND, KIEV, KISS, RISK, SILVER, SLADANG, SLIVER, SURVIVAL, SURVIVE, SURVIVE, VANGUARD, VIRUS]
::words2mem == "ALIEN"
::words2ptrs[] == [ALIEN, DANGER, DARK, DRINK, DUGAN, GANDER, GARDEN, GARLAND, GASES, GNEISS, GRASSLAND, KIEV, KISS, RISK, SILVER, SLADANG, SLIVER, SURVIVAL, SURVIVE, SURVIVE, VANGUARD, VIRUS]
::wordsn[] elements > ::adjacentdups
::alphstr > ::keymem
::alphstr in ::words2[]
::alphstr >= ::words2mem
::alphstr in ::words2ptrs[]
::findx1[] elements <= ::longestlength
::findx1[] elements <= ::ncount
::findx2[] elements <= ::longestlength
::findx2[] elements <= ::ncount
::keymem in ::words2[]
::keymem in ::words2ptrs[]
::keymem <= orig(::alphstr)
::wordsn[] elements > ::largestlet
::longestlength != ::max_depth
::wordsn[] elements <= ::longestlength
::wordsn[] elements > ::max_depth
::wordsn[] elements > ::maxdepthspec
::wordsn[] elements < ::ncount
::wordsn[] elements > ::rec_anag_count
::wordsn[] elements > ::silent
::wordsn[] elements > ::specfirstword
::wordsn[] elements > ::vowelcheck
::words2mem in ::words2[]
::words2[] == ::words2ptrs[] (elementwise)
::words2mem in ::words2ptrs[]
::words2mem <= orig(::alphstr)
orig(::alphstr) in ::words2ptrs[]
===========================================================================
..anagramr7():::ENTER
::adjacentdups == 0
::findx1 has only one value
::findx1[] == [0, -1, -1, 12, 13, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
::findx2 has only one value
::findx2[] == [11, -2, -2, 12, 18, -2, -2, -2, 21, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2]
::keymem == "AEILN"
::largestlet == 73
::lindx1 has only one value
::lindx1[] == [-1, -1, -1, -1, 0, 4, 9, 15, 19, 21]
::lindx2 has only one value
::lindx2[] == [-2, -2, -2, -2, 3, 8, 14, 18, 20, 21]
::longestlength == 9
::max_depth == 3
::maxdepthspec == 1
::ncount == 22
::rec_anag_count >= 0
::silent == 0
::specfirstword == 0
::vowelcheck == 1
::wordmasks has only one value
::wordmasks[] == [141385, 403529, 272457, 3285065, 139353, 139353, 139353, 1056841, 132105, 262225, 10513, 3541249, 140552, 270672, 2098448, 2492688, 2492688, 3539216, 3539216, 394496, 263424, 3539200]
::words2 has only one value
::words2[] == [KISS, RISK, DARK, KIEV, DUGAN, DRINK, ALIEN, VIRUS, GASES, GNEISS, SILVER, SLIVER, GARDEN, DANGER, GANDER, SURVIVE, GARLAND, SLADANG, SURVIVE, SURVIVAL, VANGUARD, GRASSLAND]
::words2mem == "ALIEN"
::words2ptrs has only one value
::words2ptrs[] == [GARLAND, GRASSLAND, SLADANG, VANGUARD, GANDER, GARDEN, DANGER, DUGAN, DARK, GASES, ALIEN, SURVIVAL, DRINK, GNEISS, KIEV, SLIVER, SILVER, SURVIVE, SURVIVE, RISK, KISS, VIRUS]
::wordsn has only one value
::wordsn[] == [4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9]
::wordss has only one value
::wordss[] == [AADGLNR, AADGLNRSS, AADGLNS, AADGNRUV, ADEGNR, ADEGNR, ADEGNR, ADGNU, ADKR, AEGSS, AEILN, AILRSUVV, DIKNR, EGINSS, EIKV, EILRSV, EILRSV, EIRSUVV, EIRSUVV, IKRS, IKSS, IRSUV]
accum has only one value
level has only one value
minkey != null
minkey[i] >= i
level[] elements >= ::adjacentdups
minkey[] elements >= ::adjacentdups
::keymem != s
level[] elements < ::largestlet
minkey[] elements < ::largestlet
::lindx1[] < minkey[] (lexically)
::lindx1[] <= minkey[] (lexically)
::lindx2[] < minkey[] (lexically)
::lindx2[] <= minkey[] (lexically)
level[] elements < ::longestlength
level[] elements <= ::max_depth
level[] elements < ::ncount
minkey[] elements <= ::ncount
::wordmasks[] elements > ::rec_anag_count
level[] elements >= ::silent
minkey[] elements >= ::silent
level[] elements >= ::specfirstword
minkey[] elements >= ::specfirstword
::words2mem != s
===========================================================================
..anagramr7():::EXIT
::adjacentdups == orig(::adjacentdups)
::findx1 == orig(::findx1)
::findx1[] == orig(::findx1[])
::findx2 == orig(::findx2)
::findx2[] == orig(::findx2[])
::keymem == orig(::keymem)
::largestlet == orig(::largestlet)
::lindx1 == orig(::lindx1)
::lindx1[] == orig(::lindx1[])
::lindx2 == orig(::lindx2)
::lindx2[] == orig(::lindx2[])
::longestlength == orig(::longestlength)
::max_depth == orig(::max_depth)
::maxdepthspec == orig(::maxdepthspec)
::ncount == orig(::ncount)
::silent == orig(::silent)
::specfirstword == orig(::specfirstword)
::vowelcheck == orig(::vowelcheck)
::wordmasks == orig(::wordmasks)
::wordmasks[] == orig(::wordmasks[])
::words2 == orig(::words2)
::words2mem == orig(::words2mem)
::words2ptrs == orig(::words2ptrs)
::wordsn == orig(::wordsn)
::wordsn[] == orig(::wordsn[])
::wordss == orig(::wordss)
minkey[] == orig(minkey[])
::adjacentdups == 0
::findx1 has only one value
::findx1[] == [0, -1, -1, 12, 13, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
::findx2 has only one value
::findx2[] == [11, -2, -2, 12, 18, -2, -2, -2, 21, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2]
::keymem == "AEILN"
::largestlet == 73
::lindx1 has only one value
::lindx1[] == [-1, -1, -1, -1, 0, 4, 9, 15, 19, 21]
::lindx2 has only one value
::lindx2[] == [-2, -2, -2, -2, 3, 8, 14, 18, 20, 21]
::longestlength == 9
::max_depth == 3
::maxdepthspec == 1
::ncount == 22
::silent == 0
::specfirstword == 0
::vowelcheck == 1
::wordmasks has only one value
::wordmasks[] == [141385, 403529, 272457, 3285065, 139353, 139353, 139353, 1056841, 132105, 262225, 10513, 3541249, 140552, 270672, 2098448, 2492688, 2492688, 3539216, 3539216, 394496, 263424, 3539200]
::words2 has only one value
::words2[] == [KISS, RISK, DARK, KIEV, DUGAN, DRINK, ALIEN, VIRUS, GASES, GNEISS, SILVER, SLIVER, GARDEN, DANGER, GANDER, SURVIVE, GARLAND, SLADANG, SURVIVE, SURVIVAL, VANGUARD, GRASSLAND]
::words2mem == "ALIEN"
::words2ptrs has only one value
::words2ptrs[] == [GARLAND, GRASSLAND, SLADANG, VANGUARD, GANDER, GARDEN, DANGER, DUGAN, DARK, GASES, ALIEN, SURVIVAL, DRINK, GNEISS, KIEV, SLIVER, SILVER, SURVIVE, SURVIVE, RISK, KISS, VIRUS]
::wordsn has only one value
::wordsn[] == [4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9]
::wordss has only one value
::wordss[] == [AADGLNR, AADGLNRSS, AADGLNS, AADGNRUV, ADEGNR, ADEGNR, ADEGNR, ADGNU, ADKR, AEGSS, AEILN, AILRSUVV, DIKNR, EGINSS, EIKV, EILRSV, EILRSV, EIRSUVV, EIRSUVV, IKRS, IKSS, IRSUV]
minkey[i] >= i
minkey[] elements >= ::adjacentdups
orig(level[]) elements >= ::adjacentdups
::keymem != orig(s)
level[] elements < ::largestlet
minkey[] elements < ::largestlet
orig(level[]) elements < ::largestlet
::lindx1[] < minkey[] (lexically)
::lindx1[] <= minkey[] (lexically)
::lindx2[] < minkey[] (lexically)
::lindx2[] <= minkey[] (lexically)
level[] elements < ::longestlength
orig(level[]) elements < ::longestlength
level[] elements < ::max_depth
orig(level[]) elements <= ::max_depth
level[] elements < ::ncount
minkey[] elements <= ::ncount
orig(level[]) elements < ::ncount
::wordmasks[] elements > ::rec_anag_count
(::rec_anag_count == 0) ==> (orig(::rec_anag_count) == 0)
::rec_anag_count >= orig(::rec_anag_count)
minkey[] elements >= ::silent
orig(level[]) elements >= ::silent
minkey[] elements >= ::specfirstword
orig(level[]) elements >= ::specfirstword
::wordmasks[] elements > orig(::rec_anag_count)
::words2mem != orig(s)
level[] - orig(level[]) + 1 == 0
level[] < orig(level[]) (elementwise)
===========================================================================
..extract():::ENTER
::adjacentdups == 0
::findx1 has only one value
::findx1[] one of { [0, -1, -1, 12, 13, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
::findx1[] elements >= -1
::findx2 has only one value
::findx2[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [11, -2, -2, 12, 18, -2, -2, -2, 21, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2] }
::keymem == "AEILN"
::largestlet one of { 0, 73 }
::lindx1[] == [-1, -1, -1, -1, 0, 4, 9, 15, 19, 21]
::lindx1[] elements >= -1
::lindx1[] sorted by <=
::lindx1[i] != i
::lindx2[] == [-2, -2, -2, -2, 3, 8, 14, 18, 20, 21]
::lindx2[] sorted by <=
::lindx2[i] != i
::max_depth == 3
::maxdepthspec == 1
::rec_anag_count >= 0
::silent == 0
::specfirstword == 0
::vowelcheck == 1
::wordmasks[] == [141385, 403529, 272457, 3285065, 139353, 139353, 139353, 1056841, 132105, 262225, 10513, 3541249, 140552, 270672, 2098448, 2492688, 2492688, 3539216, 3539216, 394496, 263424, 3539200]
::words2[] == [KISS, RISK, DARK, KIEV, DUGAN, DRINK, ALIEN, VIRUS, GASES, GNEISS, SILVER, SLIVER, GARDEN, DANGER, GANDER, SURVIVE, GARLAND, SLADANG, SURVIVE, SURVIVAL, VANGUARD, GRASSLAND]
::words2mem == "ALIEN"
::words2ptrs[] == [GARLAND, GRASSLAND, SLADANG, VANGUARD, GANDER, GARDEN, DANGER, DUGAN, DARK, GASES, ALIEN, SURVIVAL, DRINK, GNEISS, KIEV, SLIVER, SILVER, SURVIVE, SURVIVE, RISK, KISS, VIRUS]
::wordsn[] == [4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9]
::wordsn[] sorted by <=
::wordss[] == [AADGLNR, AADGLNRSS, AADGLNS, AADGNRUV, ADEGNR, ADEGNR, ADEGNR, ADGNU, ADKR, AEGSS, AEILN, AILRSUVV, DIKNR, EGINSS, EIKV, EILRSV, EILRSV, EIRSUVV, EIRSUVV, IKRS, IKSS, IRSUV]
::adjacentdups in ::findx1[]
::adjacentdups in ::lindx1[]
::wordmasks[] elements > ::adjacentdups
::wordsn[] elements > ::adjacentdups
::findx1[] elements <= ::largestlet
::findx1[] elements <= ::ncount
::silent in ::findx1[]
::specfirstword in ::findx1[]
::findx2[] elements <= ::largestlet
::findx2[] elements <= ::ncount
::keymem != ::r1
::keymem < ::words2mem
::keymem in ::wordss[]
::keymem != s1
::lindx1[] elements < ::largestlet
::lindx2[] elements < ::largestlet
::wordmasks[] elements > ::largestlet
::wordsn[] elements < ::largestlet
::longestlength in ::lindx1[]
::lindx1[] elements < ::ncount
::silent in ::lindx1[]
::specfirstword in ::lindx1[]
::max_depth in ::lindx2[]
::lindx2[] elements < ::ncount
::longestlength != ::max_depth
::wordmasks[] elements > ::longestlength
::longestlength in ::wordsn[]
::wordsn[] elements <= ::longestlength
::wordmasks[] elements > ::max_depth
::wordsn[] elements > ::max_depth
::wordmasks[] elements > ::maxdepthspec
::wordsn[] elements > ::maxdepthspec
::wordmasks[] elements > ::ncount
::wordsn[] elements < ::ncount
::r1 != ::words2mem
::wordmasks[] elements > ::rec_anag_count
::wordmasks[] elements > ::silent
::wordsn[] elements > ::silent
::wordmasks[] elements > ::specfirstword
::wordsn[] elements > ::specfirstword
::wordmasks[] elements > ::vowelcheck
::wordsn[] elements > ::vowelcheck
::words2mem in ::words2[]
::words2mem in ::words2ptrs[]
::words2mem != s1
::words2mem != s2
s2 in ::wordss[]
s1 <= s2
===========================================================================
..extract():::EXIT
::adjacentdups == orig(::adjacentdups)
::findx1 == orig(::findx1)
::findx1[] == orig(::findx1[])
::findx2 == orig(::findx2)
::findx2[] == orig(::findx2[])
::keymem == orig(::keymem)
::largestlet == orig(::largestlet)
::lindx1 == orig(::lindx1)
::lindx1[] == orig(::lindx1[])
::lindx2 == orig(::lindx2)
::lindx2[] == orig(::lindx2[])
::longestlength == orig(::longestlength)
::max_depth == orig(::max_depth)
::maxdepthspec == orig(::maxdepthspec)
::ncount == orig(::ncount)
::r1 == return
::rec_anag_count == orig(::rec_anag_count)
::silent == orig(::silent)
::specfirstword == orig(::specfirstword)
::vowelcheck == orig(::vowelcheck)
::wordmasks == orig(::wordmasks)
::wordmasks[] == orig(::wordmasks[])
::words2 == orig(::words2)
::words2mem == orig(::words2mem)
::words2ptrs == orig(::words2ptrs)
::wordsn == orig(::wordsn)
::wordsn[] == orig(::wordsn[])
::wordss == orig(::wordss)
::adjacentdups == 0
::findx1 has only one value
::findx1[] one of { [0, -1, -1, 12, 13, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] }
::findx1[] elements >= -1
::findx2 has only one value
::findx2[] one of { [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [11, -2, -2, 12, 18, -2, -2, -2, 21, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2] }
::keymem == "AEILN"
::largestlet one of { 0, 73 }
::lindx1[] == [-1, -1, -1, -1, 0, 4, 9, 15, 19, 21]
::lindx1[] elements >= -1
::lindx1[] sorted by <=
::lindx1[i] != i
::lindx2[] == [-2, -2, -2, -2, 3, 8, 14, 18, 20, 21]
::lindx2[] sorted by <=
::lindx2[i] != i
::max_depth == 3
::maxdepthspec == 1
::rec_anag_count >= 0
::silent == 0
::specfirstword == 0
::vowelcheck == 1
::wordmasks[] == [141385, 403529, 272457, 3285065, 139353, 139353, 139353, 1056841, 132105, 262225, 10513, 3541249, 140552, 270672, 2098448, 2492688, 2492688, 3539216, 3539216, 394496, 263424, 3539200]
::words2[] == [KISS, RISK, DARK, KIEV, DUGAN, DRINK, ALIEN, VIRUS, GASES, GNEISS, SILVER, SLIVER, GARDEN, DANGER, GANDER, SURVIVE, GARLAND, SLADANG, SURVIVE, SURVIVAL, VANGUARD, GRASSLAND]
::words2mem == "ALIEN"
::words2ptrs[] == [GARLAND, GRASSLAND, SLADANG, VANGUARD, GANDER, GARDEN, DANGER, DUGAN, DARK, GASES, ALIEN, SURVIVAL, DRINK, GNEISS, KIEV, SLIVER, SILVER, SURVIVE, SURVIVE, RISK, KISS, VIRUS]
::wordsn[] == [4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9]
::wordsn[] sorted by <=
::wordss[] == [AADGLNR, AADGLNRSS, AADGLNS, AADGNRUV, ADEGNR, ADEGNR, ADEGNR, ADGNU, ADKR, AEGSS, AEILN, AILRSUVV, DIKNR, EGINSS, EIKV, EILRSV, EILRSV, EIRSUVV, EIRSUVV, IKRS, IKSS, IRSUV]
::adjacentdups in ::findx1[]
::adjacentdups in ::lindx1[]
::wordmasks[] elements > ::adjacentdups
::wordsn[] elements > ::adjacentdups
::findx1[] elements <= ::largestlet
::findx1[] elements <= ::ncount
::silent in ::findx1[]
::specfirstword in ::findx1[]
::findx2[] elements <= ::largestlet
::findx2[] elements <= ::ncount
::keymem != ::r1
::keymem < ::words2mem
::keymem in ::wordss[]
::keymem != orig(::r1)
::keymem != orig(s1)
::lindx1[] elements < ::largestlet
::lindx2[] elements < ::largestlet
::wordmasks[] elements > ::largestlet
::wordsn[] elements < ::largestlet
::longestlength in ::lindx1[]
::lindx1[] elements < ::ncount
::silent in ::lindx1[]
::specfirstword in ::lindx1[]
::max_depth in ::lindx2[]
::lindx2[] elements < ::ncount
::longestlength != ::max_depth
::wordmasks[] elements > ::longestlength
::longestlength in ::wordsn[]
::wordsn[] elements <= ::longestlength
::wordmasks[] elements > ::max_depth
::wordsn[] elements > ::max_depth
::wordmasks[] elements > ::maxdepthspec
::wordsn[] elements > ::maxdepthspec
::wordmasks[] elements > ::ncount
::wordsn[] elements < ::ncount
::r1 != ::words2mem
::r1 != orig(s1)
::r1 != orig(s2)
::wordmasks[] elements > ::rec_anag_count
::wordmasks[] elements > ::silent
::wordsn[] elements > ::silent
::wordmasks[] elements > ::specfirstword
::wordsn[] elements > ::specfirstword
::wordmasks[] elements > ::vowelcheck
::wordsn[] elements > ::vowelcheck
::words2mem in ::words2[]
::words2mem in ::words2ptrs[]
::words2mem != orig(::r1)
::words2mem != orig(s1)
::words2mem != orig(s2)
orig(s2) in ::wordss[]
===========================================================================
..intmask():::ENTER
::adjacentdups == 0
::findx1 has only one value
::findx1[] == [0, -1, -1, 12, 13, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
::findx2 has only one value
::findx2[] == [11, -2, -2, 12, 18, -2, -2, -2, 21, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2]
::keymem == "AEILN"
::largestlet == 73
::lindx1 has only one value
::lindx1[] == [-1, -1, -1, -1, 0, 4, 9, 15, 19, 21]
::lindx2 has only one value
::lindx2[] == [-2, -2, -2, -2, 3, 8, 14, 18, 20, 21]
::longestlength == 9
::max_depth == 3
::maxdepthspec == 1
::ncount == 22
::rec_anag_count >= 0
::silent == 0
::specfirstword == 0
::vowelcheck == 1
::wordmasks has only one value
::wordmasks[i] > i
::words2 has only one value
::words2[] == [KISS, RISK, DARK, KIEV, DUGAN, DRINK, ALIEN, VIRUS, GASES, GNEISS, SILVER, SLIVER, GARDEN, DANGER, GANDER, SURVIVE, GARLAND, SLADANG, SURVIVE, SURVIVAL, VANGUARD, GRASSLAND]
::words2mem == "ALIEN"
::words2ptrs has only one value
::words2ptrs[] == [GARLAND, GRASSLAND, SLADANG, VANGUARD, GANDER, GARDEN, DANGER, DUGAN, DARK, GASES, ALIEN, SURVIVAL, DRINK, GNEISS, KIEV, SLIVER, SILVER, SURVIVE, SURVIVE, RISK, KISS, VIRUS]
::wordsn has only one value
::wordsn[] == [4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9]
::wordss has only one value
::wordss[] == [AADGLNR, AADGLNRSS, AADGLNS, AADGNRUV, ADEGNR, ADEGNR, ADEGNR, ADGNU, ADKR, AEGSS, AEILN, AILRSUVV, DIKNR, EGINSS, EIKV, EILRSV, EILRSV, EIRSUVV, EIRSUVV, IKRS, IKSS, IRSUV]
::wordmasks[] elements > ::adjacentdups
::wordmasks[] elements > ::largestlet
::wordmasks[] elements > ::longestlength
::wordmasks[] elements > ::max_depth
::wordmasks[] elements > ::maxdepthspec
::wordmasks[] elements > ::ncount
::wordmasks[] elements > ::rec_anag_count
::wordmasks[] elements > ::silent
::wordmasks[] elements > ::specfirstword
::wordmasks[] elements > ::vowelcheck
::words2mem != s
===========================================================================
..intmask():::EXIT
::adjacentdups == orig(::adjacentdups)
::findx1 == orig(::findx1)
::findx1[] == orig(::findx1[])
::findx2 == orig(::findx2)
::findx2[] == orig(::findx2[])
::keymem == orig(::keymem)
::largestlet == orig(::largestlet)
::lindx1 == orig(::lindx1)
::lindx1[] == orig(::lindx1[])
::lindx2 == orig(::lindx2)
::lindx2[] == orig(::lindx2[])
::longestlength == orig(::longestlength)
::max_depth == orig(::max_depth)
::maxdepthspec == orig(::maxdepthspec)
::ncount == orig(::ncount)
::rec_anag_count == orig(::rec_anag_count)
::silent == orig(::silent)
::specfirstword == orig(::specfirstword)
::vowelcheck == orig(::vowelcheck)
::wordmasks == orig(::wordmasks)
::wordmasks[] == orig(::wordmasks[])
::words2 == orig(::words2)
::words2mem == orig(::words2mem)
::words2ptrs == orig(::words2ptrs)
::wordsn == orig(::wordsn)
::wordsn[] == orig(::wordsn[])
::wordss == orig(::wordss)
::adjacentdups == 0
::findx1 has only one value
::findx1[] == [0, -1, -1, 12, 13, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
::findx2 has only one value
::findx2[] == [11, -2, -2, 12, 18, -2, -2, -2, 21, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2]
::keymem == "AEILN"
::largestlet == 73
::lindx1 has only one value
::lindx1[] == [-1, -1, -1, -1, 0, 4, 9, 15, 19, 21]
::lindx2 has only one value
::lindx2[] == [-2, -2, -2, -2, 3, 8, 14, 18, 20, 21]
::longestlength == 9
::max_depth == 3
::maxdepthspec == 1
::ncount == 22
::rec_anag_count >= 0
::silent == 0
::specfirstword == 0
::vowelcheck == 1
::wordmasks has only one value
::wordmasks[i] > i
::words2 has only one value
::words2[] == [KISS, RISK, DARK, KIEV, DUGAN, DRINK, ALIEN, VIRUS, GASES, GNEISS, SILVER, SLIVER, GARDEN, DANGER, GANDER, SURVIVE, GARLAND, SLADANG, SURVIVE, SURVIVAL, VANGUARD, GRASSLAND]
::words2mem == "ALIEN"
::words2ptrs has only one value
::words2ptrs[] == [GARLAND, GRASSLAND, SLADANG, VANGUARD, GANDER, GARDEN, DANGER, DUGAN, DARK, GASES, ALIEN, SURVIVAL, DRINK, GNEISS, KIEV, SLIVER, SILVER, SURVIVE, SURVIVE, RISK, KISS, VIRUS]
::wordsn has only one value
::wordsn[] == [4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9]
::wordss has only one value
::wordss[] == [AADGLNR, AADGLNRSS, AADGLNS, AADGNRUV, ADEGNR, ADEGNR, ADEGNR, ADGNU, ADKR, AEGSS, AEILN, AILRSUVV, DIKNR, EGINSS, EIKV, EILRSV, EILRSV, EIRSUVV, EIRSUVV, IKRS, IKSS, IRSUV]
::wordmasks[] elements > ::adjacentdups
::findx1[] elements < return
::findx2[] elements < return
::wordmasks[] elements > ::largestlet
::lindx1[] elements < return
::lindx2[] elements < return
::wordmasks[] elements > ::longestlength
::wordmasks[] elements > ::max_depth
::wordmasks[] elements > ::maxdepthspec
::wordmasks[] elements > ::ncount
::wordmasks[] elements > ::rec_anag_count
::wordmasks[] elements > ::silent
::wordmasks[] elements > ::specfirstword
::wordmasks[] elements > ::vowelcheck
::words2mem != orig(s)
::wordsn[] elements < return
===========================================================================
..main():::ENTER
::findx1[] == ::findx2[]
::lindx1 == ::lindx2
::longestlength == ::max_depth
::wordmasks == ::wordsn
::words2 == ::words2ptrs
::words2 == ::wordss
::adjacentdups == 0
::findx1 has only one value
::findx1[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
::findx2 has only one value
::largestlet == 0
::lindx1 == null
::longestlength == 0
::maxdepthspec == 0
::ncount == 0
::rec_anag_count == 0
::silent == 0
::specfirstword == 0
::vowelcheck == 0
::wordmasks == null
::words2 == null
argc == 5
argv has only one value
argv[] == [./wordplay]
===========================================================================
..main():::EXIT
::adjacentdups == orig(::adjacentdups)
::findx1 == orig(::findx1)
::findx2 == orig(::findx2)
::silent == orig(::silent)
::specfirstword == orig(::specfirstword)
::adjacentdups == 0
::findx1 has only one value
::findx1[] == [0, -1, -1, 12, 13, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
::findx2 has only one value
::findx2[] == [11, -2, -2, 12, 18, -2, -2, -2, 21, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2]
::keymem == "AEILN"
::largestlet == 73
::lindx1 has only one value
::lindx1[] == [-1, -1, -1, -1, 0, 4, 9, 15, 19, 21]
::lindx2 has only one value
::lindx2[] == [-2, -2, -2, -2, 3, 8, 14, 18, 20, 21]
::longestlength == 9
::max_depth == 3
::maxdepthspec == 1
::ncount == 22
::rec_anag_count == 12
::silent == 0
::specfirstword == 0
::vowelcheck == 1
::wordmasks has only one value
::wordmasks[] == [141385, 403529, 272457, 3285065, 139353, 139353, 139353, 1056841, 132105, 262225, 10513, 3541249, 140552, 270672, 2098448, 2492688, 2492688, 3539216, 3539216, 394496, 263424, 3539200]
::words2 has only one value
::words2[] == [KISS, RISK, DARK, KIEV, DUGAN, DRINK, ALIEN, VIRUS, GASES, GNEISS, SILVER, SLIVER, GARDEN, DANGER, GANDER, SURVIVE, GARLAND, SLADANG, SURVIVE, SURVIVAL, VANGUARD, GRASSLAND]
::words2mem == "ALIEN"
::words2ptrs has only one value
::words2ptrs[] == [GARLAND, GRASSLAND, SLADANG, VANGUARD, GANDER, GARDEN, DANGER, DUGAN, DARK, GASES, ALIEN, SURVIVAL, DRINK, GNEISS, KIEV, SLIVER, SILVER, SURVIVE, SURVIVE, RISK, KISS, VIRUS]
::wordsn has only one value
::wordsn[] == [4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9]
::wordss has only one value
::wordss[] == [AADGLNR, AADGLNRSS, AADGLNS, AADGNRUV, ADEGNR, ADEGNR, ADEGNR, ADGNU, ADKR, AEGSS, AEILN, AILRSUVV, DIKNR, EGINSS, EIKV, EILRSV, EILRSV, EIRSUVV, EIRSUVV, IKRS, IKSS, IRSUV]
argv[] == [./wordplay]
return == 0
===========================================================================
..numvowels():::ENTER
::adjacentdups == 0
::findx1 has only one value
::findx1[] == [0, -1, -1, 12, 13, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
::findx2 has only one value
::findx2[] == [11, -2, -2, 12, 18, -2, -2, -2, 21, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2]
::keymem == "AEILN"
::largestlet == 73
::lindx1 has only one value
::lindx1[] == [-1, -1, -1, -1, 0, 4, 9, 15, 19, 21]
::lindx2 has only one value
::lindx2[] == [-2, -2, -2, -2, 3, 8, 14, 18, 20, 21]
::longestlength == 9
::max_depth == 3
::maxdepthspec == 1
::ncount == 22
::rec_anag_count >= 0
::silent == 0
::specfirstword == 0
::vowelcheck == 1
::wordmasks has only one value
::wordmasks[] == [141385, 403529, 272457, 3285065, 139353, 139353, 139353, 1056841, 132105, 262225, 10513, 3541249, 140552, 270672, 2098448, 2492688, 2492688, 3539216, 3539216, 394496, 263424, 3539200]
::words2 has only one value
::words2[] == [KISS, RISK, DARK, KIEV, DUGAN, DRINK, ALIEN, VIRUS, GASES, GNEISS, SILVER, SLIVER, GARDEN, DANGER, GANDER, SURVIVE, GARLAND, SLADANG, SURVIVE, SURVIVAL, VANGUARD, GRASSLAND]
::words2mem == "ALIEN"
::words2ptrs has only one value
::words2ptrs[] == [GARLAND, GRASSLAND, SLADANG, VANGUARD, GANDER, GARDEN, DANGER, DUGAN, DARK, GASES, ALIEN, SURVIVAL, DRINK, GNEISS, KIEV, SLIVER, SILVER, SURVIVE, SURVIVE, RISK, KISS, VIRUS]
::wordsn has only one value
::wordsn[] == [4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9]
::wordss has only one value
::wordss[] == [AADGLNR, AADGLNRSS, AADGLNS, AADGNRUV, ADEGNR, ADEGNR, ADEGNR, ADGNU, ADKR, AEGSS, AEILN, AILRSUVV, DIKNR, EGINSS, EIKV, EILRSV, EILRSV, EIRSUVV, EIRSUVV, IKRS, IKSS, IRSUV]
::keymem != s
::wordmasks[] elements > ::rec_anag_count
::words2mem != s
===========================================================================
..numvowels():::EXIT
::adjacentdups == orig(::adjacentdups)
::findx1 == orig(::findx1)
::findx1[] == orig(::findx1[])
::findx2 == orig(::findx2)
::findx2[] == orig(::findx2[])
::keymem == orig(::keymem)
::largestlet == orig(::largestlet)
::lindx1 == orig(::lindx1)
::lindx1[] == orig(::lindx1[])
::lindx2 == orig(::lindx2)
::lindx2[] == orig(::lindx2[])
::longestlength == orig(::longestlength)
::max_depth == orig(::max_depth)
::maxdepthspec == orig(::maxdepthspec)
::ncount == orig(::ncount)
::rec_anag_count == orig(::rec_anag_count)
::silent == orig(::silent)
::specfirstword == orig(::specfirstword)
::vowelcheck == orig(::vowelcheck)
::wordmasks == orig(::wordmasks)
::wordmasks[] == orig(::wordmasks[])
::words2 == orig(::words2)
::words2mem == orig(::words2mem)
::words2ptrs == orig(::words2ptrs)
::wordsn == orig(::wordsn)
::wordsn[] == orig(::wordsn[])
::wordss == orig(::wordss)
::adjacentdups == 0
::findx1 has only one value
::findx1[] == [0, -1, -1, 12, 13, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1]
::findx2 has only one value
::findx2[] == [11, -2, -2, 12, 18, -2, -2, -2, 21, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2]
::keymem == "AEILN"
::largestlet == 73
::lindx1 has only one value
::lindx1[] == [-1, -1, -1, -1, 0, 4, 9, 15, 19, 21]
::lindx2 has only one value
::lindx2[] == [-2, -2, -2, -2, 3, 8, 14, 18, 20, 21]
::longestlength == 9
::max_depth == 3
::maxdepthspec == 1
::ncount == 22
::rec_anag_count >= 0
::silent == 0
::specfirstword == 0
::vowelcheck == 1
::wordmasks has only one value
::wordmasks[] == [141385, 403529, 272457, 3285065, 139353, 139353, 139353, 1056841, 132105, 262225, 10513, 3541249, 140552, 270672, 2098448, 2492688, 2492688, 3539216, 3539216, 394496, 263424, 3539200]
::words2 has only one value
::words2[] == [KISS, RISK, DARK, KIEV, DUGAN, DRINK, ALIEN, VIRUS, GASES, GNEISS, SILVER, SLIVER, GARDEN, DANGER, GANDER, SURVIVE, GARLAND, SLADANG, SURVIVE, SURVIVAL, VANGUARD, GRASSLAND]
::words2mem == "ALIEN"
::words2ptrs has only one value
::words2ptrs[] == [GARLAND, GRASSLAND, SLADANG, VANGUARD, GANDER, GARDEN, DANGER, DUGAN, DARK, GASES, ALIEN, SURVIVAL, DRINK, GNEISS, KIEV, SLIVER, SILVER, SURVIVE, SURVIVE, RISK, KISS, VIRUS]
::wordsn has only one value
::wordsn[] == [4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 6, 6, 6, 6, 7, 7, 7, 7, 8, 8, 9]
::wordss has only one value
::wordss[] == [AADGLNR, AADGLNRSS, AADGLNS, AADGNRUV, ADEGNR, ADEGNR, ADEGNR, ADGNU, ADKR, AEGSS, AEILN, AILRSUVV, DIKNR, EGINSS, EIKV, EILRSV, EILRSV, EIRSUVV, EIRSUVV, IKRS, IKSS, IRSUV]
return >= 1
::keymem != orig(s)
::wordmasks[] elements > ::rec_anag_count
::wordmasks[] elements > return
::words2mem != orig(s)
===========================================================================
..uppercase():::ENTER
::keymem == ::words2mem
::adjacentdups == 0
::findx1 has only one value
::findx1[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
::findx2 has only one value
::findx2[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
::keymem == "ALIEN"
::largestlet == 0
::lindx1 == null
::lindx2 == null
::max_depth == 3
::maxdepthspec == 1
::ncount >= 0
::rec_anag_count == 0
::silent == 0
::specfirstword == 0
::vowelcheck == 1
::wordmasks == null
::words2[] == [ALIEN, DANGER, DARK, DRINK, DUGAN, GANDER, GARDEN, GARLAND, GASES, GNEISS, GRASSLAND, KIEV, KISS, RISK, SILVER, SLADANG, SLIVER, SURVIVAL, SURVIVE, SURVIVE, VANGUARD, VIRUS]
::words2mem == "ALIEN"
::wordsn[] == [5, 6, 4, 5, 5, 6, 6, 7, 5, 6, 9, 4, 4, 4, 6, 7, 6, 8, 7, 7, 8, 5]
::wordsn[] elements > ::adjacentdups
::findx1[] elements <= ::longestlength
::findx1[] elements <= ::ncount
::findx2[] elements <= ::longestlength
::findx2[] elements <= ::ncount
::keymem <= ::upcasestr
::keymem in ::words2[]
::keymem < s
::wordsn[] elements > ::largestlet
::longestlength != ::max_depth
::longestlength in ::wordsn[]
::wordsn[] elements <= ::longestlength
::wordsn[] elements > ::max_depth
::wordsn[] elements > ::maxdepthspec
::wordsn[] elements < ::ncount
::wordsn[] elements > ::rec_anag_count
::wordsn[] elements > ::silent
::wordsn[] elements > ::specfirstword
::upcasestr >= ::words2mem
::wordsn[] elements > ::vowelcheck
::words2mem in ::words2[]
s in ::words2[]
::words2mem <= s
===========================================================================
..uppercase():::EXIT
::adjacentdups == orig(::adjacentdups)
::findx1 == orig(::findx1)
::findx1[] == orig(::findx1[])
::findx2 == orig(::findx2)
::findx2[] == orig(::findx2[])
::keymem == ::words2mem
::keymem == orig(::keymem)
::largestlet == orig(::largestlet)
::lindx1 == orig(::lindx1)
::lindx2 == orig(::lindx2)
::longestlength == orig(::longestlength)
::max_depth == orig(::max_depth)
::maxdepthspec == orig(::maxdepthspec)
::ncount == orig(::ncount)
::rec_anag_count == orig(::rec_anag_count)
::silent == orig(::silent)
::specfirstword == orig(::specfirstword)
::upcasestr == return
::vowelcheck == orig(::vowelcheck)
::wordmasks == orig(::wordmasks)
::words2 == orig(::words2)
::words2mem == orig(::words2mem)
::words2ptrs == orig(::words2ptrs)
::wordsn == orig(::wordsn)
::wordsn[] == orig(::wordsn[])
::wordss == orig(::wordss)
::adjacentdups == 0
::findx1 has only one value
::findx1[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
::findx2 has only one value
::findx2[] == [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
::keymem == "ALIEN"
::largestlet == 0
::lindx1 == null
::lindx2 == null
::max_depth == 3
::maxdepthspec == 1
::ncount >= 0
::rec_anag_count == 0
::silent == 0
::specfirstword == 0
::vowelcheck == 1
::wordmasks == null
::words2[] == [ALIEN, DANGER, DARK, DRINK, DUGAN, GANDER, GARDEN, GARLAND, GASES, GNEISS, GRASSLAND, KIEV, KISS, RISK, SILVER, SLADANG, SLIVER, SURVIVAL, SURVIVE, SURVIVE, VANGUARD, VIRUS]
::words2mem == "ALIEN"
::wordsn[] == [5, 6, 4, 5, 5, 6, 6, 7, 5, 6, 9, 4, 4, 4, 6, 7, 6, 8, 7, 7, 8, 5]
::wordsn[] elements > ::adjacentdups
::findx1[] elements <= ::longestlength
::findx1[] elements <= ::ncount
::findx2[] elements <= ::longestlength
::findx2[] elements <= ::ncount
::keymem < ::upcasestr
::keymem in ::words2[]
::keymem <= orig(::upcasestr)
::keymem < orig(s)
::wordsn[] elements > ::largestlet
::longestlength != ::max_depth
::longestlength in ::wordsn[]
::wordsn[] elements <= ::longestlength
::wordsn[] elements > ::max_depth
::wordsn[] elements > ::maxdepthspec
::wordsn[] elements < ::ncount
::wordsn[] elements > ::rec_anag_count
::wordsn[] elements > ::silent
::wordsn[] elements > ::specfirstword
::upcasestr in ::words2[]
::upcasestr >= ::words2mem
::upcasestr <= orig(s)
::wordsn[] elements > ::vowelcheck
::words2mem in ::words2[]
orig(s) in ::words2[]
::words2mem <= orig(::upcasestr)
::words2mem <= orig(s)
