input-language C/C++
decl-version 2.0
var-comparability none

..main():::ENTER
this_invocation_nonce
0

Stack.Stack(char*,\_int):::ENTER
this_invocation_nonce
1
Stack::numStacksCreated
0
1
maxSize
10
1
name
"My first stack"
1
this
<STACK_ADDR>
1
this->maxElts
nonsensical
2
this->myName
nonsensical
2
this->numElts
nonsensical
2
this->stackRep
nonsensical
2
this->stackRep[..]
nonsensical
2
this[0]
nonsensical
2

Stack.Stack(char*,\_int):::EXIT0
this_invocation_nonce
1
Stack::numStacksCreated
1
1
maxSize
10
1
name
"My first stack"
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
0
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
nonsensical
2
this[0]
<STACK_ADDR>
1

Stack.push(int):::ENTER
this_invocation_nonce
2
Stack::numStacksCreated
1
1
dat
101
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
0
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
nonsensical
2
this[0]
<STACK_ADDR>
1

Stack.push(int):::EXIT0
this_invocation_nonce
2
Stack::numStacksCreated
1
1
dat
101
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
1
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 ]
1
this[0]
<STACK_ADDR>
1

Stack.push(int):::ENTER
this_invocation_nonce
3
Stack::numStacksCreated
1
1
dat
102
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
1
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 ]
1
this[0]
<STACK_ADDR>
1

Stack.push(int):::EXIT0
this_invocation_nonce
3
Stack::numStacksCreated
1
1
dat
102
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
2
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 ]
1
this[0]
<STACK_ADDR>
1

Stack.push(int):::ENTER
this_invocation_nonce
4
Stack::numStacksCreated
1
1
dat
103
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
2
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 ]
1
this[0]
<STACK_ADDR>
1

Stack.push(int):::EXIT0
this_invocation_nonce
4
Stack::numStacksCreated
1
1
dat
103
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
3
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 ]
1
this[0]
<STACK_ADDR>
1

Stack.push(int):::ENTER
this_invocation_nonce
5
Stack::numStacksCreated
1
1
dat
104
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
3
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 ]
1
this[0]
<STACK_ADDR>
1

Stack.push(int):::EXIT0
this_invocation_nonce
5
Stack::numStacksCreated
1
1
dat
104
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
4
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 ]
1
this[0]
<STACK_ADDR>
1

Stack.push(int):::ENTER
this_invocation_nonce
6
Stack::numStacksCreated
1
1
dat
105
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
4
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 ]
1
this[0]
<STACK_ADDR>
1

Stack.push(int):::EXIT0
this_invocation_nonce
6
Stack::numStacksCreated
1
1
dat
105
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
5
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.getName():::ENTER
this_invocation_nonce
7
Stack::numStacksCreated
1
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
5
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.getName():::EXIT0
this_invocation_nonce
7
Stack::numStacksCreated
1
1
return
"My first stack"
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
5
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.getMaxElts():::ENTER
this_invocation_nonce
8
Stack::numStacksCreated
1
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
5
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.getMaxElts():::EXIT0
this_invocation_nonce
8
Stack::numStacksCreated
1
1
return
10
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
5
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.getNumStacksCreated():::ENTER
this_invocation_nonce
9
Stack::numStacksCreated
1
1

Stack.getNumStacksCreated():::EXIT0
this_invocation_nonce
9
Stack::numStacksCreated
1
1
return
1
1

Stack.pop():::ENTER
this_invocation_nonce
10
Stack::numStacksCreated
1
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
5
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::ENTER
this_invocation_nonce
11
Stack::numStacksCreated
1
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
5
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::EXIT0
this_invocation_nonce
11
Stack::numStacksCreated
1
1
return
42
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
5
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::EXIT0
this_invocation_nonce
10
Stack::numStacksCreated
1
1
return
105
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
4
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::ENTER
this_invocation_nonce
12
Stack::numStacksCreated
1
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
4
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::ENTER
this_invocation_nonce
13
Stack::numStacksCreated
1
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
4
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::EXIT0
this_invocation_nonce
13
Stack::numStacksCreated
1
1
return
42
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
4
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::EXIT0
this_invocation_nonce
12
Stack::numStacksCreated
1
1
return
104
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
3
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::ENTER
this_invocation_nonce
14
Stack::numStacksCreated
1
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
3
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::ENTER
this_invocation_nonce
15
Stack::numStacksCreated
1
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
3
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::EXIT0
this_invocation_nonce
15
Stack::numStacksCreated
1
1
return
42
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
3
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::EXIT0
this_invocation_nonce
14
Stack::numStacksCreated
1
1
return
103
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
2
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::ENTER
this_invocation_nonce
16
Stack::numStacksCreated
1
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
2
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::ENTER
this_invocation_nonce
17
Stack::numStacksCreated
1
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
2
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::EXIT0
this_invocation_nonce
17
Stack::numStacksCreated
1
1
return
42
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
2
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::EXIT0
this_invocation_nonce
16
Stack::numStacksCreated
1
1
return
102
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
1
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::ENTER
this_invocation_nonce
18
Stack::numStacksCreated
1
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
1
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::ENTER
this_invocation_nonce
19
Stack::numStacksCreated
1
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
1
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::EXIT0
this_invocation_nonce
19
Stack::numStacksCreated
1
1
return
42
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
1
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::EXIT0
this_invocation_nonce
18
Stack::numStacksCreated
1
1
return
101
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
0
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::ENTER
this_invocation_nonce
20
Stack::numStacksCreated
1
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
0
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::EXIT0
this_invocation_nonce
20
Stack::numStacksCreated
1
1
return
0
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
0
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.Stack(char*,\_int):::ENTER
this_invocation_nonce
21
Stack::numStacksCreated
1
1
maxSize
5
1
name
"My second stack"
1
this
<STACK_ADDR>
1
this->maxElts
nonsensical
2
this->myName
nonsensical
2
this->numElts
nonsensical
2
this->stackRep
nonsensical
2
this->stackRep[..]
nonsensical
2
this[0]
nonsensical
2

Stack.Stack(char*,\_int):::EXIT0
this_invocation_nonce
21
Stack::numStacksCreated
2
1
maxSize
5
1
name
"My second stack"
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
0
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
nonsensical
2
this[0]
<STACK_ADDR>
1

Stack.push(int):::ENTER
this_invocation_nonce
22
Stack::numStacksCreated
2
1
dat
1001
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
0
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
nonsensical
2
this[0]
<STACK_ADDR>
1

Stack.push(int):::EXIT0
this_invocation_nonce
22
Stack::numStacksCreated
2
1
dat
1001
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
1
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 ]
1
this[0]
<STACK_ADDR>
1

Stack.push(int):::ENTER
this_invocation_nonce
23
Stack::numStacksCreated
2
1
dat
1002
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
1
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 ]
1
this[0]
<STACK_ADDR>
1

Stack.push(int):::EXIT0
this_invocation_nonce
23
Stack::numStacksCreated
2
1
dat
1002
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
2
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 ]
1
this[0]
<STACK_ADDR>
1

Stack.push(int):::ENTER
this_invocation_nonce
24
Stack::numStacksCreated
2
1
dat
1003
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
2
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 ]
1
this[0]
<STACK_ADDR>
1

Stack.push(int):::EXIT0
this_invocation_nonce
24
Stack::numStacksCreated
2
1
dat
1003
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
3
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.getName():::ENTER
this_invocation_nonce
25
Stack::numStacksCreated
2
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
3
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.getName():::EXIT0
this_invocation_nonce
25
Stack::numStacksCreated
2
1
return
"My second stack"
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
3
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.getMaxElts():::ENTER
this_invocation_nonce
26
Stack::numStacksCreated
2
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
3
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.getMaxElts():::EXIT0
this_invocation_nonce
26
Stack::numStacksCreated
2
1
return
5
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
3
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.getNumStacksCreated():::ENTER
this_invocation_nonce
27
Stack::numStacksCreated
2
1

Stack.getNumStacksCreated():::EXIT0
this_invocation_nonce
27
Stack::numStacksCreated
2
1
return
2
1

Stack.pop():::ENTER
this_invocation_nonce
28
Stack::numStacksCreated
2
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
3
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::ENTER
this_invocation_nonce
29
Stack::numStacksCreated
2
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
3
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::EXIT0
this_invocation_nonce
29
Stack::numStacksCreated
2
1
return
42
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
3
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::EXIT0
this_invocation_nonce
28
Stack::numStacksCreated
2
1
return
1003
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
2
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::ENTER
this_invocation_nonce
30
Stack::numStacksCreated
2
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
2
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::ENTER
this_invocation_nonce
31
Stack::numStacksCreated
2
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
2
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::EXIT0
this_invocation_nonce
31
Stack::numStacksCreated
2
1
return
42
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
2
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::EXIT0
this_invocation_nonce
30
Stack::numStacksCreated
2
1
return
1002
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
1
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::ENTER
this_invocation_nonce
32
Stack::numStacksCreated
2
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
1
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::ENTER
this_invocation_nonce
33
Stack::numStacksCreated
2
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
1
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.privateStuff():::EXIT0
this_invocation_nonce
33
Stack::numStacksCreated
2
1
return
42
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
1
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::EXIT0
this_invocation_nonce
32
Stack::numStacksCreated
2
1
return
1001
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
0
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::ENTER
this_invocation_nonce
34
Stack::numStacksCreated
2
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
0
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.pop():::EXIT0
this_invocation_nonce
34
Stack::numStacksCreated
2
1
return
0
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
0
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.~Stack():::ENTER
this_invocation_nonce
35
Stack::numStacksCreated
2
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
"My second stack"
1
this->numElts
0
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 1001 1002 1003 ]
1
this[0]
<STACK_ADDR>
1

Stack.~Stack():::EXIT0
this_invocation_nonce
35
Stack::numStacksCreated
2
1
this
<STACK_ADDR>
1
this->maxElts
5
1
this->myName
nonsensical
2
this->numElts
0
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
nonsensical
2
this[0]
<STACK_ADDR>
1

Stack.~Stack():::ENTER
this_invocation_nonce
36
Stack::numStacksCreated
2
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
"My first stack"
1
this->numElts
0
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
[ 101 102 103 104 105 ]
1
this[0]
<STACK_ADDR>
1

Stack.~Stack():::EXIT0
this_invocation_nonce
36
Stack::numStacksCreated
2
1
this
<STACK_ADDR>
1
this->maxElts
10
1
this->myName
nonsensical
2
this->numElts
0
1
this->stackRep
<HEAP_ADDR>
1
this->stackRep[..]
nonsensical
2
this[0]
<STACK_ADDR>
1

..main():::EXIT0
this_invocation_nonce
0
return
0
1

