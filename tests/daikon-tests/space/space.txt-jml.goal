===========================================================================
..Get1Real():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] ureal_ptr ureal_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 52
p1.LINE_NUM == 5
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 83
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
ureal_ptr != null
===========================================================================
..Get1Real():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] ureal_ptr ureal_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(ureal_ptr) orig(ureal_ptr[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], ureal_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == pp2.[0].PREV.PREV
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].PREV.PREV.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
pp2.[0].PREV.PREV.PREV == \old(p1)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 52
p1.LINE_NUM == 5
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 83
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 65
pp2.[0].LINE_NUM == 7
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV.info == 51
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
daikon.Quant.fuzzy.eq(ureal_ptr.[0], 43.0)
return == 0
===========================================================================
..GetInt():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] intero intero[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.info == 49 || p1.info == 57
p1.LINE_NUM == 7
p1.PREV.info == 32
p1.PREV.PREV.info == 57 || p1.PREV.PREV.info == 78
pp2 != null
===========================================================================
..GetInt():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] intero intero[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(intero) orig(intero[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], intero[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].PREV.PREV.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == pp2.[0].PREV.PREV.info
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == pp2.[0].PREV
p1.NEXT == pp2.[0].PREV.PREV.NEXT
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].PREV.[0]
p1.NEXT.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV.PREV == \old(p1)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.info == 49 || p1.info == 57
p1.LINE_NUM == 7
p1.PREV.info == 32
p1.PREV.PREV.info == 57 || p1.PREV.PREV.info == 78
pp2.[0].info == 49 || pp2.[0].info == 71
pp2.[0].LINE_NUM == 7 || pp2.[0].LINE_NUM == 9
intero.[0] == 1 || intero.[0] == 9
return == 0
===========================================================================
..GetKeyword():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME kw tp tp[0] tp[0][0] tp[0]->info tp[0]->LINE_NUM tp[0]->PREV tp[0]->PREV[0] tp[0]->PREV->info tp[0]->PREV->LINE_NUM tp[0]->PREV->PREV tp[0]->PREV->PREV[0] tp[0]->PREV->PREV->info tp[0]->PREV->PREV->LINE_NUM tp[0]->PREV->PREV->PREV tp[0]->PREV->PREV->PREV[0] tp[0]->PREV->PREV->NEXT tp[0]->PREV->PREV->NEXT[0] tp[0]->PREV->NEXT tp[0]->PREV->NEXT[0] tp[0]->NEXT tp[0]->NEXT[0]
(tp.[0].PREV != null)  ==>  (tp.[0] == tp.[0].PREV.NEXT)
((tp.[0].PREV != null) && (tp.[0].PREV.NEXT != null))  ==>  (tp.[0].[0] == tp.[0].PREV.NEXT.[0])
(tp.[0].PREV != null)  ==>  (tp.[0].LINE_NUM == tp.[0].PREV.LINE_NUM)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV == tp.[0].PREV.PREV.NEXT)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (tp.[0].PREV.PREV.NEXT != null))  ==>  (tp.[0].PREV.[0] == tp.[0].PREV.PREV.NEXT.[0])
::UserNames.equals("") || ::UserNames.equals("testgroup")
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:JML) needs to be implemented: ::UserNames is printable
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:JML) needs to be implemented: kw is printable
tp != null
tp.[0] != null
tp.[0].[0] != null
(tp.[0].PREV != null)  ==>  (tp.[0].PREV.[0] != null)
(tp.[0].PREV != null)  ==>  (tp.[0].PREV.info == 32)
(tp.[0].PREV != null)  ==>  (tp.[0].PREV.PREV != null)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.[0] != null)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.PREV != null)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (tp.[0].PREV.PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.PREV.[0] != null)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.NEXT != null)
(tp.[0].PREV != null)  ==>  (tp.[0].PREV.NEXT != null)
((tp.[0].PREV != null) && (tp.[0].PREV.NEXT != null))  ==>  (tp.[0].PREV.NEXT.[0] != null)
tp.[0].NEXT != null
tp.[0].NEXT.[0] != null
!::UserNames.equals(::Keywords)
!::UserNames.equals(::ErrorMessages)
!::UserNames.equals(::MOSErrors)
!::UserNames.equals(::GLOBLE_FILENAME)
!::UserNames.equals(kw)
::Keywords.compareTo(::ErrorMessages) > 0
::Keywords.compareTo(::MOSErrors) > 0
::Keywords.compareTo(::GLOBLE_FILENAME) < 0
!::Keywords.equals(kw)
::ErrorMessages.compareTo(::MOSErrors) > 0
::ErrorMessages.compareTo(::GLOBLE_FILENAME) < 0
::ErrorMessages.compareTo(kw) < 0
::MOSErrors.compareTo(::GLOBLE_FILENAME) < 0
::MOSErrors.compareTo(kw) < 0
!::GLOBLE_FILENAME.equals(kw)
tp.[0].info > tp.[0].LINE_NUM
(tp.[0].PREV != null)  ==>  ((tp.[0].info >> tp.[0].PREV.info == 0))
(tp.[0].PREV != null)  ==>  (tp.[0].info > tp.[0].PREV.info)
(tp.[0].PREV != null)  ==>  (tp.[0].info > tp.[0].PREV.LINE_NUM)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].info > tp.[0].PREV.PREV.LINE_NUM)
(tp.[0].PREV != null)  ==>  ((tp.[0].LINE_NUM & tp.[0].PREV.info) == 0)
(tp.[0].PREV != null)  ==>  (tp.[0].LINE_NUM < tp.[0].PREV.info)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].LINE_NUM < tp.[0].PREV.PREV.info)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].LINE_NUM >= tp.[0].PREV.PREV.LINE_NUM)
(tp.[0].PREV != null)  ==>  ((tp.[0].PREV.info & tp.[0].PREV.LINE_NUM) == 0)
(tp.[0].PREV != null)  ==>  (tp.[0].PREV.info > tp.[0].PREV.LINE_NUM)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  ((tp.[0].PREV.PREV.info >> tp.[0].PREV.info == 0))
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.info < tp.[0].PREV.PREV.info)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  ((tp.[0].PREV.info & tp.[0].PREV.PREV.LINE_NUM) == 0)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.info > tp.[0].PREV.PREV.LINE_NUM)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.LINE_NUM < tp.[0].PREV.PREV.info)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.LINE_NUM >= tp.[0].PREV.PREV.LINE_NUM)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.info > tp.[0].PREV.PREV.LINE_NUM)
===========================================================================
..GetKeyword():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME kw tp tp[0] tp[0][0] tp[0]->info tp[0]->LINE_NUM tp[0]->PREV tp[0]->PREV[0] tp[0]->PREV->info tp[0]->PREV->LINE_NUM tp[0]->PREV->PREV tp[0]->PREV->PREV[0] tp[0]->PREV->PREV->info tp[0]->PREV->PREV->LINE_NUM tp[0]->PREV->PREV->PREV tp[0]->PREV->PREV->PREV[0] tp[0]->PREV->PREV->NEXT tp[0]->PREV->PREV->NEXT[0] tp[0]->PREV->NEXT tp[0]->PREV->NEXT[0] tp[0]->NEXT tp[0]->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(kw) orig(tp) orig(tp[0]) orig(tp[0][0]) orig(tp[0]->info) orig(tp[0]->LINE_NUM) orig(tp[0]->PREV) orig(tp[0]->PREV[0]) orig(tp[0]->PREV->info) orig(tp[0]->PREV->LINE_NUM) orig(tp[0]->PREV->PREV) orig(tp[0]->PREV->PREV[0]) orig(tp[0]->PREV->PREV->info) orig(tp[0]->PREV->PREV->LINE_NUM) orig(tp[0]->PREV->PREV->PREV) orig(tp[0]->PREV->PREV->PREV[0]) orig(tp[0]->PREV->PREV->NEXT) orig(tp[0]->PREV->PREV->NEXT[0]) orig(tp[0]->PREV->NEXT) orig(tp[0]->PREV->NEXT[0]) orig(tp[0]->NEXT) orig(tp[0]->NEXT[0])
assignable tp[0], tp[0][0], tp[0]->info, tp[0]->LINE_NUM, tp[0]->PREV, tp[0]->PREV[0], tp[0]->PREV->LINE_NUM, tp[0]->PREV->PREV, tp[0]->PREV->PREV[0], tp[0]->PREV->PREV->info, tp[0]->PREV->PREV->LINE_NUM, tp[0]->PREV->PREV->PREV, tp[0]->PREV->PREV->PREV[0], tp[0]->PREV->PREV->NEXT, tp[0]->PREV->PREV->NEXT[0], tp[0]->PREV->NEXT, tp[0]->PREV->NEXT[0], tp[0]->NEXT, tp[0]->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0] == tp.[0].PREV.NEXT)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.NEXT != null))  ==>  (tp.[0].[0] == tp.[0].PREV.NEXT.[0])
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].LINE_NUM == tp.[0].PREV.LINE_NUM)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV == tp.[0].PREV.PREV.NEXT)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (tp.[0].PREV.PREV.NEXT != null))  ==>  (tp.[0].PREV.[0] == tp.[0].PREV.PREV.NEXT.[0])
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.info == \old(tp.[0].PREV.info))
::UserNames.equals("") || ::UserNames.equals("testgroup")
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:JML) needs to be implemented: ::UserNames is printable
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
(tp.[0] != null)  ==>  (tp.[0].[0] != null)
(tp.[0] != null)  ==>  (tp.[0].PREV != null)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.[0] != null)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.info == 32)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.PREV != null)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.[0] != null)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.PREV != null)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (tp.[0].PREV.PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.PREV.[0] != null)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.NEXT != null)
(tp.[0] != null)  ==>  (tp.[0].NEXT != null)
((tp.[0] != null) && (tp.[0].NEXT != null))  ==>  (tp.[0].NEXT.[0] != null)
return == 0 || return == 1
!::UserNames.equals(::Keywords)
!::UserNames.equals(::ErrorMessages)
!::UserNames.equals(::MOSErrors)
!::UserNames.equals(::GLOBLE_FILENAME)
!::UserNames.equals(\old(kw))
::Keywords.compareTo(::ErrorMessages) > 0
::Keywords.compareTo(::MOSErrors) > 0
::Keywords.compareTo(::GLOBLE_FILENAME) < 0
!::Keywords.equals(\old(kw))
::ErrorMessages.compareTo(::MOSErrors) > 0
::ErrorMessages.compareTo(::GLOBLE_FILENAME) < 0
::ErrorMessages.compareTo(\old(kw)) < 0
::MOSErrors.compareTo(::GLOBLE_FILENAME) < 0
::MOSErrors.compareTo(\old(kw)) < 0
!::GLOBLE_FILENAME.equals(\old(kw))
(tp.[0] != null)  ==>  (tp.[0].info > tp.[0].LINE_NUM)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  ((tp.[0].info >> tp.[0].PREV.info == 0))
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].info > tp.[0].PREV.info)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].info > tp.[0].PREV.PREV.LINE_NUM)
(tp.[0] != null)  ==>  (tp.[0].info > return)
(tp.[0] != null)  ==>  (tp.[0].info > \old(tp.[0].LINE_NUM))
((tp.[0] != null) && (\old(tp.[0].PREV) != null))  ==>  ((tp.[0].info >> \old(tp.[0].PREV.info) == 0))
((tp.[0] != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].info > \old(tp.[0].PREV.info))
((tp.[0] != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].info > \old(tp.[0].PREV.LINE_NUM))
((tp.[0] != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].info != \old(tp.[0].PREV.PREV.info))
((tp.[0] != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].info > \old(tp.[0].PREV.PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  ((tp.[0].LINE_NUM & tp.[0].PREV.info) == 0)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].LINE_NUM < tp.[0].PREV.info)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].LINE_NUM < tp.[0].PREV.PREV.info)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  ((tp.[0].LINE_NUM >> tp.[0].PREV.PREV.LINE_NUM == 0))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].LINE_NUM >= tp.[0].PREV.PREV.LINE_NUM)
(tp.[0] != null)  ==>  (tp.[0].LINE_NUM > return)
(tp.[0] != null)  ==>  (tp.[0].LINE_NUM < \old(tp.[0].info))
(tp.[0] != null)  ==>  ((tp.[0].LINE_NUM >> \old(tp.[0].LINE_NUM) == 0))
(tp.[0] != null)  ==>  (tp.[0].LINE_NUM >= \old(tp.[0].LINE_NUM))
((tp.[0] != null) && (\old(tp.[0].PREV) != null))  ==>  ((tp.[0].LINE_NUM & \old(tp.[0].PREV.info)) == 0)
((tp.[0] != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].LINE_NUM < \old(tp.[0].PREV.info))
((tp.[0] != null) && (\old(tp.[0].PREV) != null))  ==>  ((tp.[0].LINE_NUM >> \old(tp.[0].PREV.LINE_NUM) == 0))
((tp.[0] != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].LINE_NUM >= \old(tp.[0].PREV.LINE_NUM))
((tp.[0] != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].LINE_NUM < \old(tp.[0].PREV.PREV.info))
((tp.[0] != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].LINE_NUM >= \old(tp.[0].PREV.PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  ((tp.[0].PREV.PREV.info >> tp.[0].PREV.info == 0))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.info < tp.[0].PREV.PREV.info)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  ((tp.[0].PREV.info & tp.[0].PREV.PREV.LINE_NUM) == 0)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.info > tp.[0].PREV.PREV.LINE_NUM)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.info > return)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  ((\old(tp.[0].info) >> tp.[0].PREV.info == 0))
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.info < \old(tp.[0].info))
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  ((tp.[0].PREV.info & \old(tp.[0].LINE_NUM)) == 0)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.info > \old(tp.[0].LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null))  ==>  ((tp.[0].PREV.info & \old(tp.[0].PREV.LINE_NUM)) == 0)
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.info > \old(tp.[0].PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  ((\old(tp.[0].PREV.PREV.info) >> tp.[0].PREV.info == 0))
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].PREV.info < \old(tp.[0].PREV.PREV.info))
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  ((tp.[0].PREV.info & \old(tp.[0].PREV.PREV.LINE_NUM)) == 0)
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].PREV.info > \old(tp.[0].PREV.PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.info > tp.[0].PREV.PREV.LINE_NUM)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.info > return)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.info != \old(tp.[0].info))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.info > \old(tp.[0].LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null))  ==>  ((tp.[0].PREV.PREV.info >> \old(tp.[0].PREV.info) == 0))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.PREV.info > \old(tp.[0].PREV.info))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.PREV.info > \old(tp.[0].PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].PREV.PREV.info > \old(tp.[0].PREV.PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.LINE_NUM > return)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.LINE_NUM < \old(tp.[0].info))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  ((\old(tp.[0].LINE_NUM) >> tp.[0].PREV.PREV.LINE_NUM == 0))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.LINE_NUM <= \old(tp.[0].LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null))  ==>  ((tp.[0].PREV.PREV.LINE_NUM & \old(tp.[0].PREV.info)) == 0)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.PREV.LINE_NUM < \old(tp.[0].PREV.info))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null))  ==>  ((\old(tp.[0].PREV.LINE_NUM) >> tp.[0].PREV.PREV.LINE_NUM == 0))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.PREV.LINE_NUM <= \old(tp.[0].PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].PREV.PREV.LINE_NUM < \old(tp.[0].PREV.PREV.info))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].PREV.PREV.LINE_NUM >= \old(tp.[0].PREV.PREV.LINE_NUM))
return < \old(tp.[0].info)
return < \old(tp.[0].LINE_NUM)
(\old(tp.[0].PREV) != null)  ==>  (return < \old(tp.[0].PREV.info))
(\old(tp.[0].PREV) != null)  ==>  (return < \old(tp.[0].PREV.LINE_NUM))
((\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (return < \old(tp.[0].PREV.PREV.info))
((\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (return < \old(tp.[0].PREV.PREV.LINE_NUM))
===========================================================================
..GetReal():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME reale reale[0] tp tp[0] tp[0][0] tp[0]->info tp[0]->LINE_NUM tp[0]->PREV tp[0]->PREV[0] tp[0]->PREV->info tp[0]->PREV->LINE_NUM tp[0]->PREV->PREV tp[0]->PREV->PREV[0] tp[0]->PREV->PREV->info tp[0]->PREV->PREV->LINE_NUM tp[0]->PREV->PREV->PREV tp[0]->PREV->PREV->PREV[0] tp[0]->PREV->PREV->NEXT tp[0]->PREV->PREV->NEXT[0] tp[0]->PREV->NEXT tp[0]->PREV->NEXT[0] tp[0]->NEXT tp[0]->NEXT[0]
tp.[0] == tp.[0].PREV.NEXT
tp.[0].[0] == tp.[0].PREV.NEXT.[0]
tp.[0].LINE_NUM == tp.[0].PREV.LINE_NUM
tp.[0].LINE_NUM == tp.[0].PREV.PREV.LINE_NUM
tp.[0].PREV == tp.[0].PREV.PREV.NEXT
tp.[0].PREV.[0] == tp.[0].PREV.PREV.NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
tp.[0].LINE_NUM == 5 || tp.[0].LINE_NUM == 10 || tp.[0].LINE_NUM == 11
tp.[0].PREV.info == 32
::UserNames.compareTo(::Keywords) > 0
::UserNames.compareTo(::ErrorMessages) > 0
::UserNames.compareTo(::MOSErrors) > 0
::UserNames.compareTo(::GLOBLE_FILENAME) > 0
::Keywords.compareTo(::ErrorMessages) > 0
::Keywords.compareTo(::MOSErrors) > 0
::Keywords.compareTo(::GLOBLE_FILENAME) < 0
::ErrorMessages.compareTo(::MOSErrors) > 0
::ErrorMessages.compareTo(::GLOBLE_FILENAME) < 0
::MOSErrors.compareTo(::GLOBLE_FILENAME) < 0
tp.[0].info > tp.[0].LINE_NUM
tp.[0].info > tp.[0].PREV.info
(tp.[0].PREV.PREV.info >> tp.[0].info == 0)
tp.[0].info < tp.[0].PREV.PREV.info
tp.[0].LINE_NUM < tp.[0].PREV.info
tp.[0].LINE_NUM < tp.[0].PREV.PREV.info
tp.[0].PREV.info < tp.[0].PREV.PREV.info
===========================================================================
..GetReal():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME reale reale[0] tp tp[0] tp[0][0] tp[0]->info tp[0]->LINE_NUM tp[0]->PREV tp[0]->PREV[0] tp[0]->PREV->info tp[0]->PREV->LINE_NUM tp[0]->PREV->PREV tp[0]->PREV->PREV[0] tp[0]->PREV->PREV->info tp[0]->PREV->PREV->LINE_NUM tp[0]->PREV->PREV->PREV tp[0]->PREV->PREV->PREV[0] tp[0]->PREV->PREV->NEXT tp[0]->PREV->PREV->NEXT[0] tp[0]->PREV->NEXT tp[0]->PREV->NEXT[0] tp[0]->NEXT tp[0]->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(reale) orig(reale[0]) orig(tp) orig(tp[0]) orig(tp[0][0]) orig(tp[0]->info) orig(tp[0]->LINE_NUM) orig(tp[0]->PREV) orig(tp[0]->PREV[0]) orig(tp[0]->PREV->info) orig(tp[0]->PREV->LINE_NUM) orig(tp[0]->PREV->PREV) orig(tp[0]->PREV->PREV[0]) orig(tp[0]->PREV->PREV->info) orig(tp[0]->PREV->PREV->LINE_NUM) orig(tp[0]->PREV->PREV->PREV) orig(tp[0]->PREV->PREV->PREV[0]) orig(tp[0]->PREV->PREV->NEXT) orig(tp[0]->PREV->PREV->NEXT[0]) orig(tp[0]->PREV->NEXT) orig(tp[0]->PREV->NEXT[0]) orig(tp[0]->NEXT) orig(tp[0]->NEXT[0])
assignable reale[0], tp[0], tp[0][0], tp[0]->info, tp[0]->LINE_NUM, tp[0]->PREV, tp[0]->PREV[0], tp[0]->PREV->LINE_NUM, tp[0]->PREV->PREV, tp[0]->PREV->PREV[0], tp[0]->PREV->PREV->info, tp[0]->PREV->PREV->PREV, tp[0]->PREV->PREV->PREV[0], tp[0]->PREV->PREV->NEXT, tp[0]->PREV->PREV->NEXT[0], tp[0]->PREV->NEXT, tp[0]->PREV->NEXT[0], tp[0]->NEXT, tp[0]->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
tp.[0] == tp.[0].PREV.NEXT
tp.[0].[0] == tp.[0].PREV.NEXT.[0]
tp.[0].LINE_NUM == tp.[0].PREV.LINE_NUM
tp.[0].PREV == tp.[0].PREV.PREV.NEXT
tp.[0].PREV.[0] == tp.[0].PREV.PREV.NEXT.[0]
tp.[0].PREV.info == \old(tp.[0].PREV.info)
tp.[0].PREV.PREV.LINE_NUM == \old(tp.[0].LINE_NUM)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
tp.[0].PREV.info == 32
return == 0
::UserNames.compareTo(::Keywords) > 0
::UserNames.compareTo(::ErrorMessages) > 0
::UserNames.compareTo(::MOSErrors) > 0
::UserNames.compareTo(::GLOBLE_FILENAME) > 0
::Keywords.compareTo(::ErrorMessages) > 0
::Keywords.compareTo(::MOSErrors) > 0
::Keywords.compareTo(::GLOBLE_FILENAME) < 0
::ErrorMessages.compareTo(::MOSErrors) > 0
::ErrorMessages.compareTo(::GLOBLE_FILENAME) < 0
::MOSErrors.compareTo(::GLOBLE_FILENAME) < 0
(tp.[0].info >> tp.[0].LINE_NUM == 0)
tp.[0].info > tp.[0].LINE_NUM
tp.[0].info > tp.[0].PREV.info
(tp.[0].info >> tp.[0].PREV.PREV.info == 0)
tp.[0].info > tp.[0].PREV.PREV.info
tp.[0].info > return
(tp.[0].info >> \old(tp.[0].info) == 0)
tp.[0].info > \old(tp.[0].info)
tp.[0].info > \old(tp.[0].LINE_NUM)
tp.[0].info != \old(tp.[0].PREV.PREV.info)
tp.[0].LINE_NUM < tp.[0].PREV.info
(tp.[0].PREV.PREV.info >> tp.[0].LINE_NUM == 0)
tp.[0].LINE_NUM < tp.[0].PREV.PREV.info
tp.[0].LINE_NUM > return
(\old(tp.[0].info) >> tp.[0].LINE_NUM == 0)
tp.[0].LINE_NUM < \old(tp.[0].info)
(tp.[0].LINE_NUM >> \old(tp.[0].LINE_NUM) == 0)
tp.[0].LINE_NUM >= \old(tp.[0].LINE_NUM)
(\old(tp.[0].PREV.PREV.info) >> tp.[0].LINE_NUM == 0)
tp.[0].LINE_NUM < \old(tp.[0].PREV.PREV.info)
(tp.[0].PREV.PREV.info >> tp.[0].PREV.info == 0)
tp.[0].PREV.info < tp.[0].PREV.PREV.info
tp.[0].PREV.PREV.info == (tp.[0].PREV.info | tp.[0].PREV.PREV.info)
tp.[0].PREV.info < \old(tp.[0].info)
tp.[0].PREV.info > \old(tp.[0].LINE_NUM)
tp.[0].PREV.info < \old(tp.[0].PREV.PREV.info)
tp.[0].PREV.PREV.info > return
(\old(tp.[0].info) >> tp.[0].PREV.PREV.info == 0)
(tp.[0].PREV.PREV.info >> \old(tp.[0].info) == 0)
tp.[0].PREV.PREV.info > \old(tp.[0].LINE_NUM)
(\old(tp.[0].PREV.PREV.info) >> tp.[0].PREV.PREV.info == 0)
tp.[0].PREV.PREV.info < \old(tp.[0].PREV.PREV.info)
return < \old(tp.[0].info)
return < \old(tp.[0].LINE_NUM)
return < \old(tp.[0].PREV.PREV.info)
return == (java.lang.Math.pow(tp.[0].PREV.info, tp.[0].PREV.PREV.info))
===========================================================================
..GetUName():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME word tp tp[0] tp[0][0] tp[0]->info tp[0]->LINE_NUM tp[0]->PREV tp[0]->PREV[0] tp[0]->PREV->info tp[0]->PREV->LINE_NUM tp[0]->PREV->PREV tp[0]->PREV->PREV[0] tp[0]->PREV->PREV->info tp[0]->PREV->PREV->LINE_NUM tp[0]->PREV->PREV->PREV tp[0]->PREV->PREV->PREV[0] tp[0]->PREV->PREV->NEXT tp[0]->PREV->PREV->NEXT[0] tp[0]->PREV->NEXT tp[0]->PREV->NEXT[0] tp[0]->NEXT tp[0]->NEXT[0]
tp.[0] == tp.[0].PREV.NEXT
tp.[0].[0] == tp.[0].PREV.NEXT.[0]
tp.[0].LINE_NUM == tp.[0].PREV.LINE_NUM
tp.[0].PREV == tp.[0].PREV.PREV.NEXT
tp.[0].PREV.[0] == tp.[0].PREV.PREV.NEXT.[0]
::UserNames.equals("") || ::UserNames.equals("testgroup")
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:JML) needs to be implemented: ::UserNames is printable
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
tp.[0].info == 71 || tp.[0].info == 116
tp.[0].LINE_NUM == 1 || tp.[0].LINE_NUM == 5
tp.[0].PREV.info == 32
tp.[0].PREV.PREV.info == 80 || tp.[0].PREV.PREV.info == 84
tp.[0].PREV.PREV.LINE_NUM == 1 || tp.[0].PREV.PREV.LINE_NUM == 4
===========================================================================
..GetUName():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME word tp tp[0] tp[0][0] tp[0]->info tp[0]->LINE_NUM tp[0]->PREV tp[0]->PREV[0] tp[0]->PREV->info tp[0]->PREV->LINE_NUM tp[0]->PREV->PREV tp[0]->PREV->PREV[0] tp[0]->PREV->PREV->info tp[0]->PREV->PREV->LINE_NUM tp[0]->PREV->PREV->PREV tp[0]->PREV->PREV->PREV[0] tp[0]->PREV->PREV->NEXT tp[0]->PREV->PREV->NEXT[0] tp[0]->PREV->NEXT tp[0]->PREV->NEXT[0] tp[0]->NEXT tp[0]->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(word) orig(tp) orig(tp[0]) orig(tp[0][0]) orig(tp[0]->info) orig(tp[0]->LINE_NUM) orig(tp[0]->PREV) orig(tp[0]->PREV[0]) orig(tp[0]->PREV->info) orig(tp[0]->PREV->LINE_NUM) orig(tp[0]->PREV->PREV) orig(tp[0]->PREV->PREV[0]) orig(tp[0]->PREV->PREV->info) orig(tp[0]->PREV->PREV->LINE_NUM) orig(tp[0]->PREV->PREV->PREV) orig(tp[0]->PREV->PREV->PREV[0]) orig(tp[0]->PREV->PREV->NEXT) orig(tp[0]->PREV->PREV->NEXT[0]) orig(tp[0]->PREV->NEXT) orig(tp[0]->PREV->NEXT[0]) orig(tp[0]->NEXT) orig(tp[0]->NEXT[0])
assignable tp[0], tp[0][0], tp[0]->info, tp[0]->LINE_NUM, tp[0]->PREV, tp[0]->PREV[0], tp[0]->PREV->LINE_NUM, tp[0]->PREV->PREV, tp[0]->PREV->PREV[0], tp[0]->PREV->PREV->info, tp[0]->PREV->PREV->PREV, tp[0]->PREV->PREV->PREV[0], tp[0]->PREV->PREV->NEXT, tp[0]->PREV->PREV->NEXT[0], tp[0]->PREV->NEXT, tp[0]->PREV->NEXT[0], tp[0]->NEXT, tp[0]->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
tp.[0] == tp.[0].PREV.NEXT
tp.[0].[0] == tp.[0].PREV.NEXT.[0]
tp.[0].LINE_NUM == tp.[0].PREV.LINE_NUM
tp.[0].PREV == tp.[0].PREV.PREV.NEXT
tp.[0].PREV.[0] == tp.[0].PREV.PREV.NEXT.[0]
tp.[0].PREV.info == \old(tp.[0].PREV.info)
tp.[0].PREV.PREV.LINE_NUM == \old(tp.[0].PREV.PREV.LINE_NUM)
::UserNames.equals("") || ::UserNames.equals("testgroup")
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:JML) needs to be implemented: ::UserNames is printable
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
tp.[0].info == 71
tp.[0].LINE_NUM == 3 || tp.[0].LINE_NUM == 5
tp.[0].PREV.info == 32
tp.[0].PREV.PREV.info == 84 || tp.[0].PREV.PREV.info == 112
tp.[0].PREV.PREV.LINE_NUM == 1 || tp.[0].PREV.PREV.LINE_NUM == 4
return == 0 || return == 6
===========================================================================
..InKWords():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME WORD
::UserNames.equals("") || ::UserNames.equals("testgroup")
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:JML) needs to be implemented: ::UserNames is printable
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
WORD.equals("GEOMETRY") || WORD.equals("testgroup")
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:JML) needs to be implemented: WORD is printable
===========================================================================
..InKWords():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME WORD return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(WORD)
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("") || ::UserNames.equals("testgroup")
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:JML) needs to be implemented: ::UserNames is printable
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
return == 0 || return == 1
===========================================================================
..InUNames():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME WORD
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
WORD.equals("testgroup")
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::MOSErrors.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
WORD.contains(::UserNames)
===========================================================================
..InUNames():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME WORD return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(WORD)
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
return == 0
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::MOSErrors.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
\old(WORD).contains(::UserNames)
===========================================================================
..InserUN():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME WORD
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
WORD.equals("testgroup")
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::MOSErrors.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
WORD.contains(::UserNames)
===========================================================================
..InserUN():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME WORD return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(WORD)
assignable ::UserNames
::UserNames.equals(\old(WORD))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
return == 0
::UserNames.contains(\old(::UserNames))
::Keywords.contains(\old(::UserNames))
::ErrorMessages.contains(\old(::UserNames))
::MOSErrors.contains(\old(::UserNames))
::GLOBLE_FILENAME.contains(\old(::UserNames))
===========================================================================
..TapeGet():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME tp tp[0] tp[0][0] tp[0]->info tp[0]->LINE_NUM tp[0]->PREV tp[0]->PREV[0] tp[0]->PREV->info tp[0]->PREV->LINE_NUM tp[0]->PREV->PREV tp[0]->PREV->PREV[0] tp[0]->PREV->PREV->info tp[0]->PREV->PREV->LINE_NUM tp[0]->PREV->PREV->PREV tp[0]->PREV->PREV->PREV[0] tp[0]->PREV->PREV->NEXT tp[0]->PREV->PREV->NEXT[0] tp[0]->PREV->NEXT tp[0]->PREV->NEXT[0] tp[0]->NEXT tp[0]->NEXT[0]
(tp.[0].PREV != null)  ==>  (tp.[0] == tp.[0].PREV.NEXT)
((tp.[0].PREV != null) && (tp.[0].PREV.NEXT != null))  ==>  (tp.[0].[0] == tp.[0].PREV.NEXT.[0])
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV == tp.[0].PREV.PREV.NEXT)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (tp.[0].PREV.PREV.NEXT != null))  ==>  (tp.[0].PREV.[0] == tp.[0].PREV.PREV.NEXT.[0])
::UserNames.equals("") || ::UserNames.equals("testgroup")
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:JML) needs to be implemented: ::UserNames is printable
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
tp != null
tp.[0] != null
tp.[0].[0] != null
(tp.[0].PREV != null)  ==>  (tp.[0].PREV.[0] != null)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.[0] != null)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (tp.[0].PREV.PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.PREV.[0] != null)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.NEXT != null)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (tp.[0].PREV.PREV.NEXT != null))  ==>  (tp.[0].PREV.PREV.NEXT.[0] != null)
(tp.[0].PREV != null)  ==>  (tp.[0].PREV.NEXT != null)
((tp.[0].PREV != null) && (tp.[0].PREV.NEXT != null))  ==>  (tp.[0].PREV.NEXT.[0] != null)
(tp.[0].NEXT != null)  ==>  (tp.[0].NEXT.[0] != null)
!::UserNames.equals(::Keywords)
!::UserNames.equals(::ErrorMessages)
!::UserNames.equals(::MOSErrors)
!::UserNames.equals(::GLOBLE_FILENAME)
::Keywords.compareTo(::ErrorMessages) > 0
::Keywords.compareTo(::MOSErrors) > 0
::Keywords.compareTo(::GLOBLE_FILENAME) < 0
::ErrorMessages.compareTo(::MOSErrors) > 0
::ErrorMessages.compareTo(::GLOBLE_FILENAME) < 0
::MOSErrors.compareTo(::GLOBLE_FILENAME) < 0
tp.[0].info > tp.[0].LINE_NUM
(tp.[0].PREV != null)  ==>  (tp.[0].info > tp.[0].PREV.LINE_NUM)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].info > tp.[0].PREV.PREV.LINE_NUM)
(tp.[0].PREV != null)  ==>  (tp.[0].LINE_NUM < tp.[0].PREV.info)
(tp.[0].PREV != null)  ==>  (tp.[0].LINE_NUM >= tp.[0].PREV.LINE_NUM)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].LINE_NUM < tp.[0].PREV.PREV.info)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].LINE_NUM >= tp.[0].PREV.PREV.LINE_NUM)
(tp.[0].PREV != null)  ==>  (tp.[0].PREV.info > tp.[0].PREV.LINE_NUM)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.info > tp.[0].PREV.PREV.LINE_NUM)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.LINE_NUM < tp.[0].PREV.PREV.info)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.LINE_NUM >= tp.[0].PREV.PREV.LINE_NUM)
((tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.info > tp.[0].PREV.PREV.LINE_NUM)
===========================================================================
..TapeGet():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME tp tp[0] tp[0][0] tp[0]->info tp[0]->LINE_NUM tp[0]->PREV tp[0]->PREV[0] tp[0]->PREV->info tp[0]->PREV->LINE_NUM tp[0]->PREV->PREV tp[0]->PREV->PREV[0] tp[0]->PREV->PREV->info tp[0]->PREV->PREV->LINE_NUM tp[0]->PREV->PREV->PREV tp[0]->PREV->PREV->PREV[0] tp[0]->PREV->PREV->NEXT tp[0]->PREV->PREV->NEXT[0] tp[0]->PREV->NEXT tp[0]->PREV->NEXT[0] tp[0]->NEXT tp[0]->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(tp) orig(tp[0]) orig(tp[0][0]) orig(tp[0]->info) orig(tp[0]->LINE_NUM) orig(tp[0]->PREV) orig(tp[0]->PREV[0]) orig(tp[0]->PREV->info) orig(tp[0]->PREV->LINE_NUM) orig(tp[0]->PREV->PREV) orig(tp[0]->PREV->PREV[0]) orig(tp[0]->PREV->PREV->info) orig(tp[0]->PREV->PREV->LINE_NUM) orig(tp[0]->PREV->PREV->PREV) orig(tp[0]->PREV->PREV->PREV[0]) orig(tp[0]->PREV->PREV->NEXT) orig(tp[0]->PREV->PREV->NEXT[0]) orig(tp[0]->PREV->NEXT) orig(tp[0]->PREV->NEXT[0]) orig(tp[0]->NEXT) orig(tp[0]->NEXT[0])
assignable tp[0], tp[0][0], tp[0]->info, tp[0]->LINE_NUM, tp[0]->PREV, tp[0]->PREV[0], tp[0]->PREV->info, tp[0]->PREV->LINE_NUM, tp[0]->PREV->PREV, tp[0]->PREV->PREV[0], tp[0]->PREV->PREV->info, tp[0]->PREV->PREV->LINE_NUM, tp[0]->PREV->PREV->PREV, tp[0]->PREV->PREV->PREV[0], tp[0]->PREV->PREV->NEXT, tp[0]->PREV->PREV->NEXT[0], tp[0]->PREV->NEXT, tp[0]->PREV->NEXT[0], tp[0]->NEXT, tp[0]->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0] == tp.[0].PREV.NEXT)
tp.[0] == \old(tp.[0].NEXT)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.NEXT != null))  ==>  (tp.[0].[0] == tp.[0].PREV.NEXT.[0])
((tp.[0] != null) && (\old(tp.[0].NEXT) != null))  ==>  (tp.[0].[0] == \old(tp.[0].NEXT.[0]))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV == tp.[0].PREV.PREV.NEXT)
(tp.[0] != null)  ==>  (tp.[0].PREV == \old(tp.[0]))
((tp.[0] != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV == \old(tp.[0].PREV.NEXT))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (tp.[0].PREV.PREV.NEXT != null))  ==>  (tp.[0].PREV.[0] == tp.[0].PREV.PREV.NEXT.[0])
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.[0] == \old(tp.[0].[0]))
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.NEXT) != null))  ==>  (tp.[0].PREV.[0] == \old(tp.[0].PREV.NEXT.[0]))
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.info == return)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.LINE_NUM == \old(tp.[0].LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.PREV == \old(tp.[0].PREV))
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].PREV.PREV == \old(tp.[0].PREV.PREV.NEXT))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.PREV.[0] == \old(tp.[0].PREV.[0]))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null) && (\old(tp.[0].PREV.PREV.NEXT) != null))  ==>  (tp.[0].PREV.PREV.[0] == \old(tp.[0].PREV.PREV.NEXT.[0]))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.PREV.info == \old(tp.[0].PREV.info))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.PREV.LINE_NUM == \old(tp.[0].PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.PREV.PREV == \old(tp.[0].PREV.PREV))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (tp.[0].PREV.PREV.PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].PREV.PREV.PREV.[0] == \old(tp.[0].PREV.PREV.[0]))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.NEXT == \old(tp.[0]))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.PREV.NEXT == \old(tp.[0].PREV.NEXT))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (tp.[0].PREV.PREV.NEXT != null))  ==>  (tp.[0].PREV.PREV.NEXT.[0] == \old(tp.[0].[0]))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (tp.[0].PREV.PREV.NEXT != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.NEXT) != null))  ==>  (tp.[0].PREV.PREV.NEXT.[0] == \old(tp.[0].PREV.NEXT.[0]))
return == \old(tp.[0].info)
::UserNames.equals("") || ::UserNames.equals("testgroup")
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:JML) needs to be implemented: ::UserNames is printable
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
(tp.[0] != null)  ==>  (tp.[0].[0] != null)
(tp.[0] != null)  ==>  (tp.[0].PREV != null)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.[0] != null)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.[0] != null)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (tp.[0].PREV.PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.PREV.[0] != null)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.NEXT != null)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (tp.[0].PREV.PREV.NEXT != null))  ==>  (tp.[0].PREV.PREV.NEXT.[0] != null)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.NEXT != null)
((tp.[0] != null) && (tp.[0].NEXT != null))  ==>  (tp.[0].NEXT.[0] != null)
!::UserNames.equals(::Keywords)
!::UserNames.equals(::ErrorMessages)
!::UserNames.equals(::MOSErrors)
!::UserNames.equals(::GLOBLE_FILENAME)
::Keywords.compareTo(::ErrorMessages) > 0
::Keywords.compareTo(::MOSErrors) > 0
::Keywords.compareTo(::GLOBLE_FILENAME) < 0
::ErrorMessages.compareTo(::MOSErrors) > 0
::ErrorMessages.compareTo(::GLOBLE_FILENAME) < 0
::MOSErrors.compareTo(::GLOBLE_FILENAME) < 0
(tp.[0] != null)  ==>  (tp.[0].info > tp.[0].LINE_NUM)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].info > tp.[0].PREV.LINE_NUM)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].info > tp.[0].PREV.PREV.LINE_NUM)
(tp.[0] != null)  ==>  (tp.[0].info > \old(tp.[0].LINE_NUM))
((tp.[0] != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].info > \old(tp.[0].PREV.LINE_NUM))
((tp.[0] != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].info > \old(tp.[0].PREV.PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].LINE_NUM < tp.[0].PREV.info)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].LINE_NUM >= tp.[0].PREV.LINE_NUM)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].LINE_NUM < tp.[0].PREV.PREV.info)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].LINE_NUM >= tp.[0].PREV.PREV.LINE_NUM)
(tp.[0] != null)  ==>  (tp.[0].LINE_NUM < return)
(tp.[0] != null)  ==>  (tp.[0].LINE_NUM >= \old(tp.[0].LINE_NUM))
((tp.[0] != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].LINE_NUM < \old(tp.[0].PREV.info))
((tp.[0] != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].LINE_NUM >= \old(tp.[0].PREV.LINE_NUM))
((tp.[0] != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].LINE_NUM < \old(tp.[0].PREV.PREV.info))
((tp.[0] != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].LINE_NUM >= \old(tp.[0].PREV.PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.info > tp.[0].PREV.LINE_NUM)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.info > tp.[0].PREV.PREV.LINE_NUM)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.info > \old(tp.[0].LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.info > \old(tp.[0].PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].PREV.info > \old(tp.[0].PREV.PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.LINE_NUM < tp.[0].PREV.PREV.info)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.LINE_NUM >= tp.[0].PREV.PREV.LINE_NUM)
((tp.[0] != null) && (tp.[0].PREV != null))  ==>  (tp.[0].PREV.LINE_NUM < return)
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.LINE_NUM < \old(tp.[0].PREV.info))
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.LINE_NUM >= \old(tp.[0].PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].PREV.LINE_NUM < \old(tp.[0].PREV.PREV.info))
((tp.[0] != null) && (tp.[0].PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].PREV.LINE_NUM >= \old(tp.[0].PREV.PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.info > tp.[0].PREV.PREV.LINE_NUM)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.info > \old(tp.[0].LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.PREV.info > \old(tp.[0].PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].PREV.PREV.info > \old(tp.[0].PREV.PREV.LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.LINE_NUM < return)
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null))  ==>  (tp.[0].PREV.PREV.LINE_NUM <= \old(tp.[0].LINE_NUM))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null))  ==>  (tp.[0].PREV.PREV.LINE_NUM < \old(tp.[0].PREV.info))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].PREV.PREV.LINE_NUM < \old(tp.[0].PREV.PREV.info))
((tp.[0] != null) && (tp.[0].PREV != null) && (tp.[0].PREV.PREV != null) && (\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (tp.[0].PREV.PREV.LINE_NUM >= \old(tp.[0].PREV.PREV.LINE_NUM))
return > \old(tp.[0].LINE_NUM)
(\old(tp.[0].PREV) != null)  ==>  (return > \old(tp.[0].PREV.LINE_NUM))
((\old(tp.[0].PREV) != null) && (\old(tp.[0].PREV.PREV) != null))  ==>  (return > \old(tp.[0].PREV.PREV.LINE_NUM))
===========================================================================
..adddef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] addrem_ptr addrem_ptr[0] addrem_ptr[0][0] addrem_ptr[0]->ADDREM_TYPE addrem_ptr[0]->BLOCK_TYPE addrem_ptr[0]->NODE_PTR addrem_ptr[0]->NODE_PTR[0] addrem_ptr[0]->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->PCOORD addrem_ptr[0]->NODE_PTR->QCOORD addrem_ptr[0]->NODE_PTR->THEA addrem_ptr[0]->NODE_PTR->PHEA addrem_ptr[0]->NODE_PTR->PSEA addrem_ptr[0]->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT addrem_ptr[0]->NODE_PTR->NEXT[0] addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->NEXT->PCOORD addrem_ptr[0]->NODE_PTR->NEXT->QCOORD addrem_ptr[0]->NODE_PTR->NEXT->THEA addrem_ptr[0]->NODE_PTR->NEXT->PHEA addrem_ptr[0]->NODE_PTR->NEXT->PSEA addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT->NEXT addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0] addrem_ptr[0]->NEXT addrem_ptr[0]->NEXT[0] addrem_ptr[0]->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NEXT->NODE_PTR->PCOORD addrem_ptr[0]->NEXT->NODE_PTR->QCOORD addrem_ptr[0]->NEXT->NODE_PTR->THEA addrem_ptr[0]->NEXT->NODE_PTR->PHEA addrem_ptr[0]->NEXT->NODE_PTR->PSEA addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NEXT->NODE_PTR->NEXT addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0] addrem_ptr[0]->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT[0] addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT->NEXT[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.info == 65 || p1.info == 71
p1.LINE_NUM == 7 || p1.LINE_NUM == 9
p1.PREV.info == 32
p1.PREV.PREV.info == 49 || p1.PREV.PREV.info == 51
p1.PREV.PREV.LINE_NUM == 5 || p1.PREV.PREV.LINE_NUM == 7
addrem_ptr.[0] == null
===========================================================================
..adddef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] addrem_ptr addrem_ptr[0] addrem_ptr[0][0] addrem_ptr[0]->ADDREM_TYPE addrem_ptr[0]->BLOCK_TYPE addrem_ptr[0]->NODE_PTR addrem_ptr[0]->NODE_PTR[0] addrem_ptr[0]->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->PCOORD addrem_ptr[0]->NODE_PTR->QCOORD addrem_ptr[0]->NODE_PTR->THEA addrem_ptr[0]->NODE_PTR->PHEA addrem_ptr[0]->NODE_PTR->PSEA addrem_ptr[0]->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT addrem_ptr[0]->NODE_PTR->NEXT[0] addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->NEXT->PCOORD addrem_ptr[0]->NODE_PTR->NEXT->QCOORD addrem_ptr[0]->NODE_PTR->NEXT->THEA addrem_ptr[0]->NODE_PTR->NEXT->PHEA addrem_ptr[0]->NODE_PTR->NEXT->PSEA addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT->NEXT addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0] addrem_ptr[0]->NEXT addrem_ptr[0]->NEXT[0] addrem_ptr[0]->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NEXT->NODE_PTR->PCOORD addrem_ptr[0]->NEXT->NODE_PTR->QCOORD addrem_ptr[0]->NEXT->NODE_PTR->THEA addrem_ptr[0]->NEXT->NODE_PTR->PHEA addrem_ptr[0]->NEXT->NODE_PTR->PSEA addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NEXT->NODE_PTR->NEXT addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0] addrem_ptr[0]->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT[0] addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(addrem_ptr) orig(addrem_ptr[0]) orig(addrem_ptr[0][0]) orig(addrem_ptr[0]->ADDREM_TYPE) orig(addrem_ptr[0]->BLOCK_TYPE) orig(addrem_ptr[0]->NODE_PTR) orig(addrem_ptr[0]->NODE_PTR[0]) orig(addrem_ptr[0]->NODE_PTR->OMIT_ORIENT) orig(addrem_ptr[0]->NODE_PTR->PCOORD) orig(addrem_ptr[0]->NODE_PTR->QCOORD) orig(addrem_ptr[0]->NODE_PTR->THEA) orig(addrem_ptr[0]->NODE_PTR->PHEA) orig(addrem_ptr[0]->NODE_PTR->PSEA) orig(addrem_ptr[0]->NODE_PTR->ANGLE_UNIT) orig(addrem_ptr[0]->NODE_PTR->NEXT) orig(addrem_ptr[0]->NODE_PTR->NEXT[0]) orig(addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT) orig(addrem_ptr[0]->NODE_PTR->NEXT->PCOORD) orig(addrem_ptr[0]->NODE_PTR->NEXT->QCOORD) orig(addrem_ptr[0]->NODE_PTR->NEXT->THEA) orig(addrem_ptr[0]->NODE_PTR->NEXT->PHEA) orig(addrem_ptr[0]->NODE_PTR->NEXT->PSEA) orig(addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT) orig(addrem_ptr[0]->NODE_PTR->NEXT->NEXT) orig(addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0]) orig(addrem_ptr[0]->NEXT) orig(addrem_ptr[0]->NEXT[0]) orig(addrem_ptr[0]->NEXT->ADDREM_TYPE) orig(addrem_ptr[0]->NEXT->BLOCK_TYPE) orig(addrem_ptr[0]->NEXT->NODE_PTR) orig(addrem_ptr[0]->NEXT->NODE_PTR[0]) orig(addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT) orig(addrem_ptr[0]->NEXT->NODE_PTR->PCOORD) orig(addrem_ptr[0]->NEXT->NODE_PTR->QCOORD) orig(addrem_ptr[0]->NEXT->NODE_PTR->THEA) orig(addrem_ptr[0]->NEXT->NODE_PTR->PHEA) orig(addrem_ptr[0]->NEXT->NODE_PTR->PSEA) orig(addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT) orig(addrem_ptr[0]->NEXT->NODE_PTR->NEXT) orig(addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0]) orig(addrem_ptr[0]->NEXT->NEXT) orig(addrem_ptr[0]->NEXT->NEXT[0]) orig(addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE) orig(addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE) orig(addrem_ptr[0]->NEXT->NEXT->NODE_PTR) orig(addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0]) orig(addrem_ptr[0]->NEXT->NEXT->NEXT) orig(addrem_ptr[0]->NEXT->NEXT->NEXT[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->LINE_NUM, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], addrem_ptr[0], addrem_ptr[0][0], addrem_ptr[0]->ADDREM_TYPE, addrem_ptr[0]->BLOCK_TYPE, addrem_ptr[0]->NODE_PTR, addrem_ptr[0]->NODE_PTR[0], addrem_ptr[0]->NODE_PTR->OMIT_ORIENT, addrem_ptr[0]->NODE_PTR->PCOORD, addrem_ptr[0]->NODE_PTR->QCOORD, addrem_ptr[0]->NODE_PTR->THEA, addrem_ptr[0]->NODE_PTR->PHEA, addrem_ptr[0]->NODE_PTR->PSEA, addrem_ptr[0]->NODE_PTR->ANGLE_UNIT, addrem_ptr[0]->NODE_PTR->NEXT, addrem_ptr[0]->NODE_PTR->NEXT[0], addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT, addrem_ptr[0]->NODE_PTR->NEXT->PCOORD, addrem_ptr[0]->NODE_PTR->NEXT->QCOORD, addrem_ptr[0]->NODE_PTR->NEXT->THEA, addrem_ptr[0]->NODE_PTR->NEXT->PHEA, addrem_ptr[0]->NODE_PTR->NEXT->PSEA, addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT, addrem_ptr[0]->NODE_PTR->NEXT->NEXT, addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0], addrem_ptr[0]->NEXT, addrem_ptr[0]->NEXT[0], addrem_ptr[0]->NEXT->ADDREM_TYPE, addrem_ptr[0]->NEXT->BLOCK_TYPE, addrem_ptr[0]->NEXT->NODE_PTR, addrem_ptr[0]->NEXT->NODE_PTR[0], addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT, addrem_ptr[0]->NEXT->NODE_PTR->PCOORD, addrem_ptr[0]->NEXT->NODE_PTR->QCOORD, addrem_ptr[0]->NEXT->NODE_PTR->THEA, addrem_ptr[0]->NEXT->NODE_PTR->PHEA, addrem_ptr[0]->NEXT->NODE_PTR->PSEA, addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT, addrem_ptr[0]->NEXT->NODE_PTR->NEXT, addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0], addrem_ptr[0]->NEXT->NEXT, addrem_ptr[0]->NEXT->NEXT[0], addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE, addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE, addrem_ptr[0]->NEXT->NEXT->NODE_PTR, addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0], addrem_ptr[0]->NEXT->NEXT->NEXT, addrem_ptr[0]->NEXT->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
((addrem_ptr.[0] != null) && (addrem_ptr.[0].NODE_PTR != null))  ==>  (pp2.[0].LINE_NUM == addrem_ptr.[0].NODE_PTR.PCOORD)
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
((addrem_ptr.[0] != null) && (addrem_ptr.[0].NODE_PTR != null))  ==>  (addrem_ptr.[0].ADDREM_TYPE == addrem_ptr.[0].NODE_PTR.ANGLE_UNIT)
(addrem_ptr.[0] != null)  ==>  (addrem_ptr.[0].ADDREM_TYPE == return)
((addrem_ptr.[0] != null) && (addrem_ptr.[0].NODE_PTR != null))  ==>  (daikon.Quant.fuzzy.eq(addrem_ptr.[0].NODE_PTR.THEA, addrem_ptr.[0].NODE_PTR.PHEA))
((addrem_ptr.[0] != null) && (addrem_ptr.[0].NODE_PTR != null))  ==>  (daikon.Quant.fuzzy.eq(addrem_ptr.[0].NODE_PTR.THEA, addrem_ptr.[0].NODE_PTR.PSEA))
(addrem_ptr.[0] != null)  ==>  (addrem_ptr.[0].NEXT == \old(addrem_ptr.[0]))
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.info == 65 || p1.info == 71
p1.LINE_NUM == 7 || p1.LINE_NUM == 9
p1.PREV.info == 32
p1.PREV.PREV.info == 49 || p1.PREV.PREV.info == 51
p1.PREV.PREV.LINE_NUM == 5 || p1.PREV.PREV.LINE_NUM == 7
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 71
pp2.[0].LINE_NUM == 9
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 49
pp2.[0].PREV.PREV.LINE_NUM == 7
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
(addrem_ptr.[0] != null)  ==>  (addrem_ptr.[0].[0] != null)
(addrem_ptr.[0] != null)  ==>  (addrem_ptr.[0].ADDREM_TYPE == 0)
(addrem_ptr.[0] != null)  ==>  (addrem_ptr.[0].BLOCK_TYPE == 3)
(addrem_ptr.[0] != null)  ==>  (addrem_ptr.[0].NODE_PTR != null)
((addrem_ptr.[0] != null) && (addrem_ptr.[0].NODE_PTR != null))  ==>  (addrem_ptr.[0].NODE_PTR.PCOORD == 9)
((addrem_ptr.[0] != null) && (addrem_ptr.[0].NODE_PTR != null))  ==>  (addrem_ptr.[0].NODE_PTR.QCOORD == 1)
((addrem_ptr.[0] != null) && (addrem_ptr.[0].NODE_PTR != null))  ==>  (daikon.Quant.fuzzy.eq(addrem_ptr.[0].NODE_PTR.THEA, 0.0))
((addrem_ptr.[0] != null) && (addrem_ptr.[0].NODE_PTR != null))  ==>  (addrem_ptr.[0].NODE_PTR.NEXT == null)
(addrem_ptr.[0] != null)  ==>  (addrem_ptr.[0].NEXT == null)
return == 0 || return == 1
===========================================================================
..addscan():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME group_ptr group_ptr[0] group_ptr->NAME group_ptr->GRID_PTR group_ptr->GRID_PTR[0] group_ptr->GRID_PTR->NAME group_ptr->GRID_PTR->LEVEL group_ptr->GRID_PTR->TYPE group_ptr->GRID_PTR->ORIENT group_ptr->GRID_PTR->ANGLE group_ptr->GRID_PTR->ANGLE_UNIT group_ptr->GRID_PTR->PSTEP group_ptr->GRID_PTR->QSTEP group_ptr->GRID_PTR->PQSTEP_UNIT group_ptr->GRID_PTR->PX group_ptr->GRID_PTR->PY group_ptr->GRID_PTR->QX group_ptr->GRID_PTR->QY group_ptr->GRID_PTR->PQXY_UNIT group_ptr->GRID_PTR->ROT_ANGLE group_ptr->ELEM_PTR group_ptr->ELEM_PTR[0] group_ptr->ELEM_PTR->TYPE group_ptr->ELEM_PTR->NAME group_ptr->ELEM_PTR->LEVEL group_ptr->ELEM_PTR->GEOMETRY group_ptr->ELEM_PTR->RADIUS group_ptr->ELEM_PTR->RADIUS_UNIT group_ptr->ELEM_PTR->PDIM group_ptr->ELEM_PTR->QDIM group_ptr->ELEM_PTR->PQDIM_UNIT group_ptr->ELEM_PTR->MODEL group_ptr->ELEM_PTR->EXP group_ptr->ELEM_PTR->ANGLEE group_ptr->ELEM_PTR->ANGLEH group_ptr->ELEM_PTR->ANGLE_UNIT group_ptr->ELEM_PTR->TAPERE group_ptr->ELEM_PTR->TAPERH group_ptr->ELEM_PTR->TAPER_UNIT group_ptr->ELEM_PTR->POLARIZATION group_ptr->ELEM_PTR->PHEPOL group_ptr->ELEM_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->DIRECTION group_ptr->ELEM_PTR->GAIN group_ptr->ELEM_PTR->GAIN_UNIT group_ptr->ELEM_PTR->NPORTS group_ptr->ELEM_PTR->PORT_PTR group_ptr->ELEM_PTR->PORT_PTR[0] group_ptr->ELEM_PTR->PORT_PTR->PORTNUM group_ptr->ELEM_PTR->PORT_PTR->AMP group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSC group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSH group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr->ELEM_PTR->PORT_PTR->PPA group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr->ELEM_PTR->PORT_PTR->PHEPOL group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr->ELEM_PTR->PORT_PTR->NEXT group_ptr->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr->ADDREM_PTR group_ptr->ADDREM_PTR[0] group_ptr->ADDREM_PTR->ADDREM_TYPE group_ptr->ADDREM_PTR->BLOCK_TYPE group_ptr->ADDREM_PTR->NODE_PTR group_ptr->ADDREM_PTR->NODE_PTR[0] group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr->ADDREM_PTR->NODE_PTR->PCOORD group_ptr->ADDREM_PTR->NODE_PTR->QCOORD group_ptr->ADDREM_PTR->NODE_PTR->THEA group_ptr->ADDREM_PTR->NODE_PTR->PHEA group_ptr->ADDREM_PTR->NODE_PTR->PSEA group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr->ADDREM_PTR->NODE_PTR->NEXT group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT group_ptr->ADDREM_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr->ADDREM_PTR->NEXT->NODE_PTR group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr->ADDREM_PTR->NEXT->NEXT group_ptr->ADDREM_PTR->NEXT->NEXT[0] group_ptr->GRAMPEXC_PTR group_ptr->GRAMPEXC_PTR[0] group_ptr->GRAMPEXC_PTR->TYPE group_ptr->GRAMPEXC_PTR->UNIF_VAL group_ptr->GRAMPEXC_PTR->CENTRE group_ptr->GRAMPEXC_PTR->P1_ET group_ptr->GRAMPEXC_PTR->P2_ET group_ptr->GRAMPEXC_PTR->Q1_ET group_ptr->GRAMPEXC_PTR->Q2_ET group_ptr->GRAMPEXC_PTR->AMP_UNIT group_ptr->GRAMPEXC_PTR->PQEXP_PTR group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR group_ptr->GRPHAEXC_PTR[0] group_ptr->GRPHAEXC_PTR->TYPE group_ptr->GRPHAEXC_PTR->UNIF_VAL group_ptr->GRPHAEXC_PTR->CENTRE group_ptr->GRPHAEXC_PTR->P1_EP group_ptr->GRPHAEXC_PTR->P2_EP group_ptr->GRPHAEXC_PTR->Q1_EP group_ptr->GRPHAEXC_PTR->Q2_EP group_ptr->GRPHAEXC_PTR->DIRECTION group_ptr->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->GRPHAEXC_PTR->ANGLE_START group_ptr->GRPHAEXC_PTR->ANGLE_STEP group_ptr->GRPHAEXC_PTR->OMIT_PHASE group_ptr->GRPHAEXC_PTR->PHASE_START group_ptr->GRPHAEXC_PTR->PHASE_STEP group_ptr->GRPHAEXC_PTR->U group_ptr->GRPHAEXC_PTR->V group_ptr->GRPHAEXC_PTR->THETA group_ptr->GRPHAEXC_PTR->PHI group_ptr->GRPHAEXC_PTR->PQEXP_PTR group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->GRPHAEXC_PTR->PHASE_UNIT group_ptr->ERR_PTR group_ptr->ERR_PTR[0] group_ptr->ERR_PTR->AMP_TYPE group_ptr->ERR_PTR->AMP_STDEV group_ptr->ERR_PTR->AMP_LINOFFS group_ptr->ERR_PTR->AMP_LINSTEP group_ptr->ERR_PTR->AMP_2NDCENT group_ptr->ERR_PTR->AMP_2NDPET group_ptr->ERR_PTR->AMP_2NDQET group_ptr->ERR_PTR->AMP_UNIT group_ptr->ERR_PTR->PHASE_TYPE group_ptr->ERR_PTR->PHASE_STDEV group_ptr->ERR_PTR->PHASE_LINOFFS group_ptr->ERR_PTR->PHASE_LINSTEP group_ptr->ERR_PTR->PHASE_2NDCENT group_ptr->ERR_PTR->PHASE_2NDPSID group_ptr->ERR_PTR->PHASE_2NDQSID group_ptr->ERR_PTR->PHASE_QUANTSTEP group_ptr->ERR_PTR->PHASE_UNIT group_ptr->FAIL_PTR group_ptr->FAIL_PTR[0] group_ptr->FAIL_PTR->NUM_FAULTY_EL group_ptr->FAIL_PTR->FIXED_AMP group_ptr->FAIL_PTR->FIXED_PHASE group_ptr->NEXT group_ptr->NEXT[0] group_ptr->NEXT->NAME group_ptr->NEXT->GRID_PTR group_ptr->NEXT->GRID_PTR[0] group_ptr->NEXT->GRID_PTR->NAME group_ptr->NEXT->GRID_PTR->LEVEL group_ptr->NEXT->GRID_PTR->TYPE group_ptr->NEXT->GRID_PTR->ORIENT group_ptr->NEXT->GRID_PTR->ANGLE group_ptr->NEXT->GRID_PTR->ANGLE_UNIT group_ptr->NEXT->GRID_PTR->PSTEP group_ptr->NEXT->GRID_PTR->QSTEP group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr->NEXT->GRID_PTR->PX group_ptr->NEXT->GRID_PTR->PY group_ptr->NEXT->GRID_PTR->QX group_ptr->NEXT->GRID_PTR->QY group_ptr->NEXT->GRID_PTR->PQXY_UNIT group_ptr->NEXT->GRID_PTR->ROT_ANGLE group_ptr->NEXT->ELEM_PTR group_ptr->NEXT->ELEM_PTR[0] group_ptr->NEXT->ELEM_PTR->TYPE group_ptr->NEXT->ELEM_PTR->NAME group_ptr->NEXT->ELEM_PTR->LEVEL group_ptr->NEXT->ELEM_PTR->GEOMETRY group_ptr->NEXT->ELEM_PTR->RADIUS group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr->NEXT->ELEM_PTR->PDIM group_ptr->NEXT->ELEM_PTR->QDIM group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr->NEXT->ELEM_PTR->MODEL group_ptr->NEXT->ELEM_PTR->EXP group_ptr->NEXT->ELEM_PTR->ANGLEE group_ptr->NEXT->ELEM_PTR->ANGLEH group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr->NEXT->ELEM_PTR->TAPERE group_ptr->NEXT->ELEM_PTR->TAPERH group_ptr->NEXT->ELEM_PTR->TAPER_UNIT group_ptr->NEXT->ELEM_PTR->POLARIZATION group_ptr->NEXT->ELEM_PTR->PHEPOL group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr->NEXT->ELEM_PTR->DIRECTION group_ptr->NEXT->ELEM_PTR->GAIN group_ptr->NEXT->ELEM_PTR->GAIN_UNIT group_ptr->NEXT->ELEM_PTR->NPORTS group_ptr->NEXT->ELEM_PTR->PORT_PTR group_ptr->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr->NEXT->ADDREM_PTR group_ptr->NEXT->ADDREM_PTR[0] group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr->NEXT->ADDREM_PTR->NODE_PTR group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr->NEXT->ADDREM_PTR->NEXT group_ptr->NEXT->ADDREM_PTR->NEXT[0] group_ptr->NEXT->GRAMPEXC_PTR group_ptr->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->GRAMPEXC_PTR->TYPE group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr->NEXT->GRAMPEXC_PTR->CENTRE group_ptr->NEXT->GRAMPEXC_PTR->P1_ET group_ptr->NEXT->GRAMPEXC_PTR->P2_ET group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR group_ptr->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->TYPE group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr->NEXT->GRPHAEXC_PTR->CENTRE group_ptr->NEXT->GRPHAEXC_PTR->P1_EP group_ptr->NEXT->GRPHAEXC_PTR->P2_EP group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr->NEXT->GRPHAEXC_PTR->U group_ptr->NEXT->GRPHAEXC_PTR->V group_ptr->NEXT->GRPHAEXC_PTR->THETA group_ptr->NEXT->GRPHAEXC_PTR->PHI group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr->NEXT->ERR_PTR group_ptr->NEXT->ERR_PTR[0] group_ptr->NEXT->ERR_PTR->AMP_TYPE group_ptr->NEXT->ERR_PTR->AMP_STDEV group_ptr->NEXT->ERR_PTR->AMP_LINOFFS group_ptr->NEXT->ERR_PTR->AMP_LINSTEP group_ptr->NEXT->ERR_PTR->AMP_2NDCENT group_ptr->NEXT->ERR_PTR->AMP_2NDPET group_ptr->NEXT->ERR_PTR->AMP_2NDQET group_ptr->NEXT->ERR_PTR->AMP_UNIT group_ptr->NEXT->ERR_PTR->PHASE_TYPE group_ptr->NEXT->ERR_PTR->PHASE_STDEV group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr->NEXT->ERR_PTR->PHASE_UNIT group_ptr->NEXT->FAIL_PTR group_ptr->NEXT->FAIL_PTR[0] group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr->NEXT->FAIL_PTR->FIXED_AMP group_ptr->NEXT->FAIL_PTR->FIXED_PHASE group_ptr->NEXT->NEXT group_ptr->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NAME group_ptr->NEXT->NEXT->GRID_PTR group_ptr->NEXT->NEXT->GRID_PTR[0] group_ptr->NEXT->NEXT->ELEM_PTR group_ptr->NEXT->NEXT->ELEM_PTR[0] group_ptr->NEXT->NEXT->ADDREM_PTR group_ptr->NEXT->NEXT->ADDREM_PTR[0] group_ptr->NEXT->NEXT->GRAMPEXC_PTR group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->NEXT->GRPHAEXC_PTR group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->NEXT->ERR_PTR group_ptr->NEXT->NEXT->ERR_PTR[0] group_ptr->NEXT->NEXT->FAIL_PTR group_ptr->NEXT->NEXT->FAIL_PTR[0] group_ptr->NEXT->NEXT->NEXT group_ptr->NEXT->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NUM_OF_NODES group_ptr->NEXT->NEXT->SHAPE group_ptr->NEXT->NEXT->PSIZE group_ptr->NEXT->NEXT->QSIZE group_ptr->NEXT->NEXT->GEOMNODE_PTR group_ptr->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->NEXT->BUILT group_ptr->NEXT->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr->NEXT->NUM_OF_NODES group_ptr->NEXT->SHAPE group_ptr->NEXT->PSIZE group_ptr->NEXT->QSIZE group_ptr->NEXT->GEOMNODE_PTR group_ptr->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->LOC_P group_ptr->NEXT->GEOMNODE_PTR->LOC_Q group_ptr->NEXT->GEOMNODE_PTR->XA group_ptr->NEXT->GEOMNODE_PTR->YA group_ptr->NEXT->GEOMNODE_PTR->ZA group_ptr->NEXT->GEOMNODE_PTR->THEA group_ptr->NEXT->GEOMNODE_PTR->PHEA group_ptr->NEXT->GEOMNODE_PTR->PSEA group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->NEXT group_ptr->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->SHAPE group_ptr->NEXT->GEOMNODE_PTR->PSIZE group_ptr->NEXT->GEOMNODE_PTR->QSIZE group_ptr->NEXT->BUILT group_ptr->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->SUPER_GROUP_PTR[0] group_ptr->NUM_OF_NODES group_ptr->SHAPE group_ptr->PSIZE group_ptr->QSIZE group_ptr->GEOMNODE_PTR group_ptr->GEOMNODE_PTR[0] group_ptr->GEOMNODE_PTR->LOC_P group_ptr->GEOMNODE_PTR->LOC_Q group_ptr->GEOMNODE_PTR->XA group_ptr->GEOMNODE_PTR->YA group_ptr->GEOMNODE_PTR->ZA group_ptr->GEOMNODE_PTR->THEA group_ptr->GEOMNODE_PTR->PHEA group_ptr->GEOMNODE_PTR->PSEA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->NEXT group_ptr->GEOMNODE_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->GEOMNODE_PTR->SHAPE group_ptr->GEOMNODE_PTR->PSIZE group_ptr->GEOMNODE_PTR->QSIZE group_ptr->BUILT group_ptr->SUPER_GROUP_PTR group_ptr->SUPER_GROUP_PTR[0]
::UserNames.equals(group_ptr.NAME)
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.LEVEL
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.GEOMETRY
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.NPORTS
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.PORTNUM
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL
group_ptr.GRID_PTR.LEVEL == group_ptr.ADDREM_PTR.NODE_PTR.QCOORD
group_ptr.GRID_PTR.LEVEL == group_ptr.GRAMPEXC_PTR.TYPE
group_ptr.GRID_PTR.ANGLE_UNIT == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GRID_PTR.QSTEP)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.PDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.QDIM)
group_ptr.GRID_PTR.PQSTEP_UNIT == group_ptr.NUM_OF_NODES
group_ptr.GRID_PTR.PQXY_UNIT == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.PSIZE)
group_ptr.ELEM_PTR.TYPE == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.RADIUS_UNIT == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.PQDIM_UNIT == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.MODEL == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.POLARIZATION == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.ELEM_PTR.PORT_PTR.PHEPOL)
group_ptr.ELEM_PTR.PHEPOL_UNIT == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.DIRECTION == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.GAIN, group_ptr.PSIZE)
group_ptr.ELEM_PTR.GAIN_UNIT == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.PSC, group_ptr.PSIZE)
group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.PSH, group_ptr.PSIZE)
group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.PPA, group_ptr.PSIZE)
group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT == group_ptr.NUM_OF_NODES
group_ptr.ADDREM_PTR.ADDREM_TYPE == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.ADDREM_PTR.NODE_PTR.THEA, group_ptr.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.ADDREM_PTR.NODE_PTR.PHEA, group_ptr.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.ADDREM_PTR.NODE_PTR.PSEA, group_ptr.PSIZE)
group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, group_ptr.GRAMPEXC_PTR.Q2_ET)
group_ptr.GRAMPEXC_PTR.AMP_UNIT == group_ptr.NUM_OF_NODES
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == group_ptr.GRPHAEXC_PTR.PQEXP_PTR
group_ptr.GRPHAEXC_PTR.TYPE == group_ptr.NUM_OF_NODES
group_ptr.GRPHAEXC_PTR.PHASE_UNIT == group_ptr.NUM_OF_NODES
group_ptr.NUM_OF_NODES == group_ptr.SHAPE
group_ptr.NUM_OF_NODES == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, group_ptr.QSIZE)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
group_ptr != null
group_ptr.[0] != null
group_ptr.GRID_PTR != null
group_ptr.GRID_PTR.LEVEL == 1
group_ptr.GRID_PTR.TYPE == 2
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, 60.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, 86.0)
group_ptr.ELEM_PTR != null
group_ptr.ELEM_PTR.[0] != null
group_ptr.ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, 90.0)
group_ptr.ELEM_PTR.PORT_PTR != null
group_ptr.ELEM_PTR.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, 1.0)
group_ptr.ELEM_PTR.PORT_PTR.NEXT == null
group_ptr.ADDREM_PTR != null
group_ptr.ADDREM_PTR.[0] != null
group_ptr.ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.ADDREM_PTR.NODE_PTR != null
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.ADDREM_PTR.NEXT == null
group_ptr.GRAMPEXC_PTR != null
group_ptr.GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.GRPHAEXC_PTR != null
group_ptr.GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.ERR_PTR == null
group_ptr.FAIL_PTR == null
group_ptr.NUM_OF_NODES == 0
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, 0.0)
group_ptr.GEOMNODE_PTR == null
group_ptr.SUPER_GROUP_PTR != null
===========================================================================
..addscan():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME group_ptr group_ptr[0] group_ptr->NAME group_ptr->GRID_PTR group_ptr->GRID_PTR[0] group_ptr->GRID_PTR->NAME group_ptr->GRID_PTR->LEVEL group_ptr->GRID_PTR->TYPE group_ptr->GRID_PTR->ORIENT group_ptr->GRID_PTR->ANGLE group_ptr->GRID_PTR->ANGLE_UNIT group_ptr->GRID_PTR->PSTEP group_ptr->GRID_PTR->QSTEP group_ptr->GRID_PTR->PQSTEP_UNIT group_ptr->GRID_PTR->PX group_ptr->GRID_PTR->PY group_ptr->GRID_PTR->QX group_ptr->GRID_PTR->QY group_ptr->GRID_PTR->PQXY_UNIT group_ptr->GRID_PTR->ROT_ANGLE group_ptr->ELEM_PTR group_ptr->ELEM_PTR[0] group_ptr->ELEM_PTR->TYPE group_ptr->ELEM_PTR->NAME group_ptr->ELEM_PTR->LEVEL group_ptr->ELEM_PTR->GEOMETRY group_ptr->ELEM_PTR->RADIUS group_ptr->ELEM_PTR->RADIUS_UNIT group_ptr->ELEM_PTR->PDIM group_ptr->ELEM_PTR->QDIM group_ptr->ELEM_PTR->PQDIM_UNIT group_ptr->ELEM_PTR->MODEL group_ptr->ELEM_PTR->EXP group_ptr->ELEM_PTR->ANGLEE group_ptr->ELEM_PTR->ANGLEH group_ptr->ELEM_PTR->ANGLE_UNIT group_ptr->ELEM_PTR->TAPERE group_ptr->ELEM_PTR->TAPERH group_ptr->ELEM_PTR->TAPER_UNIT group_ptr->ELEM_PTR->POLARIZATION group_ptr->ELEM_PTR->PHEPOL group_ptr->ELEM_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->DIRECTION group_ptr->ELEM_PTR->GAIN group_ptr->ELEM_PTR->GAIN_UNIT group_ptr->ELEM_PTR->NPORTS group_ptr->ELEM_PTR->PORT_PTR group_ptr->ELEM_PTR->PORT_PTR[0] group_ptr->ELEM_PTR->PORT_PTR->PORTNUM group_ptr->ELEM_PTR->PORT_PTR->AMP group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSC group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSH group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr->ELEM_PTR->PORT_PTR->PPA group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr->ELEM_PTR->PORT_PTR->PHEPOL group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr->ELEM_PTR->PORT_PTR->NEXT group_ptr->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr->ADDREM_PTR group_ptr->ADDREM_PTR[0] group_ptr->ADDREM_PTR->ADDREM_TYPE group_ptr->ADDREM_PTR->BLOCK_TYPE group_ptr->ADDREM_PTR->NODE_PTR group_ptr->ADDREM_PTR->NODE_PTR[0] group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr->ADDREM_PTR->NODE_PTR->PCOORD group_ptr->ADDREM_PTR->NODE_PTR->QCOORD group_ptr->ADDREM_PTR->NODE_PTR->THEA group_ptr->ADDREM_PTR->NODE_PTR->PHEA group_ptr->ADDREM_PTR->NODE_PTR->PSEA group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr->ADDREM_PTR->NODE_PTR->NEXT group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT group_ptr->ADDREM_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr->ADDREM_PTR->NEXT->NODE_PTR group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr->ADDREM_PTR->NEXT->NEXT group_ptr->ADDREM_PTR->NEXT->NEXT[0] group_ptr->GRAMPEXC_PTR group_ptr->GRAMPEXC_PTR[0] group_ptr->GRAMPEXC_PTR->TYPE group_ptr->GRAMPEXC_PTR->UNIF_VAL group_ptr->GRAMPEXC_PTR->CENTRE group_ptr->GRAMPEXC_PTR->P1_ET group_ptr->GRAMPEXC_PTR->P2_ET group_ptr->GRAMPEXC_PTR->Q1_ET group_ptr->GRAMPEXC_PTR->Q2_ET group_ptr->GRAMPEXC_PTR->AMP_UNIT group_ptr->GRAMPEXC_PTR->PQEXP_PTR group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR group_ptr->GRPHAEXC_PTR[0] group_ptr->GRPHAEXC_PTR->TYPE group_ptr->GRPHAEXC_PTR->UNIF_VAL group_ptr->GRPHAEXC_PTR->CENTRE group_ptr->GRPHAEXC_PTR->P1_EP group_ptr->GRPHAEXC_PTR->P2_EP group_ptr->GRPHAEXC_PTR->Q1_EP group_ptr->GRPHAEXC_PTR->Q2_EP group_ptr->GRPHAEXC_PTR->DIRECTION group_ptr->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->GRPHAEXC_PTR->ANGLE_START group_ptr->GRPHAEXC_PTR->ANGLE_STEP group_ptr->GRPHAEXC_PTR->OMIT_PHASE group_ptr->GRPHAEXC_PTR->PHASE_START group_ptr->GRPHAEXC_PTR->PHASE_STEP group_ptr->GRPHAEXC_PTR->U group_ptr->GRPHAEXC_PTR->V group_ptr->GRPHAEXC_PTR->THETA group_ptr->GRPHAEXC_PTR->PHI group_ptr->GRPHAEXC_PTR->PQEXP_PTR group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->GRPHAEXC_PTR->PHASE_UNIT group_ptr->ERR_PTR group_ptr->ERR_PTR[0] group_ptr->ERR_PTR->AMP_TYPE group_ptr->ERR_PTR->AMP_STDEV group_ptr->ERR_PTR->AMP_LINOFFS group_ptr->ERR_PTR->AMP_LINSTEP group_ptr->ERR_PTR->AMP_2NDCENT group_ptr->ERR_PTR->AMP_2NDPET group_ptr->ERR_PTR->AMP_2NDQET group_ptr->ERR_PTR->AMP_UNIT group_ptr->ERR_PTR->PHASE_TYPE group_ptr->ERR_PTR->PHASE_STDEV group_ptr->ERR_PTR->PHASE_LINOFFS group_ptr->ERR_PTR->PHASE_LINSTEP group_ptr->ERR_PTR->PHASE_2NDCENT group_ptr->ERR_PTR->PHASE_2NDPSID group_ptr->ERR_PTR->PHASE_2NDQSID group_ptr->ERR_PTR->PHASE_QUANTSTEP group_ptr->ERR_PTR->PHASE_UNIT group_ptr->FAIL_PTR group_ptr->FAIL_PTR[0] group_ptr->FAIL_PTR->NUM_FAULTY_EL group_ptr->FAIL_PTR->FIXED_AMP group_ptr->FAIL_PTR->FIXED_PHASE group_ptr->NEXT group_ptr->NEXT[0] group_ptr->NEXT->NAME group_ptr->NEXT->GRID_PTR group_ptr->NEXT->GRID_PTR[0] group_ptr->NEXT->GRID_PTR->NAME group_ptr->NEXT->GRID_PTR->LEVEL group_ptr->NEXT->GRID_PTR->TYPE group_ptr->NEXT->GRID_PTR->ORIENT group_ptr->NEXT->GRID_PTR->ANGLE group_ptr->NEXT->GRID_PTR->ANGLE_UNIT group_ptr->NEXT->GRID_PTR->PSTEP group_ptr->NEXT->GRID_PTR->QSTEP group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr->NEXT->GRID_PTR->PX group_ptr->NEXT->GRID_PTR->PY group_ptr->NEXT->GRID_PTR->QX group_ptr->NEXT->GRID_PTR->QY group_ptr->NEXT->GRID_PTR->PQXY_UNIT group_ptr->NEXT->GRID_PTR->ROT_ANGLE group_ptr->NEXT->ELEM_PTR group_ptr->NEXT->ELEM_PTR[0] group_ptr->NEXT->ELEM_PTR->TYPE group_ptr->NEXT->ELEM_PTR->NAME group_ptr->NEXT->ELEM_PTR->LEVEL group_ptr->NEXT->ELEM_PTR->GEOMETRY group_ptr->NEXT->ELEM_PTR->RADIUS group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr->NEXT->ELEM_PTR->PDIM group_ptr->NEXT->ELEM_PTR->QDIM group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr->NEXT->ELEM_PTR->MODEL group_ptr->NEXT->ELEM_PTR->EXP group_ptr->NEXT->ELEM_PTR->ANGLEE group_ptr->NEXT->ELEM_PTR->ANGLEH group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr->NEXT->ELEM_PTR->TAPERE group_ptr->NEXT->ELEM_PTR->TAPERH group_ptr->NEXT->ELEM_PTR->TAPER_UNIT group_ptr->NEXT->ELEM_PTR->POLARIZATION group_ptr->NEXT->ELEM_PTR->PHEPOL group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr->NEXT->ELEM_PTR->DIRECTION group_ptr->NEXT->ELEM_PTR->GAIN group_ptr->NEXT->ELEM_PTR->GAIN_UNIT group_ptr->NEXT->ELEM_PTR->NPORTS group_ptr->NEXT->ELEM_PTR->PORT_PTR group_ptr->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr->NEXT->ADDREM_PTR group_ptr->NEXT->ADDREM_PTR[0] group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr->NEXT->ADDREM_PTR->NODE_PTR group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr->NEXT->ADDREM_PTR->NEXT group_ptr->NEXT->ADDREM_PTR->NEXT[0] group_ptr->NEXT->GRAMPEXC_PTR group_ptr->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->GRAMPEXC_PTR->TYPE group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr->NEXT->GRAMPEXC_PTR->CENTRE group_ptr->NEXT->GRAMPEXC_PTR->P1_ET group_ptr->NEXT->GRAMPEXC_PTR->P2_ET group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR group_ptr->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->TYPE group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr->NEXT->GRPHAEXC_PTR->CENTRE group_ptr->NEXT->GRPHAEXC_PTR->P1_EP group_ptr->NEXT->GRPHAEXC_PTR->P2_EP group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr->NEXT->GRPHAEXC_PTR->U group_ptr->NEXT->GRPHAEXC_PTR->V group_ptr->NEXT->GRPHAEXC_PTR->THETA group_ptr->NEXT->GRPHAEXC_PTR->PHI group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr->NEXT->ERR_PTR group_ptr->NEXT->ERR_PTR[0] group_ptr->NEXT->ERR_PTR->AMP_TYPE group_ptr->NEXT->ERR_PTR->AMP_STDEV group_ptr->NEXT->ERR_PTR->AMP_LINOFFS group_ptr->NEXT->ERR_PTR->AMP_LINSTEP group_ptr->NEXT->ERR_PTR->AMP_2NDCENT group_ptr->NEXT->ERR_PTR->AMP_2NDPET group_ptr->NEXT->ERR_PTR->AMP_2NDQET group_ptr->NEXT->ERR_PTR->AMP_UNIT group_ptr->NEXT->ERR_PTR->PHASE_TYPE group_ptr->NEXT->ERR_PTR->PHASE_STDEV group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr->NEXT->ERR_PTR->PHASE_UNIT group_ptr->NEXT->FAIL_PTR group_ptr->NEXT->FAIL_PTR[0] group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr->NEXT->FAIL_PTR->FIXED_AMP group_ptr->NEXT->FAIL_PTR->FIXED_PHASE group_ptr->NEXT->NEXT group_ptr->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NAME group_ptr->NEXT->NEXT->GRID_PTR group_ptr->NEXT->NEXT->GRID_PTR[0] group_ptr->NEXT->NEXT->ELEM_PTR group_ptr->NEXT->NEXT->ELEM_PTR[0] group_ptr->NEXT->NEXT->ADDREM_PTR group_ptr->NEXT->NEXT->ADDREM_PTR[0] group_ptr->NEXT->NEXT->GRAMPEXC_PTR group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->NEXT->GRPHAEXC_PTR group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->NEXT->ERR_PTR group_ptr->NEXT->NEXT->ERR_PTR[0] group_ptr->NEXT->NEXT->FAIL_PTR group_ptr->NEXT->NEXT->FAIL_PTR[0] group_ptr->NEXT->NEXT->NEXT group_ptr->NEXT->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NUM_OF_NODES group_ptr->NEXT->NEXT->SHAPE group_ptr->NEXT->NEXT->PSIZE group_ptr->NEXT->NEXT->QSIZE group_ptr->NEXT->NEXT->GEOMNODE_PTR group_ptr->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->NEXT->BUILT group_ptr->NEXT->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr->NEXT->NUM_OF_NODES group_ptr->NEXT->SHAPE group_ptr->NEXT->PSIZE group_ptr->NEXT->QSIZE group_ptr->NEXT->GEOMNODE_PTR group_ptr->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->LOC_P group_ptr->NEXT->GEOMNODE_PTR->LOC_Q group_ptr->NEXT->GEOMNODE_PTR->XA group_ptr->NEXT->GEOMNODE_PTR->YA group_ptr->NEXT->GEOMNODE_PTR->ZA group_ptr->NEXT->GEOMNODE_PTR->THEA group_ptr->NEXT->GEOMNODE_PTR->PHEA group_ptr->NEXT->GEOMNODE_PTR->PSEA group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->NEXT group_ptr->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->SHAPE group_ptr->NEXT->GEOMNODE_PTR->PSIZE group_ptr->NEXT->GEOMNODE_PTR->QSIZE group_ptr->NEXT->BUILT group_ptr->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->SUPER_GROUP_PTR[0] group_ptr->NUM_OF_NODES group_ptr->SHAPE group_ptr->PSIZE group_ptr->QSIZE group_ptr->GEOMNODE_PTR group_ptr->GEOMNODE_PTR[0] group_ptr->GEOMNODE_PTR->LOC_P group_ptr->GEOMNODE_PTR->LOC_Q group_ptr->GEOMNODE_PTR->XA group_ptr->GEOMNODE_PTR->YA group_ptr->GEOMNODE_PTR->ZA group_ptr->GEOMNODE_PTR->THEA group_ptr->GEOMNODE_PTR->PHEA group_ptr->GEOMNODE_PTR->PSEA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->NEXT group_ptr->GEOMNODE_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->GEOMNODE_PTR->SHAPE group_ptr->GEOMNODE_PTR->PSIZE group_ptr->GEOMNODE_PTR->QSIZE group_ptr->BUILT group_ptr->SUPER_GROUP_PTR group_ptr->SUPER_GROUP_PTR[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(group_ptr) orig(group_ptr[0]) orig(group_ptr->NAME) orig(group_ptr->GRID_PTR) orig(group_ptr->GRID_PTR[0]) orig(group_ptr->GRID_PTR->NAME) orig(group_ptr->GRID_PTR->LEVEL) orig(group_ptr->GRID_PTR->TYPE) orig(group_ptr->GRID_PTR->ORIENT) orig(group_ptr->GRID_PTR->ANGLE) orig(group_ptr->GRID_PTR->ANGLE_UNIT) orig(group_ptr->GRID_PTR->PSTEP) orig(group_ptr->GRID_PTR->QSTEP) orig(group_ptr->GRID_PTR->PQSTEP_UNIT) orig(group_ptr->GRID_PTR->PX) orig(group_ptr->GRID_PTR->PY) orig(group_ptr->GRID_PTR->QX) orig(group_ptr->GRID_PTR->QY) orig(group_ptr->GRID_PTR->PQXY_UNIT) orig(group_ptr->GRID_PTR->ROT_ANGLE) orig(group_ptr->ELEM_PTR) orig(group_ptr->ELEM_PTR[0]) orig(group_ptr->ELEM_PTR->TYPE) orig(group_ptr->ELEM_PTR->NAME) orig(group_ptr->ELEM_PTR->LEVEL) orig(group_ptr->ELEM_PTR->GEOMETRY) orig(group_ptr->ELEM_PTR->RADIUS) orig(group_ptr->ELEM_PTR->RADIUS_UNIT) orig(group_ptr->ELEM_PTR->PDIM) orig(group_ptr->ELEM_PTR->QDIM) orig(group_ptr->ELEM_PTR->PQDIM_UNIT) orig(group_ptr->ELEM_PTR->MODEL) orig(group_ptr->ELEM_PTR->EXP) orig(group_ptr->ELEM_PTR->ANGLEE) orig(group_ptr->ELEM_PTR->ANGLEH) orig(group_ptr->ELEM_PTR->ANGLE_UNIT) orig(group_ptr->ELEM_PTR->TAPERE) orig(group_ptr->ELEM_PTR->TAPERH) orig(group_ptr->ELEM_PTR->TAPER_UNIT) orig(group_ptr->ELEM_PTR->POLARIZATION) orig(group_ptr->ELEM_PTR->PHEPOL) orig(group_ptr->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr->ELEM_PTR->DIRECTION) orig(group_ptr->ELEM_PTR->GAIN) orig(group_ptr->ELEM_PTR->GAIN_UNIT) orig(group_ptr->ELEM_PTR->NPORTS) orig(group_ptr->ELEM_PTR->PORT_PTR) orig(group_ptr->ELEM_PTR->PORT_PTR[0]) orig(group_ptr->ELEM_PTR->PORT_PTR->PORTNUM) orig(group_ptr->ELEM_PTR->PORT_PTR->AMP) orig(group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PSC) orig(group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PSH) orig(group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PPA) orig(group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PHEPOL) orig(group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL) orig(group_ptr->ELEM_PTR->PORT_PTR->NEXT) orig(group_ptr->ELEM_PTR->PORT_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR) orig(group_ptr->ADDREM_PTR[0]) orig(group_ptr->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr->ADDREM_PTR->NODE_PTR) orig(group_ptr->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT) orig(group_ptr->ADDREM_PTR->NODE_PTR->PCOORD) orig(group_ptr->ADDREM_PTR->NODE_PTR->QCOORD) orig(group_ptr->ADDREM_PTR->NODE_PTR->THEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->PHEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->PSEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT) orig(group_ptr->ADDREM_PTR->NODE_PTR->NEXT) orig(group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR->NEXT) orig(group_ptr->ADDREM_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE) orig(group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE) orig(group_ptr->ADDREM_PTR->NEXT->NODE_PTR) orig(group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0]) orig(group_ptr->ADDREM_PTR->NEXT->NEXT) orig(group_ptr->ADDREM_PTR->NEXT->NEXT[0]) orig(group_ptr->GRAMPEXC_PTR) orig(group_ptr->GRAMPEXC_PTR[0]) orig(group_ptr->GRAMPEXC_PTR->TYPE) orig(group_ptr->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr->GRAMPEXC_PTR->CENTRE) orig(group_ptr->GRAMPEXC_PTR->P1_ET) orig(group_ptr->GRAMPEXC_PTR->P2_ET) orig(group_ptr->GRAMPEXC_PTR->Q1_ET) orig(group_ptr->GRAMPEXC_PTR->Q2_ET) orig(group_ptr->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr->GRPHAEXC_PTR) orig(group_ptr->GRPHAEXC_PTR[0]) orig(group_ptr->GRPHAEXC_PTR->TYPE) orig(group_ptr->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr->GRPHAEXC_PTR->CENTRE) orig(group_ptr->GRPHAEXC_PTR->P1_EP) orig(group_ptr->GRPHAEXC_PTR->P2_EP) orig(group_ptr->GRPHAEXC_PTR->Q1_EP) orig(group_ptr->GRPHAEXC_PTR->Q2_EP) orig(group_ptr->GRPHAEXC_PTR->DIRECTION) orig(group_ptr->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr->GRPHAEXC_PTR->PHASE_START) orig(group_ptr->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr->GRPHAEXC_PTR->U) orig(group_ptr->GRPHAEXC_PTR->V) orig(group_ptr->GRPHAEXC_PTR->THETA) orig(group_ptr->GRPHAEXC_PTR->PHI) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr->ERR_PTR) orig(group_ptr->ERR_PTR[0]) orig(group_ptr->ERR_PTR->AMP_TYPE) orig(group_ptr->ERR_PTR->AMP_STDEV) orig(group_ptr->ERR_PTR->AMP_LINOFFS) orig(group_ptr->ERR_PTR->AMP_LINSTEP) orig(group_ptr->ERR_PTR->AMP_2NDCENT) orig(group_ptr->ERR_PTR->AMP_2NDPET) orig(group_ptr->ERR_PTR->AMP_2NDQET) orig(group_ptr->ERR_PTR->AMP_UNIT) orig(group_ptr->ERR_PTR->PHASE_TYPE) orig(group_ptr->ERR_PTR->PHASE_STDEV) orig(group_ptr->ERR_PTR->PHASE_LINOFFS) orig(group_ptr->ERR_PTR->PHASE_LINSTEP) orig(group_ptr->ERR_PTR->PHASE_2NDCENT) orig(group_ptr->ERR_PTR->PHASE_2NDPSID) orig(group_ptr->ERR_PTR->PHASE_2NDQSID) orig(group_ptr->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr->ERR_PTR->PHASE_UNIT) orig(group_ptr->FAIL_PTR) orig(group_ptr->FAIL_PTR[0]) orig(group_ptr->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr->FAIL_PTR->FIXED_AMP) orig(group_ptr->FAIL_PTR->FIXED_PHASE) orig(group_ptr->NEXT) orig(group_ptr->NEXT[0]) orig(group_ptr->NEXT->NAME) orig(group_ptr->NEXT->GRID_PTR) orig(group_ptr->NEXT->GRID_PTR[0]) orig(group_ptr->NEXT->GRID_PTR->NAME) orig(group_ptr->NEXT->GRID_PTR->LEVEL) orig(group_ptr->NEXT->GRID_PTR->TYPE) orig(group_ptr->NEXT->GRID_PTR->ORIENT) orig(group_ptr->NEXT->GRID_PTR->ANGLE) orig(group_ptr->NEXT->GRID_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->GRID_PTR->PSTEP) orig(group_ptr->NEXT->GRID_PTR->QSTEP) orig(group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT) orig(group_ptr->NEXT->GRID_PTR->PX) orig(group_ptr->NEXT->GRID_PTR->PY) orig(group_ptr->NEXT->GRID_PTR->QX) orig(group_ptr->NEXT->GRID_PTR->QY) orig(group_ptr->NEXT->GRID_PTR->PQXY_UNIT) orig(group_ptr->NEXT->GRID_PTR->ROT_ANGLE) orig(group_ptr->NEXT->ELEM_PTR) orig(group_ptr->NEXT->ELEM_PTR[0]) orig(group_ptr->NEXT->ELEM_PTR->TYPE) orig(group_ptr->NEXT->ELEM_PTR->NAME) orig(group_ptr->NEXT->ELEM_PTR->LEVEL) orig(group_ptr->NEXT->ELEM_PTR->GEOMETRY) orig(group_ptr->NEXT->ELEM_PTR->RADIUS) orig(group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT) orig(group_ptr->NEXT->ELEM_PTR->PDIM) orig(group_ptr->NEXT->ELEM_PTR->QDIM) orig(group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT) orig(group_ptr->NEXT->ELEM_PTR->MODEL) orig(group_ptr->NEXT->ELEM_PTR->EXP) orig(group_ptr->NEXT->ELEM_PTR->ANGLEE) orig(group_ptr->NEXT->ELEM_PTR->ANGLEH) orig(group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->ELEM_PTR->TAPERE) orig(group_ptr->NEXT->ELEM_PTR->TAPERH) orig(group_ptr->NEXT->ELEM_PTR->TAPER_UNIT) orig(group_ptr->NEXT->ELEM_PTR->POLARIZATION) orig(group_ptr->NEXT->ELEM_PTR->PHEPOL) orig(group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr->NEXT->ELEM_PTR->DIRECTION) orig(group_ptr->NEXT->ELEM_PTR->GAIN) orig(group_ptr->NEXT->ELEM_PTR->GAIN_UNIT) orig(group_ptr->NEXT->ELEM_PTR->NPORTS) orig(group_ptr->NEXT->ELEM_PTR->PORT_PTR) orig(group_ptr->NEXT->ELEM_PTR->PORT_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR) orig(group_ptr->NEXT->ADDREM_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr->NEXT->ADDREM_PTR->NODE_PTR) orig(group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR->NEXT) orig(group_ptr->NEXT->ADDREM_PTR->NEXT[0]) orig(group_ptr->NEXT->GRAMPEXC_PTR) orig(group_ptr->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr->NEXT->GRAMPEXC_PTR->TYPE) orig(group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr->NEXT->GRAMPEXC_PTR->CENTRE) orig(group_ptr->NEXT->GRAMPEXC_PTR->P1_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->P2_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR) orig(group_ptr->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR->TYPE) orig(group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr->NEXT->GRPHAEXC_PTR->CENTRE) orig(group_ptr->NEXT->GRPHAEXC_PTR->P1_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->P2_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION) orig(group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr->NEXT->GRPHAEXC_PTR->U) orig(group_ptr->NEXT->GRPHAEXC_PTR->V) orig(group_ptr->NEXT->GRPHAEXC_PTR->THETA) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHI) orig(group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr->NEXT->ERR_PTR) orig(group_ptr->NEXT->ERR_PTR[0]) orig(group_ptr->NEXT->ERR_PTR->AMP_TYPE) orig(group_ptr->NEXT->ERR_PTR->AMP_STDEV) orig(group_ptr->NEXT->ERR_PTR->AMP_LINOFFS) orig(group_ptr->NEXT->ERR_PTR->AMP_LINSTEP) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDCENT) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDPET) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDQET) orig(group_ptr->NEXT->ERR_PTR->AMP_UNIT) orig(group_ptr->NEXT->ERR_PTR->PHASE_TYPE) orig(group_ptr->NEXT->ERR_PTR->PHASE_STDEV) orig(group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS) orig(group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID) orig(group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr->NEXT->ERR_PTR->PHASE_UNIT) orig(group_ptr->NEXT->FAIL_PTR) orig(group_ptr->NEXT->FAIL_PTR[0]) orig(group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr->NEXT->FAIL_PTR->FIXED_AMP) orig(group_ptr->NEXT->FAIL_PTR->FIXED_PHASE) orig(group_ptr->NEXT->NEXT) orig(group_ptr->NEXT->NEXT[0]) orig(group_ptr->NEXT->NEXT->NAME) orig(group_ptr->NEXT->NEXT->GRID_PTR) orig(group_ptr->NEXT->NEXT->GRID_PTR[0]) orig(group_ptr->NEXT->NEXT->ELEM_PTR) orig(group_ptr->NEXT->NEXT->ELEM_PTR[0]) orig(group_ptr->NEXT->NEXT->ADDREM_PTR) orig(group_ptr->NEXT->NEXT->ADDREM_PTR[0]) orig(group_ptr->NEXT->NEXT->GRAMPEXC_PTR) orig(group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr->NEXT->NEXT->GRPHAEXC_PTR) orig(group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr->NEXT->NEXT->ERR_PTR) orig(group_ptr->NEXT->NEXT->ERR_PTR[0]) orig(group_ptr->NEXT->NEXT->FAIL_PTR) orig(group_ptr->NEXT->NEXT->FAIL_PTR[0]) orig(group_ptr->NEXT->NEXT->NEXT) orig(group_ptr->NEXT->NEXT->NEXT[0]) orig(group_ptr->NEXT->NEXT->NUM_OF_NODES) orig(group_ptr->NEXT->NEXT->SHAPE) orig(group_ptr->NEXT->NEXT->PSIZE) orig(group_ptr->NEXT->NEXT->QSIZE) orig(group_ptr->NEXT->NEXT->GEOMNODE_PTR) orig(group_ptr->NEXT->NEXT->GEOMNODE_PTR[0]) orig(group_ptr->NEXT->NEXT->BUILT) orig(group_ptr->NEXT->NEXT->SUPER_GROUP_PTR) orig(group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr->NEXT->NUM_OF_NODES) orig(group_ptr->NEXT->SHAPE) orig(group_ptr->NEXT->PSIZE) orig(group_ptr->NEXT->QSIZE) orig(group_ptr->NEXT->GEOMNODE_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->LOC_P) orig(group_ptr->NEXT->GEOMNODE_PTR->LOC_Q) orig(group_ptr->NEXT->GEOMNODE_PTR->XA) orig(group_ptr->NEXT->GEOMNODE_PTR->YA) orig(group_ptr->NEXT->GEOMNODE_PTR->ZA) orig(group_ptr->NEXT->GEOMNODE_PTR->THEA) orig(group_ptr->NEXT->GEOMNODE_PTR->PHEA) orig(group_ptr->NEXT->GEOMNODE_PTR->PSEA) orig(group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->NEXT) orig(group_ptr->NEXT->GEOMNODE_PTR->NEXT[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->SHAPE) orig(group_ptr->NEXT->GEOMNODE_PTR->PSIZE) orig(group_ptr->NEXT->GEOMNODE_PTR->QSIZE) orig(group_ptr->NEXT->BUILT) orig(group_ptr->NEXT->SUPER_GROUP_PTR) orig(group_ptr->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr->NUM_OF_NODES) orig(group_ptr->SHAPE) orig(group_ptr->PSIZE) orig(group_ptr->QSIZE) orig(group_ptr->GEOMNODE_PTR) orig(group_ptr->GEOMNODE_PTR[0]) orig(group_ptr->GEOMNODE_PTR->LOC_P) orig(group_ptr->GEOMNODE_PTR->LOC_Q) orig(group_ptr->GEOMNODE_PTR->XA) orig(group_ptr->GEOMNODE_PTR->YA) orig(group_ptr->GEOMNODE_PTR->ZA) orig(group_ptr->GEOMNODE_PTR->THEA) orig(group_ptr->GEOMNODE_PTR->PHEA) orig(group_ptr->GEOMNODE_PTR->PSEA) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0]) orig(group_ptr->GEOMNODE_PTR->NEXT) orig(group_ptr->GEOMNODE_PTR->NEXT[0]) orig(group_ptr->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr->GEOMNODE_PTR->SHAPE) orig(group_ptr->GEOMNODE_PTR->PSIZE) orig(group_ptr->GEOMNODE_PTR->QSIZE) orig(group_ptr->BUILT) orig(group_ptr->SUPER_GROUP_PTR) orig(group_ptr->SUPER_GROUP_PTR[0])
assignable group_ptr->GRID_PTR[0], group_ptr->GRID_PTR->NAME, group_ptr->GRID_PTR->ORIENT, group_ptr->GRID_PTR->PX, group_ptr->GRID_PTR->PY, group_ptr->GRID_PTR->QX, group_ptr->GRID_PTR->QY, group_ptr->ELEM_PTR->EXP, group_ptr->ELEM_PTR->ANGLEE, group_ptr->ELEM_PTR->ANGLEH, group_ptr->ELEM_PTR->ANGLE_UNIT, group_ptr->ELEM_PTR->TAPERE, group_ptr->ELEM_PTR->TAPERH, group_ptr->ELEM_PTR->TAPER_UNIT, group_ptr->ELEM_PTR->PORT_PTR->NEXT[0], group_ptr->ADDREM_PTR->NODE_PTR[0], group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT, group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0], group_ptr->ADDREM_PTR->NEXT[0], group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE, group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE, group_ptr->ADDREM_PTR->NEXT->NODE_PTR, group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0], group_ptr->ADDREM_PTR->NEXT->NEXT, group_ptr->ADDREM_PTR->NEXT->NEXT[0], group_ptr->GRAMPEXC_PTR->UNIF_VAL, group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy, group_ptr->GRPHAEXC_PTR->CENTRE, group_ptr->GRPHAEXC_PTR->P1_EP, group_ptr->GRPHAEXC_PTR->P2_EP, group_ptr->GRPHAEXC_PTR->Q1_EP, group_ptr->GRPHAEXC_PTR->Q2_EP, group_ptr->GRPHAEXC_PTR->DIRECTION, group_ptr->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr->GRPHAEXC_PTR->ANGLE_START, group_ptr->GRPHAEXC_PTR->ANGLE_STEP, group_ptr->GRPHAEXC_PTR->OMIT_PHASE, group_ptr->GRPHAEXC_PTR->PHASE_START, group_ptr->GRPHAEXC_PTR->PHASE_STEP, group_ptr->GRPHAEXC_PTR->U, group_ptr->GRPHAEXC_PTR->V, group_ptr->GRPHAEXC_PTR->THETA, group_ptr->GRPHAEXC_PTR->PHI, group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy, group_ptr->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr->ERR_PTR[0], group_ptr->ERR_PTR->AMP_TYPE, group_ptr->ERR_PTR->AMP_STDEV, group_ptr->ERR_PTR->AMP_LINOFFS, group_ptr->ERR_PTR->AMP_LINSTEP, group_ptr->ERR_PTR->AMP_2NDCENT, group_ptr->ERR_PTR->AMP_2NDPET, group_ptr->ERR_PTR->AMP_2NDQET, group_ptr->ERR_PTR->AMP_UNIT, group_ptr->ERR_PTR->PHASE_TYPE, group_ptr->ERR_PTR->PHASE_STDEV, group_ptr->ERR_PTR->PHASE_LINOFFS, group_ptr->ERR_PTR->PHASE_LINSTEP, group_ptr->ERR_PTR->PHASE_2NDCENT, group_ptr->ERR_PTR->PHASE_2NDPSID, group_ptr->ERR_PTR->PHASE_2NDQSID, group_ptr->ERR_PTR->PHASE_QUANTSTEP, group_ptr->ERR_PTR->PHASE_UNIT, group_ptr->FAIL_PTR[0], group_ptr->FAIL_PTR->NUM_FAULTY_EL, group_ptr->FAIL_PTR->FIXED_AMP, group_ptr->FAIL_PTR->FIXED_PHASE, group_ptr->NEXT, group_ptr->NEXT[0], group_ptr->NEXT->NAME, group_ptr->NEXT->GRID_PTR, group_ptr->NEXT->GRID_PTR[0], group_ptr->NEXT->GRID_PTR->NAME, group_ptr->NEXT->GRID_PTR->LEVEL, group_ptr->NEXT->GRID_PTR->TYPE, group_ptr->NEXT->GRID_PTR->ORIENT, group_ptr->NEXT->GRID_PTR->ANGLE, group_ptr->NEXT->GRID_PTR->ANGLE_UNIT, group_ptr->NEXT->GRID_PTR->PSTEP, group_ptr->NEXT->GRID_PTR->QSTEP, group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT, group_ptr->NEXT->GRID_PTR->PX, group_ptr->NEXT->GRID_PTR->PY, group_ptr->NEXT->GRID_PTR->QX, group_ptr->NEXT->GRID_PTR->QY, group_ptr->NEXT->GRID_PTR->PQXY_UNIT, group_ptr->NEXT->GRID_PTR->ROT_ANGLE, group_ptr->NEXT->ELEM_PTR, group_ptr->NEXT->ELEM_PTR[0], group_ptr->NEXT->ELEM_PTR->TYPE, group_ptr->NEXT->ELEM_PTR->NAME, group_ptr->NEXT->ELEM_PTR->LEVEL, group_ptr->NEXT->ELEM_PTR->GEOMETRY, group_ptr->NEXT->ELEM_PTR->RADIUS, group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT, group_ptr->NEXT->ELEM_PTR->PDIM, group_ptr->NEXT->ELEM_PTR->QDIM, group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT, group_ptr->NEXT->ELEM_PTR->MODEL, group_ptr->NEXT->ELEM_PTR->EXP, group_ptr->NEXT->ELEM_PTR->ANGLEE, group_ptr->NEXT->ELEM_PTR->ANGLEH, group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT, group_ptr->NEXT->ELEM_PTR->TAPERE, group_ptr->NEXT->ELEM_PTR->TAPERH, group_ptr->NEXT->ELEM_PTR->TAPER_UNIT, group_ptr->NEXT->ELEM_PTR->POLARIZATION, group_ptr->NEXT->ELEM_PTR->PHEPOL, group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT, group_ptr->NEXT->ELEM_PTR->DIRECTION, group_ptr->NEXT->ELEM_PTR->GAIN, group_ptr->NEXT->ELEM_PTR->GAIN_UNIT, group_ptr->NEXT->ELEM_PTR->NPORTS, group_ptr->NEXT->ELEM_PTR->PORT_PTR, group_ptr->NEXT->ELEM_PTR->PORT_PTR[0], group_ptr->NEXT->ADDREM_PTR, group_ptr->NEXT->ADDREM_PTR[0], group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE, group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE, group_ptr->NEXT->ADDREM_PTR->NODE_PTR, group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0], group_ptr->NEXT->ADDREM_PTR->NEXT, group_ptr->NEXT->ADDREM_PTR->NEXT[0], group_ptr->NEXT->GRAMPEXC_PTR, group_ptr->NEXT->GRAMPEXC_PTR[0], group_ptr->NEXT->GRAMPEXC_PTR->TYPE, group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL, group_ptr->NEXT->GRAMPEXC_PTR->CENTRE, group_ptr->NEXT->GRAMPEXC_PTR->P1_ET, group_ptr->NEXT->GRAMPEXC_PTR->P2_ET, group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET, group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET, group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT, group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR, group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR, group_ptr->NEXT->GRPHAEXC_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR->TYPE, group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL, group_ptr->NEXT->GRPHAEXC_PTR->CENTRE, group_ptr->NEXT->GRPHAEXC_PTR->P1_EP, group_ptr->NEXT->GRPHAEXC_PTR->P2_EP, group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP, group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP, group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION, group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START, group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP, group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP, group_ptr->NEXT->GRPHAEXC_PTR->U, group_ptr->NEXT->GRPHAEXC_PTR->V, group_ptr->NEXT->GRPHAEXC_PTR->THETA, group_ptr->NEXT->GRPHAEXC_PTR->PHI, group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR, group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT, group_ptr->NEXT->ERR_PTR, group_ptr->NEXT->ERR_PTR[0], group_ptr->NEXT->ERR_PTR->AMP_TYPE, group_ptr->NEXT->ERR_PTR->AMP_STDEV, group_ptr->NEXT->ERR_PTR->AMP_LINOFFS, group_ptr->NEXT->ERR_PTR->AMP_LINSTEP, group_ptr->NEXT->ERR_PTR->AMP_2NDCENT, group_ptr->NEXT->ERR_PTR->AMP_2NDPET, group_ptr->NEXT->ERR_PTR->AMP_2NDQET, group_ptr->NEXT->ERR_PTR->AMP_UNIT, group_ptr->NEXT->ERR_PTR->PHASE_TYPE, group_ptr->NEXT->ERR_PTR->PHASE_STDEV, group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS, group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP, group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT, group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID, group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID, group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP, group_ptr->NEXT->ERR_PTR->PHASE_UNIT, group_ptr->NEXT->FAIL_PTR, group_ptr->NEXT->FAIL_PTR[0], group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL, group_ptr->NEXT->FAIL_PTR->FIXED_AMP, group_ptr->NEXT->FAIL_PTR->FIXED_PHASE, group_ptr->NEXT->NEXT, group_ptr->NEXT->NEXT[0], group_ptr->NEXT->NEXT->NAME, group_ptr->NEXT->NEXT->GRID_PTR, group_ptr->NEXT->NEXT->GRID_PTR[0], group_ptr->NEXT->NEXT->ELEM_PTR, group_ptr->NEXT->NEXT->ELEM_PTR[0], group_ptr->NEXT->NEXT->ADDREM_PTR, group_ptr->NEXT->NEXT->ADDREM_PTR[0], group_ptr->NEXT->NEXT->GRAMPEXC_PTR, group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0], group_ptr->NEXT->NEXT->GRPHAEXC_PTR, group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0], group_ptr->NEXT->NEXT->ERR_PTR, group_ptr->NEXT->NEXT->ERR_PTR[0], group_ptr->NEXT->NEXT->FAIL_PTR, group_ptr->NEXT->NEXT->FAIL_PTR[0], group_ptr->NEXT->NEXT->NEXT, group_ptr->NEXT->NEXT->NEXT[0], group_ptr->NEXT->NEXT->NUM_OF_NODES, group_ptr->NEXT->NEXT->SHAPE, group_ptr->NEXT->NEXT->PSIZE, group_ptr->NEXT->NEXT->QSIZE, group_ptr->NEXT->NEXT->GEOMNODE_PTR, group_ptr->NEXT->NEXT->GEOMNODE_PTR[0], group_ptr->NEXT->NEXT->BUILT, group_ptr->NEXT->NEXT->SUPER_GROUP_PTR, group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0], group_ptr->NEXT->NUM_OF_NODES, group_ptr->NEXT->SHAPE, group_ptr->NEXT->PSIZE, group_ptr->NEXT->QSIZE, group_ptr->NEXT->GEOMNODE_PTR, group_ptr->NEXT->GEOMNODE_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->LOC_P, group_ptr->NEXT->GEOMNODE_PTR->LOC_Q, group_ptr->NEXT->GEOMNODE_PTR->XA, group_ptr->NEXT->GEOMNODE_PTR->YA, group_ptr->NEXT->GEOMNODE_PTR->ZA, group_ptr->NEXT->GEOMNODE_PTR->THEA, group_ptr->NEXT->GEOMNODE_PTR->PHEA, group_ptr->NEXT->GEOMNODE_PTR->PSEA, group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR, group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->NEXT, group_ptr->NEXT->GEOMNODE_PTR->NEXT[0], group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR, group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->SHAPE, group_ptr->NEXT->GEOMNODE_PTR->PSIZE, group_ptr->NEXT->GEOMNODE_PTR->QSIZE, group_ptr->NEXT->BUILT, group_ptr->NEXT->SUPER_GROUP_PTR, group_ptr->NEXT->SUPER_GROUP_PTR[0], group_ptr->NUM_OF_NODES, group_ptr->SHAPE, group_ptr->PSIZE, group_ptr->QSIZE, group_ptr->GEOMNODE_PTR, group_ptr->GEOMNODE_PTR[0], group_ptr->GEOMNODE_PTR->LOC_P, group_ptr->GEOMNODE_PTR->LOC_Q, group_ptr->GEOMNODE_PTR->XA, group_ptr->GEOMNODE_PTR->YA, group_ptr->GEOMNODE_PTR->ZA, group_ptr->GEOMNODE_PTR->THEA, group_ptr->GEOMNODE_PTR->PHEA, group_ptr->GEOMNODE_PTR->PSEA, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0], group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0], group_ptr->GEOMNODE_PTR->NEXT, group_ptr->GEOMNODE_PTR->NEXT[0], group_ptr->GEOMNODE_PTR->SUBGROUP_PTR, group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr->GEOMNODE_PTR->SHAPE, group_ptr->GEOMNODE_PTR->PSIZE, group_ptr->GEOMNODE_PTR->QSIZE, group_ptr->SUPER_GROUP_PTR[0]
::UserNames.equals(group_ptr.NAME)
::UserNames.equals(\old(::UserNames))
::UserNames.equals(\old(group_ptr.NAME))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
group_ptr.[0] == \old(group_ptr.[0])
group_ptr.GRID_PTR == \old(group_ptr.GRID_PTR)
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.LEVEL
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.GEOMETRY
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.NPORTS
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.PORTNUM
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL
group_ptr.GRID_PTR.LEVEL == group_ptr.ADDREM_PTR.NODE_PTR.QCOORD
group_ptr.GRID_PTR.LEVEL == group_ptr.GRAMPEXC_PTR.TYPE
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.GRID_PTR.LEVEL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.LEVEL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.GEOMETRY)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.NPORTS)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.PORT_PTR.PORTNUM)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ADDREM_PTR.NODE_PTR.QCOORD)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.GRAMPEXC_PTR.TYPE)
group_ptr.GRID_PTR.TYPE == group_ptr.SHAPE
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, \old(group_ptr.GRID_PTR.ANGLE))
group_ptr.GRID_PTR.ANGLE_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GRID_PTR.QSTEP)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.PDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.QDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.QSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GRID_PTR.PSTEP))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GRID_PTR.QSTEP))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.ELEM_PTR.PDIM))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.ELEM_PTR.QDIM))
group_ptr.GRID_PTR.PQSTEP_UNIT == return
group_ptr.GRID_PTR.PQXY_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.GAIN)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSH)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PPA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.ZA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GRID_PTR.ROT_ANGLE))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.GAIN))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PSC))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PSH))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PPA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.THEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.PHEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.PSEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.PSIZE))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.QSIZE))
group_ptr.ELEM_PTR == \old(group_ptr.ELEM_PTR)
group_ptr.ELEM_PTR.[0] == \old(group_ptr.ELEM_PTR.[0])
group_ptr.ELEM_PTR.TYPE == return
group_ptr.ELEM_PTR.NAME.equals(\old(group_ptr.ELEM_PTR.NAME))
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, \old(group_ptr.ELEM_PTR.RADIUS))
group_ptr.ELEM_PTR.RADIUS_UNIT == return
group_ptr.ELEM_PTR.PQDIM_UNIT == return
group_ptr.ELEM_PTR.MODEL == return
group_ptr.ELEM_PTR.POLARIZATION == return
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.ELEM_PTR.PORT_PTR.PHEPOL)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, \old(group_ptr.ELEM_PTR.PHEPOL))
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, \old(group_ptr.ELEM_PTR.PORT_PTR.PHEPOL))
group_ptr.ELEM_PTR.PHEPOL_UNIT == return
group_ptr.ELEM_PTR.DIRECTION == return
group_ptr.ELEM_PTR.GAIN_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR == \old(group_ptr.ELEM_PTR.PORT_PTR)
group_ptr.ELEM_PTR.PORT_PTR.[0] == \old(group_ptr.ELEM_PTR.PORT_PTR.[0])
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, \old(group_ptr.ELEM_PTR.PORT_PTR.AMP))
group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.NEXT == \old(group_ptr.ELEM_PTR.PORT_PTR.NEXT)
group_ptr.ADDREM_PTR == \old(group_ptr.ADDREM_PTR)
group_ptr.ADDREM_PTR.[0] == \old(group_ptr.ADDREM_PTR.[0])
group_ptr.ADDREM_PTR.ADDREM_TYPE == return
group_ptr.ADDREM_PTR.BLOCK_TYPE == \old(group_ptr.ADDREM_PTR.BLOCK_TYPE)
group_ptr.ADDREM_PTR.NODE_PTR == \old(group_ptr.ADDREM_PTR.NODE_PTR)
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == \old(group_ptr.ADDREM_PTR.NODE_PTR.PCOORD)
group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT == return
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == \old(group_ptr.ADDREM_PTR.NODE_PTR.NEXT)
group_ptr.ADDREM_PTR.NEXT == \old(group_ptr.ADDREM_PTR.NEXT)
group_ptr.GRAMPEXC_PTR == \old(group_ptr.GRAMPEXC_PTR)
group_ptr.GRAMPEXC_PTR.[0] == \old(group_ptr.GRAMPEXC_PTR.[0])
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, \old(group_ptr.GRAMPEXC_PTR.CENTRE))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, group_ptr.GRAMPEXC_PTR.Q2_ET)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, \old(group_ptr.GRAMPEXC_PTR.P1_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, \old(group_ptr.GRAMPEXC_PTR.Q2_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, \old(group_ptr.GRAMPEXC_PTR.P2_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, \old(group_ptr.GRAMPEXC_PTR.Q1_ET))
group_ptr.GRAMPEXC_PTR.AMP_UNIT == return
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == group_ptr.GRPHAEXC_PTR.PQEXP_PTR
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == \old(group_ptr.GRAMPEXC_PTR.PQEXP_PTR)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == \old(group_ptr.GRPHAEXC_PTR.PQEXP_PTR)
group_ptr.GRPHAEXC_PTR == \old(group_ptr.GRPHAEXC_PTR)
group_ptr.GRPHAEXC_PTR.[0] == \old(group_ptr.GRPHAEXC_PTR.[0])
group_ptr.GRPHAEXC_PTR.TYPE == return
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, \old(group_ptr.GRPHAEXC_PTR.UNIF_VAL))
group_ptr.GRPHAEXC_PTR.PHASE_UNIT == return
group_ptr.ERR_PTR == \old(group_ptr.ERR_PTR)
group_ptr.FAIL_PTR == \old(group_ptr.FAIL_PTR)
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.LOC_Q
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.SHAPE
group_ptr.SHAPE == \old(group_ptr.GRID_PTR.TYPE)
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, group_ptr.QSIZE)
group_ptr.BUILT == return
return == \old(group_ptr.GRID_PTR.ANGLE_UNIT)
return == \old(group_ptr.GRID_PTR.PQSTEP_UNIT)
return == \old(group_ptr.GRID_PTR.PQXY_UNIT)
return == \old(group_ptr.ELEM_PTR.TYPE)
return == \old(group_ptr.ELEM_PTR.RADIUS_UNIT)
return == \old(group_ptr.ELEM_PTR.PQDIM_UNIT)
return == \old(group_ptr.ELEM_PTR.MODEL)
return == \old(group_ptr.ELEM_PTR.POLARIZATION)
return == \old(group_ptr.ELEM_PTR.PHEPOL_UNIT)
return == \old(group_ptr.ELEM_PTR.DIRECTION)
return == \old(group_ptr.ELEM_PTR.GAIN_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT)
return == \old(group_ptr.ADDREM_PTR.ADDREM_TYPE)
return == \old(group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT)
return == \old(group_ptr.GRAMPEXC_PTR.AMP_UNIT)
return == \old(group_ptr.GRPHAEXC_PTR.TYPE)
return == \old(group_ptr.GRPHAEXC_PTR.PHASE_UNIT)
return == \old(group_ptr.NUM_OF_NODES)
return == \old(group_ptr.SHAPE)
return == \old(group_ptr.BUILT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
group_ptr.[0] != null
group_ptr.GRID_PTR != null
group_ptr.GRID_PTR.LEVEL == 1
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, 60.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, 86.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, 0.0)
group_ptr.ELEM_PTR != null
group_ptr.ELEM_PTR.[0] != null
group_ptr.ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, 90.0)
group_ptr.ELEM_PTR.PORT_PTR != null
group_ptr.ELEM_PTR.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, 1.0)
group_ptr.ELEM_PTR.PORT_PTR.NEXT == null
group_ptr.ADDREM_PTR != null
group_ptr.ADDREM_PTR.[0] != null
group_ptr.ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.ADDREM_PTR.NODE_PTR != null
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.ADDREM_PTR.NEXT == null
group_ptr.GRAMPEXC_PTR != null
group_ptr.GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.GRPHAEXC_PTR != null
group_ptr.GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.ERR_PTR == null
group_ptr.FAIL_PTR == null
group_ptr.NUM_OF_NODES == 7
group_ptr.SHAPE == 2
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, 258.0)
group_ptr.GEOMNODE_PTR != null
group_ptr.GEOMNODE_PTR.[0] != null
group_ptr.GEOMNODE_PTR.LOC_P == 8
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.YA, 148.95636946268272)
group_ptr.GEOMNODE_PTR.NEXT != null
group_ptr.GEOMNODE_PTR.NEXT.[0] != null
group_ptr.GEOMNODE_PTR.SUBGROUP_PTR == null
group_ptr.SUPER_GROUP_PTR != null
return == 0
===========================================================================
..adremdef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] addrem_ptr addrem_ptr[0] addrem_ptr[0][0] addrem_ptr[0]->ADDREM_TYPE addrem_ptr[0]->BLOCK_TYPE addrem_ptr[0]->NODE_PTR addrem_ptr[0]->NODE_PTR[0] addrem_ptr[0]->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->PCOORD addrem_ptr[0]->NODE_PTR->QCOORD addrem_ptr[0]->NODE_PTR->THEA addrem_ptr[0]->NODE_PTR->PHEA addrem_ptr[0]->NODE_PTR->PSEA addrem_ptr[0]->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT addrem_ptr[0]->NODE_PTR->NEXT[0] addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->NEXT->PCOORD addrem_ptr[0]->NODE_PTR->NEXT->QCOORD addrem_ptr[0]->NODE_PTR->NEXT->THEA addrem_ptr[0]->NODE_PTR->NEXT->PHEA addrem_ptr[0]->NODE_PTR->NEXT->PSEA addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT->NEXT addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0] addrem_ptr[0]->NEXT addrem_ptr[0]->NEXT[0] addrem_ptr[0]->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NEXT->NODE_PTR->PCOORD addrem_ptr[0]->NEXT->NODE_PTR->QCOORD addrem_ptr[0]->NEXT->NODE_PTR->THEA addrem_ptr[0]->NEXT->NODE_PTR->PHEA addrem_ptr[0]->NEXT->NODE_PTR->PSEA addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NEXT->NODE_PTR->NEXT addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0] addrem_ptr[0]->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT[0] addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT->NEXT[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == addrem_ptr.[0].NODE_PTR.PCOORD
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
addrem_ptr.[0].ADDREM_TYPE == addrem_ptr.[0].NODE_PTR.ANGLE_UNIT
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 9
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 49
p1.PREV.PREV.LINE_NUM == 7
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
addrem_ptr != null
addrem_ptr.[0] != null
addrem_ptr.[0].[0] != null
addrem_ptr.[0].ADDREM_TYPE == 0
addrem_ptr.[0].BLOCK_TYPE == 3
addrem_ptr.[0].NODE_PTR != null
addrem_ptr.[0].NODE_PTR.QCOORD == 1
daikon.Quant.fuzzy.eq(addrem_ptr.[0].NODE_PTR.THEA, 0.0)
addrem_ptr.[0].NODE_PTR.NEXT == null
addrem_ptr.[0].NEXT == null
===========================================================================
..adremdef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] addrem_ptr addrem_ptr[0] addrem_ptr[0][0] addrem_ptr[0]->ADDREM_TYPE addrem_ptr[0]->BLOCK_TYPE addrem_ptr[0]->NODE_PTR addrem_ptr[0]->NODE_PTR[0] addrem_ptr[0]->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->PCOORD addrem_ptr[0]->NODE_PTR->QCOORD addrem_ptr[0]->NODE_PTR->THEA addrem_ptr[0]->NODE_PTR->PHEA addrem_ptr[0]->NODE_PTR->PSEA addrem_ptr[0]->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT addrem_ptr[0]->NODE_PTR->NEXT[0] addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->NEXT->PCOORD addrem_ptr[0]->NODE_PTR->NEXT->QCOORD addrem_ptr[0]->NODE_PTR->NEXT->THEA addrem_ptr[0]->NODE_PTR->NEXT->PHEA addrem_ptr[0]->NODE_PTR->NEXT->PSEA addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT->NEXT addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0] addrem_ptr[0]->NEXT addrem_ptr[0]->NEXT[0] addrem_ptr[0]->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NEXT->NODE_PTR->PCOORD addrem_ptr[0]->NEXT->NODE_PTR->QCOORD addrem_ptr[0]->NEXT->NODE_PTR->THEA addrem_ptr[0]->NEXT->NODE_PTR->PHEA addrem_ptr[0]->NEXT->NODE_PTR->PSEA addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NEXT->NODE_PTR->NEXT addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0] addrem_ptr[0]->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT[0] addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(addrem_ptr) orig(addrem_ptr[0]) orig(addrem_ptr[0][0]) orig(addrem_ptr[0]->ADDREM_TYPE) orig(addrem_ptr[0]->BLOCK_TYPE) orig(addrem_ptr[0]->NODE_PTR) orig(addrem_ptr[0]->NODE_PTR[0]) orig(addrem_ptr[0]->NODE_PTR->OMIT_ORIENT) orig(addrem_ptr[0]->NODE_PTR->PCOORD) orig(addrem_ptr[0]->NODE_PTR->QCOORD) orig(addrem_ptr[0]->NODE_PTR->THEA) orig(addrem_ptr[0]->NODE_PTR->PHEA) orig(addrem_ptr[0]->NODE_PTR->PSEA) orig(addrem_ptr[0]->NODE_PTR->ANGLE_UNIT) orig(addrem_ptr[0]->NODE_PTR->NEXT) orig(addrem_ptr[0]->NODE_PTR->NEXT[0]) orig(addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT) orig(addrem_ptr[0]->NODE_PTR->NEXT->PCOORD) orig(addrem_ptr[0]->NODE_PTR->NEXT->QCOORD) orig(addrem_ptr[0]->NODE_PTR->NEXT->THEA) orig(addrem_ptr[0]->NODE_PTR->NEXT->PHEA) orig(addrem_ptr[0]->NODE_PTR->NEXT->PSEA) orig(addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT) orig(addrem_ptr[0]->NODE_PTR->NEXT->NEXT) orig(addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0]) orig(addrem_ptr[0]->NEXT) orig(addrem_ptr[0]->NEXT[0]) orig(addrem_ptr[0]->NEXT->ADDREM_TYPE) orig(addrem_ptr[0]->NEXT->BLOCK_TYPE) orig(addrem_ptr[0]->NEXT->NODE_PTR) orig(addrem_ptr[0]->NEXT->NODE_PTR[0]) orig(addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT) orig(addrem_ptr[0]->NEXT->NODE_PTR->PCOORD) orig(addrem_ptr[0]->NEXT->NODE_PTR->QCOORD) orig(addrem_ptr[0]->NEXT->NODE_PTR->THEA) orig(addrem_ptr[0]->NEXT->NODE_PTR->PHEA) orig(addrem_ptr[0]->NEXT->NODE_PTR->PSEA) orig(addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT) orig(addrem_ptr[0]->NEXT->NODE_PTR->NEXT) orig(addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0]) orig(addrem_ptr[0]->NEXT->NEXT) orig(addrem_ptr[0]->NEXT->NEXT[0]) orig(addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE) orig(addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE) orig(addrem_ptr[0]->NEXT->NEXT->NODE_PTR) orig(addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0]) orig(addrem_ptr[0]->NEXT->NEXT->NEXT) orig(addrem_ptr[0]->NEXT->NEXT->NEXT[0])
assignable addrem_ptr[0], addrem_ptr[0][0], addrem_ptr[0]->ADDREM_TYPE, addrem_ptr[0]->BLOCK_TYPE, addrem_ptr[0]->NODE_PTR, addrem_ptr[0]->NODE_PTR[0], addrem_ptr[0]->NODE_PTR->OMIT_ORIENT, addrem_ptr[0]->NODE_PTR->PCOORD, addrem_ptr[0]->NODE_PTR->QCOORD, addrem_ptr[0]->NODE_PTR->THEA, addrem_ptr[0]->NODE_PTR->PHEA, addrem_ptr[0]->NODE_PTR->PSEA, addrem_ptr[0]->NODE_PTR->ANGLE_UNIT, addrem_ptr[0]->NODE_PTR->NEXT, addrem_ptr[0]->NODE_PTR->NEXT[0], addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT, addrem_ptr[0]->NODE_PTR->NEXT->PCOORD, addrem_ptr[0]->NODE_PTR->NEXT->QCOORD, addrem_ptr[0]->NODE_PTR->NEXT->THEA, addrem_ptr[0]->NODE_PTR->NEXT->PHEA, addrem_ptr[0]->NODE_PTR->NEXT->PSEA, addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT, addrem_ptr[0]->NODE_PTR->NEXT->NEXT, addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0], addrem_ptr[0]->NEXT, addrem_ptr[0]->NEXT[0], addrem_ptr[0]->NEXT->ADDREM_TYPE, addrem_ptr[0]->NEXT->BLOCK_TYPE, addrem_ptr[0]->NEXT->NODE_PTR, addrem_ptr[0]->NEXT->NODE_PTR[0], addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT, addrem_ptr[0]->NEXT->NODE_PTR->PCOORD, addrem_ptr[0]->NEXT->NODE_PTR->QCOORD, addrem_ptr[0]->NEXT->NODE_PTR->THEA, addrem_ptr[0]->NEXT->NODE_PTR->PHEA, addrem_ptr[0]->NEXT->NODE_PTR->PSEA, addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT, addrem_ptr[0]->NEXT->NODE_PTR->NEXT, addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0], addrem_ptr[0]->NEXT->NEXT, addrem_ptr[0]->NEXT->NEXT[0], addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE, addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE, addrem_ptr[0]->NEXT->NEXT->NODE_PTR, addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0], addrem_ptr[0]->NEXT->NEXT->NEXT, addrem_ptr[0]->NEXT->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == pp2.[0].info
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(addrem_ptr.[0].NODE_PTR.PCOORD)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == pp2.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].NEXT.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0] == \old(p1)
pp2.[0] == \old(p1.PREV.NEXT)
pp2.[0] == \old(pp2.[0])
pp2.[0] == \old(pp2.[0].PREV.NEXT)
addrem_ptr.[0] == \old(addrem_ptr.[0].NEXT)
return == \old(addrem_ptr.[0].NODE_PTR.QCOORD)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 9
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 49
p1.PREV.PREV.LINE_NUM == 7
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
addrem_ptr.[0] == null
return == 1
===========================================================================
..ampunit():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME tp tp[0] tp[0][0] tp[0]->info tp[0]->LINE_NUM tp[0]->PREV tp[0]->PREV[0] tp[0]->PREV->info tp[0]->PREV->LINE_NUM tp[0]->PREV->PREV tp[0]->PREV->PREV[0] tp[0]->PREV->PREV->info tp[0]->PREV->PREV->LINE_NUM tp[0]->PREV->PREV->PREV tp[0]->PREV->PREV->PREV[0] tp[0]->PREV->PREV->NEXT tp[0]->PREV->PREV->NEXT[0] tp[0]->PREV->NEXT tp[0]->PREV->NEXT[0] tp[0]->NEXT tp[0]->NEXT[0] unit_ptr unit_ptr[0]
tp.[0] == tp.[0].PREV.NEXT
tp.[0].[0] == tp.[0].PREV.NEXT.[0]
tp.[0].LINE_NUM == tp.[0].PREV.LINE_NUM
tp.[0].PREV == tp.[0].PREV.PREV.NEXT
tp.[0].PREV.[0] == tp.[0].PREV.PREV.NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
tp != null
tp.[0] != null
tp.[0].[0] != null
tp.[0].info == 80
tp.[0].LINE_NUM == 11
tp.[0].PREV != null
tp.[0].PREV.[0] != null
tp.[0].PREV.info == 32
tp.[0].PREV.PREV != null
tp.[0].PREV.PREV.[0] != null
tp.[0].PREV.PREV.info == 53
tp.[0].PREV.PREV.LINE_NUM == 10
tp.[0].PREV.PREV.PREV != null
tp.[0].PREV.PREV.PREV.[0] != null
tp.[0].NEXT != null
tp.[0].NEXT.[0] != null
unit_ptr != null
===========================================================================
..ampunit():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME tp tp[0] tp[0][0] tp[0]->info tp[0]->LINE_NUM tp[0]->PREV tp[0]->PREV[0] tp[0]->PREV->info tp[0]->PREV->LINE_NUM tp[0]->PREV->PREV tp[0]->PREV->PREV[0] tp[0]->PREV->PREV->info tp[0]->PREV->PREV->LINE_NUM tp[0]->PREV->PREV->PREV tp[0]->PREV->PREV->PREV[0] tp[0]->PREV->PREV->NEXT tp[0]->PREV->PREV->NEXT[0] tp[0]->PREV->NEXT tp[0]->PREV->NEXT[0] tp[0]->NEXT tp[0]->NEXT[0] unit_ptr unit_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(tp) orig(tp[0]) orig(tp[0][0]) orig(tp[0]->info) orig(tp[0]->LINE_NUM) orig(tp[0]->PREV) orig(tp[0]->PREV[0]) orig(tp[0]->PREV->info) orig(tp[0]->PREV->LINE_NUM) orig(tp[0]->PREV->PREV) orig(tp[0]->PREV->PREV[0]) orig(tp[0]->PREV->PREV->info) orig(tp[0]->PREV->PREV->LINE_NUM) orig(tp[0]->PREV->PREV->PREV) orig(tp[0]->PREV->PREV->PREV[0]) orig(tp[0]->PREV->PREV->NEXT) orig(tp[0]->PREV->PREV->NEXT[0]) orig(tp[0]->PREV->NEXT) orig(tp[0]->PREV->NEXT[0]) orig(tp[0]->NEXT) orig(tp[0]->NEXT[0]) orig(unit_ptr) orig(unit_ptr[0])
assignable unit_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
tp.[0] == tp.[0].PREV.NEXT
tp.[0] == \old(tp.[0])
tp.[0] == \old(tp.[0].PREV.NEXT)
tp.[0].[0] == tp.[0].PREV.NEXT.[0]
tp.[0].[0] == \old(tp.[0].[0])
tp.[0].[0] == \old(tp.[0].PREV.NEXT.[0])
tp.[0].info == \old(tp.[0].info)
tp.[0].LINE_NUM == tp.[0].PREV.LINE_NUM
tp.[0].LINE_NUM == \old(tp.[0].LINE_NUM)
tp.[0].LINE_NUM == \old(tp.[0].PREV.LINE_NUM)
tp.[0].PREV == tp.[0].PREV.PREV.NEXT
tp.[0].PREV == \old(tp.[0].PREV)
tp.[0].PREV == \old(tp.[0].PREV.PREV.NEXT)
tp.[0].PREV.[0] == tp.[0].PREV.PREV.NEXT.[0]
tp.[0].PREV.[0] == \old(tp.[0].PREV.[0])
tp.[0].PREV.[0] == \old(tp.[0].PREV.PREV.NEXT.[0])
tp.[0].PREV.info == \old(tp.[0].PREV.info)
tp.[0].PREV.PREV == \old(tp.[0].PREV.PREV)
tp.[0].PREV.PREV.[0] == \old(tp.[0].PREV.PREV.[0])
tp.[0].PREV.PREV.info == \old(tp.[0].PREV.PREV.info)
tp.[0].PREV.PREV.LINE_NUM == \old(tp.[0].PREV.PREV.LINE_NUM)
tp.[0].PREV.PREV.PREV == \old(tp.[0].PREV.PREV.PREV)
tp.[0].PREV.PREV.PREV.[0] == \old(tp.[0].PREV.PREV.PREV.[0])
tp.[0].NEXT == \old(tp.[0].NEXT)
tp.[0].NEXT.[0] == \old(tp.[0].NEXT.[0])
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
tp.[0] != null
tp.[0].[0] != null
tp.[0].info == 80
tp.[0].LINE_NUM == 11
tp.[0].PREV != null
tp.[0].PREV.[0] != null
tp.[0].PREV.info == 32
tp.[0].PREV.PREV != null
tp.[0].PREV.PREV.[0] != null
tp.[0].PREV.PREV.info == 53
tp.[0].PREV.PREV.LINE_NUM == 10
tp.[0].PREV.PREV.PREV != null
tp.[0].PREV.PREV.PREV.[0] != null
tp.[0].NEXT != null
tp.[0].NEXT.[0] != null
unit_ptr.[0] == 0
return == 1
===========================================================================
..ampval():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] amp_ptr amp_ptr[0] amp_unit_ptr amp_unit_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 50
p1.LINE_NUM == 10
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 76
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
amp_ptr != null
amp_unit_ptr != null
===========================================================================
..ampval():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] amp_ptr amp_ptr[0] amp_unit_ptr amp_unit_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(amp_ptr) orig(amp_ptr[0]) orig(amp_unit_ptr) orig(amp_unit_ptr[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], amp_ptr[0], amp_unit_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == pp2.[0].PREV.PREV
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].PREV.PREV.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
pp2.[0].PREV.PREV.PREV == \old(p1)
amp_unit_ptr.[0] == return
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 50
p1.LINE_NUM == 10
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 76
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 80
pp2.[0].LINE_NUM == 11
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV.info == 53
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
daikon.Quant.fuzzy.eq(amp_ptr.[0], 25.0)
return == 0
===========================================================================
..angunit():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] angle_unit_ptr angle_unit_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 69
p1.LINE_NUM == 12
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 57
p1.PREV.PREV.LINE_NUM == 11
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
angle_unit_ptr != null
===========================================================================
..angunit():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] angle_unit_ptr angle_unit_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(angle_unit_ptr) orig(angle_unit_ptr[0])
assignable angle_unit_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == pp2.[0].info
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == pp2.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].NEXT.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0] == \old(p1)
pp2.[0] == \old(p1.PREV.NEXT)
pp2.[0] == \old(pp2.[0])
pp2.[0] == \old(pp2.[0].PREV.NEXT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 69
p1.LINE_NUM == 12
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 57
p1.PREV.PREV.LINE_NUM == 11
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
angle_unit_ptr.[0] == 0
return == 20
===========================================================================
..angval():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] angle_ptr angle_ptr[0] angle_unit_ptr angle_unit_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 45
p1.LINE_NUM == 11
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 77
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
angle_ptr != null
angle_unit_ptr != null
===========================================================================
..angval():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] angle_ptr angle_ptr[0] angle_unit_ptr angle_unit_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(angle_ptr) orig(angle_ptr[0]) orig(angle_unit_ptr) orig(angle_unit_ptr[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], angle_ptr[0], angle_unit_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
angle_unit_ptr.[0] == return
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 45
p1.LINE_NUM == 11
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 77
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 69
pp2.[0].LINE_NUM == 12
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 57
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
daikon.Quant.fuzzy.eq(angle_ptr.[0], -219.0)
return == 0
===========================================================================
..blockdef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] node_ptr node_ptr[0] node_ptr[0][0] node_ptr[0]->OMIT_ORIENT node_ptr[0]->PCOORD node_ptr[0]->QCOORD node_ptr[0]->THEA node_ptr[0]->PHEA node_ptr[0]->PSEA node_ptr[0]->ANGLE_UNIT node_ptr[0]->NEXT node_ptr[0]->NEXT[0] node_ptr[0]->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->PCOORD node_ptr[0]->NEXT->QCOORD node_ptr[0]->NEXT->THEA node_ptr[0]->NEXT->PHEA node_ptr[0]->NEXT->PSEA node_ptr[0]->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT node_ptr[0]->NEXT->NEXT[0] node_ptr[0]->NEXT->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->NEXT->PCOORD node_ptr[0]->NEXT->NEXT->QCOORD node_ptr[0]->NEXT->NEXT->THEA node_ptr[0]->NEXT->NEXT->PHEA node_ptr[0]->NEXT->NEXT->PSEA node_ptr[0]->NEXT->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT->NEXT node_ptr[0]->NEXT->NEXT->NEXT[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 72
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 68
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
node_ptr != null
node_ptr.[0] == null
===========================================================================
..blockdef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] node_ptr node_ptr[0] node_ptr[0][0] node_ptr[0]->OMIT_ORIENT node_ptr[0]->PCOORD node_ptr[0]->QCOORD node_ptr[0]->THEA node_ptr[0]->PHEA node_ptr[0]->PSEA node_ptr[0]->ANGLE_UNIT node_ptr[0]->NEXT node_ptr[0]->NEXT[0] node_ptr[0]->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->PCOORD node_ptr[0]->NEXT->QCOORD node_ptr[0]->NEXT->THEA node_ptr[0]->NEXT->PHEA node_ptr[0]->NEXT->PSEA node_ptr[0]->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT node_ptr[0]->NEXT->NEXT[0] node_ptr[0]->NEXT->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->NEXT->PCOORD node_ptr[0]->NEXT->NEXT->QCOORD node_ptr[0]->NEXT->NEXT->THEA node_ptr[0]->NEXT->NEXT->PHEA node_ptr[0]->NEXT->NEXT->PSEA node_ptr[0]->NEXT->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT->NEXT node_ptr[0]->NEXT->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(node_ptr) orig(node_ptr[0]) orig(node_ptr[0][0]) orig(node_ptr[0]->OMIT_ORIENT) orig(node_ptr[0]->PCOORD) orig(node_ptr[0]->QCOORD) orig(node_ptr[0]->THEA) orig(node_ptr[0]->PHEA) orig(node_ptr[0]->PSEA) orig(node_ptr[0]->ANGLE_UNIT) orig(node_ptr[0]->NEXT) orig(node_ptr[0]->NEXT[0]) orig(node_ptr[0]->NEXT->OMIT_ORIENT) orig(node_ptr[0]->NEXT->PCOORD) orig(node_ptr[0]->NEXT->QCOORD) orig(node_ptr[0]->NEXT->THEA) orig(node_ptr[0]->NEXT->PHEA) orig(node_ptr[0]->NEXT->PSEA) orig(node_ptr[0]->NEXT->ANGLE_UNIT) orig(node_ptr[0]->NEXT->NEXT) orig(node_ptr[0]->NEXT->NEXT[0]) orig(node_ptr[0]->NEXT->NEXT->OMIT_ORIENT) orig(node_ptr[0]->NEXT->NEXT->PCOORD) orig(node_ptr[0]->NEXT->NEXT->QCOORD) orig(node_ptr[0]->NEXT->NEXT->THEA) orig(node_ptr[0]->NEXT->NEXT->PHEA) orig(node_ptr[0]->NEXT->NEXT->PSEA) orig(node_ptr[0]->NEXT->NEXT->ANGLE_UNIT) orig(node_ptr[0]->NEXT->NEXT->NEXT) orig(node_ptr[0]->NEXT->NEXT->NEXT[0])
assignable node_ptr[0][0], node_ptr[0]->OMIT_ORIENT, node_ptr[0]->PCOORD, node_ptr[0]->QCOORD, node_ptr[0]->THEA, node_ptr[0]->PHEA, node_ptr[0]->PSEA, node_ptr[0]->ANGLE_UNIT, node_ptr[0]->NEXT, node_ptr[0]->NEXT[0], node_ptr[0]->NEXT->OMIT_ORIENT, node_ptr[0]->NEXT->PCOORD, node_ptr[0]->NEXT->QCOORD, node_ptr[0]->NEXT->THEA, node_ptr[0]->NEXT->PHEA, node_ptr[0]->NEXT->PSEA, node_ptr[0]->NEXT->ANGLE_UNIT, node_ptr[0]->NEXT->NEXT, node_ptr[0]->NEXT->NEXT[0], node_ptr[0]->NEXT->NEXT->OMIT_ORIENT, node_ptr[0]->NEXT->NEXT->PCOORD, node_ptr[0]->NEXT->NEXT->QCOORD, node_ptr[0]->NEXT->NEXT->THEA, node_ptr[0]->NEXT->NEXT->PHEA, node_ptr[0]->NEXT->NEXT->PSEA, node_ptr[0]->NEXT->NEXT->ANGLE_UNIT, node_ptr[0]->NEXT->NEXT->NEXT, node_ptr[0]->NEXT->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == pp2.[0].info
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == pp2.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].NEXT.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0] == \old(p1)
pp2.[0] == \old(p1.PREV.NEXT)
pp2.[0] == \old(pp2.[0])
pp2.[0] == \old(pp2.[0].PREV.NEXT)
node_ptr.[0] == \old(node_ptr.[0])
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 72
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 68
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
node_ptr.[0] == null
return == 1
===========================================================================
..circspec():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] radius_ptr radius_ptr[0] radius_unit_ptr radius_unit_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 67
p1.LINE_NUM == 5
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 89
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
radius_ptr != null
radius_unit_ptr != null
===========================================================================
..circspec():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] radius_ptr radius_ptr[0] radius_unit_ptr radius_unit_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(radius_ptr) orig(radius_ptr[0]) orig(radius_unit_ptr) orig(radius_unit_ptr[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], radius_ptr[0], radius_unit_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
radius_unit_ptr.[0] == return
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 67
p1.LINE_NUM == 5
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 89
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 65
pp2.[0].LINE_NUM == 7
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 51
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
daikon.Quant.fuzzy.eq(radius_ptr.[0], 43.0)
return == 0
===========================================================================
..dcos():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME x
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
daikon.Quant.fuzzy.eq(x, 60.0)
::UserNames.compareTo(::Keywords) > 0
::UserNames.compareTo(::ErrorMessages) > 0
::UserNames.compareTo(::MOSErrors) > 0
::UserNames.compareTo(::GLOBLE_FILENAME) > 0
::Keywords.compareTo(::ErrorMessages) > 0
::Keywords.compareTo(::MOSErrors) > 0
::Keywords.compareTo(::GLOBLE_FILENAME) < 0
::ErrorMessages.compareTo(::MOSErrors) > 0
::ErrorMessages.compareTo(::GLOBLE_FILENAME) < 0
::MOSErrors.compareTo(::GLOBLE_FILENAME) < 0
===========================================================================
..dcos():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME x return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(x)
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
daikon.Quant.fuzzy.eq(return, 0.4999999998815835)
::UserNames.compareTo(::Keywords) > 0
::UserNames.compareTo(::ErrorMessages) > 0
::UserNames.compareTo(::MOSErrors) > 0
::UserNames.compareTo(::GLOBLE_FILENAME) > 0
::Keywords.compareTo(::ErrorMessages) > 0
::Keywords.compareTo(::MOSErrors) > 0
::Keywords.compareTo(::GLOBLE_FILENAME) < 0
::ErrorMessages.compareTo(::MOSErrors) > 0
::ErrorMessages.compareTo(::GLOBLE_FILENAME) < 0
::MOSErrors.compareTo(::GLOBLE_FILENAME) < 0
===========================================================================
..degconv():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME x_ptr x_ptr[0] unit
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
daikon.Quant.fuzzy.eq(x_ptr.[0], -219.0) || daikon.Quant.fuzzy.eq(x_ptr.[0], 0.0) || daikon.Quant.fuzzy.eq(x_ptr.[0], 90.0)
unit == 0
===========================================================================
..degconv():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME x_ptr x_ptr[0] unit return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(x_ptr) orig(x_ptr[0]) orig(unit)
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
daikon.Quant.fuzzy.eq(x_ptr.[0], \old(x_ptr.[0]))
return == \old(unit)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
daikon.Quant.fuzzy.eq(x_ptr.[0], -219.0) || daikon.Quant.fuzzy.eq(x_ptr.[0], 0.0) || daikon.Quant.fuzzy.eq(x_ptr.[0], 90.0)
return == 0
===========================================================================
..dsin():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME x
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
daikon.Quant.fuzzy.eq(x, 60.0)
::UserNames.compareTo(::Keywords) > 0
::UserNames.compareTo(::ErrorMessages) > 0
::UserNames.compareTo(::MOSErrors) > 0
::UserNames.compareTo(::GLOBLE_FILENAME) > 0
::Keywords.compareTo(::ErrorMessages) > 0
::Keywords.compareTo(::MOSErrors) > 0
::Keywords.compareTo(::GLOBLE_FILENAME) < 0
::ErrorMessages.compareTo(::MOSErrors) > 0
::ErrorMessages.compareTo(::GLOBLE_FILENAME) < 0
::MOSErrors.compareTo(::GLOBLE_FILENAME) < 0
===========================================================================
..dsin():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME x return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(x)
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
daikon.Quant.fuzzy.eq(return, 0.8660254038528064)
::UserNames.compareTo(::Keywords) > 0
::UserNames.compareTo(::ErrorMessages) > 0
::UserNames.compareTo(::MOSErrors) > 0
::UserNames.compareTo(::GLOBLE_FILENAME) > 0
::Keywords.compareTo(::ErrorMessages) > 0
::Keywords.compareTo(::MOSErrors) > 0
::Keywords.compareTo(::GLOBLE_FILENAME) < 0
::ErrorMessages.compareTo(::MOSErrors) > 0
::ErrorMessages.compareTo(::GLOBLE_FILENAME) < 0
::MOSErrors.compareTo(::GLOBLE_FILENAME) < 0
===========================================================================
..elemdef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] elem_ptr elem_ptr[0] elem_ptr[0][0] elem_ptr[0]->TYPE elem_ptr[0]->NAME elem_ptr[0]->LEVEL elem_ptr[0]->GEOMETRY elem_ptr[0]->RADIUS elem_ptr[0]->RADIUS_UNIT elem_ptr[0]->PDIM elem_ptr[0]->QDIM elem_ptr[0]->PQDIM_UNIT elem_ptr[0]->MODEL elem_ptr[0]->EXP elem_ptr[0]->ANGLEE elem_ptr[0]->ANGLEH elem_ptr[0]->ANGLE_UNIT elem_ptr[0]->TAPERE elem_ptr[0]->TAPERH elem_ptr[0]->TAPER_UNIT elem_ptr[0]->POLARIZATION elem_ptr[0]->PHEPOL elem_ptr[0]->PHEPOL_UNIT elem_ptr[0]->DIRECTION elem_ptr[0]->GAIN elem_ptr[0]->GAIN_UNIT elem_ptr[0]->NPORTS elem_ptr[0]->PORT_PTR elem_ptr[0]->PORT_PTR[0] elem_ptr[0]->PORT_PTR->PORTNUM elem_ptr[0]->PORT_PTR->AMP elem_ptr[0]->PORT_PTR->AMP_UNIT elem_ptr[0]->PORT_PTR->PSC elem_ptr[0]->PORT_PTR->PSC_UNIT elem_ptr[0]->PORT_PTR->PSH elem_ptr[0]->PORT_PTR->PSH_UNIT elem_ptr[0]->PORT_PTR->PPA elem_ptr[0]->PORT_PTR->PPA_UNIT elem_ptr[0]->PORT_PTR->PHEPOL elem_ptr[0]->PORT_PTR->PHEPOL_UNIT elem_ptr[0]->PORT_PTR->OMIT_POL elem_ptr[0]->PORT_PTR->NEXT elem_ptr[0]->PORT_PTR->NEXT[0] elem_ptr[0]->PORT_PTR->NEXT->PORTNUM elem_ptr[0]->PORT_PTR->NEXT->AMP elem_ptr[0]->PORT_PTR->NEXT->AMP_UNIT elem_ptr[0]->PORT_PTR->NEXT->PSC elem_ptr[0]->PORT_PTR->NEXT->PSC_UNIT elem_ptr[0]->PORT_PTR->NEXT->PSH elem_ptr[0]->PORT_PTR->NEXT->PSH_UNIT elem_ptr[0]->PORT_PTR->NEXT->PPA elem_ptr[0]->PORT_PTR->NEXT->PPA_UNIT elem_ptr[0]->PORT_PTR->NEXT->PHEPOL elem_ptr[0]->PORT_PTR->NEXT->PHEPOL_UNIT elem_ptr[0]->PORT_PTR->NEXT->OMIT_POL elem_ptr[0]->PORT_PTR->NEXT->NEXT elem_ptr[0]->PORT_PTR->NEXT->NEXT[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 69
p1.LINE_NUM == 4
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 76
p1.PREV.PREV.LINE_NUM == 3
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
elem_ptr != null
elem_ptr.[0] == null
===========================================================================
..elemdef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] elem_ptr elem_ptr[0] elem_ptr[0][0] elem_ptr[0]->TYPE elem_ptr[0]->NAME elem_ptr[0]->LEVEL elem_ptr[0]->GEOMETRY elem_ptr[0]->RADIUS elem_ptr[0]->RADIUS_UNIT elem_ptr[0]->PDIM elem_ptr[0]->QDIM elem_ptr[0]->PQDIM_UNIT elem_ptr[0]->MODEL elem_ptr[0]->EXP elem_ptr[0]->ANGLEE elem_ptr[0]->ANGLEH elem_ptr[0]->ANGLE_UNIT elem_ptr[0]->TAPERE elem_ptr[0]->TAPERH elem_ptr[0]->TAPER_UNIT elem_ptr[0]->POLARIZATION elem_ptr[0]->PHEPOL elem_ptr[0]->PHEPOL_UNIT elem_ptr[0]->DIRECTION elem_ptr[0]->GAIN elem_ptr[0]->GAIN_UNIT elem_ptr[0]->NPORTS elem_ptr[0]->PORT_PTR elem_ptr[0]->PORT_PTR[0] elem_ptr[0]->PORT_PTR->PORTNUM elem_ptr[0]->PORT_PTR->AMP elem_ptr[0]->PORT_PTR->AMP_UNIT elem_ptr[0]->PORT_PTR->PSC elem_ptr[0]->PORT_PTR->PSC_UNIT elem_ptr[0]->PORT_PTR->PSH elem_ptr[0]->PORT_PTR->PSH_UNIT elem_ptr[0]->PORT_PTR->PPA elem_ptr[0]->PORT_PTR->PPA_UNIT elem_ptr[0]->PORT_PTR->PHEPOL elem_ptr[0]->PORT_PTR->PHEPOL_UNIT elem_ptr[0]->PORT_PTR->OMIT_POL elem_ptr[0]->PORT_PTR->NEXT elem_ptr[0]->PORT_PTR->NEXT[0] elem_ptr[0]->PORT_PTR->NEXT->PORTNUM elem_ptr[0]->PORT_PTR->NEXT->AMP elem_ptr[0]->PORT_PTR->NEXT->AMP_UNIT elem_ptr[0]->PORT_PTR->NEXT->PSC elem_ptr[0]->PORT_PTR->NEXT->PSC_UNIT elem_ptr[0]->PORT_PTR->NEXT->PSH elem_ptr[0]->PORT_PTR->NEXT->PSH_UNIT elem_ptr[0]->PORT_PTR->NEXT->PPA elem_ptr[0]->PORT_PTR->NEXT->PPA_UNIT elem_ptr[0]->PORT_PTR->NEXT->PHEPOL elem_ptr[0]->PORT_PTR->NEXT->PHEPOL_UNIT elem_ptr[0]->PORT_PTR->NEXT->OMIT_POL elem_ptr[0]->PORT_PTR->NEXT->NEXT elem_ptr[0]->PORT_PTR->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(elem_ptr) orig(elem_ptr[0]) orig(elem_ptr[0][0]) orig(elem_ptr[0]->TYPE) orig(elem_ptr[0]->NAME) orig(elem_ptr[0]->LEVEL) orig(elem_ptr[0]->GEOMETRY) orig(elem_ptr[0]->RADIUS) orig(elem_ptr[0]->RADIUS_UNIT) orig(elem_ptr[0]->PDIM) orig(elem_ptr[0]->QDIM) orig(elem_ptr[0]->PQDIM_UNIT) orig(elem_ptr[0]->MODEL) orig(elem_ptr[0]->EXP) orig(elem_ptr[0]->ANGLEE) orig(elem_ptr[0]->ANGLEH) orig(elem_ptr[0]->ANGLE_UNIT) orig(elem_ptr[0]->TAPERE) orig(elem_ptr[0]->TAPERH) orig(elem_ptr[0]->TAPER_UNIT) orig(elem_ptr[0]->POLARIZATION) orig(elem_ptr[0]->PHEPOL) orig(elem_ptr[0]->PHEPOL_UNIT) orig(elem_ptr[0]->DIRECTION) orig(elem_ptr[0]->GAIN) orig(elem_ptr[0]->GAIN_UNIT) orig(elem_ptr[0]->NPORTS) orig(elem_ptr[0]->PORT_PTR) orig(elem_ptr[0]->PORT_PTR[0]) orig(elem_ptr[0]->PORT_PTR->PORTNUM) orig(elem_ptr[0]->PORT_PTR->AMP) orig(elem_ptr[0]->PORT_PTR->AMP_UNIT) orig(elem_ptr[0]->PORT_PTR->PSC) orig(elem_ptr[0]->PORT_PTR->PSC_UNIT) orig(elem_ptr[0]->PORT_PTR->PSH) orig(elem_ptr[0]->PORT_PTR->PSH_UNIT) orig(elem_ptr[0]->PORT_PTR->PPA) orig(elem_ptr[0]->PORT_PTR->PPA_UNIT) orig(elem_ptr[0]->PORT_PTR->PHEPOL) orig(elem_ptr[0]->PORT_PTR->PHEPOL_UNIT) orig(elem_ptr[0]->PORT_PTR->OMIT_POL) orig(elem_ptr[0]->PORT_PTR->NEXT) orig(elem_ptr[0]->PORT_PTR->NEXT[0]) orig(elem_ptr[0]->PORT_PTR->NEXT->PORTNUM) orig(elem_ptr[0]->PORT_PTR->NEXT->AMP) orig(elem_ptr[0]->PORT_PTR->NEXT->AMP_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->PSC) orig(elem_ptr[0]->PORT_PTR->NEXT->PSC_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->PSH) orig(elem_ptr[0]->PORT_PTR->NEXT->PSH_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->PPA) orig(elem_ptr[0]->PORT_PTR->NEXT->PPA_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->PHEPOL) orig(elem_ptr[0]->PORT_PTR->NEXT->PHEPOL_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->OMIT_POL) orig(elem_ptr[0]->PORT_PTR->NEXT->NEXT) orig(elem_ptr[0]->PORT_PTR->NEXT->NEXT[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->LINE_NUM, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], elem_ptr[0], elem_ptr[0][0], elem_ptr[0]->TYPE, elem_ptr[0]->NAME, elem_ptr[0]->LEVEL, elem_ptr[0]->GEOMETRY, elem_ptr[0]->RADIUS, elem_ptr[0]->RADIUS_UNIT, elem_ptr[0]->PDIM, elem_ptr[0]->QDIM, elem_ptr[0]->PQDIM_UNIT, elem_ptr[0]->MODEL, elem_ptr[0]->EXP, elem_ptr[0]->ANGLEE, elem_ptr[0]->ANGLEH, elem_ptr[0]->ANGLE_UNIT, elem_ptr[0]->TAPERE, elem_ptr[0]->TAPERH, elem_ptr[0]->TAPER_UNIT, elem_ptr[0]->POLARIZATION, elem_ptr[0]->PHEPOL, elem_ptr[0]->PHEPOL_UNIT, elem_ptr[0]->DIRECTION, elem_ptr[0]->GAIN, elem_ptr[0]->GAIN_UNIT, elem_ptr[0]->NPORTS, elem_ptr[0]->PORT_PTR, elem_ptr[0]->PORT_PTR[0], elem_ptr[0]->PORT_PTR->PORTNUM, elem_ptr[0]->PORT_PTR->AMP, elem_ptr[0]->PORT_PTR->AMP_UNIT, elem_ptr[0]->PORT_PTR->PSC, elem_ptr[0]->PORT_PTR->PSC_UNIT, elem_ptr[0]->PORT_PTR->PSH, elem_ptr[0]->PORT_PTR->PSH_UNIT, elem_ptr[0]->PORT_PTR->PPA, elem_ptr[0]->PORT_PTR->PPA_UNIT, elem_ptr[0]->PORT_PTR->PHEPOL, elem_ptr[0]->PORT_PTR->PHEPOL_UNIT, elem_ptr[0]->PORT_PTR->OMIT_POL, elem_ptr[0]->PORT_PTR->NEXT, elem_ptr[0]->PORT_PTR->NEXT[0], elem_ptr[0]->PORT_PTR->NEXT->PORTNUM, elem_ptr[0]->PORT_PTR->NEXT->AMP, elem_ptr[0]->PORT_PTR->NEXT->AMP_UNIT, elem_ptr[0]->PORT_PTR->NEXT->PSC, elem_ptr[0]->PORT_PTR->NEXT->PSC_UNIT, elem_ptr[0]->PORT_PTR->NEXT->PSH, elem_ptr[0]->PORT_PTR->NEXT->PSH_UNIT, elem_ptr[0]->PORT_PTR->NEXT->PPA, elem_ptr[0]->PORT_PTR->NEXT->PPA_UNIT, elem_ptr[0]->PORT_PTR->NEXT->PHEPOL, elem_ptr[0]->PORT_PTR->NEXT->PHEPOL_UNIT, elem_ptr[0]->PORT_PTR->NEXT->OMIT_POL, elem_ptr[0]->PORT_PTR->NEXT->NEXT, elem_ptr[0]->PORT_PTR->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
elem_ptr.[0].TYPE == return
elem_ptr.[0].RADIUS_UNIT == return
elem_ptr.[0].MODEL == return
elem_ptr.[0].POLARIZATION == return
elem_ptr.[0].PHEPOL_UNIT == return
elem_ptr.[0].DIRECTION == return
elem_ptr.[0].GAIN_UNIT == return
elem_ptr.[0].NPORTS == return
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 69
p1.LINE_NUM == 4
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 76
p1.PREV.PREV.LINE_NUM == 3
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 65
pp2.[0].LINE_NUM == 7
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 51
pp2.[0].PREV.PREV.LINE_NUM == 5
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
elem_ptr.[0] != null
elem_ptr.[0].[0] != null
elem_ptr.[0].NAME.equals("")
elem_ptr.[0].GEOMETRY == 1
daikon.Quant.fuzzy.eq(elem_ptr.[0].RADIUS, 43.0)
daikon.Quant.fuzzy.eq(elem_ptr.[0].PHEPOL, 90.0)
daikon.Quant.fuzzy.eq(elem_ptr.[0].GAIN, 0.0)
elem_ptr.[0].PORT_PTR == null
return == 0
::UserNames.contains(elem_ptr.[0].NAME)
::Keywords.contains(elem_ptr.[0].NAME)
::ErrorMessages.contains(elem_ptr.[0].NAME)
::MOSErrors.contains(elem_ptr.[0].NAME)
::GLOBLE_FILENAME.contains(elem_ptr.[0].NAME)
===========================================================================
..emsginit():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME
::UserNames.equals(::ErrorMessages)
::UserNames.equals(::MOSErrors)
::UserNames.equals("")
::Keywords.equals("PLANE")
::GLOBLE_FILENAME.equals("gr2712")
::Keywords.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..emsginit():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME)
assignable ::ErrorMessages
::UserNames.equals(::MOSErrors)
::UserNames.equals(\old(::UserNames))
::UserNames.equals(\old(::ErrorMessages))
::UserNames.equals(\old(::MOSErrors))
::Keywords.equals(\old(::Keywords))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::GLOBLE_FILENAME.equals("gr2712")
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..fixgramp():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME g g[0] g->TYPE g->UNIF_VAL g->CENTRE g->P1_ET g->P2_ET g->Q1_ET g->Q2_ET g->AMP_UNIT g->PQEXP_PTR g->PQEXP_PTR[0] g->PQEXP_PTR->dummy
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
g != null
g.[0] != null
g.TYPE == 1
daikon.Quant.fuzzy.eq(g.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(g.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(g.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(g.Q1_ET, 34.0)
g.AMP_UNIT == 0
g.PQEXP_PTR == null
===========================================================================
..fixgramp():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME g g[0] g->TYPE g->UNIF_VAL g->CENTRE g->P1_ET g->P2_ET g->Q1_ET g->Q2_ET g->AMP_UNIT g->PQEXP_PTR g->PQEXP_PTR[0] g->PQEXP_PTR->dummy return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(g) orig(g[0]) orig(g->TYPE) orig(g->UNIF_VAL) orig(g->CENTRE) orig(g->P1_ET) orig(g->P2_ET) orig(g->Q1_ET) orig(g->Q2_ET) orig(g->AMP_UNIT) orig(g->PQEXP_PTR) orig(g->PQEXP_PTR[0]) orig(g->PQEXP_PTR->dummy)
assignable g->UNIF_VAL, g->PQEXP_PTR[0], g->PQEXP_PTR->dummy
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
g.[0] == \old(g.[0])
g.TYPE == \old(g.TYPE)
g.AMP_UNIT == return
g.PQEXP_PTR == \old(g.PQEXP_PTR)
return == \old(g.AMP_UNIT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
g.[0] != null
g.TYPE == 1
daikon.Quant.fuzzy.eq(g.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(g.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(g.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(g.Q1_ET, 34.0)
g.PQEXP_PTR == null
return == 0
===========================================================================
..fixgrpha():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME g g[0] g->TYPE g->UNIF_VAL g->CENTRE g->P1_EP g->P2_EP g->Q1_EP g->Q2_EP g->DIRECTION g->OMIT_ANGLE g->ANGLE_START g->ANGLE_STEP g->OMIT_PHASE g->PHASE_START g->PHASE_STEP g->U g->V g->THETA g->PHI g->PQEXP_PTR g->PQEXP_PTR[0] g->PQEXP_PTR->dummy g->ANGLE_UNIT g->PHASE_UNIT
g.TYPE == g.PHASE_UNIT
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
g != null
g.[0] != null
g.TYPE == 0
daikon.Quant.fuzzy.eq(g.UNIF_VAL, -219.0)
g.PQEXP_PTR == null
===========================================================================
..fixgrpha():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME g g[0] g->TYPE g->UNIF_VAL g->CENTRE g->P1_EP g->P2_EP g->Q1_EP g->Q2_EP g->DIRECTION g->OMIT_ANGLE g->ANGLE_START g->ANGLE_STEP g->OMIT_PHASE g->PHASE_START g->PHASE_STEP g->U g->V g->THETA g->PHI g->PQEXP_PTR g->PQEXP_PTR[0] g->PQEXP_PTR->dummy g->ANGLE_UNIT g->PHASE_UNIT return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(g) orig(g[0]) orig(g->TYPE) orig(g->UNIF_VAL) orig(g->CENTRE) orig(g->P1_EP) orig(g->P2_EP) orig(g->Q1_EP) orig(g->Q2_EP) orig(g->DIRECTION) orig(g->OMIT_ANGLE) orig(g->ANGLE_START) orig(g->ANGLE_STEP) orig(g->OMIT_PHASE) orig(g->PHASE_START) orig(g->PHASE_STEP) orig(g->U) orig(g->V) orig(g->THETA) orig(g->PHI) orig(g->PQEXP_PTR) orig(g->PQEXP_PTR[0]) orig(g->PQEXP_PTR->dummy) orig(g->ANGLE_UNIT) orig(g->PHASE_UNIT)
assignable g->CENTRE, g->P1_EP, g->P2_EP, g->Q1_EP, g->Q2_EP, g->DIRECTION, g->OMIT_ANGLE, g->ANGLE_START, g->ANGLE_STEP, g->OMIT_PHASE, g->PHASE_START, g->PHASE_STEP, g->U, g->V, g->THETA, g->PHI, g->PQEXP_PTR[0], g->PQEXP_PTR->dummy, g->ANGLE_UNIT
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
g.[0] == \old(g.[0])
g.TYPE == return
daikon.Quant.fuzzy.eq(g.UNIF_VAL, \old(g.UNIF_VAL))
g.PQEXP_PTR == \old(g.PQEXP_PTR)
g.PHASE_UNIT == return
return == \old(g.TYPE)
return == \old(g.PHASE_UNIT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
g.[0] != null
daikon.Quant.fuzzy.eq(g.UNIF_VAL, -219.0)
g.PQEXP_PTR == null
return == 0
===========================================================================
..fixport():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME elem_ptr elem_ptr[0] elem_ptr->TYPE elem_ptr->NAME elem_ptr->LEVEL elem_ptr->GEOMETRY elem_ptr->RADIUS elem_ptr->RADIUS_UNIT elem_ptr->PDIM elem_ptr->QDIM elem_ptr->PQDIM_UNIT elem_ptr->MODEL elem_ptr->EXP elem_ptr->ANGLEE elem_ptr->ANGLEH elem_ptr->ANGLE_UNIT elem_ptr->TAPERE elem_ptr->TAPERH elem_ptr->TAPER_UNIT elem_ptr->POLARIZATION elem_ptr->PHEPOL elem_ptr->PHEPOL_UNIT elem_ptr->DIRECTION elem_ptr->GAIN elem_ptr->GAIN_UNIT elem_ptr->NPORTS elem_ptr->PORT_PTR elem_ptr->PORT_PTR[0] elem_ptr->PORT_PTR->PORTNUM elem_ptr->PORT_PTR->AMP elem_ptr->PORT_PTR->AMP_UNIT elem_ptr->PORT_PTR->PSC elem_ptr->PORT_PTR->PSC_UNIT elem_ptr->PORT_PTR->PSH elem_ptr->PORT_PTR->PSH_UNIT elem_ptr->PORT_PTR->PPA elem_ptr->PORT_PTR->PPA_UNIT elem_ptr->PORT_PTR->PHEPOL elem_ptr->PORT_PTR->PHEPOL_UNIT elem_ptr->PORT_PTR->OMIT_POL elem_ptr->PORT_PTR->NEXT elem_ptr->PORT_PTR->NEXT[0] elem_ptr->PORT_PTR->NEXT->PORTNUM elem_ptr->PORT_PTR->NEXT->AMP elem_ptr->PORT_PTR->NEXT->AMP_UNIT elem_ptr->PORT_PTR->NEXT->PSC elem_ptr->PORT_PTR->NEXT->PSC_UNIT elem_ptr->PORT_PTR->NEXT->PSH elem_ptr->PORT_PTR->NEXT->PSH_UNIT elem_ptr->PORT_PTR->NEXT->PPA elem_ptr->PORT_PTR->NEXT->PPA_UNIT elem_ptr->PORT_PTR->NEXT->PHEPOL elem_ptr->PORT_PTR->NEXT->PHEPOL_UNIT elem_ptr->PORT_PTR->NEXT->OMIT_POL elem_ptr->PORT_PTR->NEXT->NEXT elem_ptr->PORT_PTR->NEXT->NEXT[0]
elem_ptr.TYPE == elem_ptr.RADIUS_UNIT
elem_ptr.TYPE == elem_ptr.MODEL
elem_ptr.TYPE == elem_ptr.POLARIZATION
elem_ptr.TYPE == elem_ptr.PHEPOL_UNIT
elem_ptr.TYPE == elem_ptr.DIRECTION
elem_ptr.TYPE == elem_ptr.GAIN_UNIT
elem_ptr.TYPE == elem_ptr.PORT_PTR.AMP_UNIT
elem_ptr.TYPE == elem_ptr.PORT_PTR.PSC_UNIT
elem_ptr.TYPE == elem_ptr.PORT_PTR.PSH_UNIT
elem_ptr.TYPE == elem_ptr.PORT_PTR.PPA_UNIT
elem_ptr.TYPE == elem_ptr.PORT_PTR.PHEPOL_UNIT
elem_ptr.LEVEL == elem_ptr.GEOMETRY
elem_ptr.LEVEL == elem_ptr.NPORTS
elem_ptr.LEVEL == elem_ptr.PORT_PTR.PORTNUM
elem_ptr.LEVEL == elem_ptr.PORT_PTR.OMIT_POL
daikon.Quant.fuzzy.eq(elem_ptr.PHEPOL, elem_ptr.PORT_PTR.PHEPOL)
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, elem_ptr.PORT_PTR.PSC)
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, elem_ptr.PORT_PTR.PSH)
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, elem_ptr.PORT_PTR.PPA)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
elem_ptr != null
elem_ptr.[0] != null
elem_ptr.TYPE == 0
elem_ptr.NAME.equals("ELEMENT")
elem_ptr.LEVEL == 1
daikon.Quant.fuzzy.eq(elem_ptr.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(elem_ptr.PHEPOL, 90.0)
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, 0.0)
elem_ptr.PORT_PTR != null
elem_ptr.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(elem_ptr.PORT_PTR.AMP, 1.0)
elem_ptr.PORT_PTR.NEXT == null
===========================================================================
..fixport():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME elem_ptr elem_ptr[0] elem_ptr->TYPE elem_ptr->NAME elem_ptr->LEVEL elem_ptr->GEOMETRY elem_ptr->RADIUS elem_ptr->RADIUS_UNIT elem_ptr->PDIM elem_ptr->QDIM elem_ptr->PQDIM_UNIT elem_ptr->MODEL elem_ptr->EXP elem_ptr->ANGLEE elem_ptr->ANGLEH elem_ptr->ANGLE_UNIT elem_ptr->TAPERE elem_ptr->TAPERH elem_ptr->TAPER_UNIT elem_ptr->POLARIZATION elem_ptr->PHEPOL elem_ptr->PHEPOL_UNIT elem_ptr->DIRECTION elem_ptr->GAIN elem_ptr->GAIN_UNIT elem_ptr->NPORTS elem_ptr->PORT_PTR elem_ptr->PORT_PTR[0] elem_ptr->PORT_PTR->PORTNUM elem_ptr->PORT_PTR->AMP elem_ptr->PORT_PTR->AMP_UNIT elem_ptr->PORT_PTR->PSC elem_ptr->PORT_PTR->PSC_UNIT elem_ptr->PORT_PTR->PSH elem_ptr->PORT_PTR->PSH_UNIT elem_ptr->PORT_PTR->PPA elem_ptr->PORT_PTR->PPA_UNIT elem_ptr->PORT_PTR->PHEPOL elem_ptr->PORT_PTR->PHEPOL_UNIT elem_ptr->PORT_PTR->OMIT_POL elem_ptr->PORT_PTR->NEXT elem_ptr->PORT_PTR->NEXT[0] elem_ptr->PORT_PTR->NEXT->PORTNUM elem_ptr->PORT_PTR->NEXT->AMP elem_ptr->PORT_PTR->NEXT->AMP_UNIT elem_ptr->PORT_PTR->NEXT->PSC elem_ptr->PORT_PTR->NEXT->PSC_UNIT elem_ptr->PORT_PTR->NEXT->PSH elem_ptr->PORT_PTR->NEXT->PSH_UNIT elem_ptr->PORT_PTR->NEXT->PPA elem_ptr->PORT_PTR->NEXT->PPA_UNIT elem_ptr->PORT_PTR->NEXT->PHEPOL elem_ptr->PORT_PTR->NEXT->PHEPOL_UNIT elem_ptr->PORT_PTR->NEXT->OMIT_POL elem_ptr->PORT_PTR->NEXT->NEXT elem_ptr->PORT_PTR->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(elem_ptr) orig(elem_ptr[0]) orig(elem_ptr->TYPE) orig(elem_ptr->NAME) orig(elem_ptr->LEVEL) orig(elem_ptr->GEOMETRY) orig(elem_ptr->RADIUS) orig(elem_ptr->RADIUS_UNIT) orig(elem_ptr->PDIM) orig(elem_ptr->QDIM) orig(elem_ptr->PQDIM_UNIT) orig(elem_ptr->MODEL) orig(elem_ptr->EXP) orig(elem_ptr->ANGLEE) orig(elem_ptr->ANGLEH) orig(elem_ptr->ANGLE_UNIT) orig(elem_ptr->TAPERE) orig(elem_ptr->TAPERH) orig(elem_ptr->TAPER_UNIT) orig(elem_ptr->POLARIZATION) orig(elem_ptr->PHEPOL) orig(elem_ptr->PHEPOL_UNIT) orig(elem_ptr->DIRECTION) orig(elem_ptr->GAIN) orig(elem_ptr->GAIN_UNIT) orig(elem_ptr->NPORTS) orig(elem_ptr->PORT_PTR) orig(elem_ptr->PORT_PTR[0]) orig(elem_ptr->PORT_PTR->PORTNUM) orig(elem_ptr->PORT_PTR->AMP) orig(elem_ptr->PORT_PTR->AMP_UNIT) orig(elem_ptr->PORT_PTR->PSC) orig(elem_ptr->PORT_PTR->PSC_UNIT) orig(elem_ptr->PORT_PTR->PSH) orig(elem_ptr->PORT_PTR->PSH_UNIT) orig(elem_ptr->PORT_PTR->PPA) orig(elem_ptr->PORT_PTR->PPA_UNIT) orig(elem_ptr->PORT_PTR->PHEPOL) orig(elem_ptr->PORT_PTR->PHEPOL_UNIT) orig(elem_ptr->PORT_PTR->OMIT_POL) orig(elem_ptr->PORT_PTR->NEXT) orig(elem_ptr->PORT_PTR->NEXT[0]) orig(elem_ptr->PORT_PTR->NEXT->PORTNUM) orig(elem_ptr->PORT_PTR->NEXT->AMP) orig(elem_ptr->PORT_PTR->NEXT->AMP_UNIT) orig(elem_ptr->PORT_PTR->NEXT->PSC) orig(elem_ptr->PORT_PTR->NEXT->PSC_UNIT) orig(elem_ptr->PORT_PTR->NEXT->PSH) orig(elem_ptr->PORT_PTR->NEXT->PSH_UNIT) orig(elem_ptr->PORT_PTR->NEXT->PPA) orig(elem_ptr->PORT_PTR->NEXT->PPA_UNIT) orig(elem_ptr->PORT_PTR->NEXT->PHEPOL) orig(elem_ptr->PORT_PTR->NEXT->PHEPOL_UNIT) orig(elem_ptr->PORT_PTR->NEXT->OMIT_POL) orig(elem_ptr->PORT_PTR->NEXT->NEXT) orig(elem_ptr->PORT_PTR->NEXT->NEXT[0])
assignable elem_ptr->PDIM, elem_ptr->QDIM, elem_ptr->PQDIM_UNIT, elem_ptr->EXP, elem_ptr->ANGLEE, elem_ptr->ANGLEH, elem_ptr->ANGLE_UNIT, elem_ptr->TAPERE, elem_ptr->TAPERH, elem_ptr->TAPER_UNIT, elem_ptr->PORT_PTR->NEXT[0], elem_ptr->PORT_PTR->NEXT->PORTNUM, elem_ptr->PORT_PTR->NEXT->AMP, elem_ptr->PORT_PTR->NEXT->AMP_UNIT, elem_ptr->PORT_PTR->NEXT->PSC, elem_ptr->PORT_PTR->NEXT->PSC_UNIT, elem_ptr->PORT_PTR->NEXT->PSH, elem_ptr->PORT_PTR->NEXT->PSH_UNIT, elem_ptr->PORT_PTR->NEXT->PPA, elem_ptr->PORT_PTR->NEXT->PPA_UNIT, elem_ptr->PORT_PTR->NEXT->PHEPOL, elem_ptr->PORT_PTR->NEXT->PHEPOL_UNIT, elem_ptr->PORT_PTR->NEXT->OMIT_POL, elem_ptr->PORT_PTR->NEXT->NEXT, elem_ptr->PORT_PTR->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
elem_ptr.[0] == \old(elem_ptr.[0])
elem_ptr.TYPE == return
elem_ptr.NAME.equals(\old(elem_ptr.NAME))
elem_ptr.LEVEL == elem_ptr.GEOMETRY
elem_ptr.LEVEL == elem_ptr.NPORTS
elem_ptr.LEVEL == elem_ptr.PORT_PTR.PORTNUM
elem_ptr.LEVEL == elem_ptr.PORT_PTR.OMIT_POL
elem_ptr.LEVEL == \old(elem_ptr.LEVEL)
elem_ptr.LEVEL == \old(elem_ptr.GEOMETRY)
elem_ptr.LEVEL == \old(elem_ptr.NPORTS)
elem_ptr.LEVEL == \old(elem_ptr.PORT_PTR.PORTNUM)
elem_ptr.LEVEL == \old(elem_ptr.PORT_PTR.OMIT_POL)
daikon.Quant.fuzzy.eq(elem_ptr.RADIUS, \old(elem_ptr.RADIUS))
elem_ptr.RADIUS_UNIT == return
elem_ptr.MODEL == return
elem_ptr.POLARIZATION == return
daikon.Quant.fuzzy.eq(elem_ptr.PHEPOL, elem_ptr.PORT_PTR.PHEPOL)
daikon.Quant.fuzzy.eq(elem_ptr.PHEPOL, \old(elem_ptr.PHEPOL))
daikon.Quant.fuzzy.eq(elem_ptr.PHEPOL, \old(elem_ptr.PORT_PTR.PHEPOL))
elem_ptr.PHEPOL_UNIT == return
elem_ptr.DIRECTION == return
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, elem_ptr.PORT_PTR.PSC)
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, elem_ptr.PORT_PTR.PSH)
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, elem_ptr.PORT_PTR.PPA)
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, \old(elem_ptr.GAIN))
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, \old(elem_ptr.PORT_PTR.PSC))
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, \old(elem_ptr.PORT_PTR.PSH))
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, \old(elem_ptr.PORT_PTR.PPA))
elem_ptr.GAIN_UNIT == return
elem_ptr.PORT_PTR == \old(elem_ptr.PORT_PTR)
elem_ptr.PORT_PTR.[0] == \old(elem_ptr.PORT_PTR.[0])
daikon.Quant.fuzzy.eq(elem_ptr.PORT_PTR.AMP, \old(elem_ptr.PORT_PTR.AMP))
elem_ptr.PORT_PTR.AMP_UNIT == return
elem_ptr.PORT_PTR.PSC_UNIT == return
elem_ptr.PORT_PTR.PSH_UNIT == return
elem_ptr.PORT_PTR.PPA_UNIT == return
elem_ptr.PORT_PTR.PHEPOL_UNIT == return
elem_ptr.PORT_PTR.NEXT == \old(elem_ptr.PORT_PTR.NEXT)
return == \old(elem_ptr.TYPE)
return == \old(elem_ptr.RADIUS_UNIT)
return == \old(elem_ptr.MODEL)
return == \old(elem_ptr.POLARIZATION)
return == \old(elem_ptr.PHEPOL_UNIT)
return == \old(elem_ptr.DIRECTION)
return == \old(elem_ptr.GAIN_UNIT)
return == \old(elem_ptr.PORT_PTR.AMP_UNIT)
return == \old(elem_ptr.PORT_PTR.PSC_UNIT)
return == \old(elem_ptr.PORT_PTR.PSH_UNIT)
return == \old(elem_ptr.PORT_PTR.PPA_UNIT)
return == \old(elem_ptr.PORT_PTR.PHEPOL_UNIT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
elem_ptr.[0] != null
elem_ptr.NAME.equals("ELEMENT")
elem_ptr.LEVEL == 1
daikon.Quant.fuzzy.eq(elem_ptr.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(elem_ptr.PHEPOL, 90.0)
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, 0.0)
elem_ptr.PORT_PTR != null
elem_ptr.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(elem_ptr.PORT_PTR.AMP, 1.0)
elem_ptr.PORT_PTR.NEXT == null
return == 0
===========================================================================
..fixselem():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME elem_ptr elem_ptr[0] elem_ptr->TYPE elem_ptr->NAME elem_ptr->LEVEL elem_ptr->GEOMETRY elem_ptr->RADIUS elem_ptr->RADIUS_UNIT elem_ptr->PDIM elem_ptr->QDIM elem_ptr->PQDIM_UNIT elem_ptr->MODEL elem_ptr->EXP elem_ptr->ANGLEE elem_ptr->ANGLEH elem_ptr->ANGLE_UNIT elem_ptr->TAPERE elem_ptr->TAPERH elem_ptr->TAPER_UNIT elem_ptr->POLARIZATION elem_ptr->PHEPOL elem_ptr->PHEPOL_UNIT elem_ptr->DIRECTION elem_ptr->GAIN elem_ptr->GAIN_UNIT elem_ptr->NPORTS elem_ptr->PORT_PTR elem_ptr->PORT_PTR[0] elem_ptr->PORT_PTR->PORTNUM elem_ptr->PORT_PTR->AMP elem_ptr->PORT_PTR->AMP_UNIT elem_ptr->PORT_PTR->PSC elem_ptr->PORT_PTR->PSC_UNIT elem_ptr->PORT_PTR->PSH elem_ptr->PORT_PTR->PSH_UNIT elem_ptr->PORT_PTR->PPA elem_ptr->PORT_PTR->PPA_UNIT elem_ptr->PORT_PTR->PHEPOL elem_ptr->PORT_PTR->PHEPOL_UNIT elem_ptr->PORT_PTR->OMIT_POL elem_ptr->PORT_PTR->NEXT elem_ptr->PORT_PTR->NEXT[0] elem_ptr->PORT_PTR->NEXT->PORTNUM elem_ptr->PORT_PTR->NEXT->AMP elem_ptr->PORT_PTR->NEXT->AMP_UNIT elem_ptr->PORT_PTR->NEXT->PSC elem_ptr->PORT_PTR->NEXT->PSC_UNIT elem_ptr->PORT_PTR->NEXT->PSH elem_ptr->PORT_PTR->NEXT->PSH_UNIT elem_ptr->PORT_PTR->NEXT->PPA elem_ptr->PORT_PTR->NEXT->PPA_UNIT elem_ptr->PORT_PTR->NEXT->PHEPOL elem_ptr->PORT_PTR->NEXT->PHEPOL_UNIT elem_ptr->PORT_PTR->NEXT->OMIT_POL elem_ptr->PORT_PTR->NEXT->NEXT elem_ptr->PORT_PTR->NEXT->NEXT[0]
elem_ptr.TYPE == elem_ptr.RADIUS_UNIT
elem_ptr.TYPE == elem_ptr.MODEL
elem_ptr.TYPE == elem_ptr.POLARIZATION
elem_ptr.TYPE == elem_ptr.PHEPOL_UNIT
elem_ptr.TYPE == elem_ptr.DIRECTION
elem_ptr.TYPE == elem_ptr.GAIN_UNIT
elem_ptr.TYPE == elem_ptr.NPORTS
elem_ptr.LEVEL == elem_ptr.GEOMETRY
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
elem_ptr != null
elem_ptr.[0] != null
elem_ptr.TYPE == 0
elem_ptr.NAME.equals("ELEMENT")
elem_ptr.LEVEL == 1
daikon.Quant.fuzzy.eq(elem_ptr.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(elem_ptr.PHEPOL, 90.0)
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, 0.0)
elem_ptr.PORT_PTR == null
===========================================================================
..fixselem():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME elem_ptr elem_ptr[0] elem_ptr->TYPE elem_ptr->NAME elem_ptr->LEVEL elem_ptr->GEOMETRY elem_ptr->RADIUS elem_ptr->RADIUS_UNIT elem_ptr->PDIM elem_ptr->QDIM elem_ptr->PQDIM_UNIT elem_ptr->MODEL elem_ptr->EXP elem_ptr->ANGLEE elem_ptr->ANGLEH elem_ptr->ANGLE_UNIT elem_ptr->TAPERE elem_ptr->TAPERH elem_ptr->TAPER_UNIT elem_ptr->POLARIZATION elem_ptr->PHEPOL elem_ptr->PHEPOL_UNIT elem_ptr->DIRECTION elem_ptr->GAIN elem_ptr->GAIN_UNIT elem_ptr->NPORTS elem_ptr->PORT_PTR elem_ptr->PORT_PTR[0] elem_ptr->PORT_PTR->PORTNUM elem_ptr->PORT_PTR->AMP elem_ptr->PORT_PTR->AMP_UNIT elem_ptr->PORT_PTR->PSC elem_ptr->PORT_PTR->PSC_UNIT elem_ptr->PORT_PTR->PSH elem_ptr->PORT_PTR->PSH_UNIT elem_ptr->PORT_PTR->PPA elem_ptr->PORT_PTR->PPA_UNIT elem_ptr->PORT_PTR->PHEPOL elem_ptr->PORT_PTR->PHEPOL_UNIT elem_ptr->PORT_PTR->OMIT_POL elem_ptr->PORT_PTR->NEXT elem_ptr->PORT_PTR->NEXT[0] elem_ptr->PORT_PTR->NEXT->PORTNUM elem_ptr->PORT_PTR->NEXT->AMP elem_ptr->PORT_PTR->NEXT->AMP_UNIT elem_ptr->PORT_PTR->NEXT->PSC elem_ptr->PORT_PTR->NEXT->PSC_UNIT elem_ptr->PORT_PTR->NEXT->PSH elem_ptr->PORT_PTR->NEXT->PSH_UNIT elem_ptr->PORT_PTR->NEXT->PPA elem_ptr->PORT_PTR->NEXT->PPA_UNIT elem_ptr->PORT_PTR->NEXT->PHEPOL elem_ptr->PORT_PTR->NEXT->PHEPOL_UNIT elem_ptr->PORT_PTR->NEXT->OMIT_POL elem_ptr->PORT_PTR->NEXT->NEXT elem_ptr->PORT_PTR->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(elem_ptr) orig(elem_ptr[0]) orig(elem_ptr->TYPE) orig(elem_ptr->NAME) orig(elem_ptr->LEVEL) orig(elem_ptr->GEOMETRY) orig(elem_ptr->RADIUS) orig(elem_ptr->RADIUS_UNIT) orig(elem_ptr->PDIM) orig(elem_ptr->QDIM) orig(elem_ptr->PQDIM_UNIT) orig(elem_ptr->MODEL) orig(elem_ptr->EXP) orig(elem_ptr->ANGLEE) orig(elem_ptr->ANGLEH) orig(elem_ptr->ANGLE_UNIT) orig(elem_ptr->TAPERE) orig(elem_ptr->TAPERH) orig(elem_ptr->TAPER_UNIT) orig(elem_ptr->POLARIZATION) orig(elem_ptr->PHEPOL) orig(elem_ptr->PHEPOL_UNIT) orig(elem_ptr->DIRECTION) orig(elem_ptr->GAIN) orig(elem_ptr->GAIN_UNIT) orig(elem_ptr->NPORTS) orig(elem_ptr->PORT_PTR) orig(elem_ptr->PORT_PTR[0]) orig(elem_ptr->PORT_PTR->PORTNUM) orig(elem_ptr->PORT_PTR->AMP) orig(elem_ptr->PORT_PTR->AMP_UNIT) orig(elem_ptr->PORT_PTR->PSC) orig(elem_ptr->PORT_PTR->PSC_UNIT) orig(elem_ptr->PORT_PTR->PSH) orig(elem_ptr->PORT_PTR->PSH_UNIT) orig(elem_ptr->PORT_PTR->PPA) orig(elem_ptr->PORT_PTR->PPA_UNIT) orig(elem_ptr->PORT_PTR->PHEPOL) orig(elem_ptr->PORT_PTR->PHEPOL_UNIT) orig(elem_ptr->PORT_PTR->OMIT_POL) orig(elem_ptr->PORT_PTR->NEXT) orig(elem_ptr->PORT_PTR->NEXT[0]) orig(elem_ptr->PORT_PTR->NEXT->PORTNUM) orig(elem_ptr->PORT_PTR->NEXT->AMP) orig(elem_ptr->PORT_PTR->NEXT->AMP_UNIT) orig(elem_ptr->PORT_PTR->NEXT->PSC) orig(elem_ptr->PORT_PTR->NEXT->PSC_UNIT) orig(elem_ptr->PORT_PTR->NEXT->PSH) orig(elem_ptr->PORT_PTR->NEXT->PSH_UNIT) orig(elem_ptr->PORT_PTR->NEXT->PPA) orig(elem_ptr->PORT_PTR->NEXT->PPA_UNIT) orig(elem_ptr->PORT_PTR->NEXT->PHEPOL) orig(elem_ptr->PORT_PTR->NEXT->PHEPOL_UNIT) orig(elem_ptr->PORT_PTR->NEXT->OMIT_POL) orig(elem_ptr->PORT_PTR->NEXT->NEXT) orig(elem_ptr->PORT_PTR->NEXT->NEXT[0])
assignable elem_ptr->PDIM, elem_ptr->QDIM, elem_ptr->PQDIM_UNIT, elem_ptr->EXP, elem_ptr->ANGLEE, elem_ptr->ANGLEH, elem_ptr->ANGLE_UNIT, elem_ptr->TAPERE, elem_ptr->TAPERH, elem_ptr->TAPER_UNIT, elem_ptr->NPORTS, elem_ptr->PORT_PTR, elem_ptr->PORT_PTR[0], elem_ptr->PORT_PTR->PORTNUM, elem_ptr->PORT_PTR->AMP, elem_ptr->PORT_PTR->AMP_UNIT, elem_ptr->PORT_PTR->PSC, elem_ptr->PORT_PTR->PSC_UNIT, elem_ptr->PORT_PTR->PSH, elem_ptr->PORT_PTR->PSH_UNIT, elem_ptr->PORT_PTR->PPA, elem_ptr->PORT_PTR->PPA_UNIT, elem_ptr->PORT_PTR->PHEPOL, elem_ptr->PORT_PTR->PHEPOL_UNIT, elem_ptr->PORT_PTR->OMIT_POL, elem_ptr->PORT_PTR->NEXT, elem_ptr->PORT_PTR->NEXT[0], elem_ptr->PORT_PTR->NEXT->PORTNUM, elem_ptr->PORT_PTR->NEXT->AMP, elem_ptr->PORT_PTR->NEXT->AMP_UNIT, elem_ptr->PORT_PTR->NEXT->PSC, elem_ptr->PORT_PTR->NEXT->PSC_UNIT, elem_ptr->PORT_PTR->NEXT->PSH, elem_ptr->PORT_PTR->NEXT->PSH_UNIT, elem_ptr->PORT_PTR->NEXT->PPA, elem_ptr->PORT_PTR->NEXT->PPA_UNIT, elem_ptr->PORT_PTR->NEXT->PHEPOL, elem_ptr->PORT_PTR->NEXT->PHEPOL_UNIT, elem_ptr->PORT_PTR->NEXT->OMIT_POL, elem_ptr->PORT_PTR->NEXT->NEXT, elem_ptr->PORT_PTR->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
elem_ptr.[0] == \old(elem_ptr.[0])
elem_ptr.TYPE == return
elem_ptr.NAME.equals(\old(elem_ptr.NAME))
elem_ptr.LEVEL == elem_ptr.GEOMETRY
elem_ptr.LEVEL == elem_ptr.NPORTS
elem_ptr.LEVEL == elem_ptr.PORT_PTR.PORTNUM
elem_ptr.LEVEL == elem_ptr.PORT_PTR.OMIT_POL
elem_ptr.LEVEL == \old(elem_ptr.LEVEL)
elem_ptr.LEVEL == \old(elem_ptr.GEOMETRY)
daikon.Quant.fuzzy.eq(elem_ptr.RADIUS, \old(elem_ptr.RADIUS))
elem_ptr.RADIUS_UNIT == return
daikon.Quant.fuzzy.eq(elem_ptr.PDIM, elem_ptr.QDIM)
elem_ptr.PQDIM_UNIT == return
elem_ptr.MODEL == return
elem_ptr.POLARIZATION == return
daikon.Quant.fuzzy.eq(elem_ptr.PHEPOL, elem_ptr.PORT_PTR.PHEPOL)
daikon.Quant.fuzzy.eq(elem_ptr.PHEPOL, \old(elem_ptr.PHEPOL))
elem_ptr.PHEPOL_UNIT == return
elem_ptr.DIRECTION == return
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, elem_ptr.PORT_PTR.PSC)
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, elem_ptr.PORT_PTR.PSH)
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, elem_ptr.PORT_PTR.PPA)
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, \old(elem_ptr.GAIN))
elem_ptr.GAIN_UNIT == return
elem_ptr.PORT_PTR.AMP_UNIT == return
elem_ptr.PORT_PTR.PSC_UNIT == return
elem_ptr.PORT_PTR.PSH_UNIT == return
elem_ptr.PORT_PTR.PPA_UNIT == return
elem_ptr.PORT_PTR.PHEPOL_UNIT == return
elem_ptr.PORT_PTR.NEXT == \old(elem_ptr.PORT_PTR)
return == \old(elem_ptr.TYPE)
return == \old(elem_ptr.RADIUS_UNIT)
return == \old(elem_ptr.MODEL)
return == \old(elem_ptr.POLARIZATION)
return == \old(elem_ptr.PHEPOL_UNIT)
return == \old(elem_ptr.DIRECTION)
return == \old(elem_ptr.GAIN_UNIT)
return == \old(elem_ptr.NPORTS)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
elem_ptr.[0] != null
elem_ptr.NAME.equals("ELEMENT")
elem_ptr.LEVEL == 1
daikon.Quant.fuzzy.eq(elem_ptr.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(elem_ptr.PDIM, 86.0)
daikon.Quant.fuzzy.eq(elem_ptr.PHEPOL, 90.0)
daikon.Quant.fuzzy.eq(elem_ptr.GAIN, 0.0)
elem_ptr.PORT_PTR != null
elem_ptr.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(elem_ptr.PORT_PTR.AMP, 1.0)
elem_ptr.PORT_PTR.NEXT == null
return == 0
===========================================================================
..fixsgrel():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME group_ptr group_ptr[0] group_ptr->NAME group_ptr->GRID_PTR group_ptr->GRID_PTR[0] group_ptr->GRID_PTR->NAME group_ptr->GRID_PTR->LEVEL group_ptr->GRID_PTR->TYPE group_ptr->GRID_PTR->ORIENT group_ptr->GRID_PTR->ANGLE group_ptr->GRID_PTR->ANGLE_UNIT group_ptr->GRID_PTR->PSTEP group_ptr->GRID_PTR->QSTEP group_ptr->GRID_PTR->PQSTEP_UNIT group_ptr->GRID_PTR->PX group_ptr->GRID_PTR->PY group_ptr->GRID_PTR->QX group_ptr->GRID_PTR->QY group_ptr->GRID_PTR->PQXY_UNIT group_ptr->GRID_PTR->ROT_ANGLE group_ptr->ELEM_PTR group_ptr->ELEM_PTR[0] group_ptr->ELEM_PTR->TYPE group_ptr->ELEM_PTR->NAME group_ptr->ELEM_PTR->LEVEL group_ptr->ELEM_PTR->GEOMETRY group_ptr->ELEM_PTR->RADIUS group_ptr->ELEM_PTR->RADIUS_UNIT group_ptr->ELEM_PTR->PDIM group_ptr->ELEM_PTR->QDIM group_ptr->ELEM_PTR->PQDIM_UNIT group_ptr->ELEM_PTR->MODEL group_ptr->ELEM_PTR->EXP group_ptr->ELEM_PTR->ANGLEE group_ptr->ELEM_PTR->ANGLEH group_ptr->ELEM_PTR->ANGLE_UNIT group_ptr->ELEM_PTR->TAPERE group_ptr->ELEM_PTR->TAPERH group_ptr->ELEM_PTR->TAPER_UNIT group_ptr->ELEM_PTR->POLARIZATION group_ptr->ELEM_PTR->PHEPOL group_ptr->ELEM_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->DIRECTION group_ptr->ELEM_PTR->GAIN group_ptr->ELEM_PTR->GAIN_UNIT group_ptr->ELEM_PTR->NPORTS group_ptr->ELEM_PTR->PORT_PTR group_ptr->ELEM_PTR->PORT_PTR[0] group_ptr->ELEM_PTR->PORT_PTR->PORTNUM group_ptr->ELEM_PTR->PORT_PTR->AMP group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSC group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSH group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr->ELEM_PTR->PORT_PTR->PPA group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr->ELEM_PTR->PORT_PTR->PHEPOL group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr->ELEM_PTR->PORT_PTR->NEXT group_ptr->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr->ADDREM_PTR group_ptr->ADDREM_PTR[0] group_ptr->ADDREM_PTR->ADDREM_TYPE group_ptr->ADDREM_PTR->BLOCK_TYPE group_ptr->ADDREM_PTR->NODE_PTR group_ptr->ADDREM_PTR->NODE_PTR[0] group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr->ADDREM_PTR->NODE_PTR->PCOORD group_ptr->ADDREM_PTR->NODE_PTR->QCOORD group_ptr->ADDREM_PTR->NODE_PTR->THEA group_ptr->ADDREM_PTR->NODE_PTR->PHEA group_ptr->ADDREM_PTR->NODE_PTR->PSEA group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr->ADDREM_PTR->NODE_PTR->NEXT group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT group_ptr->ADDREM_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr->ADDREM_PTR->NEXT->NODE_PTR group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr->ADDREM_PTR->NEXT->NEXT group_ptr->ADDREM_PTR->NEXT->NEXT[0] group_ptr->GRAMPEXC_PTR group_ptr->GRAMPEXC_PTR[0] group_ptr->GRAMPEXC_PTR->TYPE group_ptr->GRAMPEXC_PTR->UNIF_VAL group_ptr->GRAMPEXC_PTR->CENTRE group_ptr->GRAMPEXC_PTR->P1_ET group_ptr->GRAMPEXC_PTR->P2_ET group_ptr->GRAMPEXC_PTR->Q1_ET group_ptr->GRAMPEXC_PTR->Q2_ET group_ptr->GRAMPEXC_PTR->AMP_UNIT group_ptr->GRAMPEXC_PTR->PQEXP_PTR group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR group_ptr->GRPHAEXC_PTR[0] group_ptr->GRPHAEXC_PTR->TYPE group_ptr->GRPHAEXC_PTR->UNIF_VAL group_ptr->GRPHAEXC_PTR->CENTRE group_ptr->GRPHAEXC_PTR->P1_EP group_ptr->GRPHAEXC_PTR->P2_EP group_ptr->GRPHAEXC_PTR->Q1_EP group_ptr->GRPHAEXC_PTR->Q2_EP group_ptr->GRPHAEXC_PTR->DIRECTION group_ptr->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->GRPHAEXC_PTR->ANGLE_START group_ptr->GRPHAEXC_PTR->ANGLE_STEP group_ptr->GRPHAEXC_PTR->OMIT_PHASE group_ptr->GRPHAEXC_PTR->PHASE_START group_ptr->GRPHAEXC_PTR->PHASE_STEP group_ptr->GRPHAEXC_PTR->U group_ptr->GRPHAEXC_PTR->V group_ptr->GRPHAEXC_PTR->THETA group_ptr->GRPHAEXC_PTR->PHI group_ptr->GRPHAEXC_PTR->PQEXP_PTR group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->GRPHAEXC_PTR->PHASE_UNIT group_ptr->ERR_PTR group_ptr->ERR_PTR[0] group_ptr->ERR_PTR->AMP_TYPE group_ptr->ERR_PTR->AMP_STDEV group_ptr->ERR_PTR->AMP_LINOFFS group_ptr->ERR_PTR->AMP_LINSTEP group_ptr->ERR_PTR->AMP_2NDCENT group_ptr->ERR_PTR->AMP_2NDPET group_ptr->ERR_PTR->AMP_2NDQET group_ptr->ERR_PTR->AMP_UNIT group_ptr->ERR_PTR->PHASE_TYPE group_ptr->ERR_PTR->PHASE_STDEV group_ptr->ERR_PTR->PHASE_LINOFFS group_ptr->ERR_PTR->PHASE_LINSTEP group_ptr->ERR_PTR->PHASE_2NDCENT group_ptr->ERR_PTR->PHASE_2NDPSID group_ptr->ERR_PTR->PHASE_2NDQSID group_ptr->ERR_PTR->PHASE_QUANTSTEP group_ptr->ERR_PTR->PHASE_UNIT group_ptr->FAIL_PTR group_ptr->FAIL_PTR[0] group_ptr->FAIL_PTR->NUM_FAULTY_EL group_ptr->FAIL_PTR->FIXED_AMP group_ptr->FAIL_PTR->FIXED_PHASE group_ptr->NEXT group_ptr->NEXT[0] group_ptr->NEXT->NAME group_ptr->NEXT->GRID_PTR group_ptr->NEXT->GRID_PTR[0] group_ptr->NEXT->GRID_PTR->NAME group_ptr->NEXT->GRID_PTR->LEVEL group_ptr->NEXT->GRID_PTR->TYPE group_ptr->NEXT->GRID_PTR->ORIENT group_ptr->NEXT->GRID_PTR->ANGLE group_ptr->NEXT->GRID_PTR->ANGLE_UNIT group_ptr->NEXT->GRID_PTR->PSTEP group_ptr->NEXT->GRID_PTR->QSTEP group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr->NEXT->GRID_PTR->PX group_ptr->NEXT->GRID_PTR->PY group_ptr->NEXT->GRID_PTR->QX group_ptr->NEXT->GRID_PTR->QY group_ptr->NEXT->GRID_PTR->PQXY_UNIT group_ptr->NEXT->GRID_PTR->ROT_ANGLE group_ptr->NEXT->ELEM_PTR group_ptr->NEXT->ELEM_PTR[0] group_ptr->NEXT->ELEM_PTR->TYPE group_ptr->NEXT->ELEM_PTR->NAME group_ptr->NEXT->ELEM_PTR->LEVEL group_ptr->NEXT->ELEM_PTR->GEOMETRY group_ptr->NEXT->ELEM_PTR->RADIUS group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr->NEXT->ELEM_PTR->PDIM group_ptr->NEXT->ELEM_PTR->QDIM group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr->NEXT->ELEM_PTR->MODEL group_ptr->NEXT->ELEM_PTR->EXP group_ptr->NEXT->ELEM_PTR->ANGLEE group_ptr->NEXT->ELEM_PTR->ANGLEH group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr->NEXT->ELEM_PTR->TAPERE group_ptr->NEXT->ELEM_PTR->TAPERH group_ptr->NEXT->ELEM_PTR->TAPER_UNIT group_ptr->NEXT->ELEM_PTR->POLARIZATION group_ptr->NEXT->ELEM_PTR->PHEPOL group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr->NEXT->ELEM_PTR->DIRECTION group_ptr->NEXT->ELEM_PTR->GAIN group_ptr->NEXT->ELEM_PTR->GAIN_UNIT group_ptr->NEXT->ELEM_PTR->NPORTS group_ptr->NEXT->ELEM_PTR->PORT_PTR group_ptr->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr->NEXT->ADDREM_PTR group_ptr->NEXT->ADDREM_PTR[0] group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr->NEXT->ADDREM_PTR->NODE_PTR group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr->NEXT->ADDREM_PTR->NEXT group_ptr->NEXT->ADDREM_PTR->NEXT[0] group_ptr->NEXT->GRAMPEXC_PTR group_ptr->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->GRAMPEXC_PTR->TYPE group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr->NEXT->GRAMPEXC_PTR->CENTRE group_ptr->NEXT->GRAMPEXC_PTR->P1_ET group_ptr->NEXT->GRAMPEXC_PTR->P2_ET group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR group_ptr->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->TYPE group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr->NEXT->GRPHAEXC_PTR->CENTRE group_ptr->NEXT->GRPHAEXC_PTR->P1_EP group_ptr->NEXT->GRPHAEXC_PTR->P2_EP group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr->NEXT->GRPHAEXC_PTR->U group_ptr->NEXT->GRPHAEXC_PTR->V group_ptr->NEXT->GRPHAEXC_PTR->THETA group_ptr->NEXT->GRPHAEXC_PTR->PHI group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr->NEXT->ERR_PTR group_ptr->NEXT->ERR_PTR[0] group_ptr->NEXT->ERR_PTR->AMP_TYPE group_ptr->NEXT->ERR_PTR->AMP_STDEV group_ptr->NEXT->ERR_PTR->AMP_LINOFFS group_ptr->NEXT->ERR_PTR->AMP_LINSTEP group_ptr->NEXT->ERR_PTR->AMP_2NDCENT group_ptr->NEXT->ERR_PTR->AMP_2NDPET group_ptr->NEXT->ERR_PTR->AMP_2NDQET group_ptr->NEXT->ERR_PTR->AMP_UNIT group_ptr->NEXT->ERR_PTR->PHASE_TYPE group_ptr->NEXT->ERR_PTR->PHASE_STDEV group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr->NEXT->ERR_PTR->PHASE_UNIT group_ptr->NEXT->FAIL_PTR group_ptr->NEXT->FAIL_PTR[0] group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr->NEXT->FAIL_PTR->FIXED_AMP group_ptr->NEXT->FAIL_PTR->FIXED_PHASE group_ptr->NEXT->NEXT group_ptr->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NAME group_ptr->NEXT->NEXT->GRID_PTR group_ptr->NEXT->NEXT->GRID_PTR[0] group_ptr->NEXT->NEXT->ELEM_PTR group_ptr->NEXT->NEXT->ELEM_PTR[0] group_ptr->NEXT->NEXT->ADDREM_PTR group_ptr->NEXT->NEXT->ADDREM_PTR[0] group_ptr->NEXT->NEXT->GRAMPEXC_PTR group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->NEXT->GRPHAEXC_PTR group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->NEXT->ERR_PTR group_ptr->NEXT->NEXT->ERR_PTR[0] group_ptr->NEXT->NEXT->FAIL_PTR group_ptr->NEXT->NEXT->FAIL_PTR[0] group_ptr->NEXT->NEXT->NEXT group_ptr->NEXT->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NUM_OF_NODES group_ptr->NEXT->NEXT->SHAPE group_ptr->NEXT->NEXT->PSIZE group_ptr->NEXT->NEXT->QSIZE group_ptr->NEXT->NEXT->GEOMNODE_PTR group_ptr->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->NEXT->BUILT group_ptr->NEXT->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr->NEXT->NUM_OF_NODES group_ptr->NEXT->SHAPE group_ptr->NEXT->PSIZE group_ptr->NEXT->QSIZE group_ptr->NEXT->GEOMNODE_PTR group_ptr->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->LOC_P group_ptr->NEXT->GEOMNODE_PTR->LOC_Q group_ptr->NEXT->GEOMNODE_PTR->XA group_ptr->NEXT->GEOMNODE_PTR->YA group_ptr->NEXT->GEOMNODE_PTR->ZA group_ptr->NEXT->GEOMNODE_PTR->THEA group_ptr->NEXT->GEOMNODE_PTR->PHEA group_ptr->NEXT->GEOMNODE_PTR->PSEA group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->NEXT group_ptr->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->SHAPE group_ptr->NEXT->GEOMNODE_PTR->PSIZE group_ptr->NEXT->GEOMNODE_PTR->QSIZE group_ptr->NEXT->BUILT group_ptr->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->SUPER_GROUP_PTR[0] group_ptr->NUM_OF_NODES group_ptr->SHAPE group_ptr->PSIZE group_ptr->QSIZE group_ptr->GEOMNODE_PTR group_ptr->GEOMNODE_PTR[0] group_ptr->GEOMNODE_PTR->LOC_P group_ptr->GEOMNODE_PTR->LOC_Q group_ptr->GEOMNODE_PTR->XA group_ptr->GEOMNODE_PTR->YA group_ptr->GEOMNODE_PTR->ZA group_ptr->GEOMNODE_PTR->THEA group_ptr->GEOMNODE_PTR->PHEA group_ptr->GEOMNODE_PTR->PSEA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->NEXT group_ptr->GEOMNODE_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->GEOMNODE_PTR->SHAPE group_ptr->GEOMNODE_PTR->PSIZE group_ptr->GEOMNODE_PTR->QSIZE group_ptr->BUILT group_ptr->SUPER_GROUP_PTR group_ptr->SUPER_GROUP_PTR[0]
::UserNames.equals(group_ptr.NAME)
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.LEVEL
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.GEOMETRY
group_ptr.GRID_PTR.LEVEL == group_ptr.ADDREM_PTR.NODE_PTR.QCOORD
group_ptr.GRID_PTR.LEVEL == group_ptr.GRAMPEXC_PTR.TYPE
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.QSTEP, group_ptr.PSIZE)
group_ptr.GRID_PTR.PQSTEP_UNIT == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.TYPE == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.RADIUS_UNIT == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.MODEL == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.POLARIZATION == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.PHEPOL_UNIT == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.DIRECTION == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.GAIN, group_ptr.PSIZE)
group_ptr.ELEM_PTR.GAIN_UNIT == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.NPORTS == group_ptr.NUM_OF_NODES
group_ptr.ADDREM_PTR.ADDREM_TYPE == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.ADDREM_PTR.NODE_PTR.THEA, group_ptr.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.ADDREM_PTR.NODE_PTR.PHEA, group_ptr.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.ADDREM_PTR.NODE_PTR.PSEA, group_ptr.PSIZE)
group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, group_ptr.GRAMPEXC_PTR.Q2_ET)
group_ptr.GRAMPEXC_PTR.AMP_UNIT == group_ptr.NUM_OF_NODES
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == group_ptr.GRPHAEXC_PTR.PQEXP_PTR
group_ptr.GRPHAEXC_PTR.TYPE == group_ptr.NUM_OF_NODES
group_ptr.GRPHAEXC_PTR.PHASE_UNIT == group_ptr.NUM_OF_NODES
group_ptr.NUM_OF_NODES == group_ptr.SHAPE
group_ptr.NUM_OF_NODES == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, group_ptr.QSIZE)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
group_ptr != null
group_ptr.[0] != null
group_ptr.GRID_PTR != null
group_ptr.GRID_PTR.LEVEL == 1
group_ptr.GRID_PTR.TYPE == 2
group_ptr.ELEM_PTR != null
group_ptr.ELEM_PTR.[0] != null
group_ptr.ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, 90.0)
group_ptr.ELEM_PTR.PORT_PTR == null
group_ptr.ADDREM_PTR != null
group_ptr.ADDREM_PTR.[0] != null
group_ptr.ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.ADDREM_PTR.NODE_PTR != null
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.ADDREM_PTR.NEXT == null
group_ptr.GRAMPEXC_PTR != null
group_ptr.GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.GRPHAEXC_PTR != null
group_ptr.GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.ERR_PTR == null
group_ptr.FAIL_PTR == null
group_ptr.NUM_OF_NODES == 0
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, 0.0)
group_ptr.GEOMNODE_PTR == null
group_ptr.SUPER_GROUP_PTR != null
===========================================================================
..fixsgrel():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME group_ptr group_ptr[0] group_ptr->NAME group_ptr->GRID_PTR group_ptr->GRID_PTR[0] group_ptr->GRID_PTR->NAME group_ptr->GRID_PTR->LEVEL group_ptr->GRID_PTR->TYPE group_ptr->GRID_PTR->ORIENT group_ptr->GRID_PTR->ANGLE group_ptr->GRID_PTR->ANGLE_UNIT group_ptr->GRID_PTR->PSTEP group_ptr->GRID_PTR->QSTEP group_ptr->GRID_PTR->PQSTEP_UNIT group_ptr->GRID_PTR->PX group_ptr->GRID_PTR->PY group_ptr->GRID_PTR->QX group_ptr->GRID_PTR->QY group_ptr->GRID_PTR->PQXY_UNIT group_ptr->GRID_PTR->ROT_ANGLE group_ptr->ELEM_PTR group_ptr->ELEM_PTR[0] group_ptr->ELEM_PTR->TYPE group_ptr->ELEM_PTR->NAME group_ptr->ELEM_PTR->LEVEL group_ptr->ELEM_PTR->GEOMETRY group_ptr->ELEM_PTR->RADIUS group_ptr->ELEM_PTR->RADIUS_UNIT group_ptr->ELEM_PTR->PDIM group_ptr->ELEM_PTR->QDIM group_ptr->ELEM_PTR->PQDIM_UNIT group_ptr->ELEM_PTR->MODEL group_ptr->ELEM_PTR->EXP group_ptr->ELEM_PTR->ANGLEE group_ptr->ELEM_PTR->ANGLEH group_ptr->ELEM_PTR->ANGLE_UNIT group_ptr->ELEM_PTR->TAPERE group_ptr->ELEM_PTR->TAPERH group_ptr->ELEM_PTR->TAPER_UNIT group_ptr->ELEM_PTR->POLARIZATION group_ptr->ELEM_PTR->PHEPOL group_ptr->ELEM_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->DIRECTION group_ptr->ELEM_PTR->GAIN group_ptr->ELEM_PTR->GAIN_UNIT group_ptr->ELEM_PTR->NPORTS group_ptr->ELEM_PTR->PORT_PTR group_ptr->ELEM_PTR->PORT_PTR[0] group_ptr->ELEM_PTR->PORT_PTR->PORTNUM group_ptr->ELEM_PTR->PORT_PTR->AMP group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSC group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSH group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr->ELEM_PTR->PORT_PTR->PPA group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr->ELEM_PTR->PORT_PTR->PHEPOL group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr->ELEM_PTR->PORT_PTR->NEXT group_ptr->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr->ADDREM_PTR group_ptr->ADDREM_PTR[0] group_ptr->ADDREM_PTR->ADDREM_TYPE group_ptr->ADDREM_PTR->BLOCK_TYPE group_ptr->ADDREM_PTR->NODE_PTR group_ptr->ADDREM_PTR->NODE_PTR[0] group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr->ADDREM_PTR->NODE_PTR->PCOORD group_ptr->ADDREM_PTR->NODE_PTR->QCOORD group_ptr->ADDREM_PTR->NODE_PTR->THEA group_ptr->ADDREM_PTR->NODE_PTR->PHEA group_ptr->ADDREM_PTR->NODE_PTR->PSEA group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr->ADDREM_PTR->NODE_PTR->NEXT group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT group_ptr->ADDREM_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr->ADDREM_PTR->NEXT->NODE_PTR group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr->ADDREM_PTR->NEXT->NEXT group_ptr->ADDREM_PTR->NEXT->NEXT[0] group_ptr->GRAMPEXC_PTR group_ptr->GRAMPEXC_PTR[0] group_ptr->GRAMPEXC_PTR->TYPE group_ptr->GRAMPEXC_PTR->UNIF_VAL group_ptr->GRAMPEXC_PTR->CENTRE group_ptr->GRAMPEXC_PTR->P1_ET group_ptr->GRAMPEXC_PTR->P2_ET group_ptr->GRAMPEXC_PTR->Q1_ET group_ptr->GRAMPEXC_PTR->Q2_ET group_ptr->GRAMPEXC_PTR->AMP_UNIT group_ptr->GRAMPEXC_PTR->PQEXP_PTR group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR group_ptr->GRPHAEXC_PTR[0] group_ptr->GRPHAEXC_PTR->TYPE group_ptr->GRPHAEXC_PTR->UNIF_VAL group_ptr->GRPHAEXC_PTR->CENTRE group_ptr->GRPHAEXC_PTR->P1_EP group_ptr->GRPHAEXC_PTR->P2_EP group_ptr->GRPHAEXC_PTR->Q1_EP group_ptr->GRPHAEXC_PTR->Q2_EP group_ptr->GRPHAEXC_PTR->DIRECTION group_ptr->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->GRPHAEXC_PTR->ANGLE_START group_ptr->GRPHAEXC_PTR->ANGLE_STEP group_ptr->GRPHAEXC_PTR->OMIT_PHASE group_ptr->GRPHAEXC_PTR->PHASE_START group_ptr->GRPHAEXC_PTR->PHASE_STEP group_ptr->GRPHAEXC_PTR->U group_ptr->GRPHAEXC_PTR->V group_ptr->GRPHAEXC_PTR->THETA group_ptr->GRPHAEXC_PTR->PHI group_ptr->GRPHAEXC_PTR->PQEXP_PTR group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->GRPHAEXC_PTR->PHASE_UNIT group_ptr->ERR_PTR group_ptr->ERR_PTR[0] group_ptr->ERR_PTR->AMP_TYPE group_ptr->ERR_PTR->AMP_STDEV group_ptr->ERR_PTR->AMP_LINOFFS group_ptr->ERR_PTR->AMP_LINSTEP group_ptr->ERR_PTR->AMP_2NDCENT group_ptr->ERR_PTR->AMP_2NDPET group_ptr->ERR_PTR->AMP_2NDQET group_ptr->ERR_PTR->AMP_UNIT group_ptr->ERR_PTR->PHASE_TYPE group_ptr->ERR_PTR->PHASE_STDEV group_ptr->ERR_PTR->PHASE_LINOFFS group_ptr->ERR_PTR->PHASE_LINSTEP group_ptr->ERR_PTR->PHASE_2NDCENT group_ptr->ERR_PTR->PHASE_2NDPSID group_ptr->ERR_PTR->PHASE_2NDQSID group_ptr->ERR_PTR->PHASE_QUANTSTEP group_ptr->ERR_PTR->PHASE_UNIT group_ptr->FAIL_PTR group_ptr->FAIL_PTR[0] group_ptr->FAIL_PTR->NUM_FAULTY_EL group_ptr->FAIL_PTR->FIXED_AMP group_ptr->FAIL_PTR->FIXED_PHASE group_ptr->NEXT group_ptr->NEXT[0] group_ptr->NEXT->NAME group_ptr->NEXT->GRID_PTR group_ptr->NEXT->GRID_PTR[0] group_ptr->NEXT->GRID_PTR->NAME group_ptr->NEXT->GRID_PTR->LEVEL group_ptr->NEXT->GRID_PTR->TYPE group_ptr->NEXT->GRID_PTR->ORIENT group_ptr->NEXT->GRID_PTR->ANGLE group_ptr->NEXT->GRID_PTR->ANGLE_UNIT group_ptr->NEXT->GRID_PTR->PSTEP group_ptr->NEXT->GRID_PTR->QSTEP group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr->NEXT->GRID_PTR->PX group_ptr->NEXT->GRID_PTR->PY group_ptr->NEXT->GRID_PTR->QX group_ptr->NEXT->GRID_PTR->QY group_ptr->NEXT->GRID_PTR->PQXY_UNIT group_ptr->NEXT->GRID_PTR->ROT_ANGLE group_ptr->NEXT->ELEM_PTR group_ptr->NEXT->ELEM_PTR[0] group_ptr->NEXT->ELEM_PTR->TYPE group_ptr->NEXT->ELEM_PTR->NAME group_ptr->NEXT->ELEM_PTR->LEVEL group_ptr->NEXT->ELEM_PTR->GEOMETRY group_ptr->NEXT->ELEM_PTR->RADIUS group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr->NEXT->ELEM_PTR->PDIM group_ptr->NEXT->ELEM_PTR->QDIM group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr->NEXT->ELEM_PTR->MODEL group_ptr->NEXT->ELEM_PTR->EXP group_ptr->NEXT->ELEM_PTR->ANGLEE group_ptr->NEXT->ELEM_PTR->ANGLEH group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr->NEXT->ELEM_PTR->TAPERE group_ptr->NEXT->ELEM_PTR->TAPERH group_ptr->NEXT->ELEM_PTR->TAPER_UNIT group_ptr->NEXT->ELEM_PTR->POLARIZATION group_ptr->NEXT->ELEM_PTR->PHEPOL group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr->NEXT->ELEM_PTR->DIRECTION group_ptr->NEXT->ELEM_PTR->GAIN group_ptr->NEXT->ELEM_PTR->GAIN_UNIT group_ptr->NEXT->ELEM_PTR->NPORTS group_ptr->NEXT->ELEM_PTR->PORT_PTR group_ptr->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr->NEXT->ADDREM_PTR group_ptr->NEXT->ADDREM_PTR[0] group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr->NEXT->ADDREM_PTR->NODE_PTR group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr->NEXT->ADDREM_PTR->NEXT group_ptr->NEXT->ADDREM_PTR->NEXT[0] group_ptr->NEXT->GRAMPEXC_PTR group_ptr->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->GRAMPEXC_PTR->TYPE group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr->NEXT->GRAMPEXC_PTR->CENTRE group_ptr->NEXT->GRAMPEXC_PTR->P1_ET group_ptr->NEXT->GRAMPEXC_PTR->P2_ET group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR group_ptr->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->TYPE group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr->NEXT->GRPHAEXC_PTR->CENTRE group_ptr->NEXT->GRPHAEXC_PTR->P1_EP group_ptr->NEXT->GRPHAEXC_PTR->P2_EP group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr->NEXT->GRPHAEXC_PTR->U group_ptr->NEXT->GRPHAEXC_PTR->V group_ptr->NEXT->GRPHAEXC_PTR->THETA group_ptr->NEXT->GRPHAEXC_PTR->PHI group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr->NEXT->ERR_PTR group_ptr->NEXT->ERR_PTR[0] group_ptr->NEXT->ERR_PTR->AMP_TYPE group_ptr->NEXT->ERR_PTR->AMP_STDEV group_ptr->NEXT->ERR_PTR->AMP_LINOFFS group_ptr->NEXT->ERR_PTR->AMP_LINSTEP group_ptr->NEXT->ERR_PTR->AMP_2NDCENT group_ptr->NEXT->ERR_PTR->AMP_2NDPET group_ptr->NEXT->ERR_PTR->AMP_2NDQET group_ptr->NEXT->ERR_PTR->AMP_UNIT group_ptr->NEXT->ERR_PTR->PHASE_TYPE group_ptr->NEXT->ERR_PTR->PHASE_STDEV group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr->NEXT->ERR_PTR->PHASE_UNIT group_ptr->NEXT->FAIL_PTR group_ptr->NEXT->FAIL_PTR[0] group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr->NEXT->FAIL_PTR->FIXED_AMP group_ptr->NEXT->FAIL_PTR->FIXED_PHASE group_ptr->NEXT->NEXT group_ptr->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NAME group_ptr->NEXT->NEXT->GRID_PTR group_ptr->NEXT->NEXT->GRID_PTR[0] group_ptr->NEXT->NEXT->ELEM_PTR group_ptr->NEXT->NEXT->ELEM_PTR[0] group_ptr->NEXT->NEXT->ADDREM_PTR group_ptr->NEXT->NEXT->ADDREM_PTR[0] group_ptr->NEXT->NEXT->GRAMPEXC_PTR group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->NEXT->GRPHAEXC_PTR group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->NEXT->ERR_PTR group_ptr->NEXT->NEXT->ERR_PTR[0] group_ptr->NEXT->NEXT->FAIL_PTR group_ptr->NEXT->NEXT->FAIL_PTR[0] group_ptr->NEXT->NEXT->NEXT group_ptr->NEXT->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NUM_OF_NODES group_ptr->NEXT->NEXT->SHAPE group_ptr->NEXT->NEXT->PSIZE group_ptr->NEXT->NEXT->QSIZE group_ptr->NEXT->NEXT->GEOMNODE_PTR group_ptr->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->NEXT->BUILT group_ptr->NEXT->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr->NEXT->NUM_OF_NODES group_ptr->NEXT->SHAPE group_ptr->NEXT->PSIZE group_ptr->NEXT->QSIZE group_ptr->NEXT->GEOMNODE_PTR group_ptr->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->LOC_P group_ptr->NEXT->GEOMNODE_PTR->LOC_Q group_ptr->NEXT->GEOMNODE_PTR->XA group_ptr->NEXT->GEOMNODE_PTR->YA group_ptr->NEXT->GEOMNODE_PTR->ZA group_ptr->NEXT->GEOMNODE_PTR->THEA group_ptr->NEXT->GEOMNODE_PTR->PHEA group_ptr->NEXT->GEOMNODE_PTR->PSEA group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->NEXT group_ptr->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->SHAPE group_ptr->NEXT->GEOMNODE_PTR->PSIZE group_ptr->NEXT->GEOMNODE_PTR->QSIZE group_ptr->NEXT->BUILT group_ptr->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->SUPER_GROUP_PTR[0] group_ptr->NUM_OF_NODES group_ptr->SHAPE group_ptr->PSIZE group_ptr->QSIZE group_ptr->GEOMNODE_PTR group_ptr->GEOMNODE_PTR[0] group_ptr->GEOMNODE_PTR->LOC_P group_ptr->GEOMNODE_PTR->LOC_Q group_ptr->GEOMNODE_PTR->XA group_ptr->GEOMNODE_PTR->YA group_ptr->GEOMNODE_PTR->ZA group_ptr->GEOMNODE_PTR->THEA group_ptr->GEOMNODE_PTR->PHEA group_ptr->GEOMNODE_PTR->PSEA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->NEXT group_ptr->GEOMNODE_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->GEOMNODE_PTR->SHAPE group_ptr->GEOMNODE_PTR->PSIZE group_ptr->GEOMNODE_PTR->QSIZE group_ptr->BUILT group_ptr->SUPER_GROUP_PTR group_ptr->SUPER_GROUP_PTR[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(group_ptr) orig(group_ptr[0]) orig(group_ptr->NAME) orig(group_ptr->GRID_PTR) orig(group_ptr->GRID_PTR[0]) orig(group_ptr->GRID_PTR->NAME) orig(group_ptr->GRID_PTR->LEVEL) orig(group_ptr->GRID_PTR->TYPE) orig(group_ptr->GRID_PTR->ORIENT) orig(group_ptr->GRID_PTR->ANGLE) orig(group_ptr->GRID_PTR->ANGLE_UNIT) orig(group_ptr->GRID_PTR->PSTEP) orig(group_ptr->GRID_PTR->QSTEP) orig(group_ptr->GRID_PTR->PQSTEP_UNIT) orig(group_ptr->GRID_PTR->PX) orig(group_ptr->GRID_PTR->PY) orig(group_ptr->GRID_PTR->QX) orig(group_ptr->GRID_PTR->QY) orig(group_ptr->GRID_PTR->PQXY_UNIT) orig(group_ptr->GRID_PTR->ROT_ANGLE) orig(group_ptr->ELEM_PTR) orig(group_ptr->ELEM_PTR[0]) orig(group_ptr->ELEM_PTR->TYPE) orig(group_ptr->ELEM_PTR->NAME) orig(group_ptr->ELEM_PTR->LEVEL) orig(group_ptr->ELEM_PTR->GEOMETRY) orig(group_ptr->ELEM_PTR->RADIUS) orig(group_ptr->ELEM_PTR->RADIUS_UNIT) orig(group_ptr->ELEM_PTR->PDIM) orig(group_ptr->ELEM_PTR->QDIM) orig(group_ptr->ELEM_PTR->PQDIM_UNIT) orig(group_ptr->ELEM_PTR->MODEL) orig(group_ptr->ELEM_PTR->EXP) orig(group_ptr->ELEM_PTR->ANGLEE) orig(group_ptr->ELEM_PTR->ANGLEH) orig(group_ptr->ELEM_PTR->ANGLE_UNIT) orig(group_ptr->ELEM_PTR->TAPERE) orig(group_ptr->ELEM_PTR->TAPERH) orig(group_ptr->ELEM_PTR->TAPER_UNIT) orig(group_ptr->ELEM_PTR->POLARIZATION) orig(group_ptr->ELEM_PTR->PHEPOL) orig(group_ptr->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr->ELEM_PTR->DIRECTION) orig(group_ptr->ELEM_PTR->GAIN) orig(group_ptr->ELEM_PTR->GAIN_UNIT) orig(group_ptr->ELEM_PTR->NPORTS) orig(group_ptr->ELEM_PTR->PORT_PTR) orig(group_ptr->ELEM_PTR->PORT_PTR[0]) orig(group_ptr->ELEM_PTR->PORT_PTR->PORTNUM) orig(group_ptr->ELEM_PTR->PORT_PTR->AMP) orig(group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PSC) orig(group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PSH) orig(group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PPA) orig(group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PHEPOL) orig(group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL) orig(group_ptr->ELEM_PTR->PORT_PTR->NEXT) orig(group_ptr->ELEM_PTR->PORT_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR) orig(group_ptr->ADDREM_PTR[0]) orig(group_ptr->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr->ADDREM_PTR->NODE_PTR) orig(group_ptr->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT) orig(group_ptr->ADDREM_PTR->NODE_PTR->PCOORD) orig(group_ptr->ADDREM_PTR->NODE_PTR->QCOORD) orig(group_ptr->ADDREM_PTR->NODE_PTR->THEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->PHEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->PSEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT) orig(group_ptr->ADDREM_PTR->NODE_PTR->NEXT) orig(group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR->NEXT) orig(group_ptr->ADDREM_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE) orig(group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE) orig(group_ptr->ADDREM_PTR->NEXT->NODE_PTR) orig(group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0]) orig(group_ptr->ADDREM_PTR->NEXT->NEXT) orig(group_ptr->ADDREM_PTR->NEXT->NEXT[0]) orig(group_ptr->GRAMPEXC_PTR) orig(group_ptr->GRAMPEXC_PTR[0]) orig(group_ptr->GRAMPEXC_PTR->TYPE) orig(group_ptr->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr->GRAMPEXC_PTR->CENTRE) orig(group_ptr->GRAMPEXC_PTR->P1_ET) orig(group_ptr->GRAMPEXC_PTR->P2_ET) orig(group_ptr->GRAMPEXC_PTR->Q1_ET) orig(group_ptr->GRAMPEXC_PTR->Q2_ET) orig(group_ptr->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr->GRPHAEXC_PTR) orig(group_ptr->GRPHAEXC_PTR[0]) orig(group_ptr->GRPHAEXC_PTR->TYPE) orig(group_ptr->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr->GRPHAEXC_PTR->CENTRE) orig(group_ptr->GRPHAEXC_PTR->P1_EP) orig(group_ptr->GRPHAEXC_PTR->P2_EP) orig(group_ptr->GRPHAEXC_PTR->Q1_EP) orig(group_ptr->GRPHAEXC_PTR->Q2_EP) orig(group_ptr->GRPHAEXC_PTR->DIRECTION) orig(group_ptr->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr->GRPHAEXC_PTR->PHASE_START) orig(group_ptr->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr->GRPHAEXC_PTR->U) orig(group_ptr->GRPHAEXC_PTR->V) orig(group_ptr->GRPHAEXC_PTR->THETA) orig(group_ptr->GRPHAEXC_PTR->PHI) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr->ERR_PTR) orig(group_ptr->ERR_PTR[0]) orig(group_ptr->ERR_PTR->AMP_TYPE) orig(group_ptr->ERR_PTR->AMP_STDEV) orig(group_ptr->ERR_PTR->AMP_LINOFFS) orig(group_ptr->ERR_PTR->AMP_LINSTEP) orig(group_ptr->ERR_PTR->AMP_2NDCENT) orig(group_ptr->ERR_PTR->AMP_2NDPET) orig(group_ptr->ERR_PTR->AMP_2NDQET) orig(group_ptr->ERR_PTR->AMP_UNIT) orig(group_ptr->ERR_PTR->PHASE_TYPE) orig(group_ptr->ERR_PTR->PHASE_STDEV) orig(group_ptr->ERR_PTR->PHASE_LINOFFS) orig(group_ptr->ERR_PTR->PHASE_LINSTEP) orig(group_ptr->ERR_PTR->PHASE_2NDCENT) orig(group_ptr->ERR_PTR->PHASE_2NDPSID) orig(group_ptr->ERR_PTR->PHASE_2NDQSID) orig(group_ptr->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr->ERR_PTR->PHASE_UNIT) orig(group_ptr->FAIL_PTR) orig(group_ptr->FAIL_PTR[0]) orig(group_ptr->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr->FAIL_PTR->FIXED_AMP) orig(group_ptr->FAIL_PTR->FIXED_PHASE) orig(group_ptr->NEXT) orig(group_ptr->NEXT[0]) orig(group_ptr->NEXT->NAME) orig(group_ptr->NEXT->GRID_PTR) orig(group_ptr->NEXT->GRID_PTR[0]) orig(group_ptr->NEXT->GRID_PTR->NAME) orig(group_ptr->NEXT->GRID_PTR->LEVEL) orig(group_ptr->NEXT->GRID_PTR->TYPE) orig(group_ptr->NEXT->GRID_PTR->ORIENT) orig(group_ptr->NEXT->GRID_PTR->ANGLE) orig(group_ptr->NEXT->GRID_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->GRID_PTR->PSTEP) orig(group_ptr->NEXT->GRID_PTR->QSTEP) orig(group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT) orig(group_ptr->NEXT->GRID_PTR->PX) orig(group_ptr->NEXT->GRID_PTR->PY) orig(group_ptr->NEXT->GRID_PTR->QX) orig(group_ptr->NEXT->GRID_PTR->QY) orig(group_ptr->NEXT->GRID_PTR->PQXY_UNIT) orig(group_ptr->NEXT->GRID_PTR->ROT_ANGLE) orig(group_ptr->NEXT->ELEM_PTR) orig(group_ptr->NEXT->ELEM_PTR[0]) orig(group_ptr->NEXT->ELEM_PTR->TYPE) orig(group_ptr->NEXT->ELEM_PTR->NAME) orig(group_ptr->NEXT->ELEM_PTR->LEVEL) orig(group_ptr->NEXT->ELEM_PTR->GEOMETRY) orig(group_ptr->NEXT->ELEM_PTR->RADIUS) orig(group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT) orig(group_ptr->NEXT->ELEM_PTR->PDIM) orig(group_ptr->NEXT->ELEM_PTR->QDIM) orig(group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT) orig(group_ptr->NEXT->ELEM_PTR->MODEL) orig(group_ptr->NEXT->ELEM_PTR->EXP) orig(group_ptr->NEXT->ELEM_PTR->ANGLEE) orig(group_ptr->NEXT->ELEM_PTR->ANGLEH) orig(group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->ELEM_PTR->TAPERE) orig(group_ptr->NEXT->ELEM_PTR->TAPERH) orig(group_ptr->NEXT->ELEM_PTR->TAPER_UNIT) orig(group_ptr->NEXT->ELEM_PTR->POLARIZATION) orig(group_ptr->NEXT->ELEM_PTR->PHEPOL) orig(group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr->NEXT->ELEM_PTR->DIRECTION) orig(group_ptr->NEXT->ELEM_PTR->GAIN) orig(group_ptr->NEXT->ELEM_PTR->GAIN_UNIT) orig(group_ptr->NEXT->ELEM_PTR->NPORTS) orig(group_ptr->NEXT->ELEM_PTR->PORT_PTR) orig(group_ptr->NEXT->ELEM_PTR->PORT_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR) orig(group_ptr->NEXT->ADDREM_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr->NEXT->ADDREM_PTR->NODE_PTR) orig(group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR->NEXT) orig(group_ptr->NEXT->ADDREM_PTR->NEXT[0]) orig(group_ptr->NEXT->GRAMPEXC_PTR) orig(group_ptr->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr->NEXT->GRAMPEXC_PTR->TYPE) orig(group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr->NEXT->GRAMPEXC_PTR->CENTRE) orig(group_ptr->NEXT->GRAMPEXC_PTR->P1_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->P2_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR) orig(group_ptr->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR->TYPE) orig(group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr->NEXT->GRPHAEXC_PTR->CENTRE) orig(group_ptr->NEXT->GRPHAEXC_PTR->P1_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->P2_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION) orig(group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr->NEXT->GRPHAEXC_PTR->U) orig(group_ptr->NEXT->GRPHAEXC_PTR->V) orig(group_ptr->NEXT->GRPHAEXC_PTR->THETA) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHI) orig(group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr->NEXT->ERR_PTR) orig(group_ptr->NEXT->ERR_PTR[0]) orig(group_ptr->NEXT->ERR_PTR->AMP_TYPE) orig(group_ptr->NEXT->ERR_PTR->AMP_STDEV) orig(group_ptr->NEXT->ERR_PTR->AMP_LINOFFS) orig(group_ptr->NEXT->ERR_PTR->AMP_LINSTEP) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDCENT) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDPET) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDQET) orig(group_ptr->NEXT->ERR_PTR->AMP_UNIT) orig(group_ptr->NEXT->ERR_PTR->PHASE_TYPE) orig(group_ptr->NEXT->ERR_PTR->PHASE_STDEV) orig(group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS) orig(group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID) orig(group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr->NEXT->ERR_PTR->PHASE_UNIT) orig(group_ptr->NEXT->FAIL_PTR) orig(group_ptr->NEXT->FAIL_PTR[0]) orig(group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr->NEXT->FAIL_PTR->FIXED_AMP) orig(group_ptr->NEXT->FAIL_PTR->FIXED_PHASE) orig(group_ptr->NEXT->NEXT) orig(group_ptr->NEXT->NEXT[0]) orig(group_ptr->NEXT->NEXT->NAME) orig(group_ptr->NEXT->NEXT->GRID_PTR) orig(group_ptr->NEXT->NEXT->GRID_PTR[0]) orig(group_ptr->NEXT->NEXT->ELEM_PTR) orig(group_ptr->NEXT->NEXT->ELEM_PTR[0]) orig(group_ptr->NEXT->NEXT->ADDREM_PTR) orig(group_ptr->NEXT->NEXT->ADDREM_PTR[0]) orig(group_ptr->NEXT->NEXT->GRAMPEXC_PTR) orig(group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr->NEXT->NEXT->GRPHAEXC_PTR) orig(group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr->NEXT->NEXT->ERR_PTR) orig(group_ptr->NEXT->NEXT->ERR_PTR[0]) orig(group_ptr->NEXT->NEXT->FAIL_PTR) orig(group_ptr->NEXT->NEXT->FAIL_PTR[0]) orig(group_ptr->NEXT->NEXT->NEXT) orig(group_ptr->NEXT->NEXT->NEXT[0]) orig(group_ptr->NEXT->NEXT->NUM_OF_NODES) orig(group_ptr->NEXT->NEXT->SHAPE) orig(group_ptr->NEXT->NEXT->PSIZE) orig(group_ptr->NEXT->NEXT->QSIZE) orig(group_ptr->NEXT->NEXT->GEOMNODE_PTR) orig(group_ptr->NEXT->NEXT->GEOMNODE_PTR[0]) orig(group_ptr->NEXT->NEXT->BUILT) orig(group_ptr->NEXT->NEXT->SUPER_GROUP_PTR) orig(group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr->NEXT->NUM_OF_NODES) orig(group_ptr->NEXT->SHAPE) orig(group_ptr->NEXT->PSIZE) orig(group_ptr->NEXT->QSIZE) orig(group_ptr->NEXT->GEOMNODE_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->LOC_P) orig(group_ptr->NEXT->GEOMNODE_PTR->LOC_Q) orig(group_ptr->NEXT->GEOMNODE_PTR->XA) orig(group_ptr->NEXT->GEOMNODE_PTR->YA) orig(group_ptr->NEXT->GEOMNODE_PTR->ZA) orig(group_ptr->NEXT->GEOMNODE_PTR->THEA) orig(group_ptr->NEXT->GEOMNODE_PTR->PHEA) orig(group_ptr->NEXT->GEOMNODE_PTR->PSEA) orig(group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->NEXT) orig(group_ptr->NEXT->GEOMNODE_PTR->NEXT[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->SHAPE) orig(group_ptr->NEXT->GEOMNODE_PTR->PSIZE) orig(group_ptr->NEXT->GEOMNODE_PTR->QSIZE) orig(group_ptr->NEXT->BUILT) orig(group_ptr->NEXT->SUPER_GROUP_PTR) orig(group_ptr->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr->NUM_OF_NODES) orig(group_ptr->SHAPE) orig(group_ptr->PSIZE) orig(group_ptr->QSIZE) orig(group_ptr->GEOMNODE_PTR) orig(group_ptr->GEOMNODE_PTR[0]) orig(group_ptr->GEOMNODE_PTR->LOC_P) orig(group_ptr->GEOMNODE_PTR->LOC_Q) orig(group_ptr->GEOMNODE_PTR->XA) orig(group_ptr->GEOMNODE_PTR->YA) orig(group_ptr->GEOMNODE_PTR->ZA) orig(group_ptr->GEOMNODE_PTR->THEA) orig(group_ptr->GEOMNODE_PTR->PHEA) orig(group_ptr->GEOMNODE_PTR->PSEA) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0]) orig(group_ptr->GEOMNODE_PTR->NEXT) orig(group_ptr->GEOMNODE_PTR->NEXT[0]) orig(group_ptr->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr->GEOMNODE_PTR->SHAPE) orig(group_ptr->GEOMNODE_PTR->PSIZE) orig(group_ptr->GEOMNODE_PTR->QSIZE) orig(group_ptr->BUILT) orig(group_ptr->SUPER_GROUP_PTR) orig(group_ptr->SUPER_GROUP_PTR[0])
assignable group_ptr->GRID_PTR[0], group_ptr->GRID_PTR->NAME, group_ptr->GRID_PTR->ORIENT, group_ptr->GRID_PTR->ANGLE, group_ptr->GRID_PTR->ANGLE_UNIT, group_ptr->GRID_PTR->PSTEP, group_ptr->GRID_PTR->QSTEP, group_ptr->GRID_PTR->PX, group_ptr->GRID_PTR->PY, group_ptr->GRID_PTR->QX, group_ptr->GRID_PTR->QY, group_ptr->GRID_PTR->PQXY_UNIT, group_ptr->GRID_PTR->ROT_ANGLE, group_ptr->ELEM_PTR->PDIM, group_ptr->ELEM_PTR->QDIM, group_ptr->ELEM_PTR->PQDIM_UNIT, group_ptr->ELEM_PTR->EXP, group_ptr->ELEM_PTR->ANGLEE, group_ptr->ELEM_PTR->ANGLEH, group_ptr->ELEM_PTR->ANGLE_UNIT, group_ptr->ELEM_PTR->TAPERE, group_ptr->ELEM_PTR->TAPERH, group_ptr->ELEM_PTR->TAPER_UNIT, group_ptr->ELEM_PTR->NPORTS, group_ptr->ELEM_PTR->PORT_PTR, group_ptr->ELEM_PTR->PORT_PTR[0], group_ptr->ELEM_PTR->PORT_PTR->PORTNUM, group_ptr->ELEM_PTR->PORT_PTR->AMP, group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT, group_ptr->ELEM_PTR->PORT_PTR->PSC, group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT, group_ptr->ELEM_PTR->PORT_PTR->PSH, group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT, group_ptr->ELEM_PTR->PORT_PTR->PPA, group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT, group_ptr->ELEM_PTR->PORT_PTR->PHEPOL, group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT, group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL, group_ptr->ELEM_PTR->PORT_PTR->NEXT, group_ptr->ELEM_PTR->PORT_PTR->NEXT[0], group_ptr->ADDREM_PTR->NODE_PTR[0], group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT, group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0], group_ptr->ADDREM_PTR->NEXT[0], group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE, group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE, group_ptr->ADDREM_PTR->NEXT->NODE_PTR, group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0], group_ptr->ADDREM_PTR->NEXT->NEXT, group_ptr->ADDREM_PTR->NEXT->NEXT[0], group_ptr->GRAMPEXC_PTR->UNIF_VAL, group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy, group_ptr->GRPHAEXC_PTR->CENTRE, group_ptr->GRPHAEXC_PTR->P1_EP, group_ptr->GRPHAEXC_PTR->P2_EP, group_ptr->GRPHAEXC_PTR->Q1_EP, group_ptr->GRPHAEXC_PTR->Q2_EP, group_ptr->GRPHAEXC_PTR->DIRECTION, group_ptr->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr->GRPHAEXC_PTR->ANGLE_START, group_ptr->GRPHAEXC_PTR->ANGLE_STEP, group_ptr->GRPHAEXC_PTR->OMIT_PHASE, group_ptr->GRPHAEXC_PTR->PHASE_START, group_ptr->GRPHAEXC_PTR->PHASE_STEP, group_ptr->GRPHAEXC_PTR->U, group_ptr->GRPHAEXC_PTR->V, group_ptr->GRPHAEXC_PTR->THETA, group_ptr->GRPHAEXC_PTR->PHI, group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy, group_ptr->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr->ERR_PTR[0], group_ptr->ERR_PTR->AMP_TYPE, group_ptr->ERR_PTR->AMP_STDEV, group_ptr->ERR_PTR->AMP_LINOFFS, group_ptr->ERR_PTR->AMP_LINSTEP, group_ptr->ERR_PTR->AMP_2NDCENT, group_ptr->ERR_PTR->AMP_2NDPET, group_ptr->ERR_PTR->AMP_2NDQET, group_ptr->ERR_PTR->AMP_UNIT, group_ptr->ERR_PTR->PHASE_TYPE, group_ptr->ERR_PTR->PHASE_STDEV, group_ptr->ERR_PTR->PHASE_LINOFFS, group_ptr->ERR_PTR->PHASE_LINSTEP, group_ptr->ERR_PTR->PHASE_2NDCENT, group_ptr->ERR_PTR->PHASE_2NDPSID, group_ptr->ERR_PTR->PHASE_2NDQSID, group_ptr->ERR_PTR->PHASE_QUANTSTEP, group_ptr->ERR_PTR->PHASE_UNIT, group_ptr->FAIL_PTR[0], group_ptr->FAIL_PTR->NUM_FAULTY_EL, group_ptr->FAIL_PTR->FIXED_AMP, group_ptr->FAIL_PTR->FIXED_PHASE, group_ptr->NEXT, group_ptr->NEXT[0], group_ptr->NEXT->NAME, group_ptr->NEXT->GRID_PTR, group_ptr->NEXT->GRID_PTR[0], group_ptr->NEXT->GRID_PTR->NAME, group_ptr->NEXT->GRID_PTR->LEVEL, group_ptr->NEXT->GRID_PTR->TYPE, group_ptr->NEXT->GRID_PTR->ORIENT, group_ptr->NEXT->GRID_PTR->ANGLE, group_ptr->NEXT->GRID_PTR->ANGLE_UNIT, group_ptr->NEXT->GRID_PTR->PSTEP, group_ptr->NEXT->GRID_PTR->QSTEP, group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT, group_ptr->NEXT->GRID_PTR->PX, group_ptr->NEXT->GRID_PTR->PY, group_ptr->NEXT->GRID_PTR->QX, group_ptr->NEXT->GRID_PTR->QY, group_ptr->NEXT->GRID_PTR->PQXY_UNIT, group_ptr->NEXT->GRID_PTR->ROT_ANGLE, group_ptr->NEXT->ELEM_PTR, group_ptr->NEXT->ELEM_PTR[0], group_ptr->NEXT->ELEM_PTR->TYPE, group_ptr->NEXT->ELEM_PTR->NAME, group_ptr->NEXT->ELEM_PTR->LEVEL, group_ptr->NEXT->ELEM_PTR->GEOMETRY, group_ptr->NEXT->ELEM_PTR->RADIUS, group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT, group_ptr->NEXT->ELEM_PTR->PDIM, group_ptr->NEXT->ELEM_PTR->QDIM, group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT, group_ptr->NEXT->ELEM_PTR->MODEL, group_ptr->NEXT->ELEM_PTR->EXP, group_ptr->NEXT->ELEM_PTR->ANGLEE, group_ptr->NEXT->ELEM_PTR->ANGLEH, group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT, group_ptr->NEXT->ELEM_PTR->TAPERE, group_ptr->NEXT->ELEM_PTR->TAPERH, group_ptr->NEXT->ELEM_PTR->TAPER_UNIT, group_ptr->NEXT->ELEM_PTR->POLARIZATION, group_ptr->NEXT->ELEM_PTR->PHEPOL, group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT, group_ptr->NEXT->ELEM_PTR->DIRECTION, group_ptr->NEXT->ELEM_PTR->GAIN, group_ptr->NEXT->ELEM_PTR->GAIN_UNIT, group_ptr->NEXT->ELEM_PTR->NPORTS, group_ptr->NEXT->ELEM_PTR->PORT_PTR, group_ptr->NEXT->ELEM_PTR->PORT_PTR[0], group_ptr->NEXT->ADDREM_PTR, group_ptr->NEXT->ADDREM_PTR[0], group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE, group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE, group_ptr->NEXT->ADDREM_PTR->NODE_PTR, group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0], group_ptr->NEXT->ADDREM_PTR->NEXT, group_ptr->NEXT->ADDREM_PTR->NEXT[0], group_ptr->NEXT->GRAMPEXC_PTR, group_ptr->NEXT->GRAMPEXC_PTR[0], group_ptr->NEXT->GRAMPEXC_PTR->TYPE, group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL, group_ptr->NEXT->GRAMPEXC_PTR->CENTRE, group_ptr->NEXT->GRAMPEXC_PTR->P1_ET, group_ptr->NEXT->GRAMPEXC_PTR->P2_ET, group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET, group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET, group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT, group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR, group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR, group_ptr->NEXT->GRPHAEXC_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR->TYPE, group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL, group_ptr->NEXT->GRPHAEXC_PTR->CENTRE, group_ptr->NEXT->GRPHAEXC_PTR->P1_EP, group_ptr->NEXT->GRPHAEXC_PTR->P2_EP, group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP, group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP, group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION, group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START, group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP, group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP, group_ptr->NEXT->GRPHAEXC_PTR->U, group_ptr->NEXT->GRPHAEXC_PTR->V, group_ptr->NEXT->GRPHAEXC_PTR->THETA, group_ptr->NEXT->GRPHAEXC_PTR->PHI, group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR, group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT, group_ptr->NEXT->ERR_PTR, group_ptr->NEXT->ERR_PTR[0], group_ptr->NEXT->ERR_PTR->AMP_TYPE, group_ptr->NEXT->ERR_PTR->AMP_STDEV, group_ptr->NEXT->ERR_PTR->AMP_LINOFFS, group_ptr->NEXT->ERR_PTR->AMP_LINSTEP, group_ptr->NEXT->ERR_PTR->AMP_2NDCENT, group_ptr->NEXT->ERR_PTR->AMP_2NDPET, group_ptr->NEXT->ERR_PTR->AMP_2NDQET, group_ptr->NEXT->ERR_PTR->AMP_UNIT, group_ptr->NEXT->ERR_PTR->PHASE_TYPE, group_ptr->NEXT->ERR_PTR->PHASE_STDEV, group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS, group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP, group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT, group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID, group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID, group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP, group_ptr->NEXT->ERR_PTR->PHASE_UNIT, group_ptr->NEXT->FAIL_PTR, group_ptr->NEXT->FAIL_PTR[0], group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL, group_ptr->NEXT->FAIL_PTR->FIXED_AMP, group_ptr->NEXT->FAIL_PTR->FIXED_PHASE, group_ptr->NEXT->NEXT, group_ptr->NEXT->NEXT[0], group_ptr->NEXT->NEXT->NAME, group_ptr->NEXT->NEXT->GRID_PTR, group_ptr->NEXT->NEXT->GRID_PTR[0], group_ptr->NEXT->NEXT->ELEM_PTR, group_ptr->NEXT->NEXT->ELEM_PTR[0], group_ptr->NEXT->NEXT->ADDREM_PTR, group_ptr->NEXT->NEXT->ADDREM_PTR[0], group_ptr->NEXT->NEXT->GRAMPEXC_PTR, group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0], group_ptr->NEXT->NEXT->GRPHAEXC_PTR, group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0], group_ptr->NEXT->NEXT->ERR_PTR, group_ptr->NEXT->NEXT->ERR_PTR[0], group_ptr->NEXT->NEXT->FAIL_PTR, group_ptr->NEXT->NEXT->FAIL_PTR[0], group_ptr->NEXT->NEXT->NEXT, group_ptr->NEXT->NEXT->NEXT[0], group_ptr->NEXT->NEXT->NUM_OF_NODES, group_ptr->NEXT->NEXT->SHAPE, group_ptr->NEXT->NEXT->PSIZE, group_ptr->NEXT->NEXT->QSIZE, group_ptr->NEXT->NEXT->GEOMNODE_PTR, group_ptr->NEXT->NEXT->GEOMNODE_PTR[0], group_ptr->NEXT->NEXT->BUILT, group_ptr->NEXT->NEXT->SUPER_GROUP_PTR, group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0], group_ptr->NEXT->NUM_OF_NODES, group_ptr->NEXT->SHAPE, group_ptr->NEXT->PSIZE, group_ptr->NEXT->QSIZE, group_ptr->NEXT->GEOMNODE_PTR, group_ptr->NEXT->GEOMNODE_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->LOC_P, group_ptr->NEXT->GEOMNODE_PTR->LOC_Q, group_ptr->NEXT->GEOMNODE_PTR->XA, group_ptr->NEXT->GEOMNODE_PTR->YA, group_ptr->NEXT->GEOMNODE_PTR->ZA, group_ptr->NEXT->GEOMNODE_PTR->THEA, group_ptr->NEXT->GEOMNODE_PTR->PHEA, group_ptr->NEXT->GEOMNODE_PTR->PSEA, group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR, group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->NEXT, group_ptr->NEXT->GEOMNODE_PTR->NEXT[0], group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR, group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->SHAPE, group_ptr->NEXT->GEOMNODE_PTR->PSIZE, group_ptr->NEXT->GEOMNODE_PTR->QSIZE, group_ptr->NEXT->BUILT, group_ptr->NEXT->SUPER_GROUP_PTR, group_ptr->NEXT->SUPER_GROUP_PTR[0], group_ptr->GEOMNODE_PTR[0], group_ptr->GEOMNODE_PTR->LOC_P, group_ptr->GEOMNODE_PTR->LOC_Q, group_ptr->GEOMNODE_PTR->XA, group_ptr->GEOMNODE_PTR->YA, group_ptr->GEOMNODE_PTR->ZA, group_ptr->GEOMNODE_PTR->THEA, group_ptr->GEOMNODE_PTR->PHEA, group_ptr->GEOMNODE_PTR->PSEA, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0], group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0], group_ptr->GEOMNODE_PTR->NEXT, group_ptr->GEOMNODE_PTR->NEXT[0], group_ptr->GEOMNODE_PTR->SUBGROUP_PTR, group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr->GEOMNODE_PTR->SHAPE, group_ptr->GEOMNODE_PTR->PSIZE, group_ptr->GEOMNODE_PTR->QSIZE, group_ptr->SUPER_GROUP_PTR[0]
::UserNames.equals(group_ptr.NAME)
::UserNames.equals(\old(::UserNames))
::UserNames.equals(\old(group_ptr.NAME))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
group_ptr.[0] == \old(group_ptr.[0])
group_ptr.GRID_PTR == \old(group_ptr.GRID_PTR)
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.LEVEL
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.GEOMETRY
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.NPORTS
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.PORTNUM
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL
group_ptr.GRID_PTR.LEVEL == group_ptr.ADDREM_PTR.NODE_PTR.QCOORD
group_ptr.GRID_PTR.LEVEL == group_ptr.GRAMPEXC_PTR.TYPE
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.GRID_PTR.LEVEL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.LEVEL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.GEOMETRY)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ADDREM_PTR.NODE_PTR.QCOORD)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.GRAMPEXC_PTR.TYPE)
group_ptr.GRID_PTR.TYPE == \old(group_ptr.GRID_PTR.TYPE)
group_ptr.GRID_PTR.ANGLE_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GRID_PTR.QSTEP)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.PDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.QDIM)
group_ptr.GRID_PTR.PQSTEP_UNIT == return
group_ptr.GRID_PTR.PQXY_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.PSIZE)
group_ptr.ELEM_PTR == \old(group_ptr.ELEM_PTR)
group_ptr.ELEM_PTR.[0] == \old(group_ptr.ELEM_PTR.[0])
group_ptr.ELEM_PTR.TYPE == return
group_ptr.ELEM_PTR.NAME.equals(\old(group_ptr.ELEM_PTR.NAME))
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, \old(group_ptr.ELEM_PTR.RADIUS))
group_ptr.ELEM_PTR.RADIUS_UNIT == return
group_ptr.ELEM_PTR.PQDIM_UNIT == return
group_ptr.ELEM_PTR.MODEL == return
group_ptr.ELEM_PTR.POLARIZATION == return
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.ELEM_PTR.PORT_PTR.PHEPOL)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, \old(group_ptr.ELEM_PTR.PHEPOL))
group_ptr.ELEM_PTR.PHEPOL_UNIT == return
group_ptr.ELEM_PTR.DIRECTION == return
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.GAIN, group_ptr.PSIZE)
group_ptr.ELEM_PTR.GAIN_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.PSC, group_ptr.PSIZE)
group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.PSH, group_ptr.PSIZE)
group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.PPA, group_ptr.PSIZE)
group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.NEXT == \old(group_ptr.ELEM_PTR.PORT_PTR)
group_ptr.ADDREM_PTR == \old(group_ptr.ADDREM_PTR)
group_ptr.ADDREM_PTR.[0] == \old(group_ptr.ADDREM_PTR.[0])
group_ptr.ADDREM_PTR.ADDREM_TYPE == return
group_ptr.ADDREM_PTR.BLOCK_TYPE == \old(group_ptr.ADDREM_PTR.BLOCK_TYPE)
group_ptr.ADDREM_PTR.NODE_PTR == \old(group_ptr.ADDREM_PTR.NODE_PTR)
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == \old(group_ptr.ADDREM_PTR.NODE_PTR.PCOORD)
daikon.Quant.fuzzy.eq(group_ptr.ADDREM_PTR.NODE_PTR.THEA, group_ptr.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.ADDREM_PTR.NODE_PTR.PHEA, group_ptr.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.ADDREM_PTR.NODE_PTR.PSEA, group_ptr.PSIZE)
group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT == return
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == \old(group_ptr.ADDREM_PTR.NODE_PTR.NEXT)
group_ptr.ADDREM_PTR.NEXT == \old(group_ptr.ADDREM_PTR.NEXT)
group_ptr.GRAMPEXC_PTR == \old(group_ptr.GRAMPEXC_PTR)
group_ptr.GRAMPEXC_PTR.[0] == \old(group_ptr.GRAMPEXC_PTR.[0])
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, \old(group_ptr.GRAMPEXC_PTR.CENTRE))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, group_ptr.GRAMPEXC_PTR.Q2_ET)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, \old(group_ptr.GRAMPEXC_PTR.P1_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, \old(group_ptr.GRAMPEXC_PTR.Q2_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, \old(group_ptr.GRAMPEXC_PTR.P2_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, \old(group_ptr.GRAMPEXC_PTR.Q1_ET))
group_ptr.GRAMPEXC_PTR.AMP_UNIT == return
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == group_ptr.GRPHAEXC_PTR.PQEXP_PTR
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == \old(group_ptr.GRAMPEXC_PTR.PQEXP_PTR)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == \old(group_ptr.GRPHAEXC_PTR.PQEXP_PTR)
group_ptr.GRPHAEXC_PTR == \old(group_ptr.GRPHAEXC_PTR)
group_ptr.GRPHAEXC_PTR.[0] == \old(group_ptr.GRPHAEXC_PTR.[0])
group_ptr.GRPHAEXC_PTR.TYPE == return
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, \old(group_ptr.GRPHAEXC_PTR.UNIF_VAL))
group_ptr.GRPHAEXC_PTR.PHASE_UNIT == return
group_ptr.ERR_PTR == \old(group_ptr.ERR_PTR)
group_ptr.FAIL_PTR == \old(group_ptr.FAIL_PTR)
group_ptr.NUM_OF_NODES == return
group_ptr.SHAPE == return
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, group_ptr.QSIZE)
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.GRID_PTR.PSTEP))
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.GRID_PTR.QSTEP))
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.ELEM_PTR.GAIN))
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.ADDREM_PTR.NODE_PTR.THEA))
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.ADDREM_PTR.NODE_PTR.PHEA))
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.ADDREM_PTR.NODE_PTR.PSEA))
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.PSIZE))
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.QSIZE))
group_ptr.BUILT == return
return == \old(group_ptr.GRID_PTR.PQSTEP_UNIT)
return == \old(group_ptr.ELEM_PTR.TYPE)
return == \old(group_ptr.ELEM_PTR.RADIUS_UNIT)
return == \old(group_ptr.ELEM_PTR.MODEL)
return == \old(group_ptr.ELEM_PTR.POLARIZATION)
return == \old(group_ptr.ELEM_PTR.PHEPOL_UNIT)
return == \old(group_ptr.ELEM_PTR.DIRECTION)
return == \old(group_ptr.ELEM_PTR.GAIN_UNIT)
return == \old(group_ptr.ELEM_PTR.NPORTS)
return == \old(group_ptr.ADDREM_PTR.ADDREM_TYPE)
return == \old(group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT)
return == \old(group_ptr.GRAMPEXC_PTR.AMP_UNIT)
return == \old(group_ptr.GRPHAEXC_PTR.TYPE)
return == \old(group_ptr.GRPHAEXC_PTR.PHASE_UNIT)
return == \old(group_ptr.NUM_OF_NODES)
return == \old(group_ptr.SHAPE)
return == \old(group_ptr.BUILT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
group_ptr.[0] != null
group_ptr.GRID_PTR != null
group_ptr.GRID_PTR.LEVEL == 1
group_ptr.GRID_PTR.TYPE == 2
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, 60.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, 86.0)
group_ptr.ELEM_PTR != null
group_ptr.ELEM_PTR.[0] != null
group_ptr.ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, 90.0)
group_ptr.ELEM_PTR.PORT_PTR != null
group_ptr.ELEM_PTR.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, 1.0)
group_ptr.ELEM_PTR.PORT_PTR.NEXT == null
group_ptr.ADDREM_PTR != null
group_ptr.ADDREM_PTR.[0] != null
group_ptr.ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.ADDREM_PTR.NODE_PTR != null
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.ADDREM_PTR.NEXT == null
group_ptr.GRAMPEXC_PTR != null
group_ptr.GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.GRPHAEXC_PTR != null
group_ptr.GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.ERR_PTR == null
group_ptr.FAIL_PTR == null
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, 0.0)
group_ptr.GEOMNODE_PTR == null
group_ptr.SUPER_GROUP_PTR != null
return == 0
===========================================================================
..fixsgrid():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME grid grid[0] grid->NAME grid->LEVEL grid->TYPE grid->ORIENT grid->ANGLE grid->ANGLE_UNIT grid->PSTEP grid->QSTEP grid->PQSTEP_UNIT grid->PX grid->PY grid->QX grid->QY grid->PQXY_UNIT grid->ROT_ANGLE
daikon.Quant.fuzzy.eq(grid.PSTEP, grid.QSTEP)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
grid != null
grid.LEVEL == 1
grid.TYPE == 2
daikon.Quant.fuzzy.eq(grid.PSTEP, 0.0)
grid.PQSTEP_UNIT == 0
===========================================================================
..fixsgrid():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME grid grid[0] grid->NAME grid->LEVEL grid->TYPE grid->ORIENT grid->ANGLE grid->ANGLE_UNIT grid->PSTEP grid->QSTEP grid->PQSTEP_UNIT grid->PX grid->PY grid->QX grid->QY grid->PQXY_UNIT grid->ROT_ANGLE return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(grid) orig(grid[0]) orig(grid->NAME) orig(grid->LEVEL) orig(grid->TYPE) orig(grid->ORIENT) orig(grid->ANGLE) orig(grid->ANGLE_UNIT) orig(grid->PSTEP) orig(grid->QSTEP) orig(grid->PQSTEP_UNIT) orig(grid->PX) orig(grid->PY) orig(grid->QX) orig(grid->QY) orig(grid->PQXY_UNIT) orig(grid->ROT_ANGLE)
assignable grid[0], grid->NAME, grid->ORIENT, grid->ANGLE, grid->ANGLE_UNIT, grid->PX, grid->PY, grid->QX, grid->QY, grid->PQXY_UNIT, grid->ROT_ANGLE
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
grid.LEVEL == \old(grid.LEVEL)
grid.TYPE == \old(grid.TYPE)
grid.ANGLE_UNIT == return
daikon.Quant.fuzzy.eq(grid.PSTEP, grid.QSTEP)
daikon.Quant.fuzzy.eq(grid.PSTEP, grid.ROT_ANGLE)
daikon.Quant.fuzzy.eq(grid.PSTEP, \old(grid.PSTEP))
daikon.Quant.fuzzy.eq(grid.PSTEP, \old(grid.QSTEP))
grid.PQSTEP_UNIT == return
grid.PQXY_UNIT == return
return == \old(grid.PQSTEP_UNIT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
grid.LEVEL == 1
grid.TYPE == 2
daikon.Quant.fuzzy.eq(grid.ANGLE, 60.0)
daikon.Quant.fuzzy.eq(grid.PSTEP, 0.0)
return == 0
===========================================================================
..floatsup():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME
::UserNames.equals(::Keywords)
::UserNames.equals(::ErrorMessages)
::UserNames.equals(::MOSErrors)
::UserNames.equals("")
::GLOBLE_FILENAME.equals("gr2712")
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..floatsup():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME)
::UserNames.equals(::Keywords)
::UserNames.equals(::ErrorMessages)
::UserNames.equals(::MOSErrors)
::UserNames.equals(\old(::UserNames))
::UserNames.equals(\old(::Keywords))
::UserNames.equals(\old(::ErrorMessages))
::UserNames.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("")
::GLOBLE_FILENAME.equals("gr2712")
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..geomspec():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] geometry_ptr geometry_ptr[0] radius_ptr radius_ptr[0] radius_unit_ptr radius_unit_ptr[0] pdim_ptr pdim_ptr[0] qdim_ptr qdim_ptr[0] pqdim_unit_ptr pqdim_unit_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 5
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 84
p1.PREV.PREV.LINE_NUM == 4
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
geometry_ptr != null
radius_ptr != null
radius_unit_ptr != null
pdim_ptr != null
qdim_ptr != null
pqdim_unit_ptr != null
===========================================================================
..geomspec():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] geometry_ptr geometry_ptr[0] radius_ptr radius_ptr[0] radius_unit_ptr radius_unit_ptr[0] pdim_ptr pdim_ptr[0] qdim_ptr qdim_ptr[0] pqdim_unit_ptr pqdim_unit_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(geometry_ptr) orig(geometry_ptr[0]) orig(radius_ptr) orig(radius_ptr[0]) orig(radius_unit_ptr) orig(radius_unit_ptr[0]) orig(pdim_ptr) orig(pdim_ptr[0]) orig(qdim_ptr) orig(qdim_ptr[0]) orig(pqdim_unit_ptr) orig(pqdim_unit_ptr[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->LINE_NUM, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], geometry_ptr[0], radius_ptr[0], radius_unit_ptr[0], pdim_ptr[0], qdim_ptr[0], pqdim_unit_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
radius_unit_ptr.[0] == return
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 5
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 84
p1.PREV.PREV.LINE_NUM == 4
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 65
pp2.[0].LINE_NUM == 7
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 51
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
geometry_ptr.[0] == 1
daikon.Quant.fuzzy.eq(radius_ptr.[0], 43.0)
return == 0
===========================================================================
..glvainit():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME
::UserNames.equals(::Keywords)
::UserNames.equals(::ErrorMessages)
::UserNames.equals(::MOSErrors)
::UserNames.equals("")
::GLOBLE_FILENAME.equals("gr2712")
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..glvainit():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME)
assignable ::Keywords, ::ErrorMessages, ::MOSErrors
::UserNames.equals(\old(::UserNames))
::UserNames.equals(\old(::Keywords))
::UserNames.equals(\old(::ErrorMessages))
::UserNames.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::MOSErrors.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..grampexc():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] grampexc_ptr grampexc_ptr[0] grampexc_ptr[0][0] grampexc_ptr[0]->TYPE grampexc_ptr[0]->UNIF_VAL grampexc_ptr[0]->CENTRE grampexc_ptr[0]->P1_ET grampexc_ptr[0]->P2_ET grampexc_ptr[0]->Q1_ET grampexc_ptr[0]->Q2_ET grampexc_ptr[0]->AMP_UNIT grampexc_ptr[0]->PQEXP_PTR grampexc_ptr[0]->PQEXP_PTR[0] grampexc_ptr[0]->PQEXP_PTR->dummy
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 65
p1.LINE_NUM == 10
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 78
p1.PREV.PREV.LINE_NUM == 9
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
grampexc_ptr != null
grampexc_ptr.[0] == null
===========================================================================
..grampexc():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] grampexc_ptr grampexc_ptr[0] grampexc_ptr[0][0] grampexc_ptr[0]->TYPE grampexc_ptr[0]->UNIF_VAL grampexc_ptr[0]->CENTRE grampexc_ptr[0]->P1_ET grampexc_ptr[0]->P2_ET grampexc_ptr[0]->Q1_ET grampexc_ptr[0]->Q2_ET grampexc_ptr[0]->AMP_UNIT grampexc_ptr[0]->PQEXP_PTR grampexc_ptr[0]->PQEXP_PTR[0] grampexc_ptr[0]->PQEXP_PTR->dummy return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(grampexc_ptr) orig(grampexc_ptr[0]) orig(grampexc_ptr[0][0]) orig(grampexc_ptr[0]->TYPE) orig(grampexc_ptr[0]->UNIF_VAL) orig(grampexc_ptr[0]->CENTRE) orig(grampexc_ptr[0]->P1_ET) orig(grampexc_ptr[0]->P2_ET) orig(grampexc_ptr[0]->Q1_ET) orig(grampexc_ptr[0]->Q2_ET) orig(grampexc_ptr[0]->AMP_UNIT) orig(grampexc_ptr[0]->PQEXP_PTR) orig(grampexc_ptr[0]->PQEXP_PTR[0]) orig(grampexc_ptr[0]->PQEXP_PTR->dummy)
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->LINE_NUM, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], grampexc_ptr[0], grampexc_ptr[0][0], grampexc_ptr[0]->TYPE, grampexc_ptr[0]->UNIF_VAL, grampexc_ptr[0]->CENTRE, grampexc_ptr[0]->P1_ET, grampexc_ptr[0]->P2_ET, grampexc_ptr[0]->Q1_ET, grampexc_ptr[0]->Q2_ET, grampexc_ptr[0]->AMP_UNIT, grampexc_ptr[0]->PQEXP_PTR, grampexc_ptr[0]->PQEXP_PTR[0], grampexc_ptr[0]->PQEXP_PTR->dummy
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
grampexc_ptr.[0].AMP_UNIT == return
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 65
p1.LINE_NUM == 10
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 78
p1.PREV.PREV.LINE_NUM == 9
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 80
pp2.[0].LINE_NUM == 11
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 53
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
grampexc_ptr.[0] != null
grampexc_ptr.[0].[0] != null
grampexc_ptr.[0].TYPE == 1
daikon.Quant.fuzzy.eq(grampexc_ptr.[0].CENTRE, 29.0)
daikon.Quant.fuzzy.eq(grampexc_ptr.[0].P1_ET, 25.0)
daikon.Quant.fuzzy.eq(grampexc_ptr.[0].P2_ET, 22.0)
daikon.Quant.fuzzy.eq(grampexc_ptr.[0].Q1_ET, 34.0)
grampexc_ptr.[0].PQEXP_PTR == null
return == 0
===========================================================================
..greldef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] grid_ptr grid_ptr[0] grid_ptr[0][0] grid_ptr[0]->NAME grid_ptr[0]->LEVEL grid_ptr[0]->TYPE grid_ptr[0]->ORIENT grid_ptr[0]->ANGLE grid_ptr[0]->ANGLE_UNIT grid_ptr[0]->PSTEP grid_ptr[0]->QSTEP grid_ptr[0]->PQSTEP_UNIT grid_ptr[0]->PX grid_ptr[0]->PY grid_ptr[0]->QX grid_ptr[0]->QY grid_ptr[0]->PQXY_UNIT grid_ptr[0]->ROT_ANGLE elem_ptr elem_ptr[0] elem_ptr[0][0] elem_ptr[0]->TYPE elem_ptr[0]->NAME elem_ptr[0]->LEVEL elem_ptr[0]->GEOMETRY elem_ptr[0]->RADIUS elem_ptr[0]->RADIUS_UNIT elem_ptr[0]->PDIM elem_ptr[0]->QDIM elem_ptr[0]->PQDIM_UNIT elem_ptr[0]->MODEL elem_ptr[0]->EXP elem_ptr[0]->ANGLEE elem_ptr[0]->ANGLEH elem_ptr[0]->ANGLE_UNIT elem_ptr[0]->TAPERE elem_ptr[0]->TAPERH elem_ptr[0]->TAPER_UNIT elem_ptr[0]->POLARIZATION elem_ptr[0]->PHEPOL elem_ptr[0]->PHEPOL_UNIT elem_ptr[0]->DIRECTION elem_ptr[0]->GAIN elem_ptr[0]->GAIN_UNIT elem_ptr[0]->NPORTS elem_ptr[0]->PORT_PTR elem_ptr[0]->PORT_PTR[0] elem_ptr[0]->PORT_PTR->PORTNUM elem_ptr[0]->PORT_PTR->AMP elem_ptr[0]->PORT_PTR->AMP_UNIT elem_ptr[0]->PORT_PTR->PSC elem_ptr[0]->PORT_PTR->PSC_UNIT elem_ptr[0]->PORT_PTR->PSH elem_ptr[0]->PORT_PTR->PSH_UNIT elem_ptr[0]->PORT_PTR->PPA elem_ptr[0]->PORT_PTR->PPA_UNIT elem_ptr[0]->PORT_PTR->PHEPOL elem_ptr[0]->PORT_PTR->PHEPOL_UNIT elem_ptr[0]->PORT_PTR->OMIT_POL elem_ptr[0]->PORT_PTR->NEXT elem_ptr[0]->PORT_PTR->NEXT[0] elem_ptr[0]->PORT_PTR->NEXT->PORTNUM elem_ptr[0]->PORT_PTR->NEXT->AMP elem_ptr[0]->PORT_PTR->NEXT->AMP_UNIT elem_ptr[0]->PORT_PTR->NEXT->PSC elem_ptr[0]->PORT_PTR->NEXT->PSC_UNIT elem_ptr[0]->PORT_PTR->NEXT->PSH elem_ptr[0]->PORT_PTR->NEXT->PSH_UNIT elem_ptr[0]->PORT_PTR->NEXT->PPA elem_ptr[0]->PORT_PTR->NEXT->PPA_UNIT elem_ptr[0]->PORT_PTR->NEXT->PHEPOL elem_ptr[0]->PORT_PTR->NEXT->PHEPOL_UNIT elem_ptr[0]->PORT_PTR->NEXT->OMIT_POL elem_ptr[0]->PORT_PTR->NEXT->NEXT elem_ptr[0]->PORT_PTR->NEXT->NEXT[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 3
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 112
p1.PREV.PREV.LINE_NUM == 1
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
grid_ptr != null
grid_ptr.[0] == null
elem_ptr != null
elem_ptr.[0] == null
===========================================================================
..greldef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] grid_ptr grid_ptr[0] grid_ptr[0][0] grid_ptr[0]->NAME grid_ptr[0]->LEVEL grid_ptr[0]->TYPE grid_ptr[0]->ORIENT grid_ptr[0]->ANGLE grid_ptr[0]->ANGLE_UNIT grid_ptr[0]->PSTEP grid_ptr[0]->QSTEP grid_ptr[0]->PQSTEP_UNIT grid_ptr[0]->PX grid_ptr[0]->PY grid_ptr[0]->QX grid_ptr[0]->QY grid_ptr[0]->PQXY_UNIT grid_ptr[0]->ROT_ANGLE elem_ptr elem_ptr[0] elem_ptr[0][0] elem_ptr[0]->TYPE elem_ptr[0]->NAME elem_ptr[0]->LEVEL elem_ptr[0]->GEOMETRY elem_ptr[0]->RADIUS elem_ptr[0]->RADIUS_UNIT elem_ptr[0]->PDIM elem_ptr[0]->QDIM elem_ptr[0]->PQDIM_UNIT elem_ptr[0]->MODEL elem_ptr[0]->EXP elem_ptr[0]->ANGLEE elem_ptr[0]->ANGLEH elem_ptr[0]->ANGLE_UNIT elem_ptr[0]->TAPERE elem_ptr[0]->TAPERH elem_ptr[0]->TAPER_UNIT elem_ptr[0]->POLARIZATION elem_ptr[0]->PHEPOL elem_ptr[0]->PHEPOL_UNIT elem_ptr[0]->DIRECTION elem_ptr[0]->GAIN elem_ptr[0]->GAIN_UNIT elem_ptr[0]->NPORTS elem_ptr[0]->PORT_PTR elem_ptr[0]->PORT_PTR[0] elem_ptr[0]->PORT_PTR->PORTNUM elem_ptr[0]->PORT_PTR->AMP elem_ptr[0]->PORT_PTR->AMP_UNIT elem_ptr[0]->PORT_PTR->PSC elem_ptr[0]->PORT_PTR->PSC_UNIT elem_ptr[0]->PORT_PTR->PSH elem_ptr[0]->PORT_PTR->PSH_UNIT elem_ptr[0]->PORT_PTR->PPA elem_ptr[0]->PORT_PTR->PPA_UNIT elem_ptr[0]->PORT_PTR->PHEPOL elem_ptr[0]->PORT_PTR->PHEPOL_UNIT elem_ptr[0]->PORT_PTR->OMIT_POL elem_ptr[0]->PORT_PTR->NEXT elem_ptr[0]->PORT_PTR->NEXT[0] elem_ptr[0]->PORT_PTR->NEXT->PORTNUM elem_ptr[0]->PORT_PTR->NEXT->AMP elem_ptr[0]->PORT_PTR->NEXT->AMP_UNIT elem_ptr[0]->PORT_PTR->NEXT->PSC elem_ptr[0]->PORT_PTR->NEXT->PSC_UNIT elem_ptr[0]->PORT_PTR->NEXT->PSH elem_ptr[0]->PORT_PTR->NEXT->PSH_UNIT elem_ptr[0]->PORT_PTR->NEXT->PPA elem_ptr[0]->PORT_PTR->NEXT->PPA_UNIT elem_ptr[0]->PORT_PTR->NEXT->PHEPOL elem_ptr[0]->PORT_PTR->NEXT->PHEPOL_UNIT elem_ptr[0]->PORT_PTR->NEXT->OMIT_POL elem_ptr[0]->PORT_PTR->NEXT->NEXT elem_ptr[0]->PORT_PTR->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(grid_ptr) orig(grid_ptr[0]) orig(grid_ptr[0][0]) orig(grid_ptr[0]->NAME) orig(grid_ptr[0]->LEVEL) orig(grid_ptr[0]->TYPE) orig(grid_ptr[0]->ORIENT) orig(grid_ptr[0]->ANGLE) orig(grid_ptr[0]->ANGLE_UNIT) orig(grid_ptr[0]->PSTEP) orig(grid_ptr[0]->QSTEP) orig(grid_ptr[0]->PQSTEP_UNIT) orig(grid_ptr[0]->PX) orig(grid_ptr[0]->PY) orig(grid_ptr[0]->QX) orig(grid_ptr[0]->QY) orig(grid_ptr[0]->PQXY_UNIT) orig(grid_ptr[0]->ROT_ANGLE) orig(elem_ptr) orig(elem_ptr[0]) orig(elem_ptr[0][0]) orig(elem_ptr[0]->TYPE) orig(elem_ptr[0]->NAME) orig(elem_ptr[0]->LEVEL) orig(elem_ptr[0]->GEOMETRY) orig(elem_ptr[0]->RADIUS) orig(elem_ptr[0]->RADIUS_UNIT) orig(elem_ptr[0]->PDIM) orig(elem_ptr[0]->QDIM) orig(elem_ptr[0]->PQDIM_UNIT) orig(elem_ptr[0]->MODEL) orig(elem_ptr[0]->EXP) orig(elem_ptr[0]->ANGLEE) orig(elem_ptr[0]->ANGLEH) orig(elem_ptr[0]->ANGLE_UNIT) orig(elem_ptr[0]->TAPERE) orig(elem_ptr[0]->TAPERH) orig(elem_ptr[0]->TAPER_UNIT) orig(elem_ptr[0]->POLARIZATION) orig(elem_ptr[0]->PHEPOL) orig(elem_ptr[0]->PHEPOL_UNIT) orig(elem_ptr[0]->DIRECTION) orig(elem_ptr[0]->GAIN) orig(elem_ptr[0]->GAIN_UNIT) orig(elem_ptr[0]->NPORTS) orig(elem_ptr[0]->PORT_PTR) orig(elem_ptr[0]->PORT_PTR[0]) orig(elem_ptr[0]->PORT_PTR->PORTNUM) orig(elem_ptr[0]->PORT_PTR->AMP) orig(elem_ptr[0]->PORT_PTR->AMP_UNIT) orig(elem_ptr[0]->PORT_PTR->PSC) orig(elem_ptr[0]->PORT_PTR->PSC_UNIT) orig(elem_ptr[0]->PORT_PTR->PSH) orig(elem_ptr[0]->PORT_PTR->PSH_UNIT) orig(elem_ptr[0]->PORT_PTR->PPA) orig(elem_ptr[0]->PORT_PTR->PPA_UNIT) orig(elem_ptr[0]->PORT_PTR->PHEPOL) orig(elem_ptr[0]->PORT_PTR->PHEPOL_UNIT) orig(elem_ptr[0]->PORT_PTR->OMIT_POL) orig(elem_ptr[0]->PORT_PTR->NEXT) orig(elem_ptr[0]->PORT_PTR->NEXT[0]) orig(elem_ptr[0]->PORT_PTR->NEXT->PORTNUM) orig(elem_ptr[0]->PORT_PTR->NEXT->AMP) orig(elem_ptr[0]->PORT_PTR->NEXT->AMP_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->PSC) orig(elem_ptr[0]->PORT_PTR->NEXT->PSC_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->PSH) orig(elem_ptr[0]->PORT_PTR->NEXT->PSH_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->PPA) orig(elem_ptr[0]->PORT_PTR->NEXT->PPA_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->PHEPOL) orig(elem_ptr[0]->PORT_PTR->NEXT->PHEPOL_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->OMIT_POL) orig(elem_ptr[0]->PORT_PTR->NEXT->NEXT) orig(elem_ptr[0]->PORT_PTR->NEXT->NEXT[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->LINE_NUM, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], grid_ptr[0], grid_ptr[0][0], grid_ptr[0]->NAME, grid_ptr[0]->LEVEL, grid_ptr[0]->TYPE, grid_ptr[0]->ORIENT, grid_ptr[0]->ANGLE, grid_ptr[0]->ANGLE_UNIT, grid_ptr[0]->PSTEP, grid_ptr[0]->QSTEP, grid_ptr[0]->PQSTEP_UNIT, grid_ptr[0]->PX, grid_ptr[0]->PY, grid_ptr[0]->QX, grid_ptr[0]->QY, grid_ptr[0]->PQXY_UNIT, grid_ptr[0]->ROT_ANGLE, elem_ptr[0], elem_ptr[0][0], elem_ptr[0]->TYPE, elem_ptr[0]->NAME, elem_ptr[0]->LEVEL, elem_ptr[0]->GEOMETRY, elem_ptr[0]->RADIUS, elem_ptr[0]->RADIUS_UNIT, elem_ptr[0]->PDIM, elem_ptr[0]->QDIM, elem_ptr[0]->PQDIM_UNIT, elem_ptr[0]->MODEL, elem_ptr[0]->EXP, elem_ptr[0]->ANGLEE, elem_ptr[0]->ANGLEH, elem_ptr[0]->ANGLE_UNIT, elem_ptr[0]->TAPERE, elem_ptr[0]->TAPERH, elem_ptr[0]->TAPER_UNIT, elem_ptr[0]->POLARIZATION, elem_ptr[0]->PHEPOL, elem_ptr[0]->PHEPOL_UNIT, elem_ptr[0]->DIRECTION, elem_ptr[0]->GAIN, elem_ptr[0]->GAIN_UNIT, elem_ptr[0]->NPORTS, elem_ptr[0]->PORT_PTR, elem_ptr[0]->PORT_PTR[0], elem_ptr[0]->PORT_PTR->PORTNUM, elem_ptr[0]->PORT_PTR->AMP, elem_ptr[0]->PORT_PTR->AMP_UNIT, elem_ptr[0]->PORT_PTR->PSC, elem_ptr[0]->PORT_PTR->PSC_UNIT, elem_ptr[0]->PORT_PTR->PSH, elem_ptr[0]->PORT_PTR->PSH_UNIT, elem_ptr[0]->PORT_PTR->PPA, elem_ptr[0]->PORT_PTR->PPA_UNIT, elem_ptr[0]->PORT_PTR->PHEPOL, elem_ptr[0]->PORT_PTR->PHEPOL_UNIT, elem_ptr[0]->PORT_PTR->OMIT_POL, elem_ptr[0]->PORT_PTR->NEXT, elem_ptr[0]->PORT_PTR->NEXT[0], elem_ptr[0]->PORT_PTR->NEXT->PORTNUM, elem_ptr[0]->PORT_PTR->NEXT->AMP, elem_ptr[0]->PORT_PTR->NEXT->AMP_UNIT, elem_ptr[0]->PORT_PTR->NEXT->PSC, elem_ptr[0]->PORT_PTR->NEXT->PSC_UNIT, elem_ptr[0]->PORT_PTR->NEXT->PSH, elem_ptr[0]->PORT_PTR->NEXT->PSH_UNIT, elem_ptr[0]->PORT_PTR->NEXT->PPA, elem_ptr[0]->PORT_PTR->NEXT->PPA_UNIT, elem_ptr[0]->PORT_PTR->NEXT->PHEPOL, elem_ptr[0]->PORT_PTR->NEXT->PHEPOL_UNIT, elem_ptr[0]->PORT_PTR->NEXT->OMIT_POL, elem_ptr[0]->PORT_PTR->NEXT->NEXT, elem_ptr[0]->PORT_PTR->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == elem_ptr.[0].GEOMETRY
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
grid_ptr.[0].PQSTEP_UNIT == return
elem_ptr.[0].TYPE == return
elem_ptr.[0].GEOMETRY == \old(p1.PREV.PREV.LINE_NUM)
elem_ptr.[0].GEOMETRY == \old(pp2.[0].PREV.PREV.LINE_NUM)
elem_ptr.[0].RADIUS_UNIT == return
elem_ptr.[0].MODEL == return
elem_ptr.[0].POLARIZATION == return
elem_ptr.[0].PHEPOL_UNIT == return
elem_ptr.[0].DIRECTION == return
elem_ptr.[0].GAIN_UNIT == return
elem_ptr.[0].NPORTS == return
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 3
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 112
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 65
pp2.[0].LINE_NUM == 7
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 51
pp2.[0].PREV.PREV.LINE_NUM == 5
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
grid_ptr.[0] != null
grid_ptr.[0].TYPE == 2
daikon.Quant.fuzzy.eq(grid_ptr.[0].PSTEP, 0.0)
elem_ptr.[0] != null
elem_ptr.[0].[0] != null
elem_ptr.[0].NAME.equals("")
elem_ptr.[0].GEOMETRY == 1
daikon.Quant.fuzzy.eq(elem_ptr.[0].RADIUS, 43.0)
daikon.Quant.fuzzy.eq(elem_ptr.[0].PHEPOL, 90.0)
elem_ptr.[0].PORT_PTR == null
return == 0
::UserNames.contains(elem_ptr.[0].NAME)
::Keywords.contains(elem_ptr.[0].NAME)
::ErrorMessages.contains(elem_ptr.[0].NAME)
::MOSErrors.contains(elem_ptr.[0].NAME)
::GLOBLE_FILENAME.contains(elem_ptr.[0].NAME)
===========================================================================
..grexcdef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] grampexc_ptr grampexc_ptr[0] grampexc_ptr[0][0] grampexc_ptr[0]->TYPE grampexc_ptr[0]->UNIF_VAL grampexc_ptr[0]->CENTRE grampexc_ptr[0]->P1_ET grampexc_ptr[0]->P2_ET grampexc_ptr[0]->Q1_ET grampexc_ptr[0]->Q2_ET grampexc_ptr[0]->AMP_UNIT grampexc_ptr[0]->PQEXP_PTR grampexc_ptr[0]->PQEXP_PTR[0] grampexc_ptr[0]->PQEXP_PTR->dummy grphaexc_ptr grphaexc_ptr[0] grphaexc_ptr[0][0] grphaexc_ptr[0]->TYPE grphaexc_ptr[0]->UNIF_VAL grphaexc_ptr[0]->CENTRE grphaexc_ptr[0]->P1_EP grphaexc_ptr[0]->P2_EP grphaexc_ptr[0]->Q1_EP grphaexc_ptr[0]->Q2_EP grphaexc_ptr[0]->DIRECTION grphaexc_ptr[0]->OMIT_ANGLE grphaexc_ptr[0]->ANGLE_START grphaexc_ptr[0]->ANGLE_STEP grphaexc_ptr[0]->OMIT_PHASE grphaexc_ptr[0]->PHASE_START grphaexc_ptr[0]->PHASE_STEP grphaexc_ptr[0]->U grphaexc_ptr[0]->V grphaexc_ptr[0]->THETA grphaexc_ptr[0]->PHI grphaexc_ptr[0]->PQEXP_PTR grphaexc_ptr[0]->PQEXP_PTR[0] grphaexc_ptr[0]->PQEXP_PTR->dummy grphaexc_ptr[0]->ANGLE_UNIT grphaexc_ptr[0]->PHASE_UNIT
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 9
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 49
p1.PREV.PREV.LINE_NUM == 7
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
grampexc_ptr != null
grampexc_ptr.[0] == null
grphaexc_ptr != null
grphaexc_ptr.[0] == null
===========================================================================
..grexcdef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] grampexc_ptr grampexc_ptr[0] grampexc_ptr[0][0] grampexc_ptr[0]->TYPE grampexc_ptr[0]->UNIF_VAL grampexc_ptr[0]->CENTRE grampexc_ptr[0]->P1_ET grampexc_ptr[0]->P2_ET grampexc_ptr[0]->Q1_ET grampexc_ptr[0]->Q2_ET grampexc_ptr[0]->AMP_UNIT grampexc_ptr[0]->PQEXP_PTR grampexc_ptr[0]->PQEXP_PTR[0] grampexc_ptr[0]->PQEXP_PTR->dummy grphaexc_ptr grphaexc_ptr[0] grphaexc_ptr[0][0] grphaexc_ptr[0]->TYPE grphaexc_ptr[0]->UNIF_VAL grphaexc_ptr[0]->CENTRE grphaexc_ptr[0]->P1_EP grphaexc_ptr[0]->P2_EP grphaexc_ptr[0]->Q1_EP grphaexc_ptr[0]->Q2_EP grphaexc_ptr[0]->DIRECTION grphaexc_ptr[0]->OMIT_ANGLE grphaexc_ptr[0]->ANGLE_START grphaexc_ptr[0]->ANGLE_STEP grphaexc_ptr[0]->OMIT_PHASE grphaexc_ptr[0]->PHASE_START grphaexc_ptr[0]->PHASE_STEP grphaexc_ptr[0]->U grphaexc_ptr[0]->V grphaexc_ptr[0]->THETA grphaexc_ptr[0]->PHI grphaexc_ptr[0]->PQEXP_PTR grphaexc_ptr[0]->PQEXP_PTR[0] grphaexc_ptr[0]->PQEXP_PTR->dummy grphaexc_ptr[0]->ANGLE_UNIT grphaexc_ptr[0]->PHASE_UNIT return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(grampexc_ptr) orig(grampexc_ptr[0]) orig(grampexc_ptr[0][0]) orig(grampexc_ptr[0]->TYPE) orig(grampexc_ptr[0]->UNIF_VAL) orig(grampexc_ptr[0]->CENTRE) orig(grampexc_ptr[0]->P1_ET) orig(grampexc_ptr[0]->P2_ET) orig(grampexc_ptr[0]->Q1_ET) orig(grampexc_ptr[0]->Q2_ET) orig(grampexc_ptr[0]->AMP_UNIT) orig(grampexc_ptr[0]->PQEXP_PTR) orig(grampexc_ptr[0]->PQEXP_PTR[0]) orig(grampexc_ptr[0]->PQEXP_PTR->dummy) orig(grphaexc_ptr) orig(grphaexc_ptr[0]) orig(grphaexc_ptr[0][0]) orig(grphaexc_ptr[0]->TYPE) orig(grphaexc_ptr[0]->UNIF_VAL) orig(grphaexc_ptr[0]->CENTRE) orig(grphaexc_ptr[0]->P1_EP) orig(grphaexc_ptr[0]->P2_EP) orig(grphaexc_ptr[0]->Q1_EP) orig(grphaexc_ptr[0]->Q2_EP) orig(grphaexc_ptr[0]->DIRECTION) orig(grphaexc_ptr[0]->OMIT_ANGLE) orig(grphaexc_ptr[0]->ANGLE_START) orig(grphaexc_ptr[0]->ANGLE_STEP) orig(grphaexc_ptr[0]->OMIT_PHASE) orig(grphaexc_ptr[0]->PHASE_START) orig(grphaexc_ptr[0]->PHASE_STEP) orig(grphaexc_ptr[0]->U) orig(grphaexc_ptr[0]->V) orig(grphaexc_ptr[0]->THETA) orig(grphaexc_ptr[0]->PHI) orig(grphaexc_ptr[0]->PQEXP_PTR) orig(grphaexc_ptr[0]->PQEXP_PTR[0]) orig(grphaexc_ptr[0]->PQEXP_PTR->dummy) orig(grphaexc_ptr[0]->ANGLE_UNIT) orig(grphaexc_ptr[0]->PHASE_UNIT)
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->LINE_NUM, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], grampexc_ptr[0], grampexc_ptr[0][0], grampexc_ptr[0]->TYPE, grampexc_ptr[0]->UNIF_VAL, grampexc_ptr[0]->CENTRE, grampexc_ptr[0]->P1_ET, grampexc_ptr[0]->P2_ET, grampexc_ptr[0]->Q1_ET, grampexc_ptr[0]->Q2_ET, grampexc_ptr[0]->AMP_UNIT, grampexc_ptr[0]->PQEXP_PTR, grampexc_ptr[0]->PQEXP_PTR[0], grampexc_ptr[0]->PQEXP_PTR->dummy, grphaexc_ptr[0], grphaexc_ptr[0][0], grphaexc_ptr[0]->TYPE, grphaexc_ptr[0]->UNIF_VAL, grphaexc_ptr[0]->CENTRE, grphaexc_ptr[0]->P1_EP, grphaexc_ptr[0]->P2_EP, grphaexc_ptr[0]->Q1_EP, grphaexc_ptr[0]->Q2_EP, grphaexc_ptr[0]->DIRECTION, grphaexc_ptr[0]->OMIT_ANGLE, grphaexc_ptr[0]->ANGLE_START, grphaexc_ptr[0]->ANGLE_STEP, grphaexc_ptr[0]->OMIT_PHASE, grphaexc_ptr[0]->PHASE_START, grphaexc_ptr[0]->PHASE_STEP, grphaexc_ptr[0]->U, grphaexc_ptr[0]->V, grphaexc_ptr[0]->THETA, grphaexc_ptr[0]->PHI, grphaexc_ptr[0]->PQEXP_PTR, grphaexc_ptr[0]->PQEXP_PTR[0], grphaexc_ptr[0]->PQEXP_PTR->dummy, grphaexc_ptr[0]->ANGLE_UNIT, grphaexc_ptr[0]->PHASE_UNIT
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
grampexc_ptr.[0].AMP_UNIT == return
grampexc_ptr.[0].PQEXP_PTR == grphaexc_ptr.[0].PQEXP_PTR
grphaexc_ptr.[0].TYPE == return
grphaexc_ptr.[0].PHASE_UNIT == return
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 9
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 49
p1.PREV.PREV.LINE_NUM == 7
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 69
pp2.[0].LINE_NUM == 12
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 57
pp2.[0].PREV.PREV.LINE_NUM == 11
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
grampexc_ptr.[0] != null
grampexc_ptr.[0].[0] != null
grampexc_ptr.[0].TYPE == 1
daikon.Quant.fuzzy.eq(grampexc_ptr.[0].CENTRE, 29.0)
daikon.Quant.fuzzy.eq(grampexc_ptr.[0].P1_ET, 25.0)
daikon.Quant.fuzzy.eq(grampexc_ptr.[0].P2_ET, 22.0)
daikon.Quant.fuzzy.eq(grampexc_ptr.[0].Q1_ET, 34.0)
grampexc_ptr.[0].PQEXP_PTR == null
grphaexc_ptr.[0] != null
grphaexc_ptr.[0].[0] != null
daikon.Quant.fuzzy.eq(grphaexc_ptr.[0].UNIF_VAL, -219.0)
return == 0
===========================================================================
..grgeodef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] addrem_ptr addrem_ptr[0] addrem_ptr[0][0] addrem_ptr[0]->ADDREM_TYPE addrem_ptr[0]->BLOCK_TYPE addrem_ptr[0]->NODE_PTR addrem_ptr[0]->NODE_PTR[0] addrem_ptr[0]->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->PCOORD addrem_ptr[0]->NODE_PTR->QCOORD addrem_ptr[0]->NODE_PTR->THEA addrem_ptr[0]->NODE_PTR->PHEA addrem_ptr[0]->NODE_PTR->PSEA addrem_ptr[0]->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT addrem_ptr[0]->NODE_PTR->NEXT[0] addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->NEXT->PCOORD addrem_ptr[0]->NODE_PTR->NEXT->QCOORD addrem_ptr[0]->NODE_PTR->NEXT->THEA addrem_ptr[0]->NODE_PTR->NEXT->PHEA addrem_ptr[0]->NODE_PTR->NEXT->PSEA addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT->NEXT addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0] addrem_ptr[0]->NEXT addrem_ptr[0]->NEXT[0] addrem_ptr[0]->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NEXT->NODE_PTR->PCOORD addrem_ptr[0]->NEXT->NODE_PTR->QCOORD addrem_ptr[0]->NEXT->NODE_PTR->THEA addrem_ptr[0]->NEXT->NODE_PTR->PHEA addrem_ptr[0]->NEXT->NODE_PTR->PSEA addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NEXT->NODE_PTR->NEXT addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0] addrem_ptr[0]->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT[0] addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT->NEXT[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 65
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 51
p1.PREV.PREV.LINE_NUM == 5
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
addrem_ptr != null
addrem_ptr.[0] == null
===========================================================================
..grgeodef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] addrem_ptr addrem_ptr[0] addrem_ptr[0][0] addrem_ptr[0]->ADDREM_TYPE addrem_ptr[0]->BLOCK_TYPE addrem_ptr[0]->NODE_PTR addrem_ptr[0]->NODE_PTR[0] addrem_ptr[0]->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->PCOORD addrem_ptr[0]->NODE_PTR->QCOORD addrem_ptr[0]->NODE_PTR->THEA addrem_ptr[0]->NODE_PTR->PHEA addrem_ptr[0]->NODE_PTR->PSEA addrem_ptr[0]->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT addrem_ptr[0]->NODE_PTR->NEXT[0] addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->NEXT->PCOORD addrem_ptr[0]->NODE_PTR->NEXT->QCOORD addrem_ptr[0]->NODE_PTR->NEXT->THEA addrem_ptr[0]->NODE_PTR->NEXT->PHEA addrem_ptr[0]->NODE_PTR->NEXT->PSEA addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT->NEXT addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0] addrem_ptr[0]->NEXT addrem_ptr[0]->NEXT[0] addrem_ptr[0]->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NEXT->NODE_PTR->PCOORD addrem_ptr[0]->NEXT->NODE_PTR->QCOORD addrem_ptr[0]->NEXT->NODE_PTR->THEA addrem_ptr[0]->NEXT->NODE_PTR->PHEA addrem_ptr[0]->NEXT->NODE_PTR->PSEA addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NEXT->NODE_PTR->NEXT addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0] addrem_ptr[0]->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT[0] addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(addrem_ptr) orig(addrem_ptr[0]) orig(addrem_ptr[0][0]) orig(addrem_ptr[0]->ADDREM_TYPE) orig(addrem_ptr[0]->BLOCK_TYPE) orig(addrem_ptr[0]->NODE_PTR) orig(addrem_ptr[0]->NODE_PTR[0]) orig(addrem_ptr[0]->NODE_PTR->OMIT_ORIENT) orig(addrem_ptr[0]->NODE_PTR->PCOORD) orig(addrem_ptr[0]->NODE_PTR->QCOORD) orig(addrem_ptr[0]->NODE_PTR->THEA) orig(addrem_ptr[0]->NODE_PTR->PHEA) orig(addrem_ptr[0]->NODE_PTR->PSEA) orig(addrem_ptr[0]->NODE_PTR->ANGLE_UNIT) orig(addrem_ptr[0]->NODE_PTR->NEXT) orig(addrem_ptr[0]->NODE_PTR->NEXT[0]) orig(addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT) orig(addrem_ptr[0]->NODE_PTR->NEXT->PCOORD) orig(addrem_ptr[0]->NODE_PTR->NEXT->QCOORD) orig(addrem_ptr[0]->NODE_PTR->NEXT->THEA) orig(addrem_ptr[0]->NODE_PTR->NEXT->PHEA) orig(addrem_ptr[0]->NODE_PTR->NEXT->PSEA) orig(addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT) orig(addrem_ptr[0]->NODE_PTR->NEXT->NEXT) orig(addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0]) orig(addrem_ptr[0]->NEXT) orig(addrem_ptr[0]->NEXT[0]) orig(addrem_ptr[0]->NEXT->ADDREM_TYPE) orig(addrem_ptr[0]->NEXT->BLOCK_TYPE) orig(addrem_ptr[0]->NEXT->NODE_PTR) orig(addrem_ptr[0]->NEXT->NODE_PTR[0]) orig(addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT) orig(addrem_ptr[0]->NEXT->NODE_PTR->PCOORD) orig(addrem_ptr[0]->NEXT->NODE_PTR->QCOORD) orig(addrem_ptr[0]->NEXT->NODE_PTR->THEA) orig(addrem_ptr[0]->NEXT->NODE_PTR->PHEA) orig(addrem_ptr[0]->NEXT->NODE_PTR->PSEA) orig(addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT) orig(addrem_ptr[0]->NEXT->NODE_PTR->NEXT) orig(addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0]) orig(addrem_ptr[0]->NEXT->NEXT) orig(addrem_ptr[0]->NEXT->NEXT[0]) orig(addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE) orig(addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE) orig(addrem_ptr[0]->NEXT->NEXT->NODE_PTR) orig(addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0]) orig(addrem_ptr[0]->NEXT->NEXT->NEXT) orig(addrem_ptr[0]->NEXT->NEXT->NEXT[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->LINE_NUM, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], addrem_ptr[0], addrem_ptr[0][0], addrem_ptr[0]->ADDREM_TYPE, addrem_ptr[0]->BLOCK_TYPE, addrem_ptr[0]->NODE_PTR, addrem_ptr[0]->NODE_PTR[0], addrem_ptr[0]->NODE_PTR->OMIT_ORIENT, addrem_ptr[0]->NODE_PTR->PCOORD, addrem_ptr[0]->NODE_PTR->QCOORD, addrem_ptr[0]->NODE_PTR->THEA, addrem_ptr[0]->NODE_PTR->PHEA, addrem_ptr[0]->NODE_PTR->PSEA, addrem_ptr[0]->NODE_PTR->ANGLE_UNIT, addrem_ptr[0]->NODE_PTR->NEXT, addrem_ptr[0]->NODE_PTR->NEXT[0], addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT, addrem_ptr[0]->NODE_PTR->NEXT->PCOORD, addrem_ptr[0]->NODE_PTR->NEXT->QCOORD, addrem_ptr[0]->NODE_PTR->NEXT->THEA, addrem_ptr[0]->NODE_PTR->NEXT->PHEA, addrem_ptr[0]->NODE_PTR->NEXT->PSEA, addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT, addrem_ptr[0]->NODE_PTR->NEXT->NEXT, addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0], addrem_ptr[0]->NEXT, addrem_ptr[0]->NEXT[0], addrem_ptr[0]->NEXT->ADDREM_TYPE, addrem_ptr[0]->NEXT->BLOCK_TYPE, addrem_ptr[0]->NEXT->NODE_PTR, addrem_ptr[0]->NEXT->NODE_PTR[0], addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT, addrem_ptr[0]->NEXT->NODE_PTR->PCOORD, addrem_ptr[0]->NEXT->NODE_PTR->QCOORD, addrem_ptr[0]->NEXT->NODE_PTR->THEA, addrem_ptr[0]->NEXT->NODE_PTR->PHEA, addrem_ptr[0]->NEXT->NODE_PTR->PSEA, addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT, addrem_ptr[0]->NEXT->NODE_PTR->NEXT, addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0], addrem_ptr[0]->NEXT->NEXT, addrem_ptr[0]->NEXT->NEXT[0], addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE, addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE, addrem_ptr[0]->NEXT->NEXT->NODE_PTR, addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0], addrem_ptr[0]->NEXT->NEXT->NEXT, addrem_ptr[0]->NEXT->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].LINE_NUM == addrem_ptr.[0].NODE_PTR.PCOORD
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
addrem_ptr.[0].ADDREM_TYPE == return
daikon.Quant.fuzzy.eq(addrem_ptr.[0].NODE_PTR.THEA, addrem_ptr.[0].NODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(addrem_ptr.[0].NODE_PTR.THEA, addrem_ptr.[0].NODE_PTR.PSEA)
addrem_ptr.[0].NODE_PTR.ANGLE_UNIT == return
addrem_ptr.[0].NEXT == \old(addrem_ptr.[0])
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 65
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 51
p1.PREV.PREV.LINE_NUM == 5
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 71
pp2.[0].LINE_NUM == 9
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 49
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
addrem_ptr.[0] != null
addrem_ptr.[0].[0] != null
addrem_ptr.[0].BLOCK_TYPE == 3
addrem_ptr.[0].NODE_PTR != null
addrem_ptr.[0].NODE_PTR.QCOORD == 1
daikon.Quant.fuzzy.eq(addrem_ptr.[0].NODE_PTR.THEA, 0.0)
addrem_ptr.[0].NODE_PTR.NEXT == null
addrem_ptr.[0].NEXT == null
return == 0
===========================================================================
..griddef1():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] grid_ptr grid_ptr[0] grid_ptr[0][0] grid_ptr[0]->NAME grid_ptr[0]->LEVEL grid_ptr[0]->TYPE grid_ptr[0]->ORIENT grid_ptr[0]->ANGLE grid_ptr[0]->ANGLE_UNIT grid_ptr[0]->PSTEP grid_ptr[0]->QSTEP grid_ptr[0]->PQSTEP_UNIT grid_ptr[0]->PX grid_ptr[0]->PY grid_ptr[0]->QX grid_ptr[0]->QY grid_ptr[0]->PQXY_UNIT grid_ptr[0]->ROT_ANGLE
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 3
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 112
p1.PREV.PREV.LINE_NUM == 1
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
grid_ptr != null
grid_ptr.[0] == null
===========================================================================
..griddef1():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] grid_ptr grid_ptr[0] grid_ptr[0][0] grid_ptr[0]->NAME grid_ptr[0]->LEVEL grid_ptr[0]->TYPE grid_ptr[0]->ORIENT grid_ptr[0]->ANGLE grid_ptr[0]->ANGLE_UNIT grid_ptr[0]->PSTEP grid_ptr[0]->QSTEP grid_ptr[0]->PQSTEP_UNIT grid_ptr[0]->PX grid_ptr[0]->PY grid_ptr[0]->QX grid_ptr[0]->QY grid_ptr[0]->PQXY_UNIT grid_ptr[0]->ROT_ANGLE return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(grid_ptr) orig(grid_ptr[0]) orig(grid_ptr[0][0]) orig(grid_ptr[0]->NAME) orig(grid_ptr[0]->LEVEL) orig(grid_ptr[0]->TYPE) orig(grid_ptr[0]->ORIENT) orig(grid_ptr[0]->ANGLE) orig(grid_ptr[0]->ANGLE_UNIT) orig(grid_ptr[0]->PSTEP) orig(grid_ptr[0]->QSTEP) orig(grid_ptr[0]->PQSTEP_UNIT) orig(grid_ptr[0]->PX) orig(grid_ptr[0]->PY) orig(grid_ptr[0]->QX) orig(grid_ptr[0]->QY) orig(grid_ptr[0]->PQXY_UNIT) orig(grid_ptr[0]->ROT_ANGLE)
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->LINE_NUM, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], grid_ptr[0], grid_ptr[0][0], grid_ptr[0]->NAME, grid_ptr[0]->LEVEL, grid_ptr[0]->TYPE, grid_ptr[0]->ORIENT, grid_ptr[0]->ANGLE, grid_ptr[0]->ANGLE_UNIT, grid_ptr[0]->PSTEP, grid_ptr[0]->QSTEP, grid_ptr[0]->PQSTEP_UNIT, grid_ptr[0]->PX, grid_ptr[0]->PY, grid_ptr[0]->QX, grid_ptr[0]->QY, grid_ptr[0]->PQXY_UNIT, grid_ptr[0]->ROT_ANGLE
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
grid_ptr.[0].PQSTEP_UNIT == return
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 3
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 112
p1.PREV.PREV.LINE_NUM == 1
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 69
pp2.[0].LINE_NUM == 4
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 76
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
grid_ptr.[0] != null
grid_ptr.[0].TYPE == 2
daikon.Quant.fuzzy.eq(grid_ptr.[0].PSTEP, 0.0)
return == 0
===========================================================================
..groupdef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] group_ptr group_ptr[0] group_ptr[0][0] group_ptr[0]->NAME group_ptr[0]->GRID_PTR group_ptr[0]->GRID_PTR[0] group_ptr[0]->GRID_PTR->NAME group_ptr[0]->GRID_PTR->LEVEL group_ptr[0]->GRID_PTR->TYPE group_ptr[0]->GRID_PTR->ORIENT group_ptr[0]->GRID_PTR->ANGLE group_ptr[0]->GRID_PTR->ANGLE_UNIT group_ptr[0]->GRID_PTR->PSTEP group_ptr[0]->GRID_PTR->QSTEP group_ptr[0]->GRID_PTR->PQSTEP_UNIT group_ptr[0]->GRID_PTR->PX group_ptr[0]->GRID_PTR->PY group_ptr[0]->GRID_PTR->QX group_ptr[0]->GRID_PTR->QY group_ptr[0]->GRID_PTR->PQXY_UNIT group_ptr[0]->GRID_PTR->ROT_ANGLE group_ptr[0]->ELEM_PTR group_ptr[0]->ELEM_PTR[0] group_ptr[0]->ELEM_PTR->TYPE group_ptr[0]->ELEM_PTR->NAME group_ptr[0]->ELEM_PTR->LEVEL group_ptr[0]->ELEM_PTR->GEOMETRY group_ptr[0]->ELEM_PTR->RADIUS group_ptr[0]->ELEM_PTR->RADIUS_UNIT group_ptr[0]->ELEM_PTR->PDIM group_ptr[0]->ELEM_PTR->QDIM group_ptr[0]->ELEM_PTR->PQDIM_UNIT group_ptr[0]->ELEM_PTR->MODEL group_ptr[0]->ELEM_PTR->EXP group_ptr[0]->ELEM_PTR->ANGLEE group_ptr[0]->ELEM_PTR->ANGLEH group_ptr[0]->ELEM_PTR->ANGLE_UNIT group_ptr[0]->ELEM_PTR->TAPERE group_ptr[0]->ELEM_PTR->TAPERH group_ptr[0]->ELEM_PTR->TAPER_UNIT group_ptr[0]->ELEM_PTR->POLARIZATION group_ptr[0]->ELEM_PTR->PHEPOL group_ptr[0]->ELEM_PTR->PHEPOL_UNIT group_ptr[0]->ELEM_PTR->DIRECTION group_ptr[0]->ELEM_PTR->GAIN group_ptr[0]->ELEM_PTR->GAIN_UNIT group_ptr[0]->ELEM_PTR->NPORTS group_ptr[0]->ELEM_PTR->PORT_PTR group_ptr[0]->ELEM_PTR->PORT_PTR[0] group_ptr[0]->ELEM_PTR->PORT_PTR->PORTNUM group_ptr[0]->ELEM_PTR->PORT_PTR->AMP group_ptr[0]->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr[0]->ELEM_PTR->PORT_PTR->PSC group_ptr[0]->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr[0]->ELEM_PTR->PORT_PTR->PSH group_ptr[0]->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr[0]->ELEM_PTR->PORT_PTR->PPA group_ptr[0]->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr[0]->ELEM_PTR->PORT_PTR->PHEPOL group_ptr[0]->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr[0]->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr[0]->ELEM_PTR->PORT_PTR->NEXT group_ptr[0]->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr[0]->ADDREM_PTR group_ptr[0]->ADDREM_PTR[0] group_ptr[0]->ADDREM_PTR->ADDREM_TYPE group_ptr[0]->ADDREM_PTR->BLOCK_TYPE group_ptr[0]->ADDREM_PTR->NODE_PTR group_ptr[0]->ADDREM_PTR->NODE_PTR[0] group_ptr[0]->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr[0]->ADDREM_PTR->NODE_PTR->PCOORD group_ptr[0]->ADDREM_PTR->NODE_PTR->QCOORD group_ptr[0]->ADDREM_PTR->NODE_PTR->THEA group_ptr[0]->ADDREM_PTR->NODE_PTR->PHEA group_ptr[0]->ADDREM_PTR->NODE_PTR->PSEA group_ptr[0]->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr[0]->ADDREM_PTR->NODE_PTR->NEXT group_ptr[0]->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr[0]->ADDREM_PTR->NEXT group_ptr[0]->ADDREM_PTR->NEXT[0] group_ptr[0]->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr[0]->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr[0]->ADDREM_PTR->NEXT->NODE_PTR group_ptr[0]->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr[0]->ADDREM_PTR->NEXT->NEXT group_ptr[0]->ADDREM_PTR->NEXT->NEXT[0] group_ptr[0]->GRAMPEXC_PTR group_ptr[0]->GRAMPEXC_PTR[0] group_ptr[0]->GRAMPEXC_PTR->TYPE group_ptr[0]->GRAMPEXC_PTR->UNIF_VAL group_ptr[0]->GRAMPEXC_PTR->CENTRE group_ptr[0]->GRAMPEXC_PTR->P1_ET group_ptr[0]->GRAMPEXC_PTR->P2_ET group_ptr[0]->GRAMPEXC_PTR->Q1_ET group_ptr[0]->GRAMPEXC_PTR->Q2_ET group_ptr[0]->GRAMPEXC_PTR->AMP_UNIT group_ptr[0]->GRAMPEXC_PTR->PQEXP_PTR group_ptr[0]->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr[0]->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr[0]->GRPHAEXC_PTR group_ptr[0]->GRPHAEXC_PTR[0] group_ptr[0]->GRPHAEXC_PTR->TYPE group_ptr[0]->GRPHAEXC_PTR->UNIF_VAL group_ptr[0]->GRPHAEXC_PTR->CENTRE group_ptr[0]->GRPHAEXC_PTR->P1_EP group_ptr[0]->GRPHAEXC_PTR->P2_EP group_ptr[0]->GRPHAEXC_PTR->Q1_EP group_ptr[0]->GRPHAEXC_PTR->Q2_EP group_ptr[0]->GRPHAEXC_PTR->DIRECTION group_ptr[0]->GRPHAEXC_PTR->OMIT_ANGLE group_ptr[0]->GRPHAEXC_PTR->ANGLE_START group_ptr[0]->GRPHAEXC_PTR->ANGLE_STEP group_ptr[0]->GRPHAEXC_PTR->OMIT_PHASE group_ptr[0]->GRPHAEXC_PTR->PHASE_START group_ptr[0]->GRPHAEXC_PTR->PHASE_STEP group_ptr[0]->GRPHAEXC_PTR->U group_ptr[0]->GRPHAEXC_PTR->V group_ptr[0]->GRPHAEXC_PTR->THETA group_ptr[0]->GRPHAEXC_PTR->PHI group_ptr[0]->GRPHAEXC_PTR->PQEXP_PTR group_ptr[0]->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr[0]->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr[0]->GRPHAEXC_PTR->ANGLE_UNIT group_ptr[0]->GRPHAEXC_PTR->PHASE_UNIT group_ptr[0]->ERR_PTR group_ptr[0]->ERR_PTR[0] group_ptr[0]->ERR_PTR->AMP_TYPE group_ptr[0]->ERR_PTR->AMP_STDEV group_ptr[0]->ERR_PTR->AMP_LINOFFS group_ptr[0]->ERR_PTR->AMP_LINSTEP group_ptr[0]->ERR_PTR->AMP_2NDCENT group_ptr[0]->ERR_PTR->AMP_2NDPET group_ptr[0]->ERR_PTR->AMP_2NDQET group_ptr[0]->ERR_PTR->AMP_UNIT group_ptr[0]->ERR_PTR->PHASE_TYPE group_ptr[0]->ERR_PTR->PHASE_STDEV group_ptr[0]->ERR_PTR->PHASE_LINOFFS group_ptr[0]->ERR_PTR->PHASE_LINSTEP group_ptr[0]->ERR_PTR->PHASE_2NDCENT group_ptr[0]->ERR_PTR->PHASE_2NDPSID group_ptr[0]->ERR_PTR->PHASE_2NDQSID group_ptr[0]->ERR_PTR->PHASE_QUANTSTEP group_ptr[0]->ERR_PTR->PHASE_UNIT group_ptr[0]->FAIL_PTR group_ptr[0]->FAIL_PTR[0] group_ptr[0]->FAIL_PTR->NUM_FAULTY_EL group_ptr[0]->FAIL_PTR->FIXED_AMP group_ptr[0]->FAIL_PTR->FIXED_PHASE group_ptr[0]->NEXT group_ptr[0]->NEXT[0] group_ptr[0]->NEXT->NAME group_ptr[0]->NEXT->GRID_PTR group_ptr[0]->NEXT->GRID_PTR[0] group_ptr[0]->NEXT->GRID_PTR->NAME group_ptr[0]->NEXT->GRID_PTR->LEVEL group_ptr[0]->NEXT->GRID_PTR->TYPE group_ptr[0]->NEXT->GRID_PTR->ORIENT group_ptr[0]->NEXT->GRID_PTR->ANGLE group_ptr[0]->NEXT->GRID_PTR->ANGLE_UNIT group_ptr[0]->NEXT->GRID_PTR->PSTEP group_ptr[0]->NEXT->GRID_PTR->QSTEP group_ptr[0]->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr[0]->NEXT->GRID_PTR->PX group_ptr[0]->NEXT->GRID_PTR->PY group_ptr[0]->NEXT->GRID_PTR->QX group_ptr[0]->NEXT->GRID_PTR->QY group_ptr[0]->NEXT->GRID_PTR->PQXY_UNIT group_ptr[0]->NEXT->GRID_PTR->ROT_ANGLE group_ptr[0]->NEXT->ELEM_PTR group_ptr[0]->NEXT->ELEM_PTR[0] group_ptr[0]->NEXT->ELEM_PTR->TYPE group_ptr[0]->NEXT->ELEM_PTR->NAME group_ptr[0]->NEXT->ELEM_PTR->LEVEL group_ptr[0]->NEXT->ELEM_PTR->GEOMETRY group_ptr[0]->NEXT->ELEM_PTR->RADIUS group_ptr[0]->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr[0]->NEXT->ELEM_PTR->PDIM group_ptr[0]->NEXT->ELEM_PTR->QDIM group_ptr[0]->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr[0]->NEXT->ELEM_PTR->MODEL group_ptr[0]->NEXT->ELEM_PTR->EXP group_ptr[0]->NEXT->ELEM_PTR->ANGLEE group_ptr[0]->NEXT->ELEM_PTR->ANGLEH group_ptr[0]->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr[0]->NEXT->ELEM_PTR->TAPERE group_ptr[0]->NEXT->ELEM_PTR->TAPERH group_ptr[0]->NEXT->ELEM_PTR->TAPER_UNIT group_ptr[0]->NEXT->ELEM_PTR->POLARIZATION group_ptr[0]->NEXT->ELEM_PTR->PHEPOL group_ptr[0]->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr[0]->NEXT->ELEM_PTR->DIRECTION group_ptr[0]->NEXT->ELEM_PTR->GAIN group_ptr[0]->NEXT->ELEM_PTR->GAIN_UNIT group_ptr[0]->NEXT->ELEM_PTR->NPORTS group_ptr[0]->NEXT->ELEM_PTR->PORT_PTR group_ptr[0]->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr[0]->NEXT->ADDREM_PTR group_ptr[0]->NEXT->ADDREM_PTR[0] group_ptr[0]->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr[0]->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr[0]->NEXT->ADDREM_PTR->NODE_PTR group_ptr[0]->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr[0]->NEXT->ADDREM_PTR->NEXT group_ptr[0]->NEXT->ADDREM_PTR->NEXT[0] group_ptr[0]->NEXT->GRAMPEXC_PTR group_ptr[0]->NEXT->GRAMPEXC_PTR[0] group_ptr[0]->NEXT->GRAMPEXC_PTR->TYPE group_ptr[0]->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr[0]->NEXT->GRAMPEXC_PTR->CENTRE group_ptr[0]->NEXT->GRAMPEXC_PTR->P1_ET group_ptr[0]->NEXT->GRAMPEXC_PTR->P2_ET group_ptr[0]->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr[0]->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr[0]->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr[0]->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr[0]->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr[0]->NEXT->GRPHAEXC_PTR group_ptr[0]->NEXT->GRPHAEXC_PTR[0] group_ptr[0]->NEXT->GRPHAEXC_PTR->TYPE group_ptr[0]->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr[0]->NEXT->GRPHAEXC_PTR->CENTRE group_ptr[0]->NEXT->GRPHAEXC_PTR->P1_EP group_ptr[0]->NEXT->GRPHAEXC_PTR->P2_EP group_ptr[0]->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr[0]->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr[0]->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr[0]->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr[0]->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr[0]->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr[0]->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr[0]->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr[0]->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr[0]->NEXT->GRPHAEXC_PTR->U group_ptr[0]->NEXT->GRPHAEXC_PTR->V group_ptr[0]->NEXT->GRPHAEXC_PTR->THETA group_ptr[0]->NEXT->GRPHAEXC_PTR->PHI group_ptr[0]->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr[0]->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr[0]->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr[0]->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr[0]->NEXT->ERR_PTR group_ptr[0]->NEXT->ERR_PTR[0] group_ptr[0]->NEXT->ERR_PTR->AMP_TYPE group_ptr[0]->NEXT->ERR_PTR->AMP_STDEV group_ptr[0]->NEXT->ERR_PTR->AMP_LINOFFS group_ptr[0]->NEXT->ERR_PTR->AMP_LINSTEP group_ptr[0]->NEXT->ERR_PTR->AMP_2NDCENT group_ptr[0]->NEXT->ERR_PTR->AMP_2NDPET group_ptr[0]->NEXT->ERR_PTR->AMP_2NDQET group_ptr[0]->NEXT->ERR_PTR->AMP_UNIT group_ptr[0]->NEXT->ERR_PTR->PHASE_TYPE group_ptr[0]->NEXT->ERR_PTR->PHASE_STDEV group_ptr[0]->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr[0]->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr[0]->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr[0]->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr[0]->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr[0]->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr[0]->NEXT->ERR_PTR->PHASE_UNIT group_ptr[0]->NEXT->FAIL_PTR group_ptr[0]->NEXT->FAIL_PTR[0] group_ptr[0]->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr[0]->NEXT->FAIL_PTR->FIXED_AMP group_ptr[0]->NEXT->FAIL_PTR->FIXED_PHASE group_ptr[0]->NEXT->NEXT group_ptr[0]->NEXT->NEXT[0] group_ptr[0]->NEXT->NEXT->NAME group_ptr[0]->NEXT->NEXT->GRID_PTR group_ptr[0]->NEXT->NEXT->GRID_PTR[0] group_ptr[0]->NEXT->NEXT->ELEM_PTR group_ptr[0]->NEXT->NEXT->ELEM_PTR[0] group_ptr[0]->NEXT->NEXT->ADDREM_PTR group_ptr[0]->NEXT->NEXT->ADDREM_PTR[0] group_ptr[0]->NEXT->NEXT->GRAMPEXC_PTR group_ptr[0]->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr[0]->NEXT->NEXT->GRPHAEXC_PTR group_ptr[0]->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr[0]->NEXT->NEXT->ERR_PTR group_ptr[0]->NEXT->NEXT->ERR_PTR[0] group_ptr[0]->NEXT->NEXT->FAIL_PTR group_ptr[0]->NEXT->NEXT->FAIL_PTR[0] group_ptr[0]->NEXT->NEXT->NEXT group_ptr[0]->NEXT->NEXT->NEXT[0] group_ptr[0]->NEXT->NEXT->NUM_OF_NODES group_ptr[0]->NEXT->NEXT->SHAPE group_ptr[0]->NEXT->NEXT->PSIZE group_ptr[0]->NEXT->NEXT->QSIZE group_ptr[0]->NEXT->NEXT->GEOMNODE_PTR group_ptr[0]->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr[0]->NEXT->NEXT->BUILT group_ptr[0]->NEXT->NEXT->SUPER_GROUP_PTR group_ptr[0]->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr[0]->NEXT->NUM_OF_NODES group_ptr[0]->NEXT->SHAPE group_ptr[0]->NEXT->PSIZE group_ptr[0]->NEXT->QSIZE group_ptr[0]->NEXT->GEOMNODE_PTR group_ptr[0]->NEXT->GEOMNODE_PTR[0] group_ptr[0]->NEXT->GEOMNODE_PTR->LOC_P group_ptr[0]->NEXT->GEOMNODE_PTR->LOC_Q group_ptr[0]->NEXT->GEOMNODE_PTR->XA group_ptr[0]->NEXT->GEOMNODE_PTR->YA group_ptr[0]->NEXT->GEOMNODE_PTR->ZA group_ptr[0]->NEXT->GEOMNODE_PTR->THEA group_ptr[0]->NEXT->GEOMNODE_PTR->PHEA group_ptr[0]->NEXT->GEOMNODE_PTR->PSEA group_ptr[0]->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr[0]->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr[0]->NEXT->GEOMNODE_PTR->NEXT group_ptr[0]->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr[0]->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr[0]->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr[0]->NEXT->GEOMNODE_PTR->SHAPE group_ptr[0]->NEXT->GEOMNODE_PTR->PSIZE group_ptr[0]->NEXT->GEOMNODE_PTR->QSIZE group_ptr[0]->NEXT->BUILT group_ptr[0]->NEXT->SUPER_GROUP_PTR group_ptr[0]->NEXT->SUPER_GROUP_PTR[0] group_ptr[0]->NUM_OF_NODES group_ptr[0]->SHAPE group_ptr[0]->PSIZE group_ptr[0]->QSIZE group_ptr[0]->GEOMNODE_PTR group_ptr[0]->GEOMNODE_PTR[0] group_ptr[0]->GEOMNODE_PTR->LOC_P group_ptr[0]->GEOMNODE_PTR->LOC_Q group_ptr[0]->GEOMNODE_PTR->XA group_ptr[0]->GEOMNODE_PTR->YA group_ptr[0]->GEOMNODE_PTR->ZA group_ptr[0]->GEOMNODE_PTR->THEA group_ptr[0]->GEOMNODE_PTR->PHEA group_ptr[0]->GEOMNODE_PTR->PSEA group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr[0]->GEOMNODE_PTR->NEXT group_ptr[0]->GEOMNODE_PTR->NEXT[0] group_ptr[0]->GEOMNODE_PTR->SUBGROUP_PTR group_ptr[0]->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr[0]->GEOMNODE_PTR->SHAPE group_ptr[0]->GEOMNODE_PTR->PSIZE group_ptr[0]->GEOMNODE_PTR->QSIZE group_ptr[0]->BUILT group_ptr[0]->SUPER_GROUP_PTR group_ptr[0]->SUPER_GROUP_PTR[0]
p1.PREV == pp2.[0]
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 1
p1.PREV == null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
group_ptr != null
group_ptr.[0] == null
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::MOSErrors.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..groupdef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] group_ptr group_ptr[0] group_ptr[0][0] group_ptr[0]->NAME group_ptr[0]->GRID_PTR group_ptr[0]->GRID_PTR[0] group_ptr[0]->GRID_PTR->NAME group_ptr[0]->GRID_PTR->LEVEL group_ptr[0]->GRID_PTR->TYPE group_ptr[0]->GRID_PTR->ORIENT group_ptr[0]->GRID_PTR->ANGLE group_ptr[0]->GRID_PTR->ANGLE_UNIT group_ptr[0]->GRID_PTR->PSTEP group_ptr[0]->GRID_PTR->QSTEP group_ptr[0]->GRID_PTR->PQSTEP_UNIT group_ptr[0]->GRID_PTR->PX group_ptr[0]->GRID_PTR->PY group_ptr[0]->GRID_PTR->QX group_ptr[0]->GRID_PTR->QY group_ptr[0]->GRID_PTR->PQXY_UNIT group_ptr[0]->GRID_PTR->ROT_ANGLE group_ptr[0]->ELEM_PTR group_ptr[0]->ELEM_PTR[0] group_ptr[0]->ELEM_PTR->TYPE group_ptr[0]->ELEM_PTR->NAME group_ptr[0]->ELEM_PTR->LEVEL group_ptr[0]->ELEM_PTR->GEOMETRY group_ptr[0]->ELEM_PTR->RADIUS group_ptr[0]->ELEM_PTR->RADIUS_UNIT group_ptr[0]->ELEM_PTR->PDIM group_ptr[0]->ELEM_PTR->QDIM group_ptr[0]->ELEM_PTR->PQDIM_UNIT group_ptr[0]->ELEM_PTR->MODEL group_ptr[0]->ELEM_PTR->EXP group_ptr[0]->ELEM_PTR->ANGLEE group_ptr[0]->ELEM_PTR->ANGLEH group_ptr[0]->ELEM_PTR->ANGLE_UNIT group_ptr[0]->ELEM_PTR->TAPERE group_ptr[0]->ELEM_PTR->TAPERH group_ptr[0]->ELEM_PTR->TAPER_UNIT group_ptr[0]->ELEM_PTR->POLARIZATION group_ptr[0]->ELEM_PTR->PHEPOL group_ptr[0]->ELEM_PTR->PHEPOL_UNIT group_ptr[0]->ELEM_PTR->DIRECTION group_ptr[0]->ELEM_PTR->GAIN group_ptr[0]->ELEM_PTR->GAIN_UNIT group_ptr[0]->ELEM_PTR->NPORTS group_ptr[0]->ELEM_PTR->PORT_PTR group_ptr[0]->ELEM_PTR->PORT_PTR[0] group_ptr[0]->ELEM_PTR->PORT_PTR->PORTNUM group_ptr[0]->ELEM_PTR->PORT_PTR->AMP group_ptr[0]->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr[0]->ELEM_PTR->PORT_PTR->PSC group_ptr[0]->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr[0]->ELEM_PTR->PORT_PTR->PSH group_ptr[0]->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr[0]->ELEM_PTR->PORT_PTR->PPA group_ptr[0]->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr[0]->ELEM_PTR->PORT_PTR->PHEPOL group_ptr[0]->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr[0]->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr[0]->ELEM_PTR->PORT_PTR->NEXT group_ptr[0]->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr[0]->ADDREM_PTR group_ptr[0]->ADDREM_PTR[0] group_ptr[0]->ADDREM_PTR->ADDREM_TYPE group_ptr[0]->ADDREM_PTR->BLOCK_TYPE group_ptr[0]->ADDREM_PTR->NODE_PTR group_ptr[0]->ADDREM_PTR->NODE_PTR[0] group_ptr[0]->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr[0]->ADDREM_PTR->NODE_PTR->PCOORD group_ptr[0]->ADDREM_PTR->NODE_PTR->QCOORD group_ptr[0]->ADDREM_PTR->NODE_PTR->THEA group_ptr[0]->ADDREM_PTR->NODE_PTR->PHEA group_ptr[0]->ADDREM_PTR->NODE_PTR->PSEA group_ptr[0]->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr[0]->ADDREM_PTR->NODE_PTR->NEXT group_ptr[0]->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr[0]->ADDREM_PTR->NEXT group_ptr[0]->ADDREM_PTR->NEXT[0] group_ptr[0]->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr[0]->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr[0]->ADDREM_PTR->NEXT->NODE_PTR group_ptr[0]->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr[0]->ADDREM_PTR->NEXT->NEXT group_ptr[0]->ADDREM_PTR->NEXT->NEXT[0] group_ptr[0]->GRAMPEXC_PTR group_ptr[0]->GRAMPEXC_PTR[0] group_ptr[0]->GRAMPEXC_PTR->TYPE group_ptr[0]->GRAMPEXC_PTR->UNIF_VAL group_ptr[0]->GRAMPEXC_PTR->CENTRE group_ptr[0]->GRAMPEXC_PTR->P1_ET group_ptr[0]->GRAMPEXC_PTR->P2_ET group_ptr[0]->GRAMPEXC_PTR->Q1_ET group_ptr[0]->GRAMPEXC_PTR->Q2_ET group_ptr[0]->GRAMPEXC_PTR->AMP_UNIT group_ptr[0]->GRAMPEXC_PTR->PQEXP_PTR group_ptr[0]->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr[0]->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr[0]->GRPHAEXC_PTR group_ptr[0]->GRPHAEXC_PTR[0] group_ptr[0]->GRPHAEXC_PTR->TYPE group_ptr[0]->GRPHAEXC_PTR->UNIF_VAL group_ptr[0]->GRPHAEXC_PTR->CENTRE group_ptr[0]->GRPHAEXC_PTR->P1_EP group_ptr[0]->GRPHAEXC_PTR->P2_EP group_ptr[0]->GRPHAEXC_PTR->Q1_EP group_ptr[0]->GRPHAEXC_PTR->Q2_EP group_ptr[0]->GRPHAEXC_PTR->DIRECTION group_ptr[0]->GRPHAEXC_PTR->OMIT_ANGLE group_ptr[0]->GRPHAEXC_PTR->ANGLE_START group_ptr[0]->GRPHAEXC_PTR->ANGLE_STEP group_ptr[0]->GRPHAEXC_PTR->OMIT_PHASE group_ptr[0]->GRPHAEXC_PTR->PHASE_START group_ptr[0]->GRPHAEXC_PTR->PHASE_STEP group_ptr[0]->GRPHAEXC_PTR->U group_ptr[0]->GRPHAEXC_PTR->V group_ptr[0]->GRPHAEXC_PTR->THETA group_ptr[0]->GRPHAEXC_PTR->PHI group_ptr[0]->GRPHAEXC_PTR->PQEXP_PTR group_ptr[0]->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr[0]->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr[0]->GRPHAEXC_PTR->ANGLE_UNIT group_ptr[0]->GRPHAEXC_PTR->PHASE_UNIT group_ptr[0]->ERR_PTR group_ptr[0]->ERR_PTR[0] group_ptr[0]->ERR_PTR->AMP_TYPE group_ptr[0]->ERR_PTR->AMP_STDEV group_ptr[0]->ERR_PTR->AMP_LINOFFS group_ptr[0]->ERR_PTR->AMP_LINSTEP group_ptr[0]->ERR_PTR->AMP_2NDCENT group_ptr[0]->ERR_PTR->AMP_2NDPET group_ptr[0]->ERR_PTR->AMP_2NDQET group_ptr[0]->ERR_PTR->AMP_UNIT group_ptr[0]->ERR_PTR->PHASE_TYPE group_ptr[0]->ERR_PTR->PHASE_STDEV group_ptr[0]->ERR_PTR->PHASE_LINOFFS group_ptr[0]->ERR_PTR->PHASE_LINSTEP group_ptr[0]->ERR_PTR->PHASE_2NDCENT group_ptr[0]->ERR_PTR->PHASE_2NDPSID group_ptr[0]->ERR_PTR->PHASE_2NDQSID group_ptr[0]->ERR_PTR->PHASE_QUANTSTEP group_ptr[0]->ERR_PTR->PHASE_UNIT group_ptr[0]->FAIL_PTR group_ptr[0]->FAIL_PTR[0] group_ptr[0]->FAIL_PTR->NUM_FAULTY_EL group_ptr[0]->FAIL_PTR->FIXED_AMP group_ptr[0]->FAIL_PTR->FIXED_PHASE group_ptr[0]->NEXT group_ptr[0]->NEXT[0] group_ptr[0]->NEXT->NAME group_ptr[0]->NEXT->GRID_PTR group_ptr[0]->NEXT->GRID_PTR[0] group_ptr[0]->NEXT->GRID_PTR->NAME group_ptr[0]->NEXT->GRID_PTR->LEVEL group_ptr[0]->NEXT->GRID_PTR->TYPE group_ptr[0]->NEXT->GRID_PTR->ORIENT group_ptr[0]->NEXT->GRID_PTR->ANGLE group_ptr[0]->NEXT->GRID_PTR->ANGLE_UNIT group_ptr[0]->NEXT->GRID_PTR->PSTEP group_ptr[0]->NEXT->GRID_PTR->QSTEP group_ptr[0]->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr[0]->NEXT->GRID_PTR->PX group_ptr[0]->NEXT->GRID_PTR->PY group_ptr[0]->NEXT->GRID_PTR->QX group_ptr[0]->NEXT->GRID_PTR->QY group_ptr[0]->NEXT->GRID_PTR->PQXY_UNIT group_ptr[0]->NEXT->GRID_PTR->ROT_ANGLE group_ptr[0]->NEXT->ELEM_PTR group_ptr[0]->NEXT->ELEM_PTR[0] group_ptr[0]->NEXT->ELEM_PTR->TYPE group_ptr[0]->NEXT->ELEM_PTR->NAME group_ptr[0]->NEXT->ELEM_PTR->LEVEL group_ptr[0]->NEXT->ELEM_PTR->GEOMETRY group_ptr[0]->NEXT->ELEM_PTR->RADIUS group_ptr[0]->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr[0]->NEXT->ELEM_PTR->PDIM group_ptr[0]->NEXT->ELEM_PTR->QDIM group_ptr[0]->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr[0]->NEXT->ELEM_PTR->MODEL group_ptr[0]->NEXT->ELEM_PTR->EXP group_ptr[0]->NEXT->ELEM_PTR->ANGLEE group_ptr[0]->NEXT->ELEM_PTR->ANGLEH group_ptr[0]->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr[0]->NEXT->ELEM_PTR->TAPERE group_ptr[0]->NEXT->ELEM_PTR->TAPERH group_ptr[0]->NEXT->ELEM_PTR->TAPER_UNIT group_ptr[0]->NEXT->ELEM_PTR->POLARIZATION group_ptr[0]->NEXT->ELEM_PTR->PHEPOL group_ptr[0]->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr[0]->NEXT->ELEM_PTR->DIRECTION group_ptr[0]->NEXT->ELEM_PTR->GAIN group_ptr[0]->NEXT->ELEM_PTR->GAIN_UNIT group_ptr[0]->NEXT->ELEM_PTR->NPORTS group_ptr[0]->NEXT->ELEM_PTR->PORT_PTR group_ptr[0]->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr[0]->NEXT->ADDREM_PTR group_ptr[0]->NEXT->ADDREM_PTR[0] group_ptr[0]->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr[0]->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr[0]->NEXT->ADDREM_PTR->NODE_PTR group_ptr[0]->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr[0]->NEXT->ADDREM_PTR->NEXT group_ptr[0]->NEXT->ADDREM_PTR->NEXT[0] group_ptr[0]->NEXT->GRAMPEXC_PTR group_ptr[0]->NEXT->GRAMPEXC_PTR[0] group_ptr[0]->NEXT->GRAMPEXC_PTR->TYPE group_ptr[0]->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr[0]->NEXT->GRAMPEXC_PTR->CENTRE group_ptr[0]->NEXT->GRAMPEXC_PTR->P1_ET group_ptr[0]->NEXT->GRAMPEXC_PTR->P2_ET group_ptr[0]->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr[0]->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr[0]->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr[0]->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr[0]->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr[0]->NEXT->GRPHAEXC_PTR group_ptr[0]->NEXT->GRPHAEXC_PTR[0] group_ptr[0]->NEXT->GRPHAEXC_PTR->TYPE group_ptr[0]->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr[0]->NEXT->GRPHAEXC_PTR->CENTRE group_ptr[0]->NEXT->GRPHAEXC_PTR->P1_EP group_ptr[0]->NEXT->GRPHAEXC_PTR->P2_EP group_ptr[0]->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr[0]->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr[0]->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr[0]->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr[0]->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr[0]->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr[0]->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr[0]->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr[0]->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr[0]->NEXT->GRPHAEXC_PTR->U group_ptr[0]->NEXT->GRPHAEXC_PTR->V group_ptr[0]->NEXT->GRPHAEXC_PTR->THETA group_ptr[0]->NEXT->GRPHAEXC_PTR->PHI group_ptr[0]->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr[0]->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr[0]->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr[0]->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr[0]->NEXT->ERR_PTR group_ptr[0]->NEXT->ERR_PTR[0] group_ptr[0]->NEXT->ERR_PTR->AMP_TYPE group_ptr[0]->NEXT->ERR_PTR->AMP_STDEV group_ptr[0]->NEXT->ERR_PTR->AMP_LINOFFS group_ptr[0]->NEXT->ERR_PTR->AMP_LINSTEP group_ptr[0]->NEXT->ERR_PTR->AMP_2NDCENT group_ptr[0]->NEXT->ERR_PTR->AMP_2NDPET group_ptr[0]->NEXT->ERR_PTR->AMP_2NDQET group_ptr[0]->NEXT->ERR_PTR->AMP_UNIT group_ptr[0]->NEXT->ERR_PTR->PHASE_TYPE group_ptr[0]->NEXT->ERR_PTR->PHASE_STDEV group_ptr[0]->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr[0]->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr[0]->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr[0]->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr[0]->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr[0]->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr[0]->NEXT->ERR_PTR->PHASE_UNIT group_ptr[0]->NEXT->FAIL_PTR group_ptr[0]->NEXT->FAIL_PTR[0] group_ptr[0]->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr[0]->NEXT->FAIL_PTR->FIXED_AMP group_ptr[0]->NEXT->FAIL_PTR->FIXED_PHASE group_ptr[0]->NEXT->NEXT group_ptr[0]->NEXT->NEXT[0] group_ptr[0]->NEXT->NEXT->NAME group_ptr[0]->NEXT->NEXT->GRID_PTR group_ptr[0]->NEXT->NEXT->GRID_PTR[0] group_ptr[0]->NEXT->NEXT->ELEM_PTR group_ptr[0]->NEXT->NEXT->ELEM_PTR[0] group_ptr[0]->NEXT->NEXT->ADDREM_PTR group_ptr[0]->NEXT->NEXT->ADDREM_PTR[0] group_ptr[0]->NEXT->NEXT->GRAMPEXC_PTR group_ptr[0]->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr[0]->NEXT->NEXT->GRPHAEXC_PTR group_ptr[0]->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr[0]->NEXT->NEXT->ERR_PTR group_ptr[0]->NEXT->NEXT->ERR_PTR[0] group_ptr[0]->NEXT->NEXT->FAIL_PTR group_ptr[0]->NEXT->NEXT->FAIL_PTR[0] group_ptr[0]->NEXT->NEXT->NEXT group_ptr[0]->NEXT->NEXT->NEXT[0] group_ptr[0]->NEXT->NEXT->NUM_OF_NODES group_ptr[0]->NEXT->NEXT->SHAPE group_ptr[0]->NEXT->NEXT->PSIZE group_ptr[0]->NEXT->NEXT->QSIZE group_ptr[0]->NEXT->NEXT->GEOMNODE_PTR group_ptr[0]->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr[0]->NEXT->NEXT->BUILT group_ptr[0]->NEXT->NEXT->SUPER_GROUP_PTR group_ptr[0]->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr[0]->NEXT->NUM_OF_NODES group_ptr[0]->NEXT->SHAPE group_ptr[0]->NEXT->PSIZE group_ptr[0]->NEXT->QSIZE group_ptr[0]->NEXT->GEOMNODE_PTR group_ptr[0]->NEXT->GEOMNODE_PTR[0] group_ptr[0]->NEXT->GEOMNODE_PTR->LOC_P group_ptr[0]->NEXT->GEOMNODE_PTR->LOC_Q group_ptr[0]->NEXT->GEOMNODE_PTR->XA group_ptr[0]->NEXT->GEOMNODE_PTR->YA group_ptr[0]->NEXT->GEOMNODE_PTR->ZA group_ptr[0]->NEXT->GEOMNODE_PTR->THEA group_ptr[0]->NEXT->GEOMNODE_PTR->PHEA group_ptr[0]->NEXT->GEOMNODE_PTR->PSEA group_ptr[0]->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr[0]->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr[0]->NEXT->GEOMNODE_PTR->NEXT group_ptr[0]->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr[0]->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr[0]->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr[0]->NEXT->GEOMNODE_PTR->SHAPE group_ptr[0]->NEXT->GEOMNODE_PTR->PSIZE group_ptr[0]->NEXT->GEOMNODE_PTR->QSIZE group_ptr[0]->NEXT->BUILT group_ptr[0]->NEXT->SUPER_GROUP_PTR group_ptr[0]->NEXT->SUPER_GROUP_PTR[0] group_ptr[0]->NUM_OF_NODES group_ptr[0]->SHAPE group_ptr[0]->PSIZE group_ptr[0]->QSIZE group_ptr[0]->GEOMNODE_PTR group_ptr[0]->GEOMNODE_PTR[0] group_ptr[0]->GEOMNODE_PTR->LOC_P group_ptr[0]->GEOMNODE_PTR->LOC_Q group_ptr[0]->GEOMNODE_PTR->XA group_ptr[0]->GEOMNODE_PTR->YA group_ptr[0]->GEOMNODE_PTR->ZA group_ptr[0]->GEOMNODE_PTR->THEA group_ptr[0]->GEOMNODE_PTR->PHEA group_ptr[0]->GEOMNODE_PTR->PSEA group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr[0]->GEOMNODE_PTR->NEXT group_ptr[0]->GEOMNODE_PTR->NEXT[0] group_ptr[0]->GEOMNODE_PTR->SUBGROUP_PTR group_ptr[0]->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr[0]->GEOMNODE_PTR->SHAPE group_ptr[0]->GEOMNODE_PTR->PSIZE group_ptr[0]->GEOMNODE_PTR->QSIZE group_ptr[0]->BUILT group_ptr[0]->SUPER_GROUP_PTR group_ptr[0]->SUPER_GROUP_PTR[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(group_ptr) orig(group_ptr[0]) orig(group_ptr[0][0]) orig(group_ptr[0]->NAME) orig(group_ptr[0]->GRID_PTR) orig(group_ptr[0]->GRID_PTR[0]) orig(group_ptr[0]->GRID_PTR->NAME) orig(group_ptr[0]->GRID_PTR->LEVEL) orig(group_ptr[0]->GRID_PTR->TYPE) orig(group_ptr[0]->GRID_PTR->ORIENT) orig(group_ptr[0]->GRID_PTR->ANGLE) orig(group_ptr[0]->GRID_PTR->ANGLE_UNIT) orig(group_ptr[0]->GRID_PTR->PSTEP) orig(group_ptr[0]->GRID_PTR->QSTEP) orig(group_ptr[0]->GRID_PTR->PQSTEP_UNIT) orig(group_ptr[0]->GRID_PTR->PX) orig(group_ptr[0]->GRID_PTR->PY) orig(group_ptr[0]->GRID_PTR->QX) orig(group_ptr[0]->GRID_PTR->QY) orig(group_ptr[0]->GRID_PTR->PQXY_UNIT) orig(group_ptr[0]->GRID_PTR->ROT_ANGLE) orig(group_ptr[0]->ELEM_PTR) orig(group_ptr[0]->ELEM_PTR[0]) orig(group_ptr[0]->ELEM_PTR->TYPE) orig(group_ptr[0]->ELEM_PTR->NAME) orig(group_ptr[0]->ELEM_PTR->LEVEL) orig(group_ptr[0]->ELEM_PTR->GEOMETRY) orig(group_ptr[0]->ELEM_PTR->RADIUS) orig(group_ptr[0]->ELEM_PTR->RADIUS_UNIT) orig(group_ptr[0]->ELEM_PTR->PDIM) orig(group_ptr[0]->ELEM_PTR->QDIM) orig(group_ptr[0]->ELEM_PTR->PQDIM_UNIT) orig(group_ptr[0]->ELEM_PTR->MODEL) orig(group_ptr[0]->ELEM_PTR->EXP) orig(group_ptr[0]->ELEM_PTR->ANGLEE) orig(group_ptr[0]->ELEM_PTR->ANGLEH) orig(group_ptr[0]->ELEM_PTR->ANGLE_UNIT) orig(group_ptr[0]->ELEM_PTR->TAPERE) orig(group_ptr[0]->ELEM_PTR->TAPERH) orig(group_ptr[0]->ELEM_PTR->TAPER_UNIT) orig(group_ptr[0]->ELEM_PTR->POLARIZATION) orig(group_ptr[0]->ELEM_PTR->PHEPOL) orig(group_ptr[0]->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr[0]->ELEM_PTR->DIRECTION) orig(group_ptr[0]->ELEM_PTR->GAIN) orig(group_ptr[0]->ELEM_PTR->GAIN_UNIT) orig(group_ptr[0]->ELEM_PTR->NPORTS) orig(group_ptr[0]->ELEM_PTR->PORT_PTR) orig(group_ptr[0]->ELEM_PTR->PORT_PTR[0]) orig(group_ptr[0]->ELEM_PTR->PORT_PTR->PORTNUM) orig(group_ptr[0]->ELEM_PTR->PORT_PTR->AMP) orig(group_ptr[0]->ELEM_PTR->PORT_PTR->AMP_UNIT) orig(group_ptr[0]->ELEM_PTR->PORT_PTR->PSC) orig(group_ptr[0]->ELEM_PTR->PORT_PTR->PSC_UNIT) orig(group_ptr[0]->ELEM_PTR->PORT_PTR->PSH) orig(group_ptr[0]->ELEM_PTR->PORT_PTR->PSH_UNIT) orig(group_ptr[0]->ELEM_PTR->PORT_PTR->PPA) orig(group_ptr[0]->ELEM_PTR->PORT_PTR->PPA_UNIT) orig(group_ptr[0]->ELEM_PTR->PORT_PTR->PHEPOL) orig(group_ptr[0]->ELEM_PTR->PORT_PTR->PHEPOL_UNIT) orig(group_ptr[0]->ELEM_PTR->PORT_PTR->OMIT_POL) orig(group_ptr[0]->ELEM_PTR->PORT_PTR->NEXT) orig(group_ptr[0]->ELEM_PTR->PORT_PTR->NEXT[0]) orig(group_ptr[0]->ADDREM_PTR) orig(group_ptr[0]->ADDREM_PTR[0]) orig(group_ptr[0]->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr[0]->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr[0]->ADDREM_PTR->NODE_PTR) orig(group_ptr[0]->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr[0]->ADDREM_PTR->NODE_PTR->OMIT_ORIENT) orig(group_ptr[0]->ADDREM_PTR->NODE_PTR->PCOORD) orig(group_ptr[0]->ADDREM_PTR->NODE_PTR->QCOORD) orig(group_ptr[0]->ADDREM_PTR->NODE_PTR->THEA) orig(group_ptr[0]->ADDREM_PTR->NODE_PTR->PHEA) orig(group_ptr[0]->ADDREM_PTR->NODE_PTR->PSEA) orig(group_ptr[0]->ADDREM_PTR->NODE_PTR->ANGLE_UNIT) orig(group_ptr[0]->ADDREM_PTR->NODE_PTR->NEXT) orig(group_ptr[0]->ADDREM_PTR->NODE_PTR->NEXT[0]) orig(group_ptr[0]->ADDREM_PTR->NEXT) orig(group_ptr[0]->ADDREM_PTR->NEXT[0]) orig(group_ptr[0]->ADDREM_PTR->NEXT->ADDREM_TYPE) orig(group_ptr[0]->ADDREM_PTR->NEXT->BLOCK_TYPE) orig(group_ptr[0]->ADDREM_PTR->NEXT->NODE_PTR) orig(group_ptr[0]->ADDREM_PTR->NEXT->NODE_PTR[0]) orig(group_ptr[0]->ADDREM_PTR->NEXT->NEXT) orig(group_ptr[0]->ADDREM_PTR->NEXT->NEXT[0]) orig(group_ptr[0]->GRAMPEXC_PTR) orig(group_ptr[0]->GRAMPEXC_PTR[0]) orig(group_ptr[0]->GRAMPEXC_PTR->TYPE) orig(group_ptr[0]->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr[0]->GRAMPEXC_PTR->CENTRE) orig(group_ptr[0]->GRAMPEXC_PTR->P1_ET) orig(group_ptr[0]->GRAMPEXC_PTR->P2_ET) orig(group_ptr[0]->GRAMPEXC_PTR->Q1_ET) orig(group_ptr[0]->GRAMPEXC_PTR->Q2_ET) orig(group_ptr[0]->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr[0]->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr[0]->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr[0]->GRAMPEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr[0]->GRPHAEXC_PTR) orig(group_ptr[0]->GRPHAEXC_PTR[0]) orig(group_ptr[0]->GRPHAEXC_PTR->TYPE) orig(group_ptr[0]->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr[0]->GRPHAEXC_PTR->CENTRE) orig(group_ptr[0]->GRPHAEXC_PTR->P1_EP) orig(group_ptr[0]->GRPHAEXC_PTR->P2_EP) orig(group_ptr[0]->GRPHAEXC_PTR->Q1_EP) orig(group_ptr[0]->GRPHAEXC_PTR->Q2_EP) orig(group_ptr[0]->GRPHAEXC_PTR->DIRECTION) orig(group_ptr[0]->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr[0]->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr[0]->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr[0]->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr[0]->GRPHAEXC_PTR->PHASE_START) orig(group_ptr[0]->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr[0]->GRPHAEXC_PTR->U) orig(group_ptr[0]->GRPHAEXC_PTR->V) orig(group_ptr[0]->GRPHAEXC_PTR->THETA) orig(group_ptr[0]->GRPHAEXC_PTR->PHI) orig(group_ptr[0]->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr[0]->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr[0]->GRPHAEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr[0]->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr[0]->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr[0]->ERR_PTR) orig(group_ptr[0]->ERR_PTR[0]) orig(group_ptr[0]->ERR_PTR->AMP_TYPE) orig(group_ptr[0]->ERR_PTR->AMP_STDEV) orig(group_ptr[0]->ERR_PTR->AMP_LINOFFS) orig(group_ptr[0]->ERR_PTR->AMP_LINSTEP) orig(group_ptr[0]->ERR_PTR->AMP_2NDCENT) orig(group_ptr[0]->ERR_PTR->AMP_2NDPET) orig(group_ptr[0]->ERR_PTR->AMP_2NDQET) orig(group_ptr[0]->ERR_PTR->AMP_UNIT) orig(group_ptr[0]->ERR_PTR->PHASE_TYPE) orig(group_ptr[0]->ERR_PTR->PHASE_STDEV) orig(group_ptr[0]->ERR_PTR->PHASE_LINOFFS) orig(group_ptr[0]->ERR_PTR->PHASE_LINSTEP) orig(group_ptr[0]->ERR_PTR->PHASE_2NDCENT) orig(group_ptr[0]->ERR_PTR->PHASE_2NDPSID) orig(group_ptr[0]->ERR_PTR->PHASE_2NDQSID) orig(group_ptr[0]->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr[0]->ERR_PTR->PHASE_UNIT) orig(group_ptr[0]->FAIL_PTR) orig(group_ptr[0]->FAIL_PTR[0]) orig(group_ptr[0]->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr[0]->FAIL_PTR->FIXED_AMP) orig(group_ptr[0]->FAIL_PTR->FIXED_PHASE) orig(group_ptr[0]->NEXT) orig(group_ptr[0]->NEXT[0]) orig(group_ptr[0]->NEXT->NAME) orig(group_ptr[0]->NEXT->GRID_PTR) orig(group_ptr[0]->NEXT->GRID_PTR[0]) orig(group_ptr[0]->NEXT->GRID_PTR->NAME) orig(group_ptr[0]->NEXT->GRID_PTR->LEVEL) orig(group_ptr[0]->NEXT->GRID_PTR->TYPE) orig(group_ptr[0]->NEXT->GRID_PTR->ORIENT) orig(group_ptr[0]->NEXT->GRID_PTR->ANGLE) orig(group_ptr[0]->NEXT->GRID_PTR->ANGLE_UNIT) orig(group_ptr[0]->NEXT->GRID_PTR->PSTEP) orig(group_ptr[0]->NEXT->GRID_PTR->QSTEP) orig(group_ptr[0]->NEXT->GRID_PTR->PQSTEP_UNIT) orig(group_ptr[0]->NEXT->GRID_PTR->PX) orig(group_ptr[0]->NEXT->GRID_PTR->PY) orig(group_ptr[0]->NEXT->GRID_PTR->QX) orig(group_ptr[0]->NEXT->GRID_PTR->QY) orig(group_ptr[0]->NEXT->GRID_PTR->PQXY_UNIT) orig(group_ptr[0]->NEXT->GRID_PTR->ROT_ANGLE) orig(group_ptr[0]->NEXT->ELEM_PTR) orig(group_ptr[0]->NEXT->ELEM_PTR[0]) orig(group_ptr[0]->NEXT->ELEM_PTR->TYPE) orig(group_ptr[0]->NEXT->ELEM_PTR->NAME) orig(group_ptr[0]->NEXT->ELEM_PTR->LEVEL) orig(group_ptr[0]->NEXT->ELEM_PTR->GEOMETRY) orig(group_ptr[0]->NEXT->ELEM_PTR->RADIUS) orig(group_ptr[0]->NEXT->ELEM_PTR->RADIUS_UNIT) orig(group_ptr[0]->NEXT->ELEM_PTR->PDIM) orig(group_ptr[0]->NEXT->ELEM_PTR->QDIM) orig(group_ptr[0]->NEXT->ELEM_PTR->PQDIM_UNIT) orig(group_ptr[0]->NEXT->ELEM_PTR->MODEL) orig(group_ptr[0]->NEXT->ELEM_PTR->EXP) orig(group_ptr[0]->NEXT->ELEM_PTR->ANGLEE) orig(group_ptr[0]->NEXT->ELEM_PTR->ANGLEH) orig(group_ptr[0]->NEXT->ELEM_PTR->ANGLE_UNIT) orig(group_ptr[0]->NEXT->ELEM_PTR->TAPERE) orig(group_ptr[0]->NEXT->ELEM_PTR->TAPERH) orig(group_ptr[0]->NEXT->ELEM_PTR->TAPER_UNIT) orig(group_ptr[0]->NEXT->ELEM_PTR->POLARIZATION) orig(group_ptr[0]->NEXT->ELEM_PTR->PHEPOL) orig(group_ptr[0]->NEXT->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr[0]->NEXT->ELEM_PTR->DIRECTION) orig(group_ptr[0]->NEXT->ELEM_PTR->GAIN) orig(group_ptr[0]->NEXT->ELEM_PTR->GAIN_UNIT) orig(group_ptr[0]->NEXT->ELEM_PTR->NPORTS) orig(group_ptr[0]->NEXT->ELEM_PTR->PORT_PTR) orig(group_ptr[0]->NEXT->ELEM_PTR->PORT_PTR[0]) orig(group_ptr[0]->NEXT->ADDREM_PTR) orig(group_ptr[0]->NEXT->ADDREM_PTR[0]) orig(group_ptr[0]->NEXT->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr[0]->NEXT->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr[0]->NEXT->ADDREM_PTR->NODE_PTR) orig(group_ptr[0]->NEXT->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr[0]->NEXT->ADDREM_PTR->NEXT) orig(group_ptr[0]->NEXT->ADDREM_PTR->NEXT[0]) orig(group_ptr[0]->NEXT->GRAMPEXC_PTR) orig(group_ptr[0]->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr[0]->NEXT->GRAMPEXC_PTR->TYPE) orig(group_ptr[0]->NEXT->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr[0]->NEXT->GRAMPEXC_PTR->CENTRE) orig(group_ptr[0]->NEXT->GRAMPEXC_PTR->P1_ET) orig(group_ptr[0]->NEXT->GRAMPEXC_PTR->P2_ET) orig(group_ptr[0]->NEXT->GRAMPEXC_PTR->Q1_ET) orig(group_ptr[0]->NEXT->GRAMPEXC_PTR->Q2_ET) orig(group_ptr[0]->NEXT->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr[0]->NEXT->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr[0]->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->TYPE) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->CENTRE) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->P1_EP) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->P2_EP) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->Q1_EP) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->Q2_EP) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->DIRECTION) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->PHASE_START) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->U) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->V) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->THETA) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->PHI) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr[0]->NEXT->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr[0]->NEXT->ERR_PTR) orig(group_ptr[0]->NEXT->ERR_PTR[0]) orig(group_ptr[0]->NEXT->ERR_PTR->AMP_TYPE) orig(group_ptr[0]->NEXT->ERR_PTR->AMP_STDEV) orig(group_ptr[0]->NEXT->ERR_PTR->AMP_LINOFFS) orig(group_ptr[0]->NEXT->ERR_PTR->AMP_LINSTEP) orig(group_ptr[0]->NEXT->ERR_PTR->AMP_2NDCENT) orig(group_ptr[0]->NEXT->ERR_PTR->AMP_2NDPET) orig(group_ptr[0]->NEXT->ERR_PTR->AMP_2NDQET) orig(group_ptr[0]->NEXT->ERR_PTR->AMP_UNIT) orig(group_ptr[0]->NEXT->ERR_PTR->PHASE_TYPE) orig(group_ptr[0]->NEXT->ERR_PTR->PHASE_STDEV) orig(group_ptr[0]->NEXT->ERR_PTR->PHASE_LINOFFS) orig(group_ptr[0]->NEXT->ERR_PTR->PHASE_LINSTEP) orig(group_ptr[0]->NEXT->ERR_PTR->PHASE_2NDCENT) orig(group_ptr[0]->NEXT->ERR_PTR->PHASE_2NDPSID) orig(group_ptr[0]->NEXT->ERR_PTR->PHASE_2NDQSID) orig(group_ptr[0]->NEXT->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr[0]->NEXT->ERR_PTR->PHASE_UNIT) orig(group_ptr[0]->NEXT->FAIL_PTR) orig(group_ptr[0]->NEXT->FAIL_PTR[0]) orig(group_ptr[0]->NEXT->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr[0]->NEXT->FAIL_PTR->FIXED_AMP) orig(group_ptr[0]->NEXT->FAIL_PTR->FIXED_PHASE) orig(group_ptr[0]->NEXT->NEXT) orig(group_ptr[0]->NEXT->NEXT[0]) orig(group_ptr[0]->NEXT->NEXT->NAME) orig(group_ptr[0]->NEXT->NEXT->GRID_PTR) orig(group_ptr[0]->NEXT->NEXT->GRID_PTR[0]) orig(group_ptr[0]->NEXT->NEXT->ELEM_PTR) orig(group_ptr[0]->NEXT->NEXT->ELEM_PTR[0]) orig(group_ptr[0]->NEXT->NEXT->ADDREM_PTR) orig(group_ptr[0]->NEXT->NEXT->ADDREM_PTR[0]) orig(group_ptr[0]->NEXT->NEXT->GRAMPEXC_PTR) orig(group_ptr[0]->NEXT->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr[0]->NEXT->NEXT->GRPHAEXC_PTR) orig(group_ptr[0]->NEXT->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr[0]->NEXT->NEXT->ERR_PTR) orig(group_ptr[0]->NEXT->NEXT->ERR_PTR[0]) orig(group_ptr[0]->NEXT->NEXT->FAIL_PTR) orig(group_ptr[0]->NEXT->NEXT->FAIL_PTR[0]) orig(group_ptr[0]->NEXT->NEXT->NEXT) orig(group_ptr[0]->NEXT->NEXT->NEXT[0]) orig(group_ptr[0]->NEXT->NEXT->NUM_OF_NODES) orig(group_ptr[0]->NEXT->NEXT->SHAPE) orig(group_ptr[0]->NEXT->NEXT->PSIZE) orig(group_ptr[0]->NEXT->NEXT->QSIZE) orig(group_ptr[0]->NEXT->NEXT->GEOMNODE_PTR) orig(group_ptr[0]->NEXT->NEXT->GEOMNODE_PTR[0]) orig(group_ptr[0]->NEXT->NEXT->BUILT) orig(group_ptr[0]->NEXT->NEXT->SUPER_GROUP_PTR) orig(group_ptr[0]->NEXT->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr[0]->NEXT->NUM_OF_NODES) orig(group_ptr[0]->NEXT->SHAPE) orig(group_ptr[0]->NEXT->PSIZE) orig(group_ptr[0]->NEXT->QSIZE) orig(group_ptr[0]->NEXT->GEOMNODE_PTR) orig(group_ptr[0]->NEXT->GEOMNODE_PTR[0]) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->LOC_P) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->LOC_Q) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->XA) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->YA) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->ZA) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->THEA) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->PHEA) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->PSEA) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->NEXT) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->NEXT[0]) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->SHAPE) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->PSIZE) orig(group_ptr[0]->NEXT->GEOMNODE_PTR->QSIZE) orig(group_ptr[0]->NEXT->BUILT) orig(group_ptr[0]->NEXT->SUPER_GROUP_PTR) orig(group_ptr[0]->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr[0]->NUM_OF_NODES) orig(group_ptr[0]->SHAPE) orig(group_ptr[0]->PSIZE) orig(group_ptr[0]->QSIZE) orig(group_ptr[0]->GEOMNODE_PTR) orig(group_ptr[0]->GEOMNODE_PTR[0]) orig(group_ptr[0]->GEOMNODE_PTR->LOC_P) orig(group_ptr[0]->GEOMNODE_PTR->LOC_Q) orig(group_ptr[0]->GEOMNODE_PTR->XA) orig(group_ptr[0]->GEOMNODE_PTR->YA) orig(group_ptr[0]->GEOMNODE_PTR->ZA) orig(group_ptr[0]->GEOMNODE_PTR->THEA) orig(group_ptr[0]->GEOMNODE_PTR->PHEA) orig(group_ptr[0]->GEOMNODE_PTR->PSEA) orig(group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->AMP) orig(group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PSH) orig(group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PSC) orig(group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PPA) orig(group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL) orig(group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->NEXT) orig(group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0]) orig(group_ptr[0]->GEOMNODE_PTR->NEXT) orig(group_ptr[0]->GEOMNODE_PTR->NEXT[0]) orig(group_ptr[0]->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr[0]->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr[0]->GEOMNODE_PTR->SHAPE) orig(group_ptr[0]->GEOMNODE_PTR->PSIZE) orig(group_ptr[0]->GEOMNODE_PTR->QSIZE) orig(group_ptr[0]->BUILT) orig(group_ptr[0]->SUPER_GROUP_PTR) orig(group_ptr[0]->SUPER_GROUP_PTR[0])
assignable ::UserNames, p1->PREV[0], p1->PREV->info, p1->PREV->LINE_NUM, p1->PREV->PREV, p1->PREV->PREV[0], p1->PREV->PREV->info, p1->PREV->PREV->LINE_NUM, p1->PREV->PREV->PREV, p1->PREV->PREV->PREV[0], p1->PREV->PREV->NEXT, p1->PREV->PREV->NEXT[0], p1->PREV->NEXT, p1->PREV->NEXT[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->info, pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->LINE_NUM, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], group_ptr[0], group_ptr[0][0], group_ptr[0]->NAME, group_ptr[0]->GRID_PTR, group_ptr[0]->GRID_PTR[0], group_ptr[0]->GRID_PTR->NAME, group_ptr[0]->GRID_PTR->LEVEL, group_ptr[0]->GRID_PTR->TYPE, group_ptr[0]->GRID_PTR->ORIENT, group_ptr[0]->GRID_PTR->ANGLE, group_ptr[0]->GRID_PTR->ANGLE_UNIT, group_ptr[0]->GRID_PTR->PSTEP, group_ptr[0]->GRID_PTR->QSTEP, group_ptr[0]->GRID_PTR->PQSTEP_UNIT, group_ptr[0]->GRID_PTR->PX, group_ptr[0]->GRID_PTR->PY, group_ptr[0]->GRID_PTR->QX, group_ptr[0]->GRID_PTR->QY, group_ptr[0]->GRID_PTR->PQXY_UNIT, group_ptr[0]->GRID_PTR->ROT_ANGLE, group_ptr[0]->ELEM_PTR, group_ptr[0]->ELEM_PTR[0], group_ptr[0]->ELEM_PTR->TYPE, group_ptr[0]->ELEM_PTR->NAME, group_ptr[0]->ELEM_PTR->LEVEL, group_ptr[0]->ELEM_PTR->GEOMETRY, group_ptr[0]->ELEM_PTR->RADIUS, group_ptr[0]->ELEM_PTR->RADIUS_UNIT, group_ptr[0]->ELEM_PTR->PDIM, group_ptr[0]->ELEM_PTR->QDIM, group_ptr[0]->ELEM_PTR->PQDIM_UNIT, group_ptr[0]->ELEM_PTR->MODEL, group_ptr[0]->ELEM_PTR->EXP, group_ptr[0]->ELEM_PTR->ANGLEE, group_ptr[0]->ELEM_PTR->ANGLEH, group_ptr[0]->ELEM_PTR->ANGLE_UNIT, group_ptr[0]->ELEM_PTR->TAPERE, group_ptr[0]->ELEM_PTR->TAPERH, group_ptr[0]->ELEM_PTR->TAPER_UNIT, group_ptr[0]->ELEM_PTR->POLARIZATION, group_ptr[0]->ELEM_PTR->PHEPOL, group_ptr[0]->ELEM_PTR->PHEPOL_UNIT, group_ptr[0]->ELEM_PTR->DIRECTION, group_ptr[0]->ELEM_PTR->GAIN, group_ptr[0]->ELEM_PTR->GAIN_UNIT, group_ptr[0]->ELEM_PTR->NPORTS, group_ptr[0]->ELEM_PTR->PORT_PTR, group_ptr[0]->ELEM_PTR->PORT_PTR[0], group_ptr[0]->ELEM_PTR->PORT_PTR->PORTNUM, group_ptr[0]->ELEM_PTR->PORT_PTR->AMP, group_ptr[0]->ELEM_PTR->PORT_PTR->AMP_UNIT, group_ptr[0]->ELEM_PTR->PORT_PTR->PSC, group_ptr[0]->ELEM_PTR->PORT_PTR->PSC_UNIT, group_ptr[0]->ELEM_PTR->PORT_PTR->PSH, group_ptr[0]->ELEM_PTR->PORT_PTR->PSH_UNIT, group_ptr[0]->ELEM_PTR->PORT_PTR->PPA, group_ptr[0]->ELEM_PTR->PORT_PTR->PPA_UNIT, group_ptr[0]->ELEM_PTR->PORT_PTR->PHEPOL, group_ptr[0]->ELEM_PTR->PORT_PTR->PHEPOL_UNIT, group_ptr[0]->ELEM_PTR->PORT_PTR->OMIT_POL, group_ptr[0]->ELEM_PTR->PORT_PTR->NEXT, group_ptr[0]->ELEM_PTR->PORT_PTR->NEXT[0], group_ptr[0]->ADDREM_PTR, group_ptr[0]->ADDREM_PTR[0], group_ptr[0]->ADDREM_PTR->ADDREM_TYPE, group_ptr[0]->ADDREM_PTR->BLOCK_TYPE, group_ptr[0]->ADDREM_PTR->NODE_PTR, group_ptr[0]->ADDREM_PTR->NODE_PTR[0], group_ptr[0]->ADDREM_PTR->NODE_PTR->OMIT_ORIENT, group_ptr[0]->ADDREM_PTR->NODE_PTR->PCOORD, group_ptr[0]->ADDREM_PTR->NODE_PTR->QCOORD, group_ptr[0]->ADDREM_PTR->NODE_PTR->THEA, group_ptr[0]->ADDREM_PTR->NODE_PTR->PHEA, group_ptr[0]->ADDREM_PTR->NODE_PTR->PSEA, group_ptr[0]->ADDREM_PTR->NODE_PTR->ANGLE_UNIT, group_ptr[0]->ADDREM_PTR->NODE_PTR->NEXT, group_ptr[0]->ADDREM_PTR->NODE_PTR->NEXT[0], group_ptr[0]->ADDREM_PTR->NEXT, group_ptr[0]->ADDREM_PTR->NEXT[0], group_ptr[0]->ADDREM_PTR->NEXT->ADDREM_TYPE, group_ptr[0]->ADDREM_PTR->NEXT->BLOCK_TYPE, group_ptr[0]->ADDREM_PTR->NEXT->NODE_PTR, group_ptr[0]->ADDREM_PTR->NEXT->NODE_PTR[0], group_ptr[0]->ADDREM_PTR->NEXT->NEXT, group_ptr[0]->ADDREM_PTR->NEXT->NEXT[0], group_ptr[0]->GRAMPEXC_PTR, group_ptr[0]->GRAMPEXC_PTR[0], group_ptr[0]->GRAMPEXC_PTR->TYPE, group_ptr[0]->GRAMPEXC_PTR->UNIF_VAL, group_ptr[0]->GRAMPEXC_PTR->CENTRE, group_ptr[0]->GRAMPEXC_PTR->P1_ET, group_ptr[0]->GRAMPEXC_PTR->P2_ET, group_ptr[0]->GRAMPEXC_PTR->Q1_ET, group_ptr[0]->GRAMPEXC_PTR->Q2_ET, group_ptr[0]->GRAMPEXC_PTR->AMP_UNIT, group_ptr[0]->GRAMPEXC_PTR->PQEXP_PTR, group_ptr[0]->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr[0]->GRAMPEXC_PTR->PQEXP_PTR->dummy, group_ptr[0]->GRPHAEXC_PTR, group_ptr[0]->GRPHAEXC_PTR[0], group_ptr[0]->GRPHAEXC_PTR->TYPE, group_ptr[0]->GRPHAEXC_PTR->UNIF_VAL, group_ptr[0]->GRPHAEXC_PTR->CENTRE, group_ptr[0]->GRPHAEXC_PTR->P1_EP, group_ptr[0]->GRPHAEXC_PTR->P2_EP, group_ptr[0]->GRPHAEXC_PTR->Q1_EP, group_ptr[0]->GRPHAEXC_PTR->Q2_EP, group_ptr[0]->GRPHAEXC_PTR->DIRECTION, group_ptr[0]->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr[0]->GRPHAEXC_PTR->ANGLE_START, group_ptr[0]->GRPHAEXC_PTR->ANGLE_STEP, group_ptr[0]->GRPHAEXC_PTR->OMIT_PHASE, group_ptr[0]->GRPHAEXC_PTR->PHASE_START, group_ptr[0]->GRPHAEXC_PTR->PHASE_STEP, group_ptr[0]->GRPHAEXC_PTR->U, group_ptr[0]->GRPHAEXC_PTR->V, group_ptr[0]->GRPHAEXC_PTR->THETA, group_ptr[0]->GRPHAEXC_PTR->PHI, group_ptr[0]->GRPHAEXC_PTR->PQEXP_PTR, group_ptr[0]->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr[0]->GRPHAEXC_PTR->PQEXP_PTR->dummy, group_ptr[0]->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr[0]->GRPHAEXC_PTR->PHASE_UNIT, group_ptr[0]->ERR_PTR, group_ptr[0]->ERR_PTR[0], group_ptr[0]->ERR_PTR->AMP_TYPE, group_ptr[0]->ERR_PTR->AMP_STDEV, group_ptr[0]->ERR_PTR->AMP_LINOFFS, group_ptr[0]->ERR_PTR->AMP_LINSTEP, group_ptr[0]->ERR_PTR->AMP_2NDCENT, group_ptr[0]->ERR_PTR->AMP_2NDPET, group_ptr[0]->ERR_PTR->AMP_2NDQET, group_ptr[0]->ERR_PTR->AMP_UNIT, group_ptr[0]->ERR_PTR->PHASE_TYPE, group_ptr[0]->ERR_PTR->PHASE_STDEV, group_ptr[0]->ERR_PTR->PHASE_LINOFFS, group_ptr[0]->ERR_PTR->PHASE_LINSTEP, group_ptr[0]->ERR_PTR->PHASE_2NDCENT, group_ptr[0]->ERR_PTR->PHASE_2NDPSID, group_ptr[0]->ERR_PTR->PHASE_2NDQSID, group_ptr[0]->ERR_PTR->PHASE_QUANTSTEP, group_ptr[0]->ERR_PTR->PHASE_UNIT, group_ptr[0]->FAIL_PTR, group_ptr[0]->FAIL_PTR[0], group_ptr[0]->FAIL_PTR->NUM_FAULTY_EL, group_ptr[0]->FAIL_PTR->FIXED_AMP, group_ptr[0]->FAIL_PTR->FIXED_PHASE, group_ptr[0]->NEXT, group_ptr[0]->NEXT[0], group_ptr[0]->NEXT->NAME, group_ptr[0]->NEXT->GRID_PTR, group_ptr[0]->NEXT->GRID_PTR[0], group_ptr[0]->NEXT->GRID_PTR->NAME, group_ptr[0]->NEXT->GRID_PTR->LEVEL, group_ptr[0]->NEXT->GRID_PTR->TYPE, group_ptr[0]->NEXT->GRID_PTR->ORIENT, group_ptr[0]->NEXT->GRID_PTR->ANGLE, group_ptr[0]->NEXT->GRID_PTR->ANGLE_UNIT, group_ptr[0]->NEXT->GRID_PTR->PSTEP, group_ptr[0]->NEXT->GRID_PTR->QSTEP, group_ptr[0]->NEXT->GRID_PTR->PQSTEP_UNIT, group_ptr[0]->NEXT->GRID_PTR->PX, group_ptr[0]->NEXT->GRID_PTR->PY, group_ptr[0]->NEXT->GRID_PTR->QX, group_ptr[0]->NEXT->GRID_PTR->QY, group_ptr[0]->NEXT->GRID_PTR->PQXY_UNIT, group_ptr[0]->NEXT->GRID_PTR->ROT_ANGLE, group_ptr[0]->NEXT->ELEM_PTR, group_ptr[0]->NEXT->ELEM_PTR[0], group_ptr[0]->NEXT->ELEM_PTR->TYPE, group_ptr[0]->NEXT->ELEM_PTR->NAME, group_ptr[0]->NEXT->ELEM_PTR->LEVEL, group_ptr[0]->NEXT->ELEM_PTR->GEOMETRY, group_ptr[0]->NEXT->ELEM_PTR->RADIUS, group_ptr[0]->NEXT->ELEM_PTR->RADIUS_UNIT, group_ptr[0]->NEXT->ELEM_PTR->PDIM, group_ptr[0]->NEXT->ELEM_PTR->QDIM, group_ptr[0]->NEXT->ELEM_PTR->PQDIM_UNIT, group_ptr[0]->NEXT->ELEM_PTR->MODEL, group_ptr[0]->NEXT->ELEM_PTR->EXP, group_ptr[0]->NEXT->ELEM_PTR->ANGLEE, group_ptr[0]->NEXT->ELEM_PTR->ANGLEH, group_ptr[0]->NEXT->ELEM_PTR->ANGLE_UNIT, group_ptr[0]->NEXT->ELEM_PTR->TAPERE, group_ptr[0]->NEXT->ELEM_PTR->TAPERH, group_ptr[0]->NEXT->ELEM_PTR->TAPER_UNIT, group_ptr[0]->NEXT->ELEM_PTR->POLARIZATION, group_ptr[0]->NEXT->ELEM_PTR->PHEPOL, group_ptr[0]->NEXT->ELEM_PTR->PHEPOL_UNIT, group_ptr[0]->NEXT->ELEM_PTR->DIRECTION, group_ptr[0]->NEXT->ELEM_PTR->GAIN, group_ptr[0]->NEXT->ELEM_PTR->GAIN_UNIT, group_ptr[0]->NEXT->ELEM_PTR->NPORTS, group_ptr[0]->NEXT->ELEM_PTR->PORT_PTR, group_ptr[0]->NEXT->ELEM_PTR->PORT_PTR[0], group_ptr[0]->NEXT->ADDREM_PTR, group_ptr[0]->NEXT->ADDREM_PTR[0], group_ptr[0]->NEXT->ADDREM_PTR->ADDREM_TYPE, group_ptr[0]->NEXT->ADDREM_PTR->BLOCK_TYPE, group_ptr[0]->NEXT->ADDREM_PTR->NODE_PTR, group_ptr[0]->NEXT->ADDREM_PTR->NODE_PTR[0], group_ptr[0]->NEXT->ADDREM_PTR->NEXT, group_ptr[0]->NEXT->ADDREM_PTR->NEXT[0], group_ptr[0]->NEXT->GRAMPEXC_PTR, group_ptr[0]->NEXT->GRAMPEXC_PTR[0], group_ptr[0]->NEXT->GRAMPEXC_PTR->TYPE, group_ptr[0]->NEXT->GRAMPEXC_PTR->UNIF_VAL, group_ptr[0]->NEXT->GRAMPEXC_PTR->CENTRE, group_ptr[0]->NEXT->GRAMPEXC_PTR->P1_ET, group_ptr[0]->NEXT->GRAMPEXC_PTR->P2_ET, group_ptr[0]->NEXT->GRAMPEXC_PTR->Q1_ET, group_ptr[0]->NEXT->GRAMPEXC_PTR->Q2_ET, group_ptr[0]->NEXT->GRAMPEXC_PTR->AMP_UNIT, group_ptr[0]->NEXT->GRAMPEXC_PTR->PQEXP_PTR, group_ptr[0]->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr[0]->NEXT->GRPHAEXC_PTR, group_ptr[0]->NEXT->GRPHAEXC_PTR[0], group_ptr[0]->NEXT->GRPHAEXC_PTR->TYPE, group_ptr[0]->NEXT->GRPHAEXC_PTR->UNIF_VAL, group_ptr[0]->NEXT->GRPHAEXC_PTR->CENTRE, group_ptr[0]->NEXT->GRPHAEXC_PTR->P1_EP, group_ptr[0]->NEXT->GRPHAEXC_PTR->P2_EP, group_ptr[0]->NEXT->GRPHAEXC_PTR->Q1_EP, group_ptr[0]->NEXT->GRPHAEXC_PTR->Q2_EP, group_ptr[0]->NEXT->GRPHAEXC_PTR->DIRECTION, group_ptr[0]->NEXT->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr[0]->NEXT->GRPHAEXC_PTR->ANGLE_START, group_ptr[0]->NEXT->GRPHAEXC_PTR->ANGLE_STEP, group_ptr[0]->NEXT->GRPHAEXC_PTR->OMIT_PHASE, group_ptr[0]->NEXT->GRPHAEXC_PTR->PHASE_START, group_ptr[0]->NEXT->GRPHAEXC_PTR->PHASE_STEP, group_ptr[0]->NEXT->GRPHAEXC_PTR->U, group_ptr[0]->NEXT->GRPHAEXC_PTR->V, group_ptr[0]->NEXT->GRPHAEXC_PTR->THETA, group_ptr[0]->NEXT->GRPHAEXC_PTR->PHI, group_ptr[0]->NEXT->GRPHAEXC_PTR->PQEXP_PTR, group_ptr[0]->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr[0]->NEXT->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr[0]->NEXT->GRPHAEXC_PTR->PHASE_UNIT, group_ptr[0]->NEXT->ERR_PTR, group_ptr[0]->NEXT->ERR_PTR[0], group_ptr[0]->NEXT->ERR_PTR->AMP_TYPE, group_ptr[0]->NEXT->ERR_PTR->AMP_STDEV, group_ptr[0]->NEXT->ERR_PTR->AMP_LINOFFS, group_ptr[0]->NEXT->ERR_PTR->AMP_LINSTEP, group_ptr[0]->NEXT->ERR_PTR->AMP_2NDCENT, group_ptr[0]->NEXT->ERR_PTR->AMP_2NDPET, group_ptr[0]->NEXT->ERR_PTR->AMP_2NDQET, group_ptr[0]->NEXT->ERR_PTR->AMP_UNIT, group_ptr[0]->NEXT->ERR_PTR->PHASE_TYPE, group_ptr[0]->NEXT->ERR_PTR->PHASE_STDEV, group_ptr[0]->NEXT->ERR_PTR->PHASE_LINOFFS, group_ptr[0]->NEXT->ERR_PTR->PHASE_LINSTEP, group_ptr[0]->NEXT->ERR_PTR->PHASE_2NDCENT, group_ptr[0]->NEXT->ERR_PTR->PHASE_2NDPSID, group_ptr[0]->NEXT->ERR_PTR->PHASE_2NDQSID, group_ptr[0]->NEXT->ERR_PTR->PHASE_QUANTSTEP, group_ptr[0]->NEXT->ERR_PTR->PHASE_UNIT, group_ptr[0]->NEXT->FAIL_PTR, group_ptr[0]->NEXT->FAIL_PTR[0], group_ptr[0]->NEXT->FAIL_PTR->NUM_FAULTY_EL, group_ptr[0]->NEXT->FAIL_PTR->FIXED_AMP, group_ptr[0]->NEXT->FAIL_PTR->FIXED_PHASE, group_ptr[0]->NEXT->NEXT, group_ptr[0]->NEXT->NEXT[0], group_ptr[0]->NEXT->NEXT->NAME, group_ptr[0]->NEXT->NEXT->GRID_PTR, group_ptr[0]->NEXT->NEXT->GRID_PTR[0], group_ptr[0]->NEXT->NEXT->ELEM_PTR, group_ptr[0]->NEXT->NEXT->ELEM_PTR[0], group_ptr[0]->NEXT->NEXT->ADDREM_PTR, group_ptr[0]->NEXT->NEXT->ADDREM_PTR[0], group_ptr[0]->NEXT->NEXT->GRAMPEXC_PTR, group_ptr[0]->NEXT->NEXT->GRAMPEXC_PTR[0], group_ptr[0]->NEXT->NEXT->GRPHAEXC_PTR, group_ptr[0]->NEXT->NEXT->GRPHAEXC_PTR[0], group_ptr[0]->NEXT->NEXT->ERR_PTR, group_ptr[0]->NEXT->NEXT->ERR_PTR[0], group_ptr[0]->NEXT->NEXT->FAIL_PTR, group_ptr[0]->NEXT->NEXT->FAIL_PTR[0], group_ptr[0]->NEXT->NEXT->NEXT, group_ptr[0]->NEXT->NEXT->NEXT[0], group_ptr[0]->NEXT->NEXT->NUM_OF_NODES, group_ptr[0]->NEXT->NEXT->SHAPE, group_ptr[0]->NEXT->NEXT->PSIZE, group_ptr[0]->NEXT->NEXT->QSIZE, group_ptr[0]->NEXT->NEXT->GEOMNODE_PTR, group_ptr[0]->NEXT->NEXT->GEOMNODE_PTR[0], group_ptr[0]->NEXT->NEXT->BUILT, group_ptr[0]->NEXT->NEXT->SUPER_GROUP_PTR, group_ptr[0]->NEXT->NEXT->SUPER_GROUP_PTR[0], group_ptr[0]->NEXT->NUM_OF_NODES, group_ptr[0]->NEXT->SHAPE, group_ptr[0]->NEXT->PSIZE, group_ptr[0]->NEXT->QSIZE, group_ptr[0]->NEXT->GEOMNODE_PTR, group_ptr[0]->NEXT->GEOMNODE_PTR[0], group_ptr[0]->NEXT->GEOMNODE_PTR->LOC_P, group_ptr[0]->NEXT->GEOMNODE_PTR->LOC_Q, group_ptr[0]->NEXT->GEOMNODE_PTR->XA, group_ptr[0]->NEXT->GEOMNODE_PTR->YA, group_ptr[0]->NEXT->GEOMNODE_PTR->ZA, group_ptr[0]->NEXT->GEOMNODE_PTR->THEA, group_ptr[0]->NEXT->GEOMNODE_PTR->PHEA, group_ptr[0]->NEXT->GEOMNODE_PTR->PSEA, group_ptr[0]->NEXT->GEOMNODE_PTR->GEOMPORT_PTR, group_ptr[0]->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0], group_ptr[0]->NEXT->GEOMNODE_PTR->NEXT, group_ptr[0]->NEXT->GEOMNODE_PTR->NEXT[0], group_ptr[0]->NEXT->GEOMNODE_PTR->SUBGROUP_PTR, group_ptr[0]->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr[0]->NEXT->GEOMNODE_PTR->SHAPE, group_ptr[0]->NEXT->GEOMNODE_PTR->PSIZE, group_ptr[0]->NEXT->GEOMNODE_PTR->QSIZE, group_ptr[0]->NEXT->BUILT, group_ptr[0]->NEXT->SUPER_GROUP_PTR, group_ptr[0]->NEXT->SUPER_GROUP_PTR[0], group_ptr[0]->NUM_OF_NODES, group_ptr[0]->SHAPE, group_ptr[0]->PSIZE, group_ptr[0]->QSIZE, group_ptr[0]->GEOMNODE_PTR, group_ptr[0]->GEOMNODE_PTR[0], group_ptr[0]->GEOMNODE_PTR->LOC_P, group_ptr[0]->GEOMNODE_PTR->LOC_Q, group_ptr[0]->GEOMNODE_PTR->XA, group_ptr[0]->GEOMNODE_PTR->YA, group_ptr[0]->GEOMNODE_PTR->ZA, group_ptr[0]->GEOMNODE_PTR->THEA, group_ptr[0]->GEOMNODE_PTR->PHEA, group_ptr[0]->GEOMNODE_PTR->PSEA, group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR, group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR[0], group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->AMP, group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PSH, group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PSC, group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PPA, group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL, group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->NEXT, group_ptr[0]->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0], group_ptr[0]->GEOMNODE_PTR->NEXT, group_ptr[0]->GEOMNODE_PTR->NEXT[0], group_ptr[0]->GEOMNODE_PTR->SUBGROUP_PTR, group_ptr[0]->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr[0]->GEOMNODE_PTR->SHAPE, group_ptr[0]->GEOMNODE_PTR->PSIZE, group_ptr[0]->GEOMNODE_PTR->QSIZE, group_ptr[0]->BUILT, group_ptr[0]->SUPER_GROUP_PTR, group_ptr[0]->SUPER_GROUP_PTR[0]
::UserNames.equals(group_ptr.[0].NAME)
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == \old(p1.[0])
p1.info == \old(p1.info)
p1.LINE_NUM == group_ptr.[0].GRID_PTR.LEVEL
p1.LINE_NUM == group_ptr.[0].ELEM_PTR.LEVEL
p1.LINE_NUM == group_ptr.[0].ELEM_PTR.GEOMETRY
p1.LINE_NUM == group_ptr.[0].ADDREM_PTR.NODE_PTR.QCOORD
p1.LINE_NUM == group_ptr.[0].GRAMPEXC_PTR.TYPE
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.PREV == pp2.[0]
p1.PREV == \old(p1.PREV)
p1.PREV == \old(pp2.[0])
p1.NEXT == \old(p1.NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
group_ptr.[0].GRID_PTR.PQSTEP_UNIT == return
group_ptr.[0].ELEM_PTR.TYPE == return
group_ptr.[0].ELEM_PTR.RADIUS_UNIT == return
group_ptr.[0].ELEM_PTR.MODEL == return
group_ptr.[0].ELEM_PTR.POLARIZATION == return
group_ptr.[0].ELEM_PTR.PHEPOL_UNIT == return
group_ptr.[0].ELEM_PTR.DIRECTION == return
group_ptr.[0].ELEM_PTR.GAIN_UNIT == return
group_ptr.[0].ELEM_PTR.NPORTS == return
group_ptr.[0].ADDREM_PTR.ADDREM_TYPE == return
group_ptr.[0].ADDREM_PTR.NODE_PTR.ANGLE_UNIT == return
group_ptr.[0].GRAMPEXC_PTR.AMP_UNIT == return
group_ptr.[0].GRAMPEXC_PTR.PQEXP_PTR == group_ptr.[0].GRPHAEXC_PTR.PQEXP_PTR
group_ptr.[0].GRPHAEXC_PTR.TYPE == return
group_ptr.[0].GRPHAEXC_PTR.PHASE_UNIT == return
group_ptr.[0].NUM_OF_NODES == return
group_ptr.[0].SHAPE == return
group_ptr.[0].BUILT == return
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 1
p1.PREV == null
p1.NEXT != null
p1.NEXT.[0] != null
group_ptr.[0] != null
group_ptr.[0].[0] != null
group_ptr.[0].GRID_PTR != null
group_ptr.[0].GRID_PTR.TYPE == 2
group_ptr.[0].ELEM_PTR != null
group_ptr.[0].ELEM_PTR.[0] != null
group_ptr.[0].ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.[0].ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.[0].ELEM_PTR.PHEPOL, 90.0)
group_ptr.[0].ELEM_PTR.PORT_PTR == null
group_ptr.[0].ADDREM_PTR != null
group_ptr.[0].ADDREM_PTR.[0] != null
group_ptr.[0].ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.[0].ADDREM_PTR.NODE_PTR != null
group_ptr.[0].ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.[0].ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.[0].ADDREM_PTR.NEXT == null
group_ptr.[0].GRAMPEXC_PTR != null
group_ptr.[0].GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.[0].GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.[0].GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.[0].GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.[0].GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.[0].GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.[0].GRPHAEXC_PTR != null
group_ptr.[0].GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.[0].GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.[0].ERR_PTR == null
group_ptr.[0].FAIL_PTR == null
daikon.Quant.fuzzy.eq(group_ptr.[0].PSIZE, 0.0)
group_ptr.[0].GEOMNODE_PTR == null
group_ptr.[0].SUPER_GROUP_PTR != null
return == 0
::UserNames.contains(\old(::UserNames))
::Keywords.contains(\old(::UserNames))
::ErrorMessages.contains(\old(::UserNames))
::MOSErrors.contains(\old(::UserNames))
::GLOBLE_FILENAME.contains(\old(::UserNames))
group_ptr.[0].ELEM_PTR.NAME.contains(\old(::UserNames))
===========================================================================
..grphaexc():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] grphaexc_ptr grphaexc_ptr[0] grphaexc_ptr[0][0] grphaexc_ptr[0]->TYPE grphaexc_ptr[0]->UNIF_VAL grphaexc_ptr[0]->CENTRE grphaexc_ptr[0]->P1_EP grphaexc_ptr[0]->P2_EP grphaexc_ptr[0]->Q1_EP grphaexc_ptr[0]->Q2_EP grphaexc_ptr[0]->DIRECTION grphaexc_ptr[0]->OMIT_ANGLE grphaexc_ptr[0]->ANGLE_START grphaexc_ptr[0]->ANGLE_STEP grphaexc_ptr[0]->OMIT_PHASE grphaexc_ptr[0]->PHASE_START grphaexc_ptr[0]->PHASE_STEP grphaexc_ptr[0]->U grphaexc_ptr[0]->V grphaexc_ptr[0]->THETA grphaexc_ptr[0]->PHI grphaexc_ptr[0]->PQEXP_PTR grphaexc_ptr[0]->PQEXP_PTR[0] grphaexc_ptr[0]->PQEXP_PTR->dummy grphaexc_ptr[0]->ANGLE_UNIT grphaexc_ptr[0]->PHASE_UNIT
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 80
p1.LINE_NUM == 11
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 53
p1.PREV.PREV.LINE_NUM == 10
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
grphaexc_ptr != null
grphaexc_ptr.[0] == null
===========================================================================
..grphaexc():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] grphaexc_ptr grphaexc_ptr[0] grphaexc_ptr[0][0] grphaexc_ptr[0]->TYPE grphaexc_ptr[0]->UNIF_VAL grphaexc_ptr[0]->CENTRE grphaexc_ptr[0]->P1_EP grphaexc_ptr[0]->P2_EP grphaexc_ptr[0]->Q1_EP grphaexc_ptr[0]->Q2_EP grphaexc_ptr[0]->DIRECTION grphaexc_ptr[0]->OMIT_ANGLE grphaexc_ptr[0]->ANGLE_START grphaexc_ptr[0]->ANGLE_STEP grphaexc_ptr[0]->OMIT_PHASE grphaexc_ptr[0]->PHASE_START grphaexc_ptr[0]->PHASE_STEP grphaexc_ptr[0]->U grphaexc_ptr[0]->V grphaexc_ptr[0]->THETA grphaexc_ptr[0]->PHI grphaexc_ptr[0]->PQEXP_PTR grphaexc_ptr[0]->PQEXP_PTR[0] grphaexc_ptr[0]->PQEXP_PTR->dummy grphaexc_ptr[0]->ANGLE_UNIT grphaexc_ptr[0]->PHASE_UNIT return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(grphaexc_ptr) orig(grphaexc_ptr[0]) orig(grphaexc_ptr[0][0]) orig(grphaexc_ptr[0]->TYPE) orig(grphaexc_ptr[0]->UNIF_VAL) orig(grphaexc_ptr[0]->CENTRE) orig(grphaexc_ptr[0]->P1_EP) orig(grphaexc_ptr[0]->P2_EP) orig(grphaexc_ptr[0]->Q1_EP) orig(grphaexc_ptr[0]->Q2_EP) orig(grphaexc_ptr[0]->DIRECTION) orig(grphaexc_ptr[0]->OMIT_ANGLE) orig(grphaexc_ptr[0]->ANGLE_START) orig(grphaexc_ptr[0]->ANGLE_STEP) orig(grphaexc_ptr[0]->OMIT_PHASE) orig(grphaexc_ptr[0]->PHASE_START) orig(grphaexc_ptr[0]->PHASE_STEP) orig(grphaexc_ptr[0]->U) orig(grphaexc_ptr[0]->V) orig(grphaexc_ptr[0]->THETA) orig(grphaexc_ptr[0]->PHI) orig(grphaexc_ptr[0]->PQEXP_PTR) orig(grphaexc_ptr[0]->PQEXP_PTR[0]) orig(grphaexc_ptr[0]->PQEXP_PTR->dummy) orig(grphaexc_ptr[0]->ANGLE_UNIT) orig(grphaexc_ptr[0]->PHASE_UNIT)
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->LINE_NUM, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], grphaexc_ptr[0], grphaexc_ptr[0][0], grphaexc_ptr[0]->TYPE, grphaexc_ptr[0]->UNIF_VAL, grphaexc_ptr[0]->CENTRE, grphaexc_ptr[0]->P1_EP, grphaexc_ptr[0]->P2_EP, grphaexc_ptr[0]->Q1_EP, grphaexc_ptr[0]->Q2_EP, grphaexc_ptr[0]->DIRECTION, grphaexc_ptr[0]->OMIT_ANGLE, grphaexc_ptr[0]->ANGLE_START, grphaexc_ptr[0]->ANGLE_STEP, grphaexc_ptr[0]->OMIT_PHASE, grphaexc_ptr[0]->PHASE_START, grphaexc_ptr[0]->PHASE_STEP, grphaexc_ptr[0]->U, grphaexc_ptr[0]->V, grphaexc_ptr[0]->THETA, grphaexc_ptr[0]->PHI, grphaexc_ptr[0]->PQEXP_PTR, grphaexc_ptr[0]->PQEXP_PTR[0], grphaexc_ptr[0]->PQEXP_PTR->dummy, grphaexc_ptr[0]->ANGLE_UNIT, grphaexc_ptr[0]->PHASE_UNIT
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
grphaexc_ptr.[0].TYPE == return
grphaexc_ptr.[0].PHASE_UNIT == return
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 80
p1.LINE_NUM == 11
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 53
p1.PREV.PREV.LINE_NUM == 10
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 69
pp2.[0].LINE_NUM == 12
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 57
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
grphaexc_ptr.[0] != null
grphaexc_ptr.[0].[0] != null
daikon.Quant.fuzzy.eq(grphaexc_ptr.[0].UNIF_VAL, -219.0)
grphaexc_ptr.[0].PQEXP_PTR == null
return == 0
===========================================================================
..grwrite():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME group_ptr group_ptr[0] group_ptr->NAME group_ptr->GRID_PTR group_ptr->GRID_PTR[0] group_ptr->GRID_PTR->NAME group_ptr->GRID_PTR->LEVEL group_ptr->GRID_PTR->TYPE group_ptr->GRID_PTR->ORIENT group_ptr->GRID_PTR->ANGLE group_ptr->GRID_PTR->ANGLE_UNIT group_ptr->GRID_PTR->PSTEP group_ptr->GRID_PTR->QSTEP group_ptr->GRID_PTR->PQSTEP_UNIT group_ptr->GRID_PTR->PX group_ptr->GRID_PTR->PY group_ptr->GRID_PTR->QX group_ptr->GRID_PTR->QY group_ptr->GRID_PTR->PQXY_UNIT group_ptr->GRID_PTR->ROT_ANGLE group_ptr->ELEM_PTR group_ptr->ELEM_PTR[0] group_ptr->ELEM_PTR->TYPE group_ptr->ELEM_PTR->NAME group_ptr->ELEM_PTR->LEVEL group_ptr->ELEM_PTR->GEOMETRY group_ptr->ELEM_PTR->RADIUS group_ptr->ELEM_PTR->RADIUS_UNIT group_ptr->ELEM_PTR->PDIM group_ptr->ELEM_PTR->QDIM group_ptr->ELEM_PTR->PQDIM_UNIT group_ptr->ELEM_PTR->MODEL group_ptr->ELEM_PTR->EXP group_ptr->ELEM_PTR->ANGLEE group_ptr->ELEM_PTR->ANGLEH group_ptr->ELEM_PTR->ANGLE_UNIT group_ptr->ELEM_PTR->TAPERE group_ptr->ELEM_PTR->TAPERH group_ptr->ELEM_PTR->TAPER_UNIT group_ptr->ELEM_PTR->POLARIZATION group_ptr->ELEM_PTR->PHEPOL group_ptr->ELEM_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->DIRECTION group_ptr->ELEM_PTR->GAIN group_ptr->ELEM_PTR->GAIN_UNIT group_ptr->ELEM_PTR->NPORTS group_ptr->ELEM_PTR->PORT_PTR group_ptr->ELEM_PTR->PORT_PTR[0] group_ptr->ELEM_PTR->PORT_PTR->PORTNUM group_ptr->ELEM_PTR->PORT_PTR->AMP group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSC group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSH group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr->ELEM_PTR->PORT_PTR->PPA group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr->ELEM_PTR->PORT_PTR->PHEPOL group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr->ELEM_PTR->PORT_PTR->NEXT group_ptr->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr->ADDREM_PTR group_ptr->ADDREM_PTR[0] group_ptr->ADDREM_PTR->ADDREM_TYPE group_ptr->ADDREM_PTR->BLOCK_TYPE group_ptr->ADDREM_PTR->NODE_PTR group_ptr->ADDREM_PTR->NODE_PTR[0] group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr->ADDREM_PTR->NODE_PTR->PCOORD group_ptr->ADDREM_PTR->NODE_PTR->QCOORD group_ptr->ADDREM_PTR->NODE_PTR->THEA group_ptr->ADDREM_PTR->NODE_PTR->PHEA group_ptr->ADDREM_PTR->NODE_PTR->PSEA group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr->ADDREM_PTR->NODE_PTR->NEXT group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT group_ptr->ADDREM_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr->ADDREM_PTR->NEXT->NODE_PTR group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr->ADDREM_PTR->NEXT->NEXT group_ptr->ADDREM_PTR->NEXT->NEXT[0] group_ptr->GRAMPEXC_PTR group_ptr->GRAMPEXC_PTR[0] group_ptr->GRAMPEXC_PTR->TYPE group_ptr->GRAMPEXC_PTR->UNIF_VAL group_ptr->GRAMPEXC_PTR->CENTRE group_ptr->GRAMPEXC_PTR->P1_ET group_ptr->GRAMPEXC_PTR->P2_ET group_ptr->GRAMPEXC_PTR->Q1_ET group_ptr->GRAMPEXC_PTR->Q2_ET group_ptr->GRAMPEXC_PTR->AMP_UNIT group_ptr->GRAMPEXC_PTR->PQEXP_PTR group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR group_ptr->GRPHAEXC_PTR[0] group_ptr->GRPHAEXC_PTR->TYPE group_ptr->GRPHAEXC_PTR->UNIF_VAL group_ptr->GRPHAEXC_PTR->CENTRE group_ptr->GRPHAEXC_PTR->P1_EP group_ptr->GRPHAEXC_PTR->P2_EP group_ptr->GRPHAEXC_PTR->Q1_EP group_ptr->GRPHAEXC_PTR->Q2_EP group_ptr->GRPHAEXC_PTR->DIRECTION group_ptr->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->GRPHAEXC_PTR->ANGLE_START group_ptr->GRPHAEXC_PTR->ANGLE_STEP group_ptr->GRPHAEXC_PTR->OMIT_PHASE group_ptr->GRPHAEXC_PTR->PHASE_START group_ptr->GRPHAEXC_PTR->PHASE_STEP group_ptr->GRPHAEXC_PTR->U group_ptr->GRPHAEXC_PTR->V group_ptr->GRPHAEXC_PTR->THETA group_ptr->GRPHAEXC_PTR->PHI group_ptr->GRPHAEXC_PTR->PQEXP_PTR group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->GRPHAEXC_PTR->PHASE_UNIT group_ptr->ERR_PTR group_ptr->ERR_PTR[0] group_ptr->ERR_PTR->AMP_TYPE group_ptr->ERR_PTR->AMP_STDEV group_ptr->ERR_PTR->AMP_LINOFFS group_ptr->ERR_PTR->AMP_LINSTEP group_ptr->ERR_PTR->AMP_2NDCENT group_ptr->ERR_PTR->AMP_2NDPET group_ptr->ERR_PTR->AMP_2NDQET group_ptr->ERR_PTR->AMP_UNIT group_ptr->ERR_PTR->PHASE_TYPE group_ptr->ERR_PTR->PHASE_STDEV group_ptr->ERR_PTR->PHASE_LINOFFS group_ptr->ERR_PTR->PHASE_LINSTEP group_ptr->ERR_PTR->PHASE_2NDCENT group_ptr->ERR_PTR->PHASE_2NDPSID group_ptr->ERR_PTR->PHASE_2NDQSID group_ptr->ERR_PTR->PHASE_QUANTSTEP group_ptr->ERR_PTR->PHASE_UNIT group_ptr->FAIL_PTR group_ptr->FAIL_PTR[0] group_ptr->FAIL_PTR->NUM_FAULTY_EL group_ptr->FAIL_PTR->FIXED_AMP group_ptr->FAIL_PTR->FIXED_PHASE group_ptr->NEXT group_ptr->NEXT[0] group_ptr->NEXT->NAME group_ptr->NEXT->GRID_PTR group_ptr->NEXT->GRID_PTR[0] group_ptr->NEXT->GRID_PTR->NAME group_ptr->NEXT->GRID_PTR->LEVEL group_ptr->NEXT->GRID_PTR->TYPE group_ptr->NEXT->GRID_PTR->ORIENT group_ptr->NEXT->GRID_PTR->ANGLE group_ptr->NEXT->GRID_PTR->ANGLE_UNIT group_ptr->NEXT->GRID_PTR->PSTEP group_ptr->NEXT->GRID_PTR->QSTEP group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr->NEXT->GRID_PTR->PX group_ptr->NEXT->GRID_PTR->PY group_ptr->NEXT->GRID_PTR->QX group_ptr->NEXT->GRID_PTR->QY group_ptr->NEXT->GRID_PTR->PQXY_UNIT group_ptr->NEXT->GRID_PTR->ROT_ANGLE group_ptr->NEXT->ELEM_PTR group_ptr->NEXT->ELEM_PTR[0] group_ptr->NEXT->ELEM_PTR->TYPE group_ptr->NEXT->ELEM_PTR->NAME group_ptr->NEXT->ELEM_PTR->LEVEL group_ptr->NEXT->ELEM_PTR->GEOMETRY group_ptr->NEXT->ELEM_PTR->RADIUS group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr->NEXT->ELEM_PTR->PDIM group_ptr->NEXT->ELEM_PTR->QDIM group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr->NEXT->ELEM_PTR->MODEL group_ptr->NEXT->ELEM_PTR->EXP group_ptr->NEXT->ELEM_PTR->ANGLEE group_ptr->NEXT->ELEM_PTR->ANGLEH group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr->NEXT->ELEM_PTR->TAPERE group_ptr->NEXT->ELEM_PTR->TAPERH group_ptr->NEXT->ELEM_PTR->TAPER_UNIT group_ptr->NEXT->ELEM_PTR->POLARIZATION group_ptr->NEXT->ELEM_PTR->PHEPOL group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr->NEXT->ELEM_PTR->DIRECTION group_ptr->NEXT->ELEM_PTR->GAIN group_ptr->NEXT->ELEM_PTR->GAIN_UNIT group_ptr->NEXT->ELEM_PTR->NPORTS group_ptr->NEXT->ELEM_PTR->PORT_PTR group_ptr->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr->NEXT->ADDREM_PTR group_ptr->NEXT->ADDREM_PTR[0] group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr->NEXT->ADDREM_PTR->NODE_PTR group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr->NEXT->ADDREM_PTR->NEXT group_ptr->NEXT->ADDREM_PTR->NEXT[0] group_ptr->NEXT->GRAMPEXC_PTR group_ptr->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->GRAMPEXC_PTR->TYPE group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr->NEXT->GRAMPEXC_PTR->CENTRE group_ptr->NEXT->GRAMPEXC_PTR->P1_ET group_ptr->NEXT->GRAMPEXC_PTR->P2_ET group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR group_ptr->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->TYPE group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr->NEXT->GRPHAEXC_PTR->CENTRE group_ptr->NEXT->GRPHAEXC_PTR->P1_EP group_ptr->NEXT->GRPHAEXC_PTR->P2_EP group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr->NEXT->GRPHAEXC_PTR->U group_ptr->NEXT->GRPHAEXC_PTR->V group_ptr->NEXT->GRPHAEXC_PTR->THETA group_ptr->NEXT->GRPHAEXC_PTR->PHI group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr->NEXT->ERR_PTR group_ptr->NEXT->ERR_PTR[0] group_ptr->NEXT->ERR_PTR->AMP_TYPE group_ptr->NEXT->ERR_PTR->AMP_STDEV group_ptr->NEXT->ERR_PTR->AMP_LINOFFS group_ptr->NEXT->ERR_PTR->AMP_LINSTEP group_ptr->NEXT->ERR_PTR->AMP_2NDCENT group_ptr->NEXT->ERR_PTR->AMP_2NDPET group_ptr->NEXT->ERR_PTR->AMP_2NDQET group_ptr->NEXT->ERR_PTR->AMP_UNIT group_ptr->NEXT->ERR_PTR->PHASE_TYPE group_ptr->NEXT->ERR_PTR->PHASE_STDEV group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr->NEXT->ERR_PTR->PHASE_UNIT group_ptr->NEXT->FAIL_PTR group_ptr->NEXT->FAIL_PTR[0] group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr->NEXT->FAIL_PTR->FIXED_AMP group_ptr->NEXT->FAIL_PTR->FIXED_PHASE group_ptr->NEXT->NEXT group_ptr->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NAME group_ptr->NEXT->NEXT->GRID_PTR group_ptr->NEXT->NEXT->GRID_PTR[0] group_ptr->NEXT->NEXT->ELEM_PTR group_ptr->NEXT->NEXT->ELEM_PTR[0] group_ptr->NEXT->NEXT->ADDREM_PTR group_ptr->NEXT->NEXT->ADDREM_PTR[0] group_ptr->NEXT->NEXT->GRAMPEXC_PTR group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->NEXT->GRPHAEXC_PTR group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->NEXT->ERR_PTR group_ptr->NEXT->NEXT->ERR_PTR[0] group_ptr->NEXT->NEXT->FAIL_PTR group_ptr->NEXT->NEXT->FAIL_PTR[0] group_ptr->NEXT->NEXT->NEXT group_ptr->NEXT->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NUM_OF_NODES group_ptr->NEXT->NEXT->SHAPE group_ptr->NEXT->NEXT->PSIZE group_ptr->NEXT->NEXT->QSIZE group_ptr->NEXT->NEXT->GEOMNODE_PTR group_ptr->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->NEXT->BUILT group_ptr->NEXT->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr->NEXT->NUM_OF_NODES group_ptr->NEXT->SHAPE group_ptr->NEXT->PSIZE group_ptr->NEXT->QSIZE group_ptr->NEXT->GEOMNODE_PTR group_ptr->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->LOC_P group_ptr->NEXT->GEOMNODE_PTR->LOC_Q group_ptr->NEXT->GEOMNODE_PTR->XA group_ptr->NEXT->GEOMNODE_PTR->YA group_ptr->NEXT->GEOMNODE_PTR->ZA group_ptr->NEXT->GEOMNODE_PTR->THEA group_ptr->NEXT->GEOMNODE_PTR->PHEA group_ptr->NEXT->GEOMNODE_PTR->PSEA group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->NEXT group_ptr->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->SHAPE group_ptr->NEXT->GEOMNODE_PTR->PSIZE group_ptr->NEXT->GEOMNODE_PTR->QSIZE group_ptr->NEXT->BUILT group_ptr->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->SUPER_GROUP_PTR[0] group_ptr->NUM_OF_NODES group_ptr->SHAPE group_ptr->PSIZE group_ptr->QSIZE group_ptr->GEOMNODE_PTR group_ptr->GEOMNODE_PTR[0] group_ptr->GEOMNODE_PTR->LOC_P group_ptr->GEOMNODE_PTR->LOC_Q group_ptr->GEOMNODE_PTR->XA group_ptr->GEOMNODE_PTR->YA group_ptr->GEOMNODE_PTR->ZA group_ptr->GEOMNODE_PTR->THEA group_ptr->GEOMNODE_PTR->PHEA group_ptr->GEOMNODE_PTR->PSEA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->NEXT group_ptr->GEOMNODE_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->GEOMNODE_PTR->SHAPE group_ptr->GEOMNODE_PTR->PSIZE group_ptr->GEOMNODE_PTR->QSIZE group_ptr->BUILT group_ptr->SUPER_GROUP_PTR group_ptr->SUPER_GROUP_PTR[0] filename
::UserNames.equals(group_ptr.NAME)
::GLOBLE_FILENAME.equals(filename)
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.LEVEL
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.GEOMETRY
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.NPORTS
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.PORTNUM
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL
group_ptr.GRID_PTR.LEVEL == group_ptr.ADDREM_PTR.NODE_PTR.QCOORD
group_ptr.GRID_PTR.LEVEL == group_ptr.GRAMPEXC_PTR.TYPE
group_ptr.GRID_PTR.TYPE == group_ptr.SHAPE
group_ptr.GRID_PTR.ANGLE_UNIT == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GRID_PTR.QSTEP)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.PDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.QDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.QSIZE)
group_ptr.GRID_PTR.PQSTEP_UNIT == group_ptr.BUILT
group_ptr.GRID_PTR.PQXY_UNIT == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.GAIN)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSH)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PPA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.ZA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PPA)
group_ptr.ELEM_PTR.TYPE == group_ptr.BUILT
group_ptr.ELEM_PTR.RADIUS_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PQDIM_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.MODEL == group_ptr.BUILT
group_ptr.ELEM_PTR.POLARIZATION == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.ELEM_PTR.PORT_PTR.PHEPOL)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PHEPOL)
group_ptr.ELEM_PTR.PHEPOL_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.DIRECTION == group_ptr.BUILT
group_ptr.ELEM_PTR.GAIN_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT == group_ptr.BUILT
group_ptr.ADDREM_PTR.ADDREM_TYPE == group_ptr.BUILT
group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, group_ptr.GRAMPEXC_PTR.Q2_ET)
group_ptr.GRAMPEXC_PTR.AMP_UNIT == group_ptr.BUILT
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == group_ptr.GRPHAEXC_PTR.PQEXP_PTR
group_ptr.GRPHAEXC_PTR.TYPE == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PSH)
group_ptr.GRPHAEXC_PTR.PHASE_UNIT == group_ptr.BUILT
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.LOC_Q
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.SHAPE
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, group_ptr.QSIZE)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
group_ptr != null
group_ptr.[0] != null
group_ptr.GRID_PTR != null
group_ptr.GRID_PTR.LEVEL == 1
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, 60.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, 86.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, 0.0)
group_ptr.ELEM_PTR != null
group_ptr.ELEM_PTR.[0] != null
group_ptr.ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, 90.0)
group_ptr.ELEM_PTR.PORT_PTR != null
group_ptr.ELEM_PTR.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, 1.0)
group_ptr.ELEM_PTR.PORT_PTR.NEXT == null
group_ptr.ADDREM_PTR != null
group_ptr.ADDREM_PTR.[0] != null
group_ptr.ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.ADDREM_PTR.NODE_PTR != null
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.ADDREM_PTR.NEXT == null
group_ptr.GRAMPEXC_PTR != null
group_ptr.GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.GRPHAEXC_PTR != null
group_ptr.GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.ERR_PTR == null
group_ptr.FAIL_PTR == null
group_ptr.NUM_OF_NODES == 7
group_ptr.SHAPE == 2
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, 258.0)
group_ptr.GEOMNODE_PTR != null
group_ptr.GEOMNODE_PTR.[0] != null
group_ptr.GEOMNODE_PTR.LOC_P == 8
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.YA, 148.95636946268272)
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR != null
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP, 28.999999999999886)
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.NEXT == null
group_ptr.GEOMNODE_PTR.NEXT != null
group_ptr.GEOMNODE_PTR.NEXT.[0] != null
group_ptr.GEOMNODE_PTR.SUBGROUP_PTR == null
group_ptr.BUILT == 0
group_ptr.SUPER_GROUP_PTR != null
===========================================================================
..grwrite():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME group_ptr group_ptr[0] group_ptr->NAME group_ptr->GRID_PTR group_ptr->GRID_PTR[0] group_ptr->GRID_PTR->NAME group_ptr->GRID_PTR->LEVEL group_ptr->GRID_PTR->TYPE group_ptr->GRID_PTR->ORIENT group_ptr->GRID_PTR->ANGLE group_ptr->GRID_PTR->ANGLE_UNIT group_ptr->GRID_PTR->PSTEP group_ptr->GRID_PTR->QSTEP group_ptr->GRID_PTR->PQSTEP_UNIT group_ptr->GRID_PTR->PX group_ptr->GRID_PTR->PY group_ptr->GRID_PTR->QX group_ptr->GRID_PTR->QY group_ptr->GRID_PTR->PQXY_UNIT group_ptr->GRID_PTR->ROT_ANGLE group_ptr->ELEM_PTR group_ptr->ELEM_PTR[0] group_ptr->ELEM_PTR->TYPE group_ptr->ELEM_PTR->NAME group_ptr->ELEM_PTR->LEVEL group_ptr->ELEM_PTR->GEOMETRY group_ptr->ELEM_PTR->RADIUS group_ptr->ELEM_PTR->RADIUS_UNIT group_ptr->ELEM_PTR->PDIM group_ptr->ELEM_PTR->QDIM group_ptr->ELEM_PTR->PQDIM_UNIT group_ptr->ELEM_PTR->MODEL group_ptr->ELEM_PTR->EXP group_ptr->ELEM_PTR->ANGLEE group_ptr->ELEM_PTR->ANGLEH group_ptr->ELEM_PTR->ANGLE_UNIT group_ptr->ELEM_PTR->TAPERE group_ptr->ELEM_PTR->TAPERH group_ptr->ELEM_PTR->TAPER_UNIT group_ptr->ELEM_PTR->POLARIZATION group_ptr->ELEM_PTR->PHEPOL group_ptr->ELEM_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->DIRECTION group_ptr->ELEM_PTR->GAIN group_ptr->ELEM_PTR->GAIN_UNIT group_ptr->ELEM_PTR->NPORTS group_ptr->ELEM_PTR->PORT_PTR group_ptr->ELEM_PTR->PORT_PTR[0] group_ptr->ELEM_PTR->PORT_PTR->PORTNUM group_ptr->ELEM_PTR->PORT_PTR->AMP group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSC group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSH group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr->ELEM_PTR->PORT_PTR->PPA group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr->ELEM_PTR->PORT_PTR->PHEPOL group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr->ELEM_PTR->PORT_PTR->NEXT group_ptr->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr->ADDREM_PTR group_ptr->ADDREM_PTR[0] group_ptr->ADDREM_PTR->ADDREM_TYPE group_ptr->ADDREM_PTR->BLOCK_TYPE group_ptr->ADDREM_PTR->NODE_PTR group_ptr->ADDREM_PTR->NODE_PTR[0] group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr->ADDREM_PTR->NODE_PTR->PCOORD group_ptr->ADDREM_PTR->NODE_PTR->QCOORD group_ptr->ADDREM_PTR->NODE_PTR->THEA group_ptr->ADDREM_PTR->NODE_PTR->PHEA group_ptr->ADDREM_PTR->NODE_PTR->PSEA group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr->ADDREM_PTR->NODE_PTR->NEXT group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT group_ptr->ADDREM_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr->ADDREM_PTR->NEXT->NODE_PTR group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr->ADDREM_PTR->NEXT->NEXT group_ptr->ADDREM_PTR->NEXT->NEXT[0] group_ptr->GRAMPEXC_PTR group_ptr->GRAMPEXC_PTR[0] group_ptr->GRAMPEXC_PTR->TYPE group_ptr->GRAMPEXC_PTR->UNIF_VAL group_ptr->GRAMPEXC_PTR->CENTRE group_ptr->GRAMPEXC_PTR->P1_ET group_ptr->GRAMPEXC_PTR->P2_ET group_ptr->GRAMPEXC_PTR->Q1_ET group_ptr->GRAMPEXC_PTR->Q2_ET group_ptr->GRAMPEXC_PTR->AMP_UNIT group_ptr->GRAMPEXC_PTR->PQEXP_PTR group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR group_ptr->GRPHAEXC_PTR[0] group_ptr->GRPHAEXC_PTR->TYPE group_ptr->GRPHAEXC_PTR->UNIF_VAL group_ptr->GRPHAEXC_PTR->CENTRE group_ptr->GRPHAEXC_PTR->P1_EP group_ptr->GRPHAEXC_PTR->P2_EP group_ptr->GRPHAEXC_PTR->Q1_EP group_ptr->GRPHAEXC_PTR->Q2_EP group_ptr->GRPHAEXC_PTR->DIRECTION group_ptr->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->GRPHAEXC_PTR->ANGLE_START group_ptr->GRPHAEXC_PTR->ANGLE_STEP group_ptr->GRPHAEXC_PTR->OMIT_PHASE group_ptr->GRPHAEXC_PTR->PHASE_START group_ptr->GRPHAEXC_PTR->PHASE_STEP group_ptr->GRPHAEXC_PTR->U group_ptr->GRPHAEXC_PTR->V group_ptr->GRPHAEXC_PTR->THETA group_ptr->GRPHAEXC_PTR->PHI group_ptr->GRPHAEXC_PTR->PQEXP_PTR group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->GRPHAEXC_PTR->PHASE_UNIT group_ptr->ERR_PTR group_ptr->ERR_PTR[0] group_ptr->ERR_PTR->AMP_TYPE group_ptr->ERR_PTR->AMP_STDEV group_ptr->ERR_PTR->AMP_LINOFFS group_ptr->ERR_PTR->AMP_LINSTEP group_ptr->ERR_PTR->AMP_2NDCENT group_ptr->ERR_PTR->AMP_2NDPET group_ptr->ERR_PTR->AMP_2NDQET group_ptr->ERR_PTR->AMP_UNIT group_ptr->ERR_PTR->PHASE_TYPE group_ptr->ERR_PTR->PHASE_STDEV group_ptr->ERR_PTR->PHASE_LINOFFS group_ptr->ERR_PTR->PHASE_LINSTEP group_ptr->ERR_PTR->PHASE_2NDCENT group_ptr->ERR_PTR->PHASE_2NDPSID group_ptr->ERR_PTR->PHASE_2NDQSID group_ptr->ERR_PTR->PHASE_QUANTSTEP group_ptr->ERR_PTR->PHASE_UNIT group_ptr->FAIL_PTR group_ptr->FAIL_PTR[0] group_ptr->FAIL_PTR->NUM_FAULTY_EL group_ptr->FAIL_PTR->FIXED_AMP group_ptr->FAIL_PTR->FIXED_PHASE group_ptr->NEXT group_ptr->NEXT[0] group_ptr->NEXT->NAME group_ptr->NEXT->GRID_PTR group_ptr->NEXT->GRID_PTR[0] group_ptr->NEXT->GRID_PTR->NAME group_ptr->NEXT->GRID_PTR->LEVEL group_ptr->NEXT->GRID_PTR->TYPE group_ptr->NEXT->GRID_PTR->ORIENT group_ptr->NEXT->GRID_PTR->ANGLE group_ptr->NEXT->GRID_PTR->ANGLE_UNIT group_ptr->NEXT->GRID_PTR->PSTEP group_ptr->NEXT->GRID_PTR->QSTEP group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr->NEXT->GRID_PTR->PX group_ptr->NEXT->GRID_PTR->PY group_ptr->NEXT->GRID_PTR->QX group_ptr->NEXT->GRID_PTR->QY group_ptr->NEXT->GRID_PTR->PQXY_UNIT group_ptr->NEXT->GRID_PTR->ROT_ANGLE group_ptr->NEXT->ELEM_PTR group_ptr->NEXT->ELEM_PTR[0] group_ptr->NEXT->ELEM_PTR->TYPE group_ptr->NEXT->ELEM_PTR->NAME group_ptr->NEXT->ELEM_PTR->LEVEL group_ptr->NEXT->ELEM_PTR->GEOMETRY group_ptr->NEXT->ELEM_PTR->RADIUS group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr->NEXT->ELEM_PTR->PDIM group_ptr->NEXT->ELEM_PTR->QDIM group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr->NEXT->ELEM_PTR->MODEL group_ptr->NEXT->ELEM_PTR->EXP group_ptr->NEXT->ELEM_PTR->ANGLEE group_ptr->NEXT->ELEM_PTR->ANGLEH group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr->NEXT->ELEM_PTR->TAPERE group_ptr->NEXT->ELEM_PTR->TAPERH group_ptr->NEXT->ELEM_PTR->TAPER_UNIT group_ptr->NEXT->ELEM_PTR->POLARIZATION group_ptr->NEXT->ELEM_PTR->PHEPOL group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr->NEXT->ELEM_PTR->DIRECTION group_ptr->NEXT->ELEM_PTR->GAIN group_ptr->NEXT->ELEM_PTR->GAIN_UNIT group_ptr->NEXT->ELEM_PTR->NPORTS group_ptr->NEXT->ELEM_PTR->PORT_PTR group_ptr->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr->NEXT->ADDREM_PTR group_ptr->NEXT->ADDREM_PTR[0] group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr->NEXT->ADDREM_PTR->NODE_PTR group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr->NEXT->ADDREM_PTR->NEXT group_ptr->NEXT->ADDREM_PTR->NEXT[0] group_ptr->NEXT->GRAMPEXC_PTR group_ptr->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->GRAMPEXC_PTR->TYPE group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr->NEXT->GRAMPEXC_PTR->CENTRE group_ptr->NEXT->GRAMPEXC_PTR->P1_ET group_ptr->NEXT->GRAMPEXC_PTR->P2_ET group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR group_ptr->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->TYPE group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr->NEXT->GRPHAEXC_PTR->CENTRE group_ptr->NEXT->GRPHAEXC_PTR->P1_EP group_ptr->NEXT->GRPHAEXC_PTR->P2_EP group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr->NEXT->GRPHAEXC_PTR->U group_ptr->NEXT->GRPHAEXC_PTR->V group_ptr->NEXT->GRPHAEXC_PTR->THETA group_ptr->NEXT->GRPHAEXC_PTR->PHI group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr->NEXT->ERR_PTR group_ptr->NEXT->ERR_PTR[0] group_ptr->NEXT->ERR_PTR->AMP_TYPE group_ptr->NEXT->ERR_PTR->AMP_STDEV group_ptr->NEXT->ERR_PTR->AMP_LINOFFS group_ptr->NEXT->ERR_PTR->AMP_LINSTEP group_ptr->NEXT->ERR_PTR->AMP_2NDCENT group_ptr->NEXT->ERR_PTR->AMP_2NDPET group_ptr->NEXT->ERR_PTR->AMP_2NDQET group_ptr->NEXT->ERR_PTR->AMP_UNIT group_ptr->NEXT->ERR_PTR->PHASE_TYPE group_ptr->NEXT->ERR_PTR->PHASE_STDEV group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr->NEXT->ERR_PTR->PHASE_UNIT group_ptr->NEXT->FAIL_PTR group_ptr->NEXT->FAIL_PTR[0] group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr->NEXT->FAIL_PTR->FIXED_AMP group_ptr->NEXT->FAIL_PTR->FIXED_PHASE group_ptr->NEXT->NEXT group_ptr->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NAME group_ptr->NEXT->NEXT->GRID_PTR group_ptr->NEXT->NEXT->GRID_PTR[0] group_ptr->NEXT->NEXT->ELEM_PTR group_ptr->NEXT->NEXT->ELEM_PTR[0] group_ptr->NEXT->NEXT->ADDREM_PTR group_ptr->NEXT->NEXT->ADDREM_PTR[0] group_ptr->NEXT->NEXT->GRAMPEXC_PTR group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->NEXT->GRPHAEXC_PTR group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->NEXT->ERR_PTR group_ptr->NEXT->NEXT->ERR_PTR[0] group_ptr->NEXT->NEXT->FAIL_PTR group_ptr->NEXT->NEXT->FAIL_PTR[0] group_ptr->NEXT->NEXT->NEXT group_ptr->NEXT->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NUM_OF_NODES group_ptr->NEXT->NEXT->SHAPE group_ptr->NEXT->NEXT->PSIZE group_ptr->NEXT->NEXT->QSIZE group_ptr->NEXT->NEXT->GEOMNODE_PTR group_ptr->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->NEXT->BUILT group_ptr->NEXT->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr->NEXT->NUM_OF_NODES group_ptr->NEXT->SHAPE group_ptr->NEXT->PSIZE group_ptr->NEXT->QSIZE group_ptr->NEXT->GEOMNODE_PTR group_ptr->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->LOC_P group_ptr->NEXT->GEOMNODE_PTR->LOC_Q group_ptr->NEXT->GEOMNODE_PTR->XA group_ptr->NEXT->GEOMNODE_PTR->YA group_ptr->NEXT->GEOMNODE_PTR->ZA group_ptr->NEXT->GEOMNODE_PTR->THEA group_ptr->NEXT->GEOMNODE_PTR->PHEA group_ptr->NEXT->GEOMNODE_PTR->PSEA group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->NEXT group_ptr->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->SHAPE group_ptr->NEXT->GEOMNODE_PTR->PSIZE group_ptr->NEXT->GEOMNODE_PTR->QSIZE group_ptr->NEXT->BUILT group_ptr->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->SUPER_GROUP_PTR[0] group_ptr->NUM_OF_NODES group_ptr->SHAPE group_ptr->PSIZE group_ptr->QSIZE group_ptr->GEOMNODE_PTR group_ptr->GEOMNODE_PTR[0] group_ptr->GEOMNODE_PTR->LOC_P group_ptr->GEOMNODE_PTR->LOC_Q group_ptr->GEOMNODE_PTR->XA group_ptr->GEOMNODE_PTR->YA group_ptr->GEOMNODE_PTR->ZA group_ptr->GEOMNODE_PTR->THEA group_ptr->GEOMNODE_PTR->PHEA group_ptr->GEOMNODE_PTR->PSEA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->NEXT group_ptr->GEOMNODE_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->GEOMNODE_PTR->SHAPE group_ptr->GEOMNODE_PTR->PSIZE group_ptr->GEOMNODE_PTR->QSIZE group_ptr->BUILT group_ptr->SUPER_GROUP_PTR group_ptr->SUPER_GROUP_PTR[0] filename return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(group_ptr) orig(group_ptr[0]) orig(group_ptr->NAME) orig(group_ptr->GRID_PTR) orig(group_ptr->GRID_PTR[0]) orig(group_ptr->GRID_PTR->NAME) orig(group_ptr->GRID_PTR->LEVEL) orig(group_ptr->GRID_PTR->TYPE) orig(group_ptr->GRID_PTR->ORIENT) orig(group_ptr->GRID_PTR->ANGLE) orig(group_ptr->GRID_PTR->ANGLE_UNIT) orig(group_ptr->GRID_PTR->PSTEP) orig(group_ptr->GRID_PTR->QSTEP) orig(group_ptr->GRID_PTR->PQSTEP_UNIT) orig(group_ptr->GRID_PTR->PX) orig(group_ptr->GRID_PTR->PY) orig(group_ptr->GRID_PTR->QX) orig(group_ptr->GRID_PTR->QY) orig(group_ptr->GRID_PTR->PQXY_UNIT) orig(group_ptr->GRID_PTR->ROT_ANGLE) orig(group_ptr->ELEM_PTR) orig(group_ptr->ELEM_PTR[0]) orig(group_ptr->ELEM_PTR->TYPE) orig(group_ptr->ELEM_PTR->NAME) orig(group_ptr->ELEM_PTR->LEVEL) orig(group_ptr->ELEM_PTR->GEOMETRY) orig(group_ptr->ELEM_PTR->RADIUS) orig(group_ptr->ELEM_PTR->RADIUS_UNIT) orig(group_ptr->ELEM_PTR->PDIM) orig(group_ptr->ELEM_PTR->QDIM) orig(group_ptr->ELEM_PTR->PQDIM_UNIT) orig(group_ptr->ELEM_PTR->MODEL) orig(group_ptr->ELEM_PTR->EXP) orig(group_ptr->ELEM_PTR->ANGLEE) orig(group_ptr->ELEM_PTR->ANGLEH) orig(group_ptr->ELEM_PTR->ANGLE_UNIT) orig(group_ptr->ELEM_PTR->TAPERE) orig(group_ptr->ELEM_PTR->TAPERH) orig(group_ptr->ELEM_PTR->TAPER_UNIT) orig(group_ptr->ELEM_PTR->POLARIZATION) orig(group_ptr->ELEM_PTR->PHEPOL) orig(group_ptr->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr->ELEM_PTR->DIRECTION) orig(group_ptr->ELEM_PTR->GAIN) orig(group_ptr->ELEM_PTR->GAIN_UNIT) orig(group_ptr->ELEM_PTR->NPORTS) orig(group_ptr->ELEM_PTR->PORT_PTR) orig(group_ptr->ELEM_PTR->PORT_PTR[0]) orig(group_ptr->ELEM_PTR->PORT_PTR->PORTNUM) orig(group_ptr->ELEM_PTR->PORT_PTR->AMP) orig(group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PSC) orig(group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PSH) orig(group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PPA) orig(group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PHEPOL) orig(group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL) orig(group_ptr->ELEM_PTR->PORT_PTR->NEXT) orig(group_ptr->ELEM_PTR->PORT_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR) orig(group_ptr->ADDREM_PTR[0]) orig(group_ptr->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr->ADDREM_PTR->NODE_PTR) orig(group_ptr->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT) orig(group_ptr->ADDREM_PTR->NODE_PTR->PCOORD) orig(group_ptr->ADDREM_PTR->NODE_PTR->QCOORD) orig(group_ptr->ADDREM_PTR->NODE_PTR->THEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->PHEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->PSEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT) orig(group_ptr->ADDREM_PTR->NODE_PTR->NEXT) orig(group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR->NEXT) orig(group_ptr->ADDREM_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE) orig(group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE) orig(group_ptr->ADDREM_PTR->NEXT->NODE_PTR) orig(group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0]) orig(group_ptr->ADDREM_PTR->NEXT->NEXT) orig(group_ptr->ADDREM_PTR->NEXT->NEXT[0]) orig(group_ptr->GRAMPEXC_PTR) orig(group_ptr->GRAMPEXC_PTR[0]) orig(group_ptr->GRAMPEXC_PTR->TYPE) orig(group_ptr->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr->GRAMPEXC_PTR->CENTRE) orig(group_ptr->GRAMPEXC_PTR->P1_ET) orig(group_ptr->GRAMPEXC_PTR->P2_ET) orig(group_ptr->GRAMPEXC_PTR->Q1_ET) orig(group_ptr->GRAMPEXC_PTR->Q2_ET) orig(group_ptr->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr->GRPHAEXC_PTR) orig(group_ptr->GRPHAEXC_PTR[0]) orig(group_ptr->GRPHAEXC_PTR->TYPE) orig(group_ptr->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr->GRPHAEXC_PTR->CENTRE) orig(group_ptr->GRPHAEXC_PTR->P1_EP) orig(group_ptr->GRPHAEXC_PTR->P2_EP) orig(group_ptr->GRPHAEXC_PTR->Q1_EP) orig(group_ptr->GRPHAEXC_PTR->Q2_EP) orig(group_ptr->GRPHAEXC_PTR->DIRECTION) orig(group_ptr->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr->GRPHAEXC_PTR->PHASE_START) orig(group_ptr->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr->GRPHAEXC_PTR->U) orig(group_ptr->GRPHAEXC_PTR->V) orig(group_ptr->GRPHAEXC_PTR->THETA) orig(group_ptr->GRPHAEXC_PTR->PHI) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr->ERR_PTR) orig(group_ptr->ERR_PTR[0]) orig(group_ptr->ERR_PTR->AMP_TYPE) orig(group_ptr->ERR_PTR->AMP_STDEV) orig(group_ptr->ERR_PTR->AMP_LINOFFS) orig(group_ptr->ERR_PTR->AMP_LINSTEP) orig(group_ptr->ERR_PTR->AMP_2NDCENT) orig(group_ptr->ERR_PTR->AMP_2NDPET) orig(group_ptr->ERR_PTR->AMP_2NDQET) orig(group_ptr->ERR_PTR->AMP_UNIT) orig(group_ptr->ERR_PTR->PHASE_TYPE) orig(group_ptr->ERR_PTR->PHASE_STDEV) orig(group_ptr->ERR_PTR->PHASE_LINOFFS) orig(group_ptr->ERR_PTR->PHASE_LINSTEP) orig(group_ptr->ERR_PTR->PHASE_2NDCENT) orig(group_ptr->ERR_PTR->PHASE_2NDPSID) orig(group_ptr->ERR_PTR->PHASE_2NDQSID) orig(group_ptr->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr->ERR_PTR->PHASE_UNIT) orig(group_ptr->FAIL_PTR) orig(group_ptr->FAIL_PTR[0]) orig(group_ptr->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr->FAIL_PTR->FIXED_AMP) orig(group_ptr->FAIL_PTR->FIXED_PHASE) orig(group_ptr->NEXT) orig(group_ptr->NEXT[0]) orig(group_ptr->NEXT->NAME) orig(group_ptr->NEXT->GRID_PTR) orig(group_ptr->NEXT->GRID_PTR[0]) orig(group_ptr->NEXT->GRID_PTR->NAME) orig(group_ptr->NEXT->GRID_PTR->LEVEL) orig(group_ptr->NEXT->GRID_PTR->TYPE) orig(group_ptr->NEXT->GRID_PTR->ORIENT) orig(group_ptr->NEXT->GRID_PTR->ANGLE) orig(group_ptr->NEXT->GRID_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->GRID_PTR->PSTEP) orig(group_ptr->NEXT->GRID_PTR->QSTEP) orig(group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT) orig(group_ptr->NEXT->GRID_PTR->PX) orig(group_ptr->NEXT->GRID_PTR->PY) orig(group_ptr->NEXT->GRID_PTR->QX) orig(group_ptr->NEXT->GRID_PTR->QY) orig(group_ptr->NEXT->GRID_PTR->PQXY_UNIT) orig(group_ptr->NEXT->GRID_PTR->ROT_ANGLE) orig(group_ptr->NEXT->ELEM_PTR) orig(group_ptr->NEXT->ELEM_PTR[0]) orig(group_ptr->NEXT->ELEM_PTR->TYPE) orig(group_ptr->NEXT->ELEM_PTR->NAME) orig(group_ptr->NEXT->ELEM_PTR->LEVEL) orig(group_ptr->NEXT->ELEM_PTR->GEOMETRY) orig(group_ptr->NEXT->ELEM_PTR->RADIUS) orig(group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT) orig(group_ptr->NEXT->ELEM_PTR->PDIM) orig(group_ptr->NEXT->ELEM_PTR->QDIM) orig(group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT) orig(group_ptr->NEXT->ELEM_PTR->MODEL) orig(group_ptr->NEXT->ELEM_PTR->EXP) orig(group_ptr->NEXT->ELEM_PTR->ANGLEE) orig(group_ptr->NEXT->ELEM_PTR->ANGLEH) orig(group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->ELEM_PTR->TAPERE) orig(group_ptr->NEXT->ELEM_PTR->TAPERH) orig(group_ptr->NEXT->ELEM_PTR->TAPER_UNIT) orig(group_ptr->NEXT->ELEM_PTR->POLARIZATION) orig(group_ptr->NEXT->ELEM_PTR->PHEPOL) orig(group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr->NEXT->ELEM_PTR->DIRECTION) orig(group_ptr->NEXT->ELEM_PTR->GAIN) orig(group_ptr->NEXT->ELEM_PTR->GAIN_UNIT) orig(group_ptr->NEXT->ELEM_PTR->NPORTS) orig(group_ptr->NEXT->ELEM_PTR->PORT_PTR) orig(group_ptr->NEXT->ELEM_PTR->PORT_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR) orig(group_ptr->NEXT->ADDREM_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr->NEXT->ADDREM_PTR->NODE_PTR) orig(group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR->NEXT) orig(group_ptr->NEXT->ADDREM_PTR->NEXT[0]) orig(group_ptr->NEXT->GRAMPEXC_PTR) orig(group_ptr->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr->NEXT->GRAMPEXC_PTR->TYPE) orig(group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr->NEXT->GRAMPEXC_PTR->CENTRE) orig(group_ptr->NEXT->GRAMPEXC_PTR->P1_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->P2_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR) orig(group_ptr->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR->TYPE) orig(group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr->NEXT->GRPHAEXC_PTR->CENTRE) orig(group_ptr->NEXT->GRPHAEXC_PTR->P1_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->P2_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION) orig(group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr->NEXT->GRPHAEXC_PTR->U) orig(group_ptr->NEXT->GRPHAEXC_PTR->V) orig(group_ptr->NEXT->GRPHAEXC_PTR->THETA) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHI) orig(group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr->NEXT->ERR_PTR) orig(group_ptr->NEXT->ERR_PTR[0]) orig(group_ptr->NEXT->ERR_PTR->AMP_TYPE) orig(group_ptr->NEXT->ERR_PTR->AMP_STDEV) orig(group_ptr->NEXT->ERR_PTR->AMP_LINOFFS) orig(group_ptr->NEXT->ERR_PTR->AMP_LINSTEP) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDCENT) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDPET) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDQET) orig(group_ptr->NEXT->ERR_PTR->AMP_UNIT) orig(group_ptr->NEXT->ERR_PTR->PHASE_TYPE) orig(group_ptr->NEXT->ERR_PTR->PHASE_STDEV) orig(group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS) orig(group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID) orig(group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr->NEXT->ERR_PTR->PHASE_UNIT) orig(group_ptr->NEXT->FAIL_PTR) orig(group_ptr->NEXT->FAIL_PTR[0]) orig(group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr->NEXT->FAIL_PTR->FIXED_AMP) orig(group_ptr->NEXT->FAIL_PTR->FIXED_PHASE) orig(group_ptr->NEXT->NEXT) orig(group_ptr->NEXT->NEXT[0]) orig(group_ptr->NEXT->NEXT->NAME) orig(group_ptr->NEXT->NEXT->GRID_PTR) orig(group_ptr->NEXT->NEXT->GRID_PTR[0]) orig(group_ptr->NEXT->NEXT->ELEM_PTR) orig(group_ptr->NEXT->NEXT->ELEM_PTR[0]) orig(group_ptr->NEXT->NEXT->ADDREM_PTR) orig(group_ptr->NEXT->NEXT->ADDREM_PTR[0]) orig(group_ptr->NEXT->NEXT->GRAMPEXC_PTR) orig(group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr->NEXT->NEXT->GRPHAEXC_PTR) orig(group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr->NEXT->NEXT->ERR_PTR) orig(group_ptr->NEXT->NEXT->ERR_PTR[0]) orig(group_ptr->NEXT->NEXT->FAIL_PTR) orig(group_ptr->NEXT->NEXT->FAIL_PTR[0]) orig(group_ptr->NEXT->NEXT->NEXT) orig(group_ptr->NEXT->NEXT->NEXT[0]) orig(group_ptr->NEXT->NEXT->NUM_OF_NODES) orig(group_ptr->NEXT->NEXT->SHAPE) orig(group_ptr->NEXT->NEXT->PSIZE) orig(group_ptr->NEXT->NEXT->QSIZE) orig(group_ptr->NEXT->NEXT->GEOMNODE_PTR) orig(group_ptr->NEXT->NEXT->GEOMNODE_PTR[0]) orig(group_ptr->NEXT->NEXT->BUILT) orig(group_ptr->NEXT->NEXT->SUPER_GROUP_PTR) orig(group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr->NEXT->NUM_OF_NODES) orig(group_ptr->NEXT->SHAPE) orig(group_ptr->NEXT->PSIZE) orig(group_ptr->NEXT->QSIZE) orig(group_ptr->NEXT->GEOMNODE_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->LOC_P) orig(group_ptr->NEXT->GEOMNODE_PTR->LOC_Q) orig(group_ptr->NEXT->GEOMNODE_PTR->XA) orig(group_ptr->NEXT->GEOMNODE_PTR->YA) orig(group_ptr->NEXT->GEOMNODE_PTR->ZA) orig(group_ptr->NEXT->GEOMNODE_PTR->THEA) orig(group_ptr->NEXT->GEOMNODE_PTR->PHEA) orig(group_ptr->NEXT->GEOMNODE_PTR->PSEA) orig(group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->NEXT) orig(group_ptr->NEXT->GEOMNODE_PTR->NEXT[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->SHAPE) orig(group_ptr->NEXT->GEOMNODE_PTR->PSIZE) orig(group_ptr->NEXT->GEOMNODE_PTR->QSIZE) orig(group_ptr->NEXT->BUILT) orig(group_ptr->NEXT->SUPER_GROUP_PTR) orig(group_ptr->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr->NUM_OF_NODES) orig(group_ptr->SHAPE) orig(group_ptr->PSIZE) orig(group_ptr->QSIZE) orig(group_ptr->GEOMNODE_PTR) orig(group_ptr->GEOMNODE_PTR[0]) orig(group_ptr->GEOMNODE_PTR->LOC_P) orig(group_ptr->GEOMNODE_PTR->LOC_Q) orig(group_ptr->GEOMNODE_PTR->XA) orig(group_ptr->GEOMNODE_PTR->YA) orig(group_ptr->GEOMNODE_PTR->ZA) orig(group_ptr->GEOMNODE_PTR->THEA) orig(group_ptr->GEOMNODE_PTR->PHEA) orig(group_ptr->GEOMNODE_PTR->PSEA) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0]) orig(group_ptr->GEOMNODE_PTR->NEXT) orig(group_ptr->GEOMNODE_PTR->NEXT[0]) orig(group_ptr->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr->GEOMNODE_PTR->SHAPE) orig(group_ptr->GEOMNODE_PTR->PSIZE) orig(group_ptr->GEOMNODE_PTR->QSIZE) orig(group_ptr->BUILT) orig(group_ptr->SUPER_GROUP_PTR) orig(group_ptr->SUPER_GROUP_PTR[0]) orig(filename)
assignable group_ptr->GRID_PTR[0], group_ptr->GRID_PTR->NAME, group_ptr->GRID_PTR->ORIENT, group_ptr->GRID_PTR->PX, group_ptr->GRID_PTR->PY, group_ptr->GRID_PTR->QX, group_ptr->GRID_PTR->QY, group_ptr->ELEM_PTR->EXP, group_ptr->ELEM_PTR->ANGLEE, group_ptr->ELEM_PTR->ANGLEH, group_ptr->ELEM_PTR->ANGLE_UNIT, group_ptr->ELEM_PTR->TAPERE, group_ptr->ELEM_PTR->TAPERH, group_ptr->ELEM_PTR->TAPER_UNIT, group_ptr->ELEM_PTR->PORT_PTR->NEXT[0], group_ptr->ADDREM_PTR->NODE_PTR[0], group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT, group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0], group_ptr->ADDREM_PTR->NEXT[0], group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE, group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE, group_ptr->ADDREM_PTR->NEXT->NODE_PTR, group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0], group_ptr->ADDREM_PTR->NEXT->NEXT, group_ptr->ADDREM_PTR->NEXT->NEXT[0], group_ptr->GRAMPEXC_PTR->UNIF_VAL, group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy, group_ptr->GRPHAEXC_PTR->CENTRE, group_ptr->GRPHAEXC_PTR->P1_EP, group_ptr->GRPHAEXC_PTR->P2_EP, group_ptr->GRPHAEXC_PTR->Q1_EP, group_ptr->GRPHAEXC_PTR->Q2_EP, group_ptr->GRPHAEXC_PTR->DIRECTION, group_ptr->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr->GRPHAEXC_PTR->ANGLE_START, group_ptr->GRPHAEXC_PTR->ANGLE_STEP, group_ptr->GRPHAEXC_PTR->OMIT_PHASE, group_ptr->GRPHAEXC_PTR->PHASE_START, group_ptr->GRPHAEXC_PTR->PHASE_STEP, group_ptr->GRPHAEXC_PTR->U, group_ptr->GRPHAEXC_PTR->V, group_ptr->GRPHAEXC_PTR->THETA, group_ptr->GRPHAEXC_PTR->PHI, group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy, group_ptr->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr->ERR_PTR[0], group_ptr->ERR_PTR->AMP_TYPE, group_ptr->ERR_PTR->AMP_STDEV, group_ptr->ERR_PTR->AMP_LINOFFS, group_ptr->ERR_PTR->AMP_LINSTEP, group_ptr->ERR_PTR->AMP_2NDCENT, group_ptr->ERR_PTR->AMP_2NDPET, group_ptr->ERR_PTR->AMP_2NDQET, group_ptr->ERR_PTR->AMP_UNIT, group_ptr->ERR_PTR->PHASE_TYPE, group_ptr->ERR_PTR->PHASE_STDEV, group_ptr->ERR_PTR->PHASE_LINOFFS, group_ptr->ERR_PTR->PHASE_LINSTEP, group_ptr->ERR_PTR->PHASE_2NDCENT, group_ptr->ERR_PTR->PHASE_2NDPSID, group_ptr->ERR_PTR->PHASE_2NDQSID, group_ptr->ERR_PTR->PHASE_QUANTSTEP, group_ptr->ERR_PTR->PHASE_UNIT, group_ptr->FAIL_PTR[0], group_ptr->FAIL_PTR->NUM_FAULTY_EL, group_ptr->FAIL_PTR->FIXED_AMP, group_ptr->FAIL_PTR->FIXED_PHASE, group_ptr->NEXT, group_ptr->NEXT[0], group_ptr->NEXT->NAME, group_ptr->NEXT->GRID_PTR, group_ptr->NEXT->GRID_PTR[0], group_ptr->NEXT->GRID_PTR->NAME, group_ptr->NEXT->GRID_PTR->LEVEL, group_ptr->NEXT->GRID_PTR->TYPE, group_ptr->NEXT->GRID_PTR->ORIENT, group_ptr->NEXT->GRID_PTR->ANGLE, group_ptr->NEXT->GRID_PTR->ANGLE_UNIT, group_ptr->NEXT->GRID_PTR->PSTEP, group_ptr->NEXT->GRID_PTR->QSTEP, group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT, group_ptr->NEXT->GRID_PTR->PX, group_ptr->NEXT->GRID_PTR->PY, group_ptr->NEXT->GRID_PTR->QX, group_ptr->NEXT->GRID_PTR->QY, group_ptr->NEXT->GRID_PTR->PQXY_UNIT, group_ptr->NEXT->GRID_PTR->ROT_ANGLE, group_ptr->NEXT->ELEM_PTR, group_ptr->NEXT->ELEM_PTR[0], group_ptr->NEXT->ELEM_PTR->TYPE, group_ptr->NEXT->ELEM_PTR->NAME, group_ptr->NEXT->ELEM_PTR->LEVEL, group_ptr->NEXT->ELEM_PTR->GEOMETRY, group_ptr->NEXT->ELEM_PTR->RADIUS, group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT, group_ptr->NEXT->ELEM_PTR->PDIM, group_ptr->NEXT->ELEM_PTR->QDIM, group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT, group_ptr->NEXT->ELEM_PTR->MODEL, group_ptr->NEXT->ELEM_PTR->EXP, group_ptr->NEXT->ELEM_PTR->ANGLEE, group_ptr->NEXT->ELEM_PTR->ANGLEH, group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT, group_ptr->NEXT->ELEM_PTR->TAPERE, group_ptr->NEXT->ELEM_PTR->TAPERH, group_ptr->NEXT->ELEM_PTR->TAPER_UNIT, group_ptr->NEXT->ELEM_PTR->POLARIZATION, group_ptr->NEXT->ELEM_PTR->PHEPOL, group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT, group_ptr->NEXT->ELEM_PTR->DIRECTION, group_ptr->NEXT->ELEM_PTR->GAIN, group_ptr->NEXT->ELEM_PTR->GAIN_UNIT, group_ptr->NEXT->ELEM_PTR->NPORTS, group_ptr->NEXT->ELEM_PTR->PORT_PTR, group_ptr->NEXT->ELEM_PTR->PORT_PTR[0], group_ptr->NEXT->ADDREM_PTR, group_ptr->NEXT->ADDREM_PTR[0], group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE, group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE, group_ptr->NEXT->ADDREM_PTR->NODE_PTR, group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0], group_ptr->NEXT->ADDREM_PTR->NEXT, group_ptr->NEXT->ADDREM_PTR->NEXT[0], group_ptr->NEXT->GRAMPEXC_PTR, group_ptr->NEXT->GRAMPEXC_PTR[0], group_ptr->NEXT->GRAMPEXC_PTR->TYPE, group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL, group_ptr->NEXT->GRAMPEXC_PTR->CENTRE, group_ptr->NEXT->GRAMPEXC_PTR->P1_ET, group_ptr->NEXT->GRAMPEXC_PTR->P2_ET, group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET, group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET, group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT, group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR, group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR, group_ptr->NEXT->GRPHAEXC_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR->TYPE, group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL, group_ptr->NEXT->GRPHAEXC_PTR->CENTRE, group_ptr->NEXT->GRPHAEXC_PTR->P1_EP, group_ptr->NEXT->GRPHAEXC_PTR->P2_EP, group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP, group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP, group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION, group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START, group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP, group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP, group_ptr->NEXT->GRPHAEXC_PTR->U, group_ptr->NEXT->GRPHAEXC_PTR->V, group_ptr->NEXT->GRPHAEXC_PTR->THETA, group_ptr->NEXT->GRPHAEXC_PTR->PHI, group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR, group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT, group_ptr->NEXT->ERR_PTR, group_ptr->NEXT->ERR_PTR[0], group_ptr->NEXT->ERR_PTR->AMP_TYPE, group_ptr->NEXT->ERR_PTR->AMP_STDEV, group_ptr->NEXT->ERR_PTR->AMP_LINOFFS, group_ptr->NEXT->ERR_PTR->AMP_LINSTEP, group_ptr->NEXT->ERR_PTR->AMP_2NDCENT, group_ptr->NEXT->ERR_PTR->AMP_2NDPET, group_ptr->NEXT->ERR_PTR->AMP_2NDQET, group_ptr->NEXT->ERR_PTR->AMP_UNIT, group_ptr->NEXT->ERR_PTR->PHASE_TYPE, group_ptr->NEXT->ERR_PTR->PHASE_STDEV, group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS, group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP, group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT, group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID, group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID, group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP, group_ptr->NEXT->ERR_PTR->PHASE_UNIT, group_ptr->NEXT->FAIL_PTR, group_ptr->NEXT->FAIL_PTR[0], group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL, group_ptr->NEXT->FAIL_PTR->FIXED_AMP, group_ptr->NEXT->FAIL_PTR->FIXED_PHASE, group_ptr->NEXT->NEXT, group_ptr->NEXT->NEXT[0], group_ptr->NEXT->NEXT->NAME, group_ptr->NEXT->NEXT->GRID_PTR, group_ptr->NEXT->NEXT->GRID_PTR[0], group_ptr->NEXT->NEXT->ELEM_PTR, group_ptr->NEXT->NEXT->ELEM_PTR[0], group_ptr->NEXT->NEXT->ADDREM_PTR, group_ptr->NEXT->NEXT->ADDREM_PTR[0], group_ptr->NEXT->NEXT->GRAMPEXC_PTR, group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0], group_ptr->NEXT->NEXT->GRPHAEXC_PTR, group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0], group_ptr->NEXT->NEXT->ERR_PTR, group_ptr->NEXT->NEXT->ERR_PTR[0], group_ptr->NEXT->NEXT->FAIL_PTR, group_ptr->NEXT->NEXT->FAIL_PTR[0], group_ptr->NEXT->NEXT->NEXT, group_ptr->NEXT->NEXT->NEXT[0], group_ptr->NEXT->NEXT->NUM_OF_NODES, group_ptr->NEXT->NEXT->SHAPE, group_ptr->NEXT->NEXT->PSIZE, group_ptr->NEXT->NEXT->QSIZE, group_ptr->NEXT->NEXT->GEOMNODE_PTR, group_ptr->NEXT->NEXT->GEOMNODE_PTR[0], group_ptr->NEXT->NEXT->BUILT, group_ptr->NEXT->NEXT->SUPER_GROUP_PTR, group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0], group_ptr->NEXT->NUM_OF_NODES, group_ptr->NEXT->SHAPE, group_ptr->NEXT->PSIZE, group_ptr->NEXT->QSIZE, group_ptr->NEXT->GEOMNODE_PTR, group_ptr->NEXT->GEOMNODE_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->LOC_P, group_ptr->NEXT->GEOMNODE_PTR->LOC_Q, group_ptr->NEXT->GEOMNODE_PTR->XA, group_ptr->NEXT->GEOMNODE_PTR->YA, group_ptr->NEXT->GEOMNODE_PTR->ZA, group_ptr->NEXT->GEOMNODE_PTR->THEA, group_ptr->NEXT->GEOMNODE_PTR->PHEA, group_ptr->NEXT->GEOMNODE_PTR->PSEA, group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR, group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->NEXT, group_ptr->NEXT->GEOMNODE_PTR->NEXT[0], group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR, group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->SHAPE, group_ptr->NEXT->GEOMNODE_PTR->PSIZE, group_ptr->NEXT->GEOMNODE_PTR->QSIZE, group_ptr->NEXT->BUILT, group_ptr->NEXT->SUPER_GROUP_PTR, group_ptr->NEXT->SUPER_GROUP_PTR[0], group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0], group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr->SUPER_GROUP_PTR[0]
::UserNames.equals(group_ptr.NAME)
::UserNames.equals(\old(::UserNames))
::UserNames.equals(\old(group_ptr.NAME))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::GLOBLE_FILENAME.equals(\old(filename))
group_ptr.[0] == \old(group_ptr.[0])
group_ptr.GRID_PTR == \old(group_ptr.GRID_PTR)
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.LEVEL
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.GEOMETRY
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.NPORTS
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.PORTNUM
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL
group_ptr.GRID_PTR.LEVEL == group_ptr.ADDREM_PTR.NODE_PTR.QCOORD
group_ptr.GRID_PTR.LEVEL == group_ptr.GRAMPEXC_PTR.TYPE
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.GRID_PTR.LEVEL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.LEVEL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.GEOMETRY)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.NPORTS)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.PORT_PTR.PORTNUM)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ADDREM_PTR.NODE_PTR.QCOORD)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.GRAMPEXC_PTR.TYPE)
group_ptr.GRID_PTR.TYPE == group_ptr.SHAPE
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, \old(group_ptr.GRID_PTR.ANGLE))
group_ptr.GRID_PTR.ANGLE_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GRID_PTR.QSTEP)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.PDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.QDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.QSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GRID_PTR.PSTEP))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GRID_PTR.QSTEP))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.ELEM_PTR.PDIM))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.ELEM_PTR.QDIM))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GEOMNODE_PTR.PSIZE))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GEOMNODE_PTR.QSIZE))
group_ptr.GRID_PTR.PQSTEP_UNIT == return
group_ptr.GRID_PTR.PQXY_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.GAIN)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSH)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PPA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.ZA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PPA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GRID_PTR.ROT_ANGLE))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.GAIN))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PSC))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PSH))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PPA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.THEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.PHEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.PSEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.ZA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.THEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.PHEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.PSEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PSC))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PPA))
group_ptr.ELEM_PTR == \old(group_ptr.ELEM_PTR)
group_ptr.ELEM_PTR.[0] == \old(group_ptr.ELEM_PTR.[0])
group_ptr.ELEM_PTR.TYPE == return
group_ptr.ELEM_PTR.NAME.equals(\old(group_ptr.ELEM_PTR.NAME))
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, \old(group_ptr.ELEM_PTR.RADIUS))
group_ptr.ELEM_PTR.RADIUS_UNIT == return
group_ptr.ELEM_PTR.PQDIM_UNIT == return
group_ptr.ELEM_PTR.MODEL == return
group_ptr.ELEM_PTR.POLARIZATION == return
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.ELEM_PTR.PORT_PTR.PHEPOL)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PHEPOL)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, \old(group_ptr.ELEM_PTR.PHEPOL))
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, \old(group_ptr.ELEM_PTR.PORT_PTR.PHEPOL))
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, \old(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PHEPOL))
group_ptr.ELEM_PTR.PHEPOL_UNIT == return
group_ptr.ELEM_PTR.DIRECTION == return
group_ptr.ELEM_PTR.GAIN_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR == \old(group_ptr.ELEM_PTR.PORT_PTR)
group_ptr.ELEM_PTR.PORT_PTR.[0] == \old(group_ptr.ELEM_PTR.PORT_PTR.[0])
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, \old(group_ptr.ELEM_PTR.PORT_PTR.AMP))
group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.NEXT == \old(group_ptr.ELEM_PTR.PORT_PTR.NEXT)
group_ptr.ADDREM_PTR == \old(group_ptr.ADDREM_PTR)
group_ptr.ADDREM_PTR.[0] == \old(group_ptr.ADDREM_PTR.[0])
group_ptr.ADDREM_PTR.ADDREM_TYPE == return
group_ptr.ADDREM_PTR.BLOCK_TYPE == \old(group_ptr.ADDREM_PTR.BLOCK_TYPE)
group_ptr.ADDREM_PTR.NODE_PTR == \old(group_ptr.ADDREM_PTR.NODE_PTR)
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == \old(group_ptr.ADDREM_PTR.NODE_PTR.PCOORD)
group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT == return
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == \old(group_ptr.ADDREM_PTR.NODE_PTR.NEXT)
group_ptr.ADDREM_PTR.NEXT == \old(group_ptr.ADDREM_PTR.NEXT)
group_ptr.GRAMPEXC_PTR == \old(group_ptr.GRAMPEXC_PTR)
group_ptr.GRAMPEXC_PTR.[0] == \old(group_ptr.GRAMPEXC_PTR.[0])
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, \old(group_ptr.GRAMPEXC_PTR.CENTRE))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, group_ptr.GRAMPEXC_PTR.Q2_ET)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, \old(group_ptr.GRAMPEXC_PTR.P1_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, \old(group_ptr.GRAMPEXC_PTR.Q2_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, \old(group_ptr.GRAMPEXC_PTR.P2_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, \old(group_ptr.GRAMPEXC_PTR.Q1_ET))
group_ptr.GRAMPEXC_PTR.AMP_UNIT == return
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == group_ptr.GRPHAEXC_PTR.PQEXP_PTR
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == \old(group_ptr.GRAMPEXC_PTR.PQEXP_PTR)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == \old(group_ptr.GRPHAEXC_PTR.PQEXP_PTR)
group_ptr.GRPHAEXC_PTR == \old(group_ptr.GRPHAEXC_PTR)
group_ptr.GRPHAEXC_PTR.[0] == \old(group_ptr.GRPHAEXC_PTR.[0])
group_ptr.GRPHAEXC_PTR.TYPE == return
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PSH)
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, \old(group_ptr.GRPHAEXC_PTR.UNIF_VAL))
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, \old(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PSH))
group_ptr.GRPHAEXC_PTR.PHASE_UNIT == return
group_ptr.ERR_PTR == \old(group_ptr.ERR_PTR)
group_ptr.FAIL_PTR == \old(group_ptr.FAIL_PTR)
group_ptr.NUM_OF_NODES == \old(group_ptr.NUM_OF_NODES)
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.LOC_Q
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.SHAPE
group_ptr.SHAPE == \old(group_ptr.GRID_PTR.TYPE)
group_ptr.SHAPE == \old(group_ptr.SHAPE)
group_ptr.SHAPE == \old(group_ptr.GEOMNODE_PTR.LOC_Q)
group_ptr.SHAPE == \old(group_ptr.GEOMNODE_PTR.SHAPE)
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, group_ptr.QSIZE)
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.PSIZE))
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.QSIZE))
group_ptr.GEOMNODE_PTR.LOC_P == \old(group_ptr.GEOMNODE_PTR.LOC_P)
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.XA, \old(group_ptr.GEOMNODE_PTR.XA))
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.YA, \old(group_ptr.GEOMNODE_PTR.YA))
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP, \old(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP))
group_ptr.BUILT == return
return == \old(group_ptr.GRID_PTR.ANGLE_UNIT)
return == \old(group_ptr.GRID_PTR.PQSTEP_UNIT)
return == \old(group_ptr.GRID_PTR.PQXY_UNIT)
return == \old(group_ptr.ELEM_PTR.TYPE)
return == \old(group_ptr.ELEM_PTR.RADIUS_UNIT)
return == \old(group_ptr.ELEM_PTR.PQDIM_UNIT)
return == \old(group_ptr.ELEM_PTR.MODEL)
return == \old(group_ptr.ELEM_PTR.POLARIZATION)
return == \old(group_ptr.ELEM_PTR.PHEPOL_UNIT)
return == \old(group_ptr.ELEM_PTR.DIRECTION)
return == \old(group_ptr.ELEM_PTR.GAIN_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT)
return == \old(group_ptr.ADDREM_PTR.ADDREM_TYPE)
return == \old(group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT)
return == \old(group_ptr.GRAMPEXC_PTR.AMP_UNIT)
return == \old(group_ptr.GRPHAEXC_PTR.TYPE)
return == \old(group_ptr.GRPHAEXC_PTR.PHASE_UNIT)
return == \old(group_ptr.BUILT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
group_ptr.[0] != null
group_ptr.GRID_PTR != null
group_ptr.GRID_PTR.LEVEL == 1
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, 60.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, 86.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, 0.0)
group_ptr.ELEM_PTR != null
group_ptr.ELEM_PTR.[0] != null
group_ptr.ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, 90.0)
group_ptr.ELEM_PTR.PORT_PTR != null
group_ptr.ELEM_PTR.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, 1.0)
group_ptr.ELEM_PTR.PORT_PTR.NEXT == null
group_ptr.ADDREM_PTR != null
group_ptr.ADDREM_PTR.[0] != null
group_ptr.ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.ADDREM_PTR.NODE_PTR != null
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.ADDREM_PTR.NEXT == null
group_ptr.GRAMPEXC_PTR != null
group_ptr.GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.GRPHAEXC_PTR != null
group_ptr.GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.ERR_PTR == null
group_ptr.FAIL_PTR == null
group_ptr.NUM_OF_NODES == 7
group_ptr.SHAPE == 2
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, 258.0)
group_ptr.GEOMNODE_PTR != null
group_ptr.GEOMNODE_PTR.[0] != null
group_ptr.GEOMNODE_PTR.LOC_P == 8
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.YA, 148.95636946268272)
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR != null
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP, 28.999999999999886)
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.NEXT == null
group_ptr.GEOMNODE_PTR.NEXT != null
group_ptr.GEOMNODE_PTR.NEXT.[0] != null
group_ptr.GEOMNODE_PTR.SUBGROUP_PTR == null
group_ptr.SUPER_GROUP_PTR != null
return == 0
===========================================================================
..hexdef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] node_ptr node_ptr[0] node_ptr[0][0] node_ptr[0]->OMIT_ORIENT node_ptr[0]->PCOORD node_ptr[0]->QCOORD node_ptr[0]->THEA node_ptr[0]->PHEA node_ptr[0]->PSEA node_ptr[0]->ANGLE_UNIT node_ptr[0]->NEXT node_ptr[0]->NEXT[0] node_ptr[0]->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->PCOORD node_ptr[0]->NEXT->QCOORD node_ptr[0]->NEXT->THEA node_ptr[0]->NEXT->PHEA node_ptr[0]->NEXT->PSEA node_ptr[0]->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT node_ptr[0]->NEXT->NEXT[0] node_ptr[0]->NEXT->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->NEXT->PCOORD node_ptr[0]->NEXT->NEXT->QCOORD node_ptr[0]->NEXT->NEXT->THEA node_ptr[0]->NEXT->NEXT->PHEA node_ptr[0]->NEXT->NEXT->PSEA node_ptr[0]->NEXT->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT->NEXT node_ptr[0]->NEXT->NEXT->NEXT[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 72
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 68
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
node_ptr != null
node_ptr.[0] == null
===========================================================================
..hexdef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] node_ptr node_ptr[0] node_ptr[0][0] node_ptr[0]->OMIT_ORIENT node_ptr[0]->PCOORD node_ptr[0]->QCOORD node_ptr[0]->THEA node_ptr[0]->PHEA node_ptr[0]->PSEA node_ptr[0]->ANGLE_UNIT node_ptr[0]->NEXT node_ptr[0]->NEXT[0] node_ptr[0]->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->PCOORD node_ptr[0]->NEXT->QCOORD node_ptr[0]->NEXT->THEA node_ptr[0]->NEXT->PHEA node_ptr[0]->NEXT->PSEA node_ptr[0]->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT node_ptr[0]->NEXT->NEXT[0] node_ptr[0]->NEXT->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->NEXT->PCOORD node_ptr[0]->NEXT->NEXT->QCOORD node_ptr[0]->NEXT->NEXT->THEA node_ptr[0]->NEXT->NEXT->PHEA node_ptr[0]->NEXT->NEXT->PSEA node_ptr[0]->NEXT->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT->NEXT node_ptr[0]->NEXT->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(node_ptr) orig(node_ptr[0]) orig(node_ptr[0][0]) orig(node_ptr[0]->OMIT_ORIENT) orig(node_ptr[0]->PCOORD) orig(node_ptr[0]->QCOORD) orig(node_ptr[0]->THEA) orig(node_ptr[0]->PHEA) orig(node_ptr[0]->PSEA) orig(node_ptr[0]->ANGLE_UNIT) orig(node_ptr[0]->NEXT) orig(node_ptr[0]->NEXT[0]) orig(node_ptr[0]->NEXT->OMIT_ORIENT) orig(node_ptr[0]->NEXT->PCOORD) orig(node_ptr[0]->NEXT->QCOORD) orig(node_ptr[0]->NEXT->THEA) orig(node_ptr[0]->NEXT->PHEA) orig(node_ptr[0]->NEXT->PSEA) orig(node_ptr[0]->NEXT->ANGLE_UNIT) orig(node_ptr[0]->NEXT->NEXT) orig(node_ptr[0]->NEXT->NEXT[0]) orig(node_ptr[0]->NEXT->NEXT->OMIT_ORIENT) orig(node_ptr[0]->NEXT->NEXT->PCOORD) orig(node_ptr[0]->NEXT->NEXT->QCOORD) orig(node_ptr[0]->NEXT->NEXT->THEA) orig(node_ptr[0]->NEXT->NEXT->PHEA) orig(node_ptr[0]->NEXT->NEXT->PSEA) orig(node_ptr[0]->NEXT->NEXT->ANGLE_UNIT) orig(node_ptr[0]->NEXT->NEXT->NEXT) orig(node_ptr[0]->NEXT->NEXT->NEXT[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], node_ptr[0], node_ptr[0][0], node_ptr[0]->OMIT_ORIENT, node_ptr[0]->PCOORD, node_ptr[0]->QCOORD, node_ptr[0]->THEA, node_ptr[0]->PHEA, node_ptr[0]->PSEA, node_ptr[0]->ANGLE_UNIT, node_ptr[0]->NEXT, node_ptr[0]->NEXT[0], node_ptr[0]->NEXT->OMIT_ORIENT, node_ptr[0]->NEXT->PCOORD, node_ptr[0]->NEXT->QCOORD, node_ptr[0]->NEXT->THEA, node_ptr[0]->NEXT->PHEA, node_ptr[0]->NEXT->PSEA, node_ptr[0]->NEXT->ANGLE_UNIT, node_ptr[0]->NEXT->NEXT, node_ptr[0]->NEXT->NEXT[0], node_ptr[0]->NEXT->NEXT->OMIT_ORIENT, node_ptr[0]->NEXT->NEXT->PCOORD, node_ptr[0]->NEXT->NEXT->QCOORD, node_ptr[0]->NEXT->NEXT->THEA, node_ptr[0]->NEXT->NEXT->PHEA, node_ptr[0]->NEXT->NEXT->PSEA, node_ptr[0]->NEXT->NEXT->ANGLE_UNIT, node_ptr[0]->NEXT->NEXT->NEXT, node_ptr[0]->NEXT->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].LINE_NUM == node_ptr.[0].PCOORD
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
daikon.Quant.fuzzy.eq(node_ptr.[0].THEA, node_ptr.[0].PHEA)
daikon.Quant.fuzzy.eq(node_ptr.[0].THEA, node_ptr.[0].PSEA)
node_ptr.[0].ANGLE_UNIT == return
node_ptr.[0].NEXT == \old(node_ptr.[0])
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 72
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 68
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 71
pp2.[0].LINE_NUM == 9
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 49
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
node_ptr.[0] != null
node_ptr.[0].QCOORD == 1
daikon.Quant.fuzzy.eq(node_ptr.[0].THEA, 0.0)
node_ptr.[0].NEXT == null
return == 0
===========================================================================
..hexgrdef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] pstep_ptr pstep_ptr[0] pstep_unit_ptr pstep_unit_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 72
p1.LINE_NUM == 3
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 68
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
pstep_ptr != null
daikon.Quant.fuzzy.eq(pstep_ptr.[0], 0.0)
pstep_unit_ptr != null
pstep_unit_ptr.[0] == 0
===========================================================================
..hexgrdef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] pstep_ptr pstep_ptr[0] pstep_unit_ptr pstep_unit_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(pstep_ptr) orig(pstep_ptr[0]) orig(pstep_unit_ptr) orig(pstep_unit_ptr[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
daikon.Quant.fuzzy.eq(pstep_ptr.[0], \old(pstep_ptr.[0]))
pstep_unit_ptr.[0] == return
return == \old(pstep_unit_ptr.[0])
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 72
p1.LINE_NUM == 3
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 68
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 69
pp2.[0].LINE_NUM == 4
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 76
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
daikon.Quant.fuzzy.eq(pstep_ptr.[0], 0.0)
return == 0
===========================================================================
..isletter():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME ch
::UserNames.equals("") || ::UserNames.equals("testgroup")
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:JML) needs to be implemented: ::UserNames is printable
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
!::UserNames.equals(::Keywords)
!::UserNames.equals(::ErrorMessages)
!::UserNames.equals(::MOSErrors)
!::UserNames.equals(::GLOBLE_FILENAME)
::Keywords.compareTo(::ErrorMessages) > 0
::Keywords.compareTo(::MOSErrors) > 0
::Keywords.compareTo(::GLOBLE_FILENAME) < 0
::ErrorMessages.compareTo(::MOSErrors) > 0
::ErrorMessages.compareTo(::GLOBLE_FILENAME) < 0
::MOSErrors.compareTo(::GLOBLE_FILENAME) < 0
===========================================================================
..isletter():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME ch return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(ch)
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("") || ::UserNames.equals("testgroup")
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:JML) needs to be implemented: ::UserNames is printable
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
return == 0 || return == 1
!::UserNames.equals(::Keywords)
!::UserNames.equals(::ErrorMessages)
!::UserNames.equals(::MOSErrors)
!::UserNames.equals(::GLOBLE_FILENAME)
::Keywords.compareTo(::ErrorMessages) > 0
::Keywords.compareTo(::MOSErrors) > 0
::Keywords.compareTo(::GLOBLE_FILENAME) < 0
::ErrorMessages.compareTo(::MOSErrors) > 0
::ErrorMessages.compareTo(::GLOBLE_FILENAME) < 0
::MOSErrors.compareTo(::GLOBLE_FILENAME) < 0
return < \old(ch)
===========================================================================
..kwdsinit():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME
::UserNames.equals(::Keywords)
::UserNames.equals(::ErrorMessages)
::UserNames.equals(::MOSErrors)
::UserNames.equals("")
::GLOBLE_FILENAME.equals("gr2712")
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..kwdsinit():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME)
assignable ::Keywords
::UserNames.equals(::ErrorMessages)
::UserNames.equals(::MOSErrors)
::UserNames.equals(\old(::UserNames))
::UserNames.equals(\old(::Keywords))
::UserNames.equals(\old(::ErrorMessages))
::UserNames.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("")
::Keywords.equals("PLANE")
::GLOBLE_FILENAME.equals("gr2712")
::Keywords.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..lenunit():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME tp tp[0] tp[0][0] tp[0]->info tp[0]->LINE_NUM tp[0]->PREV tp[0]->PREV[0] tp[0]->PREV->info tp[0]->PREV->LINE_NUM tp[0]->PREV->PREV tp[0]->PREV->PREV[0] tp[0]->PREV->PREV->info tp[0]->PREV->PREV->LINE_NUM tp[0]->PREV->PREV->PREV tp[0]->PREV->PREV->PREV[0] tp[0]->PREV->PREV->NEXT tp[0]->PREV->PREV->NEXT[0] tp[0]->PREV->NEXT tp[0]->PREV->NEXT[0] tp[0]->NEXT tp[0]->NEXT[0] unit unit[0]
tp.[0] == tp.[0].PREV.NEXT
tp.[0].[0] == tp.[0].PREV.NEXT.[0]
tp.[0].LINE_NUM == tp.[0].PREV.LINE_NUM
tp.[0].PREV == tp.[0].PREV.PREV.NEXT
tp.[0].PREV.[0] == tp.[0].PREV.PREV.NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
tp != null
tp.[0] != null
tp.[0].[0] != null
tp.[0].info == 65
tp.[0].LINE_NUM == 7
tp.[0].PREV != null
tp.[0].PREV.[0] != null
tp.[0].PREV.info == 32
tp.[0].PREV.PREV != null
tp.[0].PREV.PREV.[0] != null
tp.[0].PREV.PREV.info == 51
tp.[0].PREV.PREV.LINE_NUM == 5
tp.[0].PREV.PREV.PREV != null
tp.[0].PREV.PREV.PREV.[0] != null
tp.[0].NEXT != null
tp.[0].NEXT.[0] != null
unit != null
===========================================================================
..lenunit():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME tp tp[0] tp[0][0] tp[0]->info tp[0]->LINE_NUM tp[0]->PREV tp[0]->PREV[0] tp[0]->PREV->info tp[0]->PREV->LINE_NUM tp[0]->PREV->PREV tp[0]->PREV->PREV[0] tp[0]->PREV->PREV->info tp[0]->PREV->PREV->LINE_NUM tp[0]->PREV->PREV->PREV tp[0]->PREV->PREV->PREV[0] tp[0]->PREV->PREV->NEXT tp[0]->PREV->PREV->NEXT[0] tp[0]->PREV->NEXT tp[0]->PREV->NEXT[0] tp[0]->NEXT tp[0]->NEXT[0] unit unit[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(tp) orig(tp[0]) orig(tp[0][0]) orig(tp[0]->info) orig(tp[0]->LINE_NUM) orig(tp[0]->PREV) orig(tp[0]->PREV[0]) orig(tp[0]->PREV->info) orig(tp[0]->PREV->LINE_NUM) orig(tp[0]->PREV->PREV) orig(tp[0]->PREV->PREV[0]) orig(tp[0]->PREV->PREV->info) orig(tp[0]->PREV->PREV->LINE_NUM) orig(tp[0]->PREV->PREV->PREV) orig(tp[0]->PREV->PREV->PREV[0]) orig(tp[0]->PREV->PREV->NEXT) orig(tp[0]->PREV->PREV->NEXT[0]) orig(tp[0]->PREV->NEXT) orig(tp[0]->PREV->NEXT[0]) orig(tp[0]->NEXT) orig(tp[0]->NEXT[0]) orig(unit) orig(unit[0])
assignable unit[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
tp.[0] == tp.[0].PREV.NEXT
tp.[0] == \old(tp.[0])
tp.[0] == \old(tp.[0].PREV.NEXT)
tp.[0].[0] == tp.[0].PREV.NEXT.[0]
tp.[0].[0] == \old(tp.[0].[0])
tp.[0].[0] == \old(tp.[0].PREV.NEXT.[0])
tp.[0].info == \old(tp.[0].info)
tp.[0].LINE_NUM == tp.[0].PREV.LINE_NUM
tp.[0].LINE_NUM == \old(tp.[0].LINE_NUM)
tp.[0].LINE_NUM == \old(tp.[0].PREV.LINE_NUM)
tp.[0].PREV == tp.[0].PREV.PREV.NEXT
tp.[0].PREV == \old(tp.[0].PREV)
tp.[0].PREV == \old(tp.[0].PREV.PREV.NEXT)
tp.[0].PREV.[0] == tp.[0].PREV.PREV.NEXT.[0]
tp.[0].PREV.[0] == \old(tp.[0].PREV.[0])
tp.[0].PREV.[0] == \old(tp.[0].PREV.PREV.NEXT.[0])
tp.[0].PREV.info == \old(tp.[0].PREV.info)
tp.[0].PREV.PREV == \old(tp.[0].PREV.PREV)
tp.[0].PREV.PREV.[0] == \old(tp.[0].PREV.PREV.[0])
tp.[0].PREV.PREV.info == \old(tp.[0].PREV.PREV.info)
tp.[0].PREV.PREV.LINE_NUM == \old(tp.[0].PREV.PREV.LINE_NUM)
tp.[0].PREV.PREV.PREV == \old(tp.[0].PREV.PREV.PREV)
tp.[0].PREV.PREV.PREV.[0] == \old(tp.[0].PREV.PREV.PREV.[0])
tp.[0].NEXT == \old(tp.[0].NEXT)
tp.[0].NEXT.[0] == \old(tp.[0].NEXT.[0])
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
tp.[0] != null
tp.[0].[0] != null
tp.[0].info == 65
tp.[0].LINE_NUM == 7
tp.[0].PREV != null
tp.[0].PREV.[0] != null
tp.[0].PREV.info == 32
tp.[0].PREV.PREV != null
tp.[0].PREV.PREV.[0] != null
tp.[0].PREV.PREV.info == 51
tp.[0].PREV.PREV.LINE_NUM == 5
tp.[0].PREV.PREV.PREV != null
tp.[0].PREV.PREV.PREV.[0] != null
tp.[0].NEXT != null
tp.[0].NEXT.[0] != null
unit.[0] == 0
return == 14
===========================================================================
..linconv():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME x_ptr x_ptr[0] unit
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
unit == 0
===========================================================================
..linconv():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME x_ptr x_ptr[0] unit return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(x_ptr) orig(x_ptr[0]) orig(unit)
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
daikon.Quant.fuzzy.eq(x_ptr.[0], \old(x_ptr.[0]))
return == \old(unit)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
return == 0
===========================================================================
..main():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME argc argv argv[0]
::UserNames.equals(::Keywords)
::UserNames.equals(::ErrorMessages)
::UserNames.equals(::MOSErrors)
::UserNames.equals(::GLOBLE_FILENAME)
::UserNames.equals("")
argc == 2
argv != null
argv.[0].equals("./space")
argv.[0].contains(::UserNames)
===========================================================================
..main():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME argc argv argv[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(argc) orig(argv) orig(argv[0])
assignable ::UserNames, ::Keywords, ::ErrorMessages, ::MOSErrors, ::GLOBLE_FILENAME
argv.[0].equals(\old(argv.[0]))
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
argv.[0].equals("./space")
return == 0
::UserNames.contains(\old(::UserNames))
::Keywords.contains(\old(::UserNames))
::ErrorMessages.contains(\old(::UserNames))
::MOSErrors.contains(\old(::UserNames))
::GLOBLE_FILENAME.contains(\old(::UserNames))
argv.[0].contains(\old(::UserNames))
===========================================================================
..mkshex():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME addrem_ptr addrem_ptr[0] addrem_ptr->ADDREM_TYPE addrem_ptr->BLOCK_TYPE addrem_ptr->NODE_PTR addrem_ptr->NODE_PTR[0] addrem_ptr->NODE_PTR->OMIT_ORIENT addrem_ptr->NODE_PTR->PCOORD addrem_ptr->NODE_PTR->QCOORD addrem_ptr->NODE_PTR->THEA addrem_ptr->NODE_PTR->PHEA addrem_ptr->NODE_PTR->PSEA addrem_ptr->NODE_PTR->ANGLE_UNIT addrem_ptr->NODE_PTR->NEXT addrem_ptr->NODE_PTR->NEXT[0] addrem_ptr->NODE_PTR->NEXT->OMIT_ORIENT addrem_ptr->NODE_PTR->NEXT->PCOORD addrem_ptr->NODE_PTR->NEXT->QCOORD addrem_ptr->NODE_PTR->NEXT->THEA addrem_ptr->NODE_PTR->NEXT->PHEA addrem_ptr->NODE_PTR->NEXT->PSEA addrem_ptr->NODE_PTR->NEXT->ANGLE_UNIT addrem_ptr->NODE_PTR->NEXT->NEXT addrem_ptr->NODE_PTR->NEXT->NEXT[0] addrem_ptr->NEXT addrem_ptr->NEXT[0] addrem_ptr->NEXT->ADDREM_TYPE addrem_ptr->NEXT->BLOCK_TYPE addrem_ptr->NEXT->NODE_PTR addrem_ptr->NEXT->NODE_PTR[0] addrem_ptr->NEXT->NODE_PTR->OMIT_ORIENT addrem_ptr->NEXT->NODE_PTR->PCOORD addrem_ptr->NEXT->NODE_PTR->QCOORD addrem_ptr->NEXT->NODE_PTR->THEA addrem_ptr->NEXT->NODE_PTR->PHEA addrem_ptr->NEXT->NODE_PTR->PSEA addrem_ptr->NEXT->NODE_PTR->ANGLE_UNIT addrem_ptr->NEXT->NODE_PTR->NEXT addrem_ptr->NEXT->NODE_PTR->NEXT[0] addrem_ptr->NEXT->NEXT addrem_ptr->NEXT->NEXT[0] addrem_ptr->NEXT->NEXT->ADDREM_TYPE addrem_ptr->NEXT->NEXT->BLOCK_TYPE addrem_ptr->NEXT->NEXT->NODE_PTR addrem_ptr->NEXT->NEXT->NODE_PTR[0] addrem_ptr->NEXT->NEXT->NEXT addrem_ptr->NEXT->NEXT->NEXT[0] first_node_ptr first_node_ptr[0] first_node_ptr[0][0] first_node_ptr[0]->LOC_P first_node_ptr[0]->LOC_Q first_node_ptr[0]->XA first_node_ptr[0]->YA first_node_ptr[0]->ZA first_node_ptr[0]->THEA first_node_ptr[0]->PHEA first_node_ptr[0]->PSEA first_node_ptr[0]->GEOMPORT_PTR first_node_ptr[0]->GEOMPORT_PTR[0] first_node_ptr[0]->GEOMPORT_PTR->AMP first_node_ptr[0]->GEOMPORT_PTR->PSH first_node_ptr[0]->GEOMPORT_PTR->PSC first_node_ptr[0]->GEOMPORT_PTR->PPA first_node_ptr[0]->GEOMPORT_PTR->PHEPOL first_node_ptr[0]->GEOMPORT_PTR->NEXT first_node_ptr[0]->GEOMPORT_PTR->NEXT[0] first_node_ptr[0]->GEOMPORT_PTR->NEXT->AMP first_node_ptr[0]->GEOMPORT_PTR->NEXT->PSH first_node_ptr[0]->GEOMPORT_PTR->NEXT->PSC first_node_ptr[0]->GEOMPORT_PTR->NEXT->PPA first_node_ptr[0]->GEOMPORT_PTR->NEXT->PHEPOL first_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT first_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT[0] first_node_ptr[0]->NEXT first_node_ptr[0]->NEXT[0] first_node_ptr[0]->NEXT->LOC_P first_node_ptr[0]->NEXT->LOC_Q first_node_ptr[0]->NEXT->XA first_node_ptr[0]->NEXT->YA first_node_ptr[0]->NEXT->ZA first_node_ptr[0]->NEXT->THEA first_node_ptr[0]->NEXT->PHEA first_node_ptr[0]->NEXT->PSEA first_node_ptr[0]->NEXT->GEOMPORT_PTR first_node_ptr[0]->NEXT->GEOMPORT_PTR[0] first_node_ptr[0]->NEXT->GEOMPORT_PTR->AMP first_node_ptr[0]->NEXT->GEOMPORT_PTR->PSH first_node_ptr[0]->NEXT->GEOMPORT_PTR->PSC first_node_ptr[0]->NEXT->GEOMPORT_PTR->PPA first_node_ptr[0]->NEXT->GEOMPORT_PTR->PHEPOL first_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT first_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT[0] first_node_ptr[0]->NEXT->NEXT first_node_ptr[0]->NEXT->NEXT[0] first_node_ptr[0]->NEXT->NEXT->LOC_P first_node_ptr[0]->NEXT->NEXT->LOC_Q first_node_ptr[0]->NEXT->NEXT->XA first_node_ptr[0]->NEXT->NEXT->YA first_node_ptr[0]->NEXT->NEXT->ZA first_node_ptr[0]->NEXT->NEXT->THEA first_node_ptr[0]->NEXT->NEXT->PHEA first_node_ptr[0]->NEXT->NEXT->PSEA first_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR first_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR[0] first_node_ptr[0]->NEXT->NEXT->NEXT first_node_ptr[0]->NEXT->NEXT->NEXT[0] first_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR first_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR[0] first_node_ptr[0]->NEXT->NEXT->SHAPE first_node_ptr[0]->NEXT->NEXT->PSIZE first_node_ptr[0]->NEXT->NEXT->QSIZE first_node_ptr[0]->NEXT->SUBGROUP_PTR first_node_ptr[0]->NEXT->SUBGROUP_PTR[0] first_node_ptr[0]->NEXT->SHAPE first_node_ptr[0]->NEXT->PSIZE first_node_ptr[0]->NEXT->QSIZE first_node_ptr[0]->SUBGROUP_PTR first_node_ptr[0]->SUBGROUP_PTR[0] first_node_ptr[0]->SHAPE first_node_ptr[0]->PSIZE first_node_ptr[0]->QSIZE last_node_ptr last_node_ptr[0] last_node_ptr[0][0] last_node_ptr[0]->LOC_P last_node_ptr[0]->LOC_Q last_node_ptr[0]->XA last_node_ptr[0]->YA last_node_ptr[0]->ZA last_node_ptr[0]->THEA last_node_ptr[0]->PHEA last_node_ptr[0]->PSEA last_node_ptr[0]->GEOMPORT_PTR last_node_ptr[0]->GEOMPORT_PTR[0] last_node_ptr[0]->GEOMPORT_PTR->AMP last_node_ptr[0]->GEOMPORT_PTR->PSH last_node_ptr[0]->GEOMPORT_PTR->PSC last_node_ptr[0]->GEOMPORT_PTR->PPA last_node_ptr[0]->GEOMPORT_PTR->PHEPOL last_node_ptr[0]->GEOMPORT_PTR->NEXT last_node_ptr[0]->GEOMPORT_PTR->NEXT[0] last_node_ptr[0]->GEOMPORT_PTR->NEXT->AMP last_node_ptr[0]->GEOMPORT_PTR->NEXT->PSH last_node_ptr[0]->GEOMPORT_PTR->NEXT->PSC last_node_ptr[0]->GEOMPORT_PTR->NEXT->PPA last_node_ptr[0]->GEOMPORT_PTR->NEXT->PHEPOL last_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT last_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT[0] last_node_ptr[0]->NEXT last_node_ptr[0]->NEXT[0] last_node_ptr[0]->NEXT->LOC_P last_node_ptr[0]->NEXT->LOC_Q last_node_ptr[0]->NEXT->XA last_node_ptr[0]->NEXT->YA last_node_ptr[0]->NEXT->ZA last_node_ptr[0]->NEXT->THEA last_node_ptr[0]->NEXT->PHEA last_node_ptr[0]->NEXT->PSEA last_node_ptr[0]->NEXT->GEOMPORT_PTR last_node_ptr[0]->NEXT->GEOMPORT_PTR[0] last_node_ptr[0]->NEXT->GEOMPORT_PTR->AMP last_node_ptr[0]->NEXT->GEOMPORT_PTR->PSH last_node_ptr[0]->NEXT->GEOMPORT_PTR->PSC last_node_ptr[0]->NEXT->GEOMPORT_PTR->PPA last_node_ptr[0]->NEXT->GEOMPORT_PTR->PHEPOL last_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT last_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT[0] last_node_ptr[0]->NEXT->NEXT last_node_ptr[0]->NEXT->NEXT[0] last_node_ptr[0]->NEXT->NEXT->LOC_P last_node_ptr[0]->NEXT->NEXT->LOC_Q last_node_ptr[0]->NEXT->NEXT->XA last_node_ptr[0]->NEXT->NEXT->YA last_node_ptr[0]->NEXT->NEXT->ZA last_node_ptr[0]->NEXT->NEXT->THEA last_node_ptr[0]->NEXT->NEXT->PHEA last_node_ptr[0]->NEXT->NEXT->PSEA last_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR last_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR[0] last_node_ptr[0]->NEXT->NEXT->NEXT last_node_ptr[0]->NEXT->NEXT->NEXT[0] last_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR last_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR[0] last_node_ptr[0]->NEXT->NEXT->SHAPE last_node_ptr[0]->NEXT->NEXT->PSIZE last_node_ptr[0]->NEXT->NEXT->QSIZE last_node_ptr[0]->NEXT->SUBGROUP_PTR last_node_ptr[0]->NEXT->SUBGROUP_PTR[0] last_node_ptr[0]->NEXT->SHAPE last_node_ptr[0]->NEXT->PSIZE last_node_ptr[0]->NEXT->QSIZE last_node_ptr[0]->SUBGROUP_PTR last_node_ptr[0]->SUBGROUP_PTR[0] last_node_ptr[0]->SHAPE last_node_ptr[0]->PSIZE last_node_ptr[0]->QSIZE pstep qstep angle nodes_num_ptr nodes_num_ptr[0] elem_shape elem_pdim elem_qdim
addrem_ptr.ADDREM_TYPE == addrem_ptr.NODE_PTR.ANGLE_UNIT
addrem_ptr.ADDREM_TYPE == nodes_num_ptr.[0]
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, addrem_ptr.NODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, addrem_ptr.NODE_PTR.PSEA)
first_node_ptr.[0] == last_node_ptr.[0]
daikon.Quant.fuzzy.eq(pstep, qstep)
daikon.Quant.fuzzy.eq(pstep, elem_pdim)
daikon.Quant.fuzzy.eq(pstep, elem_qdim)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
addrem_ptr != null
addrem_ptr.[0] != null
addrem_ptr.ADDREM_TYPE == 0
addrem_ptr.BLOCK_TYPE == 3
addrem_ptr.NODE_PTR != null
addrem_ptr.NODE_PTR.PCOORD == 9
addrem_ptr.NODE_PTR.QCOORD == 1
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, 0.0)
addrem_ptr.NODE_PTR.NEXT == null
addrem_ptr.NEXT == null
first_node_ptr != null
first_node_ptr.[0] == null
last_node_ptr != null
daikon.Quant.fuzzy.eq(pstep, 86.0)
daikon.Quant.fuzzy.eq(angle, 60.0)
nodes_num_ptr != null
elem_shape == 2
===========================================================================
..mkshex():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME addrem_ptr addrem_ptr[0] addrem_ptr->ADDREM_TYPE addrem_ptr->BLOCK_TYPE addrem_ptr->NODE_PTR addrem_ptr->NODE_PTR[0] addrem_ptr->NODE_PTR->OMIT_ORIENT addrem_ptr->NODE_PTR->PCOORD addrem_ptr->NODE_PTR->QCOORD addrem_ptr->NODE_PTR->THEA addrem_ptr->NODE_PTR->PHEA addrem_ptr->NODE_PTR->PSEA addrem_ptr->NODE_PTR->ANGLE_UNIT addrem_ptr->NODE_PTR->NEXT addrem_ptr->NODE_PTR->NEXT[0] addrem_ptr->NODE_PTR->NEXT->OMIT_ORIENT addrem_ptr->NODE_PTR->NEXT->PCOORD addrem_ptr->NODE_PTR->NEXT->QCOORD addrem_ptr->NODE_PTR->NEXT->THEA addrem_ptr->NODE_PTR->NEXT->PHEA addrem_ptr->NODE_PTR->NEXT->PSEA addrem_ptr->NODE_PTR->NEXT->ANGLE_UNIT addrem_ptr->NODE_PTR->NEXT->NEXT addrem_ptr->NODE_PTR->NEXT->NEXT[0] addrem_ptr->NEXT addrem_ptr->NEXT[0] addrem_ptr->NEXT->ADDREM_TYPE addrem_ptr->NEXT->BLOCK_TYPE addrem_ptr->NEXT->NODE_PTR addrem_ptr->NEXT->NODE_PTR[0] addrem_ptr->NEXT->NODE_PTR->OMIT_ORIENT addrem_ptr->NEXT->NODE_PTR->PCOORD addrem_ptr->NEXT->NODE_PTR->QCOORD addrem_ptr->NEXT->NODE_PTR->THEA addrem_ptr->NEXT->NODE_PTR->PHEA addrem_ptr->NEXT->NODE_PTR->PSEA addrem_ptr->NEXT->NODE_PTR->ANGLE_UNIT addrem_ptr->NEXT->NODE_PTR->NEXT addrem_ptr->NEXT->NODE_PTR->NEXT[0] addrem_ptr->NEXT->NEXT addrem_ptr->NEXT->NEXT[0] addrem_ptr->NEXT->NEXT->ADDREM_TYPE addrem_ptr->NEXT->NEXT->BLOCK_TYPE addrem_ptr->NEXT->NEXT->NODE_PTR addrem_ptr->NEXT->NEXT->NODE_PTR[0] addrem_ptr->NEXT->NEXT->NEXT addrem_ptr->NEXT->NEXT->NEXT[0] first_node_ptr first_node_ptr[0] first_node_ptr[0][0] first_node_ptr[0]->LOC_P first_node_ptr[0]->LOC_Q first_node_ptr[0]->XA first_node_ptr[0]->YA first_node_ptr[0]->ZA first_node_ptr[0]->THEA first_node_ptr[0]->PHEA first_node_ptr[0]->PSEA first_node_ptr[0]->GEOMPORT_PTR first_node_ptr[0]->GEOMPORT_PTR[0] first_node_ptr[0]->GEOMPORT_PTR->AMP first_node_ptr[0]->GEOMPORT_PTR->PSH first_node_ptr[0]->GEOMPORT_PTR->PSC first_node_ptr[0]->GEOMPORT_PTR->PPA first_node_ptr[0]->GEOMPORT_PTR->PHEPOL first_node_ptr[0]->GEOMPORT_PTR->NEXT first_node_ptr[0]->GEOMPORT_PTR->NEXT[0] first_node_ptr[0]->GEOMPORT_PTR->NEXT->AMP first_node_ptr[0]->GEOMPORT_PTR->NEXT->PSH first_node_ptr[0]->GEOMPORT_PTR->NEXT->PSC first_node_ptr[0]->GEOMPORT_PTR->NEXT->PPA first_node_ptr[0]->GEOMPORT_PTR->NEXT->PHEPOL first_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT first_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT[0] first_node_ptr[0]->NEXT first_node_ptr[0]->NEXT[0] first_node_ptr[0]->NEXT->LOC_P first_node_ptr[0]->NEXT->LOC_Q first_node_ptr[0]->NEXT->XA first_node_ptr[0]->NEXT->YA first_node_ptr[0]->NEXT->ZA first_node_ptr[0]->NEXT->THEA first_node_ptr[0]->NEXT->PHEA first_node_ptr[0]->NEXT->PSEA first_node_ptr[0]->NEXT->GEOMPORT_PTR first_node_ptr[0]->NEXT->GEOMPORT_PTR[0] first_node_ptr[0]->NEXT->GEOMPORT_PTR->AMP first_node_ptr[0]->NEXT->GEOMPORT_PTR->PSH first_node_ptr[0]->NEXT->GEOMPORT_PTR->PSC first_node_ptr[0]->NEXT->GEOMPORT_PTR->PPA first_node_ptr[0]->NEXT->GEOMPORT_PTR->PHEPOL first_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT first_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT[0] first_node_ptr[0]->NEXT->NEXT first_node_ptr[0]->NEXT->NEXT[0] first_node_ptr[0]->NEXT->NEXT->LOC_P first_node_ptr[0]->NEXT->NEXT->LOC_Q first_node_ptr[0]->NEXT->NEXT->XA first_node_ptr[0]->NEXT->NEXT->YA first_node_ptr[0]->NEXT->NEXT->ZA first_node_ptr[0]->NEXT->NEXT->THEA first_node_ptr[0]->NEXT->NEXT->PHEA first_node_ptr[0]->NEXT->NEXT->PSEA first_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR first_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR[0] first_node_ptr[0]->NEXT->NEXT->NEXT first_node_ptr[0]->NEXT->NEXT->NEXT[0] first_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR first_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR[0] first_node_ptr[0]->NEXT->NEXT->SHAPE first_node_ptr[0]->NEXT->NEXT->PSIZE first_node_ptr[0]->NEXT->NEXT->QSIZE first_node_ptr[0]->NEXT->SUBGROUP_PTR first_node_ptr[0]->NEXT->SUBGROUP_PTR[0] first_node_ptr[0]->NEXT->SHAPE first_node_ptr[0]->NEXT->PSIZE first_node_ptr[0]->NEXT->QSIZE first_node_ptr[0]->SUBGROUP_PTR first_node_ptr[0]->SUBGROUP_PTR[0] first_node_ptr[0]->SHAPE first_node_ptr[0]->PSIZE first_node_ptr[0]->QSIZE last_node_ptr last_node_ptr[0] last_node_ptr[0][0] last_node_ptr[0]->LOC_P last_node_ptr[0]->LOC_Q last_node_ptr[0]->XA last_node_ptr[0]->YA last_node_ptr[0]->ZA last_node_ptr[0]->THEA last_node_ptr[0]->PHEA last_node_ptr[0]->PSEA last_node_ptr[0]->GEOMPORT_PTR last_node_ptr[0]->GEOMPORT_PTR[0] last_node_ptr[0]->GEOMPORT_PTR->AMP last_node_ptr[0]->GEOMPORT_PTR->PSH last_node_ptr[0]->GEOMPORT_PTR->PSC last_node_ptr[0]->GEOMPORT_PTR->PPA last_node_ptr[0]->GEOMPORT_PTR->PHEPOL last_node_ptr[0]->GEOMPORT_PTR->NEXT last_node_ptr[0]->GEOMPORT_PTR->NEXT[0] last_node_ptr[0]->GEOMPORT_PTR->NEXT->AMP last_node_ptr[0]->GEOMPORT_PTR->NEXT->PSH last_node_ptr[0]->GEOMPORT_PTR->NEXT->PSC last_node_ptr[0]->GEOMPORT_PTR->NEXT->PPA last_node_ptr[0]->GEOMPORT_PTR->NEXT->PHEPOL last_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT last_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT[0] last_node_ptr[0]->NEXT last_node_ptr[0]->NEXT[0] last_node_ptr[0]->NEXT->LOC_P last_node_ptr[0]->NEXT->LOC_Q last_node_ptr[0]->NEXT->XA last_node_ptr[0]->NEXT->YA last_node_ptr[0]->NEXT->ZA last_node_ptr[0]->NEXT->THEA last_node_ptr[0]->NEXT->PHEA last_node_ptr[0]->NEXT->PSEA last_node_ptr[0]->NEXT->GEOMPORT_PTR last_node_ptr[0]->NEXT->GEOMPORT_PTR[0] last_node_ptr[0]->NEXT->GEOMPORT_PTR->AMP last_node_ptr[0]->NEXT->GEOMPORT_PTR->PSH last_node_ptr[0]->NEXT->GEOMPORT_PTR->PSC last_node_ptr[0]->NEXT->GEOMPORT_PTR->PPA last_node_ptr[0]->NEXT->GEOMPORT_PTR->PHEPOL last_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT last_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT[0] last_node_ptr[0]->NEXT->NEXT last_node_ptr[0]->NEXT->NEXT[0] last_node_ptr[0]->NEXT->NEXT->LOC_P last_node_ptr[0]->NEXT->NEXT->LOC_Q last_node_ptr[0]->NEXT->NEXT->XA last_node_ptr[0]->NEXT->NEXT->YA last_node_ptr[0]->NEXT->NEXT->ZA last_node_ptr[0]->NEXT->NEXT->THEA last_node_ptr[0]->NEXT->NEXT->PHEA last_node_ptr[0]->NEXT->NEXT->PSEA last_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR last_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR[0] last_node_ptr[0]->NEXT->NEXT->NEXT last_node_ptr[0]->NEXT->NEXT->NEXT[0] last_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR last_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR[0] last_node_ptr[0]->NEXT->NEXT->SHAPE last_node_ptr[0]->NEXT->NEXT->PSIZE last_node_ptr[0]->NEXT->NEXT->QSIZE last_node_ptr[0]->NEXT->SUBGROUP_PTR last_node_ptr[0]->NEXT->SUBGROUP_PTR[0] last_node_ptr[0]->NEXT->SHAPE last_node_ptr[0]->NEXT->PSIZE last_node_ptr[0]->NEXT->QSIZE last_node_ptr[0]->SUBGROUP_PTR last_node_ptr[0]->SUBGROUP_PTR[0] last_node_ptr[0]->SHAPE last_node_ptr[0]->PSIZE last_node_ptr[0]->QSIZE pstep qstep angle nodes_num_ptr nodes_num_ptr[0] elem_shape elem_pdim elem_qdim return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(addrem_ptr) orig(addrem_ptr[0]) orig(addrem_ptr->ADDREM_TYPE) orig(addrem_ptr->BLOCK_TYPE) orig(addrem_ptr->NODE_PTR) orig(addrem_ptr->NODE_PTR[0]) orig(addrem_ptr->NODE_PTR->OMIT_ORIENT) orig(addrem_ptr->NODE_PTR->PCOORD) orig(addrem_ptr->NODE_PTR->QCOORD) orig(addrem_ptr->NODE_PTR->THEA) orig(addrem_ptr->NODE_PTR->PHEA) orig(addrem_ptr->NODE_PTR->PSEA) orig(addrem_ptr->NODE_PTR->ANGLE_UNIT) orig(addrem_ptr->NODE_PTR->NEXT) orig(addrem_ptr->NODE_PTR->NEXT[0]) orig(addrem_ptr->NODE_PTR->NEXT->OMIT_ORIENT) orig(addrem_ptr->NODE_PTR->NEXT->PCOORD) orig(addrem_ptr->NODE_PTR->NEXT->QCOORD) orig(addrem_ptr->NODE_PTR->NEXT->THEA) orig(addrem_ptr->NODE_PTR->NEXT->PHEA) orig(addrem_ptr->NODE_PTR->NEXT->PSEA) orig(addrem_ptr->NODE_PTR->NEXT->ANGLE_UNIT) orig(addrem_ptr->NODE_PTR->NEXT->NEXT) orig(addrem_ptr->NODE_PTR->NEXT->NEXT[0]) orig(addrem_ptr->NEXT) orig(addrem_ptr->NEXT[0]) orig(addrem_ptr->NEXT->ADDREM_TYPE) orig(addrem_ptr->NEXT->BLOCK_TYPE) orig(addrem_ptr->NEXT->NODE_PTR) orig(addrem_ptr->NEXT->NODE_PTR[0]) orig(addrem_ptr->NEXT->NODE_PTR->OMIT_ORIENT) orig(addrem_ptr->NEXT->NODE_PTR->PCOORD) orig(addrem_ptr->NEXT->NODE_PTR->QCOORD) orig(addrem_ptr->NEXT->NODE_PTR->THEA) orig(addrem_ptr->NEXT->NODE_PTR->PHEA) orig(addrem_ptr->NEXT->NODE_PTR->PSEA) orig(addrem_ptr->NEXT->NODE_PTR->ANGLE_UNIT) orig(addrem_ptr->NEXT->NODE_PTR->NEXT) orig(addrem_ptr->NEXT->NODE_PTR->NEXT[0]) orig(addrem_ptr->NEXT->NEXT) orig(addrem_ptr->NEXT->NEXT[0]) orig(addrem_ptr->NEXT->NEXT->ADDREM_TYPE) orig(addrem_ptr->NEXT->NEXT->BLOCK_TYPE) orig(addrem_ptr->NEXT->NEXT->NODE_PTR) orig(addrem_ptr->NEXT->NEXT->NODE_PTR[0]) orig(addrem_ptr->NEXT->NEXT->NEXT) orig(addrem_ptr->NEXT->NEXT->NEXT[0]) orig(first_node_ptr) orig(first_node_ptr[0]) orig(first_node_ptr[0][0]) orig(first_node_ptr[0]->LOC_P) orig(first_node_ptr[0]->LOC_Q) orig(first_node_ptr[0]->XA) orig(first_node_ptr[0]->YA) orig(first_node_ptr[0]->ZA) orig(first_node_ptr[0]->THEA) orig(first_node_ptr[0]->PHEA) orig(first_node_ptr[0]->PSEA) orig(first_node_ptr[0]->GEOMPORT_PTR) orig(first_node_ptr[0]->GEOMPORT_PTR[0]) orig(first_node_ptr[0]->GEOMPORT_PTR->AMP) orig(first_node_ptr[0]->GEOMPORT_PTR->PSH) orig(first_node_ptr[0]->GEOMPORT_PTR->PSC) orig(first_node_ptr[0]->GEOMPORT_PTR->PPA) orig(first_node_ptr[0]->GEOMPORT_PTR->PHEPOL) orig(first_node_ptr[0]->GEOMPORT_PTR->NEXT) orig(first_node_ptr[0]->GEOMPORT_PTR->NEXT[0]) orig(first_node_ptr[0]->GEOMPORT_PTR->NEXT->AMP) orig(first_node_ptr[0]->GEOMPORT_PTR->NEXT->PSH) orig(first_node_ptr[0]->GEOMPORT_PTR->NEXT->PSC) orig(first_node_ptr[0]->GEOMPORT_PTR->NEXT->PPA) orig(first_node_ptr[0]->GEOMPORT_PTR->NEXT->PHEPOL) orig(first_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT) orig(first_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT[0]) orig(first_node_ptr[0]->NEXT) orig(first_node_ptr[0]->NEXT[0]) orig(first_node_ptr[0]->NEXT->LOC_P) orig(first_node_ptr[0]->NEXT->LOC_Q) orig(first_node_ptr[0]->NEXT->XA) orig(first_node_ptr[0]->NEXT->YA) orig(first_node_ptr[0]->NEXT->ZA) orig(first_node_ptr[0]->NEXT->THEA) orig(first_node_ptr[0]->NEXT->PHEA) orig(first_node_ptr[0]->NEXT->PSEA) orig(first_node_ptr[0]->NEXT->GEOMPORT_PTR) orig(first_node_ptr[0]->NEXT->GEOMPORT_PTR[0]) orig(first_node_ptr[0]->NEXT->GEOMPORT_PTR->AMP) orig(first_node_ptr[0]->NEXT->GEOMPORT_PTR->PSH) orig(first_node_ptr[0]->NEXT->GEOMPORT_PTR->PSC) orig(first_node_ptr[0]->NEXT->GEOMPORT_PTR->PPA) orig(first_node_ptr[0]->NEXT->GEOMPORT_PTR->PHEPOL) orig(first_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT) orig(first_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT[0]) orig(first_node_ptr[0]->NEXT->NEXT) orig(first_node_ptr[0]->NEXT->NEXT[0]) orig(first_node_ptr[0]->NEXT->NEXT->LOC_P) orig(first_node_ptr[0]->NEXT->NEXT->LOC_Q) orig(first_node_ptr[0]->NEXT->NEXT->XA) orig(first_node_ptr[0]->NEXT->NEXT->YA) orig(first_node_ptr[0]->NEXT->NEXT->ZA) orig(first_node_ptr[0]->NEXT->NEXT->THEA) orig(first_node_ptr[0]->NEXT->NEXT->PHEA) orig(first_node_ptr[0]->NEXT->NEXT->PSEA) orig(first_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR) orig(first_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR[0]) orig(first_node_ptr[0]->NEXT->NEXT->NEXT) orig(first_node_ptr[0]->NEXT->NEXT->NEXT[0]) orig(first_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR) orig(first_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR[0]) orig(first_node_ptr[0]->NEXT->NEXT->SHAPE) orig(first_node_ptr[0]->NEXT->NEXT->PSIZE) orig(first_node_ptr[0]->NEXT->NEXT->QSIZE) orig(first_node_ptr[0]->NEXT->SUBGROUP_PTR) orig(first_node_ptr[0]->NEXT->SUBGROUP_PTR[0]) orig(first_node_ptr[0]->NEXT->SHAPE) orig(first_node_ptr[0]->NEXT->PSIZE) orig(first_node_ptr[0]->NEXT->QSIZE) orig(first_node_ptr[0]->SUBGROUP_PTR) orig(first_node_ptr[0]->SUBGROUP_PTR[0]) orig(first_node_ptr[0]->SHAPE) orig(first_node_ptr[0]->PSIZE) orig(first_node_ptr[0]->QSIZE) orig(last_node_ptr) orig(last_node_ptr[0]) orig(last_node_ptr[0][0]) orig(last_node_ptr[0]->LOC_P) orig(last_node_ptr[0]->LOC_Q) orig(last_node_ptr[0]->XA) orig(last_node_ptr[0]->YA) orig(last_node_ptr[0]->ZA) orig(last_node_ptr[0]->THEA) orig(last_node_ptr[0]->PHEA) orig(last_node_ptr[0]->PSEA) orig(last_node_ptr[0]->GEOMPORT_PTR) orig(last_node_ptr[0]->GEOMPORT_PTR[0]) orig(last_node_ptr[0]->GEOMPORT_PTR->AMP) orig(last_node_ptr[0]->GEOMPORT_PTR->PSH) orig(last_node_ptr[0]->GEOMPORT_PTR->PSC) orig(last_node_ptr[0]->GEOMPORT_PTR->PPA) orig(last_node_ptr[0]->GEOMPORT_PTR->PHEPOL) orig(last_node_ptr[0]->GEOMPORT_PTR->NEXT) orig(last_node_ptr[0]->GEOMPORT_PTR->NEXT[0]) orig(last_node_ptr[0]->GEOMPORT_PTR->NEXT->AMP) orig(last_node_ptr[0]->GEOMPORT_PTR->NEXT->PSH) orig(last_node_ptr[0]->GEOMPORT_PTR->NEXT->PSC) orig(last_node_ptr[0]->GEOMPORT_PTR->NEXT->PPA) orig(last_node_ptr[0]->GEOMPORT_PTR->NEXT->PHEPOL) orig(last_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT) orig(last_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT[0]) orig(last_node_ptr[0]->NEXT) orig(last_node_ptr[0]->NEXT[0]) orig(last_node_ptr[0]->NEXT->LOC_P) orig(last_node_ptr[0]->NEXT->LOC_Q) orig(last_node_ptr[0]->NEXT->XA) orig(last_node_ptr[0]->NEXT->YA) orig(last_node_ptr[0]->NEXT->ZA) orig(last_node_ptr[0]->NEXT->THEA) orig(last_node_ptr[0]->NEXT->PHEA) orig(last_node_ptr[0]->NEXT->PSEA) orig(last_node_ptr[0]->NEXT->GEOMPORT_PTR) orig(last_node_ptr[0]->NEXT->GEOMPORT_PTR[0]) orig(last_node_ptr[0]->NEXT->GEOMPORT_PTR->AMP) orig(last_node_ptr[0]->NEXT->GEOMPORT_PTR->PSH) orig(last_node_ptr[0]->NEXT->GEOMPORT_PTR->PSC) orig(last_node_ptr[0]->NEXT->GEOMPORT_PTR->PPA) orig(last_node_ptr[0]->NEXT->GEOMPORT_PTR->PHEPOL) orig(last_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT) orig(last_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT[0]) orig(last_node_ptr[0]->NEXT->NEXT) orig(last_node_ptr[0]->NEXT->NEXT[0]) orig(last_node_ptr[0]->NEXT->NEXT->LOC_P) orig(last_node_ptr[0]->NEXT->NEXT->LOC_Q) orig(last_node_ptr[0]->NEXT->NEXT->XA) orig(last_node_ptr[0]->NEXT->NEXT->YA) orig(last_node_ptr[0]->NEXT->NEXT->ZA) orig(last_node_ptr[0]->NEXT->NEXT->THEA) orig(last_node_ptr[0]->NEXT->NEXT->PHEA) orig(last_node_ptr[0]->NEXT->NEXT->PSEA) orig(last_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR) orig(last_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR[0]) orig(last_node_ptr[0]->NEXT->NEXT->NEXT) orig(last_node_ptr[0]->NEXT->NEXT->NEXT[0]) orig(last_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR) orig(last_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR[0]) orig(last_node_ptr[0]->NEXT->NEXT->SHAPE) orig(last_node_ptr[0]->NEXT->NEXT->PSIZE) orig(last_node_ptr[0]->NEXT->NEXT->QSIZE) orig(last_node_ptr[0]->NEXT->SUBGROUP_PTR) orig(last_node_ptr[0]->NEXT->SUBGROUP_PTR[0]) orig(last_node_ptr[0]->NEXT->SHAPE) orig(last_node_ptr[0]->NEXT->PSIZE) orig(last_node_ptr[0]->NEXT->QSIZE) orig(last_node_ptr[0]->SUBGROUP_PTR) orig(last_node_ptr[0]->SUBGROUP_PTR[0]) orig(last_node_ptr[0]->SHAPE) orig(last_node_ptr[0]->PSIZE) orig(last_node_ptr[0]->QSIZE) orig(pstep) orig(qstep) orig(angle) orig(nodes_num_ptr) orig(nodes_num_ptr[0]) orig(elem_shape) orig(elem_pdim) orig(elem_qdim)
assignable addrem_ptr->NODE_PTR[0], addrem_ptr->NODE_PTR->OMIT_ORIENT, addrem_ptr->NODE_PTR->NEXT[0], addrem_ptr->NODE_PTR->NEXT->OMIT_ORIENT, addrem_ptr->NODE_PTR->NEXT->PCOORD, addrem_ptr->NODE_PTR->NEXT->QCOORD, addrem_ptr->NODE_PTR->NEXT->THEA, addrem_ptr->NODE_PTR->NEXT->PHEA, addrem_ptr->NODE_PTR->NEXT->PSEA, addrem_ptr->NODE_PTR->NEXT->ANGLE_UNIT, addrem_ptr->NODE_PTR->NEXT->NEXT, addrem_ptr->NODE_PTR->NEXT->NEXT[0], addrem_ptr->NEXT[0], addrem_ptr->NEXT->ADDREM_TYPE, addrem_ptr->NEXT->BLOCK_TYPE, addrem_ptr->NEXT->NODE_PTR, addrem_ptr->NEXT->NODE_PTR[0], addrem_ptr->NEXT->NODE_PTR->OMIT_ORIENT, addrem_ptr->NEXT->NODE_PTR->PCOORD, addrem_ptr->NEXT->NODE_PTR->QCOORD, addrem_ptr->NEXT->NODE_PTR->THEA, addrem_ptr->NEXT->NODE_PTR->PHEA, addrem_ptr->NEXT->NODE_PTR->PSEA, addrem_ptr->NEXT->NODE_PTR->ANGLE_UNIT, addrem_ptr->NEXT->NODE_PTR->NEXT, addrem_ptr->NEXT->NODE_PTR->NEXT[0], addrem_ptr->NEXT->NEXT, addrem_ptr->NEXT->NEXT[0], addrem_ptr->NEXT->NEXT->ADDREM_TYPE, addrem_ptr->NEXT->NEXT->BLOCK_TYPE, addrem_ptr->NEXT->NEXT->NODE_PTR, addrem_ptr->NEXT->NEXT->NODE_PTR[0], addrem_ptr->NEXT->NEXT->NEXT, addrem_ptr->NEXT->NEXT->NEXT[0], first_node_ptr[0], first_node_ptr[0][0], first_node_ptr[0]->LOC_P, first_node_ptr[0]->LOC_Q, first_node_ptr[0]->XA, first_node_ptr[0]->YA, first_node_ptr[0]->ZA, first_node_ptr[0]->THEA, first_node_ptr[0]->PHEA, first_node_ptr[0]->PSEA, first_node_ptr[0]->GEOMPORT_PTR, first_node_ptr[0]->GEOMPORT_PTR[0], first_node_ptr[0]->GEOMPORT_PTR->AMP, first_node_ptr[0]->GEOMPORT_PTR->PSH, first_node_ptr[0]->GEOMPORT_PTR->PSC, first_node_ptr[0]->GEOMPORT_PTR->PPA, first_node_ptr[0]->GEOMPORT_PTR->PHEPOL, first_node_ptr[0]->GEOMPORT_PTR->NEXT, first_node_ptr[0]->GEOMPORT_PTR->NEXT[0], first_node_ptr[0]->GEOMPORT_PTR->NEXT->AMP, first_node_ptr[0]->GEOMPORT_PTR->NEXT->PSH, first_node_ptr[0]->GEOMPORT_PTR->NEXT->PSC, first_node_ptr[0]->GEOMPORT_PTR->NEXT->PPA, first_node_ptr[0]->GEOMPORT_PTR->NEXT->PHEPOL, first_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT, first_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT[0], first_node_ptr[0]->NEXT, first_node_ptr[0]->NEXT[0], first_node_ptr[0]->NEXT->LOC_P, first_node_ptr[0]->NEXT->LOC_Q, first_node_ptr[0]->NEXT->XA, first_node_ptr[0]->NEXT->YA, first_node_ptr[0]->NEXT->ZA, first_node_ptr[0]->NEXT->THEA, first_node_ptr[0]->NEXT->PHEA, first_node_ptr[0]->NEXT->PSEA, first_node_ptr[0]->NEXT->GEOMPORT_PTR, first_node_ptr[0]->NEXT->GEOMPORT_PTR[0], first_node_ptr[0]->NEXT->GEOMPORT_PTR->AMP, first_node_ptr[0]->NEXT->GEOMPORT_PTR->PSH, first_node_ptr[0]->NEXT->GEOMPORT_PTR->PSC, first_node_ptr[0]->NEXT->GEOMPORT_PTR->PPA, first_node_ptr[0]->NEXT->GEOMPORT_PTR->PHEPOL, first_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT, first_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT[0], first_node_ptr[0]->NEXT->NEXT, first_node_ptr[0]->NEXT->NEXT[0], first_node_ptr[0]->NEXT->NEXT->LOC_P, first_node_ptr[0]->NEXT->NEXT->LOC_Q, first_node_ptr[0]->NEXT->NEXT->XA, first_node_ptr[0]->NEXT->NEXT->YA, first_node_ptr[0]->NEXT->NEXT->ZA, first_node_ptr[0]->NEXT->NEXT->THEA, first_node_ptr[0]->NEXT->NEXT->PHEA, first_node_ptr[0]->NEXT->NEXT->PSEA, first_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR, first_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR[0], first_node_ptr[0]->NEXT->NEXT->NEXT, first_node_ptr[0]->NEXT->NEXT->NEXT[0], first_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR, first_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR[0], first_node_ptr[0]->NEXT->NEXT->SHAPE, first_node_ptr[0]->NEXT->NEXT->PSIZE, first_node_ptr[0]->NEXT->NEXT->QSIZE, first_node_ptr[0]->NEXT->SUBGROUP_PTR, first_node_ptr[0]->NEXT->SUBGROUP_PTR[0], first_node_ptr[0]->NEXT->SHAPE, first_node_ptr[0]->NEXT->PSIZE, first_node_ptr[0]->NEXT->QSIZE, first_node_ptr[0]->SUBGROUP_PTR, first_node_ptr[0]->SUBGROUP_PTR[0], first_node_ptr[0]->SHAPE, first_node_ptr[0]->PSIZE, first_node_ptr[0]->QSIZE, last_node_ptr[0], last_node_ptr[0][0], last_node_ptr[0]->LOC_P, last_node_ptr[0]->LOC_Q, last_node_ptr[0]->XA, last_node_ptr[0]->YA, last_node_ptr[0]->ZA, last_node_ptr[0]->THEA, last_node_ptr[0]->PHEA, last_node_ptr[0]->PSEA, last_node_ptr[0]->GEOMPORT_PTR, last_node_ptr[0]->GEOMPORT_PTR[0], last_node_ptr[0]->GEOMPORT_PTR->AMP, last_node_ptr[0]->GEOMPORT_PTR->PSH, last_node_ptr[0]->GEOMPORT_PTR->PSC, last_node_ptr[0]->GEOMPORT_PTR->PPA, last_node_ptr[0]->GEOMPORT_PTR->PHEPOL, last_node_ptr[0]->GEOMPORT_PTR->NEXT, last_node_ptr[0]->GEOMPORT_PTR->NEXT[0], last_node_ptr[0]->GEOMPORT_PTR->NEXT->AMP, last_node_ptr[0]->GEOMPORT_PTR->NEXT->PSH, last_node_ptr[0]->GEOMPORT_PTR->NEXT->PSC, last_node_ptr[0]->GEOMPORT_PTR->NEXT->PPA, last_node_ptr[0]->GEOMPORT_PTR->NEXT->PHEPOL, last_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT, last_node_ptr[0]->GEOMPORT_PTR->NEXT->NEXT[0], last_node_ptr[0]->NEXT, last_node_ptr[0]->NEXT[0], last_node_ptr[0]->NEXT->LOC_P, last_node_ptr[0]->NEXT->LOC_Q, last_node_ptr[0]->NEXT->XA, last_node_ptr[0]->NEXT->YA, last_node_ptr[0]->NEXT->ZA, last_node_ptr[0]->NEXT->THEA, last_node_ptr[0]->NEXT->PHEA, last_node_ptr[0]->NEXT->PSEA, last_node_ptr[0]->NEXT->GEOMPORT_PTR, last_node_ptr[0]->NEXT->GEOMPORT_PTR[0], last_node_ptr[0]->NEXT->GEOMPORT_PTR->AMP, last_node_ptr[0]->NEXT->GEOMPORT_PTR->PSH, last_node_ptr[0]->NEXT->GEOMPORT_PTR->PSC, last_node_ptr[0]->NEXT->GEOMPORT_PTR->PPA, last_node_ptr[0]->NEXT->GEOMPORT_PTR->PHEPOL, last_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT, last_node_ptr[0]->NEXT->GEOMPORT_PTR->NEXT[0], last_node_ptr[0]->NEXT->NEXT, last_node_ptr[0]->NEXT->NEXT[0], last_node_ptr[0]->NEXT->NEXT->LOC_P, last_node_ptr[0]->NEXT->NEXT->LOC_Q, last_node_ptr[0]->NEXT->NEXT->XA, last_node_ptr[0]->NEXT->NEXT->YA, last_node_ptr[0]->NEXT->NEXT->ZA, last_node_ptr[0]->NEXT->NEXT->THEA, last_node_ptr[0]->NEXT->NEXT->PHEA, last_node_ptr[0]->NEXT->NEXT->PSEA, last_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR, last_node_ptr[0]->NEXT->NEXT->GEOMPORT_PTR[0], last_node_ptr[0]->NEXT->NEXT->NEXT, last_node_ptr[0]->NEXT->NEXT->NEXT[0], last_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR, last_node_ptr[0]->NEXT->NEXT->SUBGROUP_PTR[0], last_node_ptr[0]->NEXT->NEXT->SHAPE, last_node_ptr[0]->NEXT->NEXT->PSIZE, last_node_ptr[0]->NEXT->NEXT->QSIZE, last_node_ptr[0]->NEXT->SUBGROUP_PTR, last_node_ptr[0]->NEXT->SUBGROUP_PTR[0], last_node_ptr[0]->NEXT->SHAPE, last_node_ptr[0]->NEXT->PSIZE, last_node_ptr[0]->NEXT->QSIZE, last_node_ptr[0]->SUBGROUP_PTR, last_node_ptr[0]->SUBGROUP_PTR[0], last_node_ptr[0]->SHAPE, last_node_ptr[0]->PSIZE, last_node_ptr[0]->QSIZE, nodes_num_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
addrem_ptr.[0] == \old(addrem_ptr.[0])
addrem_ptr.ADDREM_TYPE == return
addrem_ptr.BLOCK_TYPE == \old(addrem_ptr.BLOCK_TYPE)
addrem_ptr.NODE_PTR == \old(addrem_ptr.NODE_PTR)
addrem_ptr.NODE_PTR.PCOORD == first_node_ptr.[0].NEXT.LOC_P
addrem_ptr.NODE_PTR.PCOORD == last_node_ptr.[0].LOC_P
addrem_ptr.NODE_PTR.PCOORD == \old(addrem_ptr.NODE_PTR.PCOORD)
addrem_ptr.NODE_PTR.QCOORD == first_node_ptr.[0].NEXT.NEXT.LOC_Q
addrem_ptr.NODE_PTR.QCOORD == last_node_ptr.[0].LOC_Q
addrem_ptr.NODE_PTR.QCOORD == \old(addrem_ptr.NODE_PTR.QCOORD)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, addrem_ptr.NODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, addrem_ptr.NODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, first_node_ptr.[0].ZA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, first_node_ptr.[0].THEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, first_node_ptr.[0].PHEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, first_node_ptr.[0].PSEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, first_node_ptr.[0].NEXT.ZA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, first_node_ptr.[0].NEXT.THEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, first_node_ptr.[0].NEXT.PHEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, first_node_ptr.[0].NEXT.PSEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, first_node_ptr.[0].NEXT.NEXT.ZA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, first_node_ptr.[0].NEXT.NEXT.THEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, first_node_ptr.[0].NEXT.NEXT.PHEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, first_node_ptr.[0].NEXT.NEXT.PSEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, last_node_ptr.[0].ZA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, last_node_ptr.[0].THEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, last_node_ptr.[0].PHEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, last_node_ptr.[0].PSEA)
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, \old(addrem_ptr.NODE_PTR.THEA))
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, \old(addrem_ptr.NODE_PTR.PHEA))
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, \old(addrem_ptr.NODE_PTR.PSEA))
addrem_ptr.NODE_PTR.ANGLE_UNIT == return
addrem_ptr.NODE_PTR.NEXT == \old(addrem_ptr.NODE_PTR.NEXT)
addrem_ptr.NEXT == \old(addrem_ptr.NEXT)
first_node_ptr.[0].LOC_Q == \old(elem_shape)
daikon.Quant.fuzzy.eq(first_node_ptr.[0].YA, first_node_ptr.[0].NEXT.YA)
first_node_ptr.[0].NEXT.LOC_Q == \old(elem_shape)
daikon.Quant.fuzzy.eq(first_node_ptr.[0].NEXT.NEXT.YA, last_node_ptr.[0].YA)
first_node_ptr.[0].NEXT.NEXT.SUBGROUP_PTR == first_node_ptr.[0].SUBGROUP_PTR
first_node_ptr.[0].NEXT.NEXT.SHAPE == \old(elem_shape)
daikon.Quant.fuzzy.eq(first_node_ptr.[0].NEXT.NEXT.PSIZE, \old(pstep))
daikon.Quant.fuzzy.eq(first_node_ptr.[0].NEXT.NEXT.QSIZE, \old(pstep))
first_node_ptr.[0].NEXT.SUBGROUP_PTR == first_node_ptr.[0].SUBGROUP_PTR
first_node_ptr.[0].NEXT.SHAPE == \old(elem_shape)
daikon.Quant.fuzzy.eq(first_node_ptr.[0].NEXT.PSIZE, \old(pstep))
daikon.Quant.fuzzy.eq(first_node_ptr.[0].NEXT.QSIZE, \old(pstep))
first_node_ptr.[0].SUBGROUP_PTR == last_node_ptr.[0].NEXT
first_node_ptr.[0].SUBGROUP_PTR == last_node_ptr.[0].SUBGROUP_PTR
first_node_ptr.[0].SUBGROUP_PTR == \old(first_node_ptr.[0])
first_node_ptr.[0].SUBGROUP_PTR == \old(last_node_ptr.[0])
first_node_ptr.[0].SHAPE == \old(elem_shape)
daikon.Quant.fuzzy.eq(first_node_ptr.[0].PSIZE, \old(pstep))
daikon.Quant.fuzzy.eq(first_node_ptr.[0].QSIZE, \old(pstep))
last_node_ptr.[0].SHAPE == \old(elem_shape)
daikon.Quant.fuzzy.eq(last_node_ptr.[0].PSIZE, \old(pstep))
daikon.Quant.fuzzy.eq(last_node_ptr.[0].QSIZE, \old(pstep))
return == \old(addrem_ptr.ADDREM_TYPE)
return == \old(addrem_ptr.NODE_PTR.ANGLE_UNIT)
return == \old(nodes_num_ptr.[0])
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
addrem_ptr.[0] != null
addrem_ptr.BLOCK_TYPE == 3
addrem_ptr.NODE_PTR != null
addrem_ptr.NODE_PTR.PCOORD == 9
addrem_ptr.NODE_PTR.QCOORD == 1
daikon.Quant.fuzzy.eq(addrem_ptr.NODE_PTR.THEA, 0.0)
addrem_ptr.NODE_PTR.NEXT == null
addrem_ptr.NEXT == null
first_node_ptr.[0] != null
first_node_ptr.[0].[0] != null
first_node_ptr.[0].LOC_P == 8
daikon.Quant.fuzzy.eq(first_node_ptr.[0].XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(first_node_ptr.[0].YA, 148.95636946268272)
first_node_ptr.[0].NEXT != null
first_node_ptr.[0].NEXT.[0] != null
daikon.Quant.fuzzy.eq(first_node_ptr.[0].NEXT.XA, 859.9999999796324)
first_node_ptr.[0].NEXT.NEXT != null
first_node_ptr.[0].NEXT.NEXT.[0] != null
first_node_ptr.[0].NEXT.NEXT.LOC_P == 10
daikon.Quant.fuzzy.eq(first_node_ptr.[0].NEXT.NEXT.XA, 902.9999999898162)
first_node_ptr.[0].NEXT.NEXT.NEXT != null
first_node_ptr.[0].NEXT.NEXT.NEXT.[0] != null
first_node_ptr.[0].SUBGROUP_PTR == null
last_node_ptr.[0] != null
last_node_ptr.[0].[0] != null
daikon.Quant.fuzzy.eq(last_node_ptr.[0].XA, 816.9999999898162)
daikon.Quant.fuzzy.eq(last_node_ptr.[0].YA, 74.47818473134136)
nodes_num_ptr.[0] == 7
return == 0
===========================================================================
..mmconv():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME x_ptr x_ptr[0] unit
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
x_ptr != null
daikon.Quant.fuzzy.eq(x_ptr.[0], 43.0)
unit == 0
===========================================================================
..mmconv():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME x_ptr x_ptr[0] unit return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(x_ptr) orig(x_ptr[0]) orig(unit)
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
daikon.Quant.fuzzy.eq(x_ptr.[0], \old(x_ptr.[0]))
return == \old(unit)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
daikon.Quant.fuzzy.eq(x_ptr.[0], 43.0)
return == 0
===========================================================================
..moseinit():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME
::UserNames.equals(::MOSErrors)
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::GLOBLE_FILENAME.equals("gr2712")
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..moseinit():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME)
assignable ::MOSErrors
::UserNames.equals(\old(::UserNames))
::UserNames.equals(\old(::MOSErrors))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::MOSErrors.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..nodecoor():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] pcoord_ptr pcoord_ptr[0] qcoord_ptr qcoord_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 57
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 78
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
pcoord_ptr != null
qcoord_ptr != null
===========================================================================
..nodecoor():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] pcoord_ptr pcoord_ptr[0] qcoord_ptr qcoord_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(pcoord_ptr) orig(pcoord_ptr[0]) orig(qcoord_ptr) orig(qcoord_ptr[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], pcoord_ptr[0], qcoord_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == pp2.[0].PREV.PREV.PREV
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pcoord_ptr.[0]
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
pp2.[0].PREV.LINE_NUM == pcoord_ptr.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 57
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 78
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 71
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 49
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
pcoord_ptr.[0] == 9
qcoord_ptr.[0] == 1
return == 0
===========================================================================
..nodedef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] node_ptr node_ptr[0] node_ptr[0][0] node_ptr[0]->OMIT_ORIENT node_ptr[0]->PCOORD node_ptr[0]->QCOORD node_ptr[0]->THEA node_ptr[0]->PHEA node_ptr[0]->PSEA node_ptr[0]->ANGLE_UNIT node_ptr[0]->NEXT node_ptr[0]->NEXT[0] node_ptr[0]->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->PCOORD node_ptr[0]->NEXT->QCOORD node_ptr[0]->NEXT->THEA node_ptr[0]->NEXT->PHEA node_ptr[0]->NEXT->PSEA node_ptr[0]->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT node_ptr[0]->NEXT->NEXT[0] node_ptr[0]->NEXT->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->NEXT->PCOORD node_ptr[0]->NEXT->NEXT->QCOORD node_ptr[0]->NEXT->NEXT->THEA node_ptr[0]->NEXT->NEXT->PHEA node_ptr[0]->NEXT->NEXT->PSEA node_ptr[0]->NEXT->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT->NEXT node_ptr[0]->NEXT->NEXT->NEXT[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 72
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 68
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
node_ptr != null
node_ptr.[0] == null
===========================================================================
..nodedef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] node_ptr node_ptr[0] node_ptr[0][0] node_ptr[0]->OMIT_ORIENT node_ptr[0]->PCOORD node_ptr[0]->QCOORD node_ptr[0]->THEA node_ptr[0]->PHEA node_ptr[0]->PSEA node_ptr[0]->ANGLE_UNIT node_ptr[0]->NEXT node_ptr[0]->NEXT[0] node_ptr[0]->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->PCOORD node_ptr[0]->NEXT->QCOORD node_ptr[0]->NEXT->THEA node_ptr[0]->NEXT->PHEA node_ptr[0]->NEXT->PSEA node_ptr[0]->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT node_ptr[0]->NEXT->NEXT[0] node_ptr[0]->NEXT->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->NEXT->PCOORD node_ptr[0]->NEXT->NEXT->QCOORD node_ptr[0]->NEXT->NEXT->THEA node_ptr[0]->NEXT->NEXT->PHEA node_ptr[0]->NEXT->NEXT->PSEA node_ptr[0]->NEXT->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT->NEXT node_ptr[0]->NEXT->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(node_ptr) orig(node_ptr[0]) orig(node_ptr[0][0]) orig(node_ptr[0]->OMIT_ORIENT) orig(node_ptr[0]->PCOORD) orig(node_ptr[0]->QCOORD) orig(node_ptr[0]->THEA) orig(node_ptr[0]->PHEA) orig(node_ptr[0]->PSEA) orig(node_ptr[0]->ANGLE_UNIT) orig(node_ptr[0]->NEXT) orig(node_ptr[0]->NEXT[0]) orig(node_ptr[0]->NEXT->OMIT_ORIENT) orig(node_ptr[0]->NEXT->PCOORD) orig(node_ptr[0]->NEXT->QCOORD) orig(node_ptr[0]->NEXT->THEA) orig(node_ptr[0]->NEXT->PHEA) orig(node_ptr[0]->NEXT->PSEA) orig(node_ptr[0]->NEXT->ANGLE_UNIT) orig(node_ptr[0]->NEXT->NEXT) orig(node_ptr[0]->NEXT->NEXT[0]) orig(node_ptr[0]->NEXT->NEXT->OMIT_ORIENT) orig(node_ptr[0]->NEXT->NEXT->PCOORD) orig(node_ptr[0]->NEXT->NEXT->QCOORD) orig(node_ptr[0]->NEXT->NEXT->THEA) orig(node_ptr[0]->NEXT->NEXT->PHEA) orig(node_ptr[0]->NEXT->NEXT->PSEA) orig(node_ptr[0]->NEXT->NEXT->ANGLE_UNIT) orig(node_ptr[0]->NEXT->NEXT->NEXT) orig(node_ptr[0]->NEXT->NEXT->NEXT[0])
assignable node_ptr[0][0], node_ptr[0]->OMIT_ORIENT, node_ptr[0]->PCOORD, node_ptr[0]->QCOORD, node_ptr[0]->THEA, node_ptr[0]->PHEA, node_ptr[0]->PSEA, node_ptr[0]->ANGLE_UNIT, node_ptr[0]->NEXT, node_ptr[0]->NEXT[0], node_ptr[0]->NEXT->OMIT_ORIENT, node_ptr[0]->NEXT->PCOORD, node_ptr[0]->NEXT->QCOORD, node_ptr[0]->NEXT->THEA, node_ptr[0]->NEXT->PHEA, node_ptr[0]->NEXT->PSEA, node_ptr[0]->NEXT->ANGLE_UNIT, node_ptr[0]->NEXT->NEXT, node_ptr[0]->NEXT->NEXT[0], node_ptr[0]->NEXT->NEXT->OMIT_ORIENT, node_ptr[0]->NEXT->NEXT->PCOORD, node_ptr[0]->NEXT->NEXT->QCOORD, node_ptr[0]->NEXT->NEXT->THEA, node_ptr[0]->NEXT->NEXT->PHEA, node_ptr[0]->NEXT->NEXT->PSEA, node_ptr[0]->NEXT->NEXT->ANGLE_UNIT, node_ptr[0]->NEXT->NEXT->NEXT, node_ptr[0]->NEXT->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == pp2.[0].info
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == pp2.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].NEXT.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0] == \old(p1)
pp2.[0] == \old(p1.PREV.NEXT)
pp2.[0] == \old(pp2.[0])
pp2.[0] == \old(pp2.[0].PREV.NEXT)
node_ptr.[0] == \old(node_ptr.[0])
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 72
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 68
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
node_ptr.[0] == null
return == 1
===========================================================================
..nomefile():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME fn
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::MOSErrors.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..nomefile():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME fn orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(fn)
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::MOSErrors.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..polspec():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] polarization_ptr polarization_ptr[0] phepol_ptr phepol_ptr[0] phepol_unit_ptr phepol_unit_ptr[0] direction_ptr direction_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 65
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 51
p1.PREV.PREV.LINE_NUM == 5
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
polarization_ptr != null
phepol_ptr != null
phepol_unit_ptr != null
direction_ptr != null
===========================================================================
..polspec():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] polarization_ptr polarization_ptr[0] phepol_ptr phepol_ptr[0] phepol_unit_ptr phepol_unit_ptr[0] direction_ptr direction_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(polarization_ptr) orig(polarization_ptr[0]) orig(phepol_ptr) orig(phepol_ptr[0]) orig(phepol_unit_ptr) orig(phepol_unit_ptr[0]) orig(direction_ptr) orig(direction_ptr[0])
assignable polarization_ptr[0], phepol_ptr[0], phepol_unit_ptr[0], direction_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == pp2.[0].info
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == pp2.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].NEXT.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0] == \old(p1)
pp2.[0] == \old(p1.PREV.NEXT)
pp2.[0] == \old(pp2.[0])
pp2.[0] == \old(pp2.[0].PREV.NEXT)
polarization_ptr.[0] == phepol_unit_ptr.[0]
polarization_ptr.[0] == direction_ptr.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 65
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 51
p1.PREV.PREV.LINE_NUM == 5
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
polarization_ptr.[0] == 0
daikon.Quant.fuzzy.eq(phepol_ptr.[0], 90.0)
return == 1
===========================================================================
..polydef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] node_ptr node_ptr[0] node_ptr[0][0] node_ptr[0]->OMIT_ORIENT node_ptr[0]->PCOORD node_ptr[0]->QCOORD node_ptr[0]->THEA node_ptr[0]->PHEA node_ptr[0]->PSEA node_ptr[0]->ANGLE_UNIT node_ptr[0]->NEXT node_ptr[0]->NEXT[0] node_ptr[0]->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->PCOORD node_ptr[0]->NEXT->QCOORD node_ptr[0]->NEXT->THEA node_ptr[0]->NEXT->PHEA node_ptr[0]->NEXT->PSEA node_ptr[0]->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT node_ptr[0]->NEXT->NEXT[0] node_ptr[0]->NEXT->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->NEXT->PCOORD node_ptr[0]->NEXT->NEXT->QCOORD node_ptr[0]->NEXT->NEXT->THEA node_ptr[0]->NEXT->NEXT->PHEA node_ptr[0]->NEXT->NEXT->PSEA node_ptr[0]->NEXT->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT->NEXT node_ptr[0]->NEXT->NEXT->NEXT[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 72
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 68
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
node_ptr != null
node_ptr.[0] == null
===========================================================================
..polydef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] node_ptr node_ptr[0] node_ptr[0][0] node_ptr[0]->OMIT_ORIENT node_ptr[0]->PCOORD node_ptr[0]->QCOORD node_ptr[0]->THEA node_ptr[0]->PHEA node_ptr[0]->PSEA node_ptr[0]->ANGLE_UNIT node_ptr[0]->NEXT node_ptr[0]->NEXT[0] node_ptr[0]->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->PCOORD node_ptr[0]->NEXT->QCOORD node_ptr[0]->NEXT->THEA node_ptr[0]->NEXT->PHEA node_ptr[0]->NEXT->PSEA node_ptr[0]->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT node_ptr[0]->NEXT->NEXT[0] node_ptr[0]->NEXT->NEXT->OMIT_ORIENT node_ptr[0]->NEXT->NEXT->PCOORD node_ptr[0]->NEXT->NEXT->QCOORD node_ptr[0]->NEXT->NEXT->THEA node_ptr[0]->NEXT->NEXT->PHEA node_ptr[0]->NEXT->NEXT->PSEA node_ptr[0]->NEXT->NEXT->ANGLE_UNIT node_ptr[0]->NEXT->NEXT->NEXT node_ptr[0]->NEXT->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(node_ptr) orig(node_ptr[0]) orig(node_ptr[0][0]) orig(node_ptr[0]->OMIT_ORIENT) orig(node_ptr[0]->PCOORD) orig(node_ptr[0]->QCOORD) orig(node_ptr[0]->THEA) orig(node_ptr[0]->PHEA) orig(node_ptr[0]->PSEA) orig(node_ptr[0]->ANGLE_UNIT) orig(node_ptr[0]->NEXT) orig(node_ptr[0]->NEXT[0]) orig(node_ptr[0]->NEXT->OMIT_ORIENT) orig(node_ptr[0]->NEXT->PCOORD) orig(node_ptr[0]->NEXT->QCOORD) orig(node_ptr[0]->NEXT->THEA) orig(node_ptr[0]->NEXT->PHEA) orig(node_ptr[0]->NEXT->PSEA) orig(node_ptr[0]->NEXT->ANGLE_UNIT) orig(node_ptr[0]->NEXT->NEXT) orig(node_ptr[0]->NEXT->NEXT[0]) orig(node_ptr[0]->NEXT->NEXT->OMIT_ORIENT) orig(node_ptr[0]->NEXT->NEXT->PCOORD) orig(node_ptr[0]->NEXT->NEXT->QCOORD) orig(node_ptr[0]->NEXT->NEXT->THEA) orig(node_ptr[0]->NEXT->NEXT->PHEA) orig(node_ptr[0]->NEXT->NEXT->PSEA) orig(node_ptr[0]->NEXT->NEXT->ANGLE_UNIT) orig(node_ptr[0]->NEXT->NEXT->NEXT) orig(node_ptr[0]->NEXT->NEXT->NEXT[0])
assignable node_ptr[0][0], node_ptr[0]->OMIT_ORIENT, node_ptr[0]->PCOORD, node_ptr[0]->QCOORD, node_ptr[0]->THEA, node_ptr[0]->PHEA, node_ptr[0]->PSEA, node_ptr[0]->ANGLE_UNIT, node_ptr[0]->NEXT, node_ptr[0]->NEXT[0], node_ptr[0]->NEXT->OMIT_ORIENT, node_ptr[0]->NEXT->PCOORD, node_ptr[0]->NEXT->QCOORD, node_ptr[0]->NEXT->THEA, node_ptr[0]->NEXT->PHEA, node_ptr[0]->NEXT->PSEA, node_ptr[0]->NEXT->ANGLE_UNIT, node_ptr[0]->NEXT->NEXT, node_ptr[0]->NEXT->NEXT[0], node_ptr[0]->NEXT->NEXT->OMIT_ORIENT, node_ptr[0]->NEXT->NEXT->PCOORD, node_ptr[0]->NEXT->NEXT->QCOORD, node_ptr[0]->NEXT->NEXT->THEA, node_ptr[0]->NEXT->NEXT->PHEA, node_ptr[0]->NEXT->NEXT->PSEA, node_ptr[0]->NEXT->NEXT->ANGLE_UNIT, node_ptr[0]->NEXT->NEXT->NEXT, node_ptr[0]->NEXT->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == pp2.[0].info
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == pp2.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].NEXT.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0] == \old(p1)
pp2.[0] == \old(p1.PREV.NEXT)
pp2.[0] == \old(pp2.[0])
pp2.[0] == \old(pp2.[0].PREV.NEXT)
node_ptr.[0] == \old(node_ptr.[0])
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 72
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 68
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
node_ptr.[0] == null
return == 1
===========================================================================
..portspec():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] nports_ptr nports_ptr[0] port_ptr port_ptr[0] port_ptr[0][0] port_ptr[0]->PORTNUM port_ptr[0]->AMP port_ptr[0]->AMP_UNIT port_ptr[0]->PSC port_ptr[0]->PSC_UNIT port_ptr[0]->PSH port_ptr[0]->PSH_UNIT port_ptr[0]->PPA port_ptr[0]->PPA_UNIT port_ptr[0]->PHEPOL port_ptr[0]->PHEPOL_UNIT port_ptr[0]->OMIT_POL port_ptr[0]->NEXT port_ptr[0]->NEXT[0] port_ptr[0]->NEXT->PORTNUM port_ptr[0]->NEXT->AMP port_ptr[0]->NEXT->AMP_UNIT port_ptr[0]->NEXT->PSC port_ptr[0]->NEXT->PSC_UNIT port_ptr[0]->NEXT->PSH port_ptr[0]->NEXT->PSH_UNIT port_ptr[0]->NEXT->PPA port_ptr[0]->NEXT->PPA_UNIT port_ptr[0]->NEXT->PHEPOL port_ptr[0]->NEXT->PHEPOL_UNIT port_ptr[0]->NEXT->OMIT_POL port_ptr[0]->NEXT->NEXT port_ptr[0]->NEXT->NEXT[0] port_ptr[0]->NEXT->NEXT->PORTNUM port_ptr[0]->NEXT->NEXT->AMP port_ptr[0]->NEXT->NEXT->AMP_UNIT port_ptr[0]->NEXT->NEXT->PSC port_ptr[0]->NEXT->NEXT->PSC_UNIT port_ptr[0]->NEXT->NEXT->PSH port_ptr[0]->NEXT->NEXT->PSH_UNIT port_ptr[0]->NEXT->NEXT->PPA port_ptr[0]->NEXT->NEXT->PPA_UNIT port_ptr[0]->NEXT->NEXT->PHEPOL port_ptr[0]->NEXT->NEXT->PHEPOL_UNIT port_ptr[0]->NEXT->NEXT->OMIT_POL port_ptr[0]->NEXT->NEXT->NEXT port_ptr[0]->NEXT->NEXT->NEXT[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 65
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 51
p1.PREV.PREV.LINE_NUM == 5
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
nports_ptr != null
port_ptr != null
===========================================================================
..portspec():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] nports_ptr nports_ptr[0] port_ptr port_ptr[0] port_ptr[0][0] port_ptr[0]->PORTNUM port_ptr[0]->AMP port_ptr[0]->AMP_UNIT port_ptr[0]->PSC port_ptr[0]->PSC_UNIT port_ptr[0]->PSH port_ptr[0]->PSH_UNIT port_ptr[0]->PPA port_ptr[0]->PPA_UNIT port_ptr[0]->PHEPOL port_ptr[0]->PHEPOL_UNIT port_ptr[0]->OMIT_POL port_ptr[0]->NEXT port_ptr[0]->NEXT[0] port_ptr[0]->NEXT->PORTNUM port_ptr[0]->NEXT->AMP port_ptr[0]->NEXT->AMP_UNIT port_ptr[0]->NEXT->PSC port_ptr[0]->NEXT->PSC_UNIT port_ptr[0]->NEXT->PSH port_ptr[0]->NEXT->PSH_UNIT port_ptr[0]->NEXT->PPA port_ptr[0]->NEXT->PPA_UNIT port_ptr[0]->NEXT->PHEPOL port_ptr[0]->NEXT->PHEPOL_UNIT port_ptr[0]->NEXT->OMIT_POL port_ptr[0]->NEXT->NEXT port_ptr[0]->NEXT->NEXT[0] port_ptr[0]->NEXT->NEXT->PORTNUM port_ptr[0]->NEXT->NEXT->AMP port_ptr[0]->NEXT->NEXT->AMP_UNIT port_ptr[0]->NEXT->NEXT->PSC port_ptr[0]->NEXT->NEXT->PSC_UNIT port_ptr[0]->NEXT->NEXT->PSH port_ptr[0]->NEXT->NEXT->PSH_UNIT port_ptr[0]->NEXT->NEXT->PPA port_ptr[0]->NEXT->NEXT->PPA_UNIT port_ptr[0]->NEXT->NEXT->PHEPOL port_ptr[0]->NEXT->NEXT->PHEPOL_UNIT port_ptr[0]->NEXT->NEXT->OMIT_POL port_ptr[0]->NEXT->NEXT->NEXT port_ptr[0]->NEXT->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(nports_ptr) orig(nports_ptr[0]) orig(port_ptr) orig(port_ptr[0]) orig(port_ptr[0][0]) orig(port_ptr[0]->PORTNUM) orig(port_ptr[0]->AMP) orig(port_ptr[0]->AMP_UNIT) orig(port_ptr[0]->PSC) orig(port_ptr[0]->PSC_UNIT) orig(port_ptr[0]->PSH) orig(port_ptr[0]->PSH_UNIT) orig(port_ptr[0]->PPA) orig(port_ptr[0]->PPA_UNIT) orig(port_ptr[0]->PHEPOL) orig(port_ptr[0]->PHEPOL_UNIT) orig(port_ptr[0]->OMIT_POL) orig(port_ptr[0]->NEXT) orig(port_ptr[0]->NEXT[0]) orig(port_ptr[0]->NEXT->PORTNUM) orig(port_ptr[0]->NEXT->AMP) orig(port_ptr[0]->NEXT->AMP_UNIT) orig(port_ptr[0]->NEXT->PSC) orig(port_ptr[0]->NEXT->PSC_UNIT) orig(port_ptr[0]->NEXT->PSH) orig(port_ptr[0]->NEXT->PSH_UNIT) orig(port_ptr[0]->NEXT->PPA) orig(port_ptr[0]->NEXT->PPA_UNIT) orig(port_ptr[0]->NEXT->PHEPOL) orig(port_ptr[0]->NEXT->PHEPOL_UNIT) orig(port_ptr[0]->NEXT->OMIT_POL) orig(port_ptr[0]->NEXT->NEXT) orig(port_ptr[0]->NEXT->NEXT[0]) orig(port_ptr[0]->NEXT->NEXT->PORTNUM) orig(port_ptr[0]->NEXT->NEXT->AMP) orig(port_ptr[0]->NEXT->NEXT->AMP_UNIT) orig(port_ptr[0]->NEXT->NEXT->PSC) orig(port_ptr[0]->NEXT->NEXT->PSC_UNIT) orig(port_ptr[0]->NEXT->NEXT->PSH) orig(port_ptr[0]->NEXT->NEXT->PSH_UNIT) orig(port_ptr[0]->NEXT->NEXT->PPA) orig(port_ptr[0]->NEXT->NEXT->PPA_UNIT) orig(port_ptr[0]->NEXT->NEXT->PHEPOL) orig(port_ptr[0]->NEXT->NEXT->PHEPOL_UNIT) orig(port_ptr[0]->NEXT->NEXT->OMIT_POL) orig(port_ptr[0]->NEXT->NEXT->NEXT) orig(port_ptr[0]->NEXT->NEXT->NEXT[0])
assignable nports_ptr[0], port_ptr[0], port_ptr[0][0], port_ptr[0]->PORTNUM, port_ptr[0]->AMP, port_ptr[0]->AMP_UNIT, port_ptr[0]->PSC, port_ptr[0]->PSC_UNIT, port_ptr[0]->PSH, port_ptr[0]->PSH_UNIT, port_ptr[0]->PPA, port_ptr[0]->PPA_UNIT, port_ptr[0]->PHEPOL, port_ptr[0]->PHEPOL_UNIT, port_ptr[0]->OMIT_POL, port_ptr[0]->NEXT, port_ptr[0]->NEXT[0], port_ptr[0]->NEXT->PORTNUM, port_ptr[0]->NEXT->AMP, port_ptr[0]->NEXT->AMP_UNIT, port_ptr[0]->NEXT->PSC, port_ptr[0]->NEXT->PSC_UNIT, port_ptr[0]->NEXT->PSH, port_ptr[0]->NEXT->PSH_UNIT, port_ptr[0]->NEXT->PPA, port_ptr[0]->NEXT->PPA_UNIT, port_ptr[0]->NEXT->PHEPOL, port_ptr[0]->NEXT->PHEPOL_UNIT, port_ptr[0]->NEXT->OMIT_POL, port_ptr[0]->NEXT->NEXT, port_ptr[0]->NEXT->NEXT[0], port_ptr[0]->NEXT->NEXT->PORTNUM, port_ptr[0]->NEXT->NEXT->AMP, port_ptr[0]->NEXT->NEXT->AMP_UNIT, port_ptr[0]->NEXT->NEXT->PSC, port_ptr[0]->NEXT->NEXT->PSC_UNIT, port_ptr[0]->NEXT->NEXT->PSH, port_ptr[0]->NEXT->NEXT->PSH_UNIT, port_ptr[0]->NEXT->NEXT->PPA, port_ptr[0]->NEXT->NEXT->PPA_UNIT, port_ptr[0]->NEXT->NEXT->PHEPOL, port_ptr[0]->NEXT->NEXT->PHEPOL_UNIT, port_ptr[0]->NEXT->NEXT->OMIT_POL, port_ptr[0]->NEXT->NEXT->NEXT, port_ptr[0]->NEXT->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == pp2.[0].info
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == pp2.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].NEXT.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0] == \old(p1)
pp2.[0] == \old(p1.PREV.NEXT)
pp2.[0] == \old(pp2.[0])
pp2.[0] == \old(pp2.[0].PREV.NEXT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 65
p1.LINE_NUM == 7
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 51
p1.PREV.PREV.LINE_NUM == 5
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
return == 1
===========================================================================
..prnfile():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME firstel firstel[0] firstel->info firstel->LINE_NUM firstel->PREV firstel->PREV[0] firstel->PREV->info firstel->PREV->LINE_NUM firstel->PREV->PREV firstel->PREV->PREV[0] firstel->PREV->PREV->info firstel->PREV->PREV->LINE_NUM firstel->PREV->PREV->PREV firstel->PREV->PREV->PREV[0] firstel->PREV->PREV->NEXT firstel->PREV->PREV->NEXT[0] firstel->PREV->NEXT firstel->PREV->NEXT[0] firstel->NEXT firstel->NEXT[0]
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
firstel != null
firstel.[0] != null
firstel.info == 71
firstel.LINE_NUM == 1
firstel.PREV == null
firstel.NEXT != null
firstel.NEXT.[0] != null
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::MOSErrors.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..prnfile():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME firstel firstel[0] firstel->info firstel->LINE_NUM firstel->PREV firstel->PREV[0] firstel->PREV->info firstel->PREV->LINE_NUM firstel->PREV->PREV firstel->PREV->PREV[0] firstel->PREV->PREV->info firstel->PREV->PREV->LINE_NUM firstel->PREV->PREV->PREV firstel->PREV->PREV->PREV[0] firstel->PREV->PREV->NEXT firstel->PREV->PREV->NEXT[0] firstel->PREV->NEXT firstel->PREV->NEXT[0] firstel->NEXT firstel->NEXT[0] orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(firstel) orig(firstel[0]) orig(firstel->info) orig(firstel->LINE_NUM) orig(firstel->PREV) orig(firstel->PREV[0]) orig(firstel->PREV->info) orig(firstel->PREV->LINE_NUM) orig(firstel->PREV->PREV) orig(firstel->PREV->PREV[0]) orig(firstel->PREV->PREV->info) orig(firstel->PREV->PREV->LINE_NUM) orig(firstel->PREV->PREV->PREV) orig(firstel->PREV->PREV->PREV[0]) orig(firstel->PREV->PREV->NEXT) orig(firstel->PREV->PREV->NEXT[0]) orig(firstel->PREV->NEXT) orig(firstel->PREV->NEXT[0]) orig(firstel->NEXT) orig(firstel->NEXT[0])
assignable firstel->PREV[0], firstel->PREV->info, firstel->PREV->LINE_NUM, firstel->PREV->PREV, firstel->PREV->PREV[0], firstel->PREV->PREV->info, firstel->PREV->PREV->LINE_NUM, firstel->PREV->PREV->PREV, firstel->PREV->PREV->PREV[0], firstel->PREV->PREV->NEXT, firstel->PREV->PREV->NEXT[0], firstel->PREV->NEXT, firstel->PREV->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
firstel.[0] == \old(firstel.[0])
firstel.info == \old(firstel.info)
firstel.LINE_NUM == \old(firstel.LINE_NUM)
firstel.PREV == \old(firstel.PREV)
firstel.NEXT == \old(firstel.NEXT)
firstel.NEXT.[0] == \old(firstel.NEXT.[0])
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
firstel.[0] != null
firstel.info == 71
firstel.LINE_NUM == 1
firstel.PREV == null
firstel.NEXT != null
firstel.NEXT.[0] != null
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::MOSErrors.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..readfil3():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME filename firstel firstel[0] firstel[0][0] firstel[0]->info firstel[0]->LINE_NUM firstel[0]->PREV firstel[0]->PREV[0] firstel[0]->PREV->info firstel[0]->PREV->LINE_NUM firstel[0]->PREV->PREV firstel[0]->PREV->PREV[0] firstel[0]->PREV->PREV->info firstel[0]->PREV->PREV->LINE_NUM firstel[0]->PREV->PREV->PREV firstel[0]->PREV->PREV->PREV[0] firstel[0]->PREV->PREV->NEXT firstel[0]->PREV->PREV->NEXT[0] firstel[0]->PREV->NEXT firstel[0]->PREV->NEXT[0] firstel[0]->NEXT firstel[0]->NEXT[0] lastel lastel[0] lastel[0][0] lastel[0]->info lastel[0]->LINE_NUM lastel[0]->PREV lastel[0]->PREV[0] lastel[0]->PREV->info lastel[0]->PREV->LINE_NUM lastel[0]->PREV->PREV lastel[0]->PREV->PREV[0] lastel[0]->PREV->PREV->info lastel[0]->PREV->PREV->LINE_NUM lastel[0]->PREV->PREV->PREV lastel[0]->PREV->PREV->PREV[0] lastel[0]->PREV->PREV->NEXT lastel[0]->PREV->PREV->NEXT[0] lastel[0]->PREV->NEXT lastel[0]->PREV->NEXT[0] lastel[0]->NEXT lastel[0]->NEXT[0]
::GLOBLE_FILENAME.equals(filename)
firstel.[0] == lastel.[0]
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
firstel != null
firstel.[0] == null
lastel != null
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::MOSErrors.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..readfil3():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME filename firstel firstel[0] firstel[0][0] firstel[0]->info firstel[0]->LINE_NUM firstel[0]->PREV firstel[0]->PREV[0] firstel[0]->PREV->info firstel[0]->PREV->LINE_NUM firstel[0]->PREV->PREV firstel[0]->PREV->PREV[0] firstel[0]->PREV->PREV->info firstel[0]->PREV->PREV->LINE_NUM firstel[0]->PREV->PREV->PREV firstel[0]->PREV->PREV->PREV[0] firstel[0]->PREV->PREV->NEXT firstel[0]->PREV->PREV->NEXT[0] firstel[0]->PREV->NEXT firstel[0]->PREV->NEXT[0] firstel[0]->NEXT firstel[0]->NEXT[0] lastel lastel[0] lastel[0][0] lastel[0]->info lastel[0]->LINE_NUM lastel[0]->PREV lastel[0]->PREV[0] lastel[0]->PREV->info lastel[0]->PREV->LINE_NUM lastel[0]->PREV->PREV lastel[0]->PREV->PREV[0] lastel[0]->PREV->PREV->info lastel[0]->PREV->PREV->LINE_NUM lastel[0]->PREV->PREV->PREV lastel[0]->PREV->PREV->PREV[0] lastel[0]->PREV->PREV->NEXT lastel[0]->PREV->PREV->NEXT[0] lastel[0]->PREV->NEXT lastel[0]->PREV->NEXT[0] lastel[0]->NEXT lastel[0]->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(filename) orig(firstel) orig(firstel[0]) orig(firstel[0][0]) orig(firstel[0]->info) orig(firstel[0]->LINE_NUM) orig(firstel[0]->PREV) orig(firstel[0]->PREV[0]) orig(firstel[0]->PREV->info) orig(firstel[0]->PREV->LINE_NUM) orig(firstel[0]->PREV->PREV) orig(firstel[0]->PREV->PREV[0]) orig(firstel[0]->PREV->PREV->info) orig(firstel[0]->PREV->PREV->LINE_NUM) orig(firstel[0]->PREV->PREV->PREV) orig(firstel[0]->PREV->PREV->PREV[0]) orig(firstel[0]->PREV->PREV->NEXT) orig(firstel[0]->PREV->PREV->NEXT[0]) orig(firstel[0]->PREV->NEXT) orig(firstel[0]->PREV->NEXT[0]) orig(firstel[0]->NEXT) orig(firstel[0]->NEXT[0]) orig(lastel) orig(lastel[0]) orig(lastel[0][0]) orig(lastel[0]->info) orig(lastel[0]->LINE_NUM) orig(lastel[0]->PREV) orig(lastel[0]->PREV[0]) orig(lastel[0]->PREV->info) orig(lastel[0]->PREV->LINE_NUM) orig(lastel[0]->PREV->PREV) orig(lastel[0]->PREV->PREV[0]) orig(lastel[0]->PREV->PREV->info) orig(lastel[0]->PREV->PREV->LINE_NUM) orig(lastel[0]->PREV->PREV->PREV) orig(lastel[0]->PREV->PREV->PREV[0]) orig(lastel[0]->PREV->PREV->NEXT) orig(lastel[0]->PREV->PREV->NEXT[0]) orig(lastel[0]->PREV->NEXT) orig(lastel[0]->PREV->NEXT[0]) orig(lastel[0]->NEXT) orig(lastel[0]->NEXT[0])
assignable firstel[0], firstel[0][0], firstel[0]->info, firstel[0]->LINE_NUM, firstel[0]->PREV, firstel[0]->PREV[0], firstel[0]->PREV->info, firstel[0]->PREV->LINE_NUM, firstel[0]->PREV->PREV, firstel[0]->PREV->PREV[0], firstel[0]->PREV->PREV->info, firstel[0]->PREV->PREV->LINE_NUM, firstel[0]->PREV->PREV->PREV, firstel[0]->PREV->PREV->PREV[0], firstel[0]->PREV->PREV->NEXT, firstel[0]->PREV->PREV->NEXT[0], firstel[0]->PREV->NEXT, firstel[0]->PREV->NEXT[0], firstel[0]->NEXT, firstel[0]->NEXT[0], lastel[0], lastel[0][0], lastel[0]->info, lastel[0]->LINE_NUM, lastel[0]->PREV, lastel[0]->PREV[0], lastel[0]->PREV->info, lastel[0]->PREV->LINE_NUM, lastel[0]->PREV->PREV, lastel[0]->PREV->PREV[0], lastel[0]->PREV->PREV->info, lastel[0]->PREV->PREV->LINE_NUM, lastel[0]->PREV->PREV->PREV, lastel[0]->PREV->PREV->PREV[0], lastel[0]->PREV->PREV->NEXT, lastel[0]->PREV->PREV->NEXT[0], lastel[0]->PREV->NEXT, lastel[0]->PREV->NEXT[0], lastel[0]->NEXT, lastel[0]->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::GLOBLE_FILENAME.equals(\old(filename))
firstel.[0].PREV == lastel.[0].NEXT
firstel.[0].PREV == \old(firstel.[0])
firstel.[0].PREV == \old(lastel.[0])
lastel.[0] == lastel.[0].PREV.NEXT
lastel.[0].[0] == lastel.[0].PREV.NEXT.[0]
lastel.[0].PREV == lastel.[0].PREV.PREV.NEXT
lastel.[0].PREV.[0] == lastel.[0].PREV.PREV.NEXT.[0]
lastel.[0].PREV.LINE_NUM == lastel.[0].PREV.PREV.LINE_NUM
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
firstel.[0] != null
firstel.[0].[0] != null
firstel.[0].info == 71
firstel.[0].LINE_NUM == 1
firstel.[0].PREV == null
firstel.[0].NEXT != null
firstel.[0].NEXT.[0] != null
lastel.[0] != null
lastel.[0].[0] != null
lastel.[0].info == 32
lastel.[0].LINE_NUM == 13
lastel.[0].PREV != null
lastel.[0].PREV.[0] != null
lastel.[0].PREV.info == 68
lastel.[0].PREV.LINE_NUM == 12
lastel.[0].PREV.PREV != null
lastel.[0].PREV.PREV.[0] != null
lastel.[0].PREV.PREV.info == 78
lastel.[0].PREV.PREV.PREV != null
lastel.[0].PREV.PREV.PREV.[0] != null
return == 0
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::MOSErrors.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..recgrdef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] pstep_ptr pstep_ptr[0] qstep_ptr qstep_ptr[0] pqstep_unit_ptr pqstep_unit_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 72
p1.LINE_NUM == 3
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 68
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
pstep_ptr != null
daikon.Quant.fuzzy.eq(pstep_ptr.[0], 0.0)
qstep_ptr != null
pqstep_unit_ptr != null
pqstep_unit_ptr.[0] == 0
===========================================================================
..recgrdef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] pstep_ptr pstep_ptr[0] qstep_ptr qstep_ptr[0] pqstep_unit_ptr pqstep_unit_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(pstep_ptr) orig(pstep_ptr[0]) orig(qstep_ptr) orig(qstep_ptr[0]) orig(pqstep_unit_ptr) orig(pqstep_unit_ptr[0])
assignable qstep_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == pp2.[0].info
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == pp2.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].NEXT.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0] == \old(p1)
pp2.[0] == \old(p1.PREV.NEXT)
pp2.[0] == \old(pp2.[0])
pp2.[0] == \old(pp2.[0].PREV.NEXT)
daikon.Quant.fuzzy.eq(pstep_ptr.[0], qstep_ptr.[0])
daikon.Quant.fuzzy.eq(pstep_ptr.[0], \old(pstep_ptr.[0]))
pqstep_unit_ptr.[0] == \old(pqstep_unit_ptr.[0])
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 72
p1.LINE_NUM == 3
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 68
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
daikon.Quant.fuzzy.eq(pstep_ptr.[0], 0.0)
pqstep_unit_ptr.[0] == 0
return == 1
===========================================================================
..recspec():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] pdim_ptr pdim_ptr[0] qdim_ptr qdim_ptr[0] pqdim_unit_ptr pqdim_unit_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 67
p1.LINE_NUM == 5
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 89
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
pdim_ptr != null
qdim_ptr != null
pqdim_unit_ptr != null
===========================================================================
..recspec():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] pdim_ptr pdim_ptr[0] qdim_ptr qdim_ptr[0] pqdim_unit_ptr pqdim_unit_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(pdim_ptr) orig(pdim_ptr[0]) orig(qdim_ptr) orig(qdim_ptr[0]) orig(pqdim_unit_ptr) orig(pqdim_unit_ptr[0])
assignable pdim_ptr[0], qdim_ptr[0], pqdim_unit_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == pp2.[0].info
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == pp2.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].NEXT.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0] == \old(p1)
pp2.[0] == \old(p1.PREV.NEXT)
pp2.[0] == \old(pp2.[0])
pp2.[0] == \old(pp2.[0].PREV.NEXT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 67
p1.LINE_NUM == 5
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 89
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
return == 1
===========================================================================
..remdef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] addrem_ptr addrem_ptr[0] addrem_ptr[0][0] addrem_ptr[0]->ADDREM_TYPE addrem_ptr[0]->BLOCK_TYPE addrem_ptr[0]->NODE_PTR addrem_ptr[0]->NODE_PTR[0] addrem_ptr[0]->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->PCOORD addrem_ptr[0]->NODE_PTR->QCOORD addrem_ptr[0]->NODE_PTR->THEA addrem_ptr[0]->NODE_PTR->PHEA addrem_ptr[0]->NODE_PTR->PSEA addrem_ptr[0]->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT addrem_ptr[0]->NODE_PTR->NEXT[0] addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->NEXT->PCOORD addrem_ptr[0]->NODE_PTR->NEXT->QCOORD addrem_ptr[0]->NODE_PTR->NEXT->THEA addrem_ptr[0]->NODE_PTR->NEXT->PHEA addrem_ptr[0]->NODE_PTR->NEXT->PSEA addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT->NEXT addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0] addrem_ptr[0]->NEXT addrem_ptr[0]->NEXT[0] addrem_ptr[0]->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NEXT->NODE_PTR->PCOORD addrem_ptr[0]->NEXT->NODE_PTR->QCOORD addrem_ptr[0]->NEXT->NODE_PTR->THEA addrem_ptr[0]->NEXT->NODE_PTR->PHEA addrem_ptr[0]->NEXT->NODE_PTR->PSEA addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NEXT->NODE_PTR->NEXT addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0] addrem_ptr[0]->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT[0] addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT->NEXT[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 9
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 49
p1.PREV.PREV.LINE_NUM == 7
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
addrem_ptr != null
addrem_ptr.[0] == null
===========================================================================
..remdef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] addrem_ptr addrem_ptr[0] addrem_ptr[0][0] addrem_ptr[0]->ADDREM_TYPE addrem_ptr[0]->BLOCK_TYPE addrem_ptr[0]->NODE_PTR addrem_ptr[0]->NODE_PTR[0] addrem_ptr[0]->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->PCOORD addrem_ptr[0]->NODE_PTR->QCOORD addrem_ptr[0]->NODE_PTR->THEA addrem_ptr[0]->NODE_PTR->PHEA addrem_ptr[0]->NODE_PTR->PSEA addrem_ptr[0]->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT addrem_ptr[0]->NODE_PTR->NEXT[0] addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT addrem_ptr[0]->NODE_PTR->NEXT->PCOORD addrem_ptr[0]->NODE_PTR->NEXT->QCOORD addrem_ptr[0]->NODE_PTR->NEXT->THEA addrem_ptr[0]->NODE_PTR->NEXT->PHEA addrem_ptr[0]->NODE_PTR->NEXT->PSEA addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT addrem_ptr[0]->NODE_PTR->NEXT->NEXT addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0] addrem_ptr[0]->NEXT addrem_ptr[0]->NEXT[0] addrem_ptr[0]->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT addrem_ptr[0]->NEXT->NODE_PTR->PCOORD addrem_ptr[0]->NEXT->NODE_PTR->QCOORD addrem_ptr[0]->NEXT->NODE_PTR->THEA addrem_ptr[0]->NEXT->NODE_PTR->PHEA addrem_ptr[0]->NEXT->NODE_PTR->PSEA addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT addrem_ptr[0]->NEXT->NODE_PTR->NEXT addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0] addrem_ptr[0]->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT[0] addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE addrem_ptr[0]->NEXT->NEXT->NODE_PTR addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0] addrem_ptr[0]->NEXT->NEXT->NEXT addrem_ptr[0]->NEXT->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(addrem_ptr) orig(addrem_ptr[0]) orig(addrem_ptr[0][0]) orig(addrem_ptr[0]->ADDREM_TYPE) orig(addrem_ptr[0]->BLOCK_TYPE) orig(addrem_ptr[0]->NODE_PTR) orig(addrem_ptr[0]->NODE_PTR[0]) orig(addrem_ptr[0]->NODE_PTR->OMIT_ORIENT) orig(addrem_ptr[0]->NODE_PTR->PCOORD) orig(addrem_ptr[0]->NODE_PTR->QCOORD) orig(addrem_ptr[0]->NODE_PTR->THEA) orig(addrem_ptr[0]->NODE_PTR->PHEA) orig(addrem_ptr[0]->NODE_PTR->PSEA) orig(addrem_ptr[0]->NODE_PTR->ANGLE_UNIT) orig(addrem_ptr[0]->NODE_PTR->NEXT) orig(addrem_ptr[0]->NODE_PTR->NEXT[0]) orig(addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT) orig(addrem_ptr[0]->NODE_PTR->NEXT->PCOORD) orig(addrem_ptr[0]->NODE_PTR->NEXT->QCOORD) orig(addrem_ptr[0]->NODE_PTR->NEXT->THEA) orig(addrem_ptr[0]->NODE_PTR->NEXT->PHEA) orig(addrem_ptr[0]->NODE_PTR->NEXT->PSEA) orig(addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT) orig(addrem_ptr[0]->NODE_PTR->NEXT->NEXT) orig(addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0]) orig(addrem_ptr[0]->NEXT) orig(addrem_ptr[0]->NEXT[0]) orig(addrem_ptr[0]->NEXT->ADDREM_TYPE) orig(addrem_ptr[0]->NEXT->BLOCK_TYPE) orig(addrem_ptr[0]->NEXT->NODE_PTR) orig(addrem_ptr[0]->NEXT->NODE_PTR[0]) orig(addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT) orig(addrem_ptr[0]->NEXT->NODE_PTR->PCOORD) orig(addrem_ptr[0]->NEXT->NODE_PTR->QCOORD) orig(addrem_ptr[0]->NEXT->NODE_PTR->THEA) orig(addrem_ptr[0]->NEXT->NODE_PTR->PHEA) orig(addrem_ptr[0]->NEXT->NODE_PTR->PSEA) orig(addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT) orig(addrem_ptr[0]->NEXT->NODE_PTR->NEXT) orig(addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0]) orig(addrem_ptr[0]->NEXT->NEXT) orig(addrem_ptr[0]->NEXT->NEXT[0]) orig(addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE) orig(addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE) orig(addrem_ptr[0]->NEXT->NEXT->NODE_PTR) orig(addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0]) orig(addrem_ptr[0]->NEXT->NEXT->NEXT) orig(addrem_ptr[0]->NEXT->NEXT->NEXT[0])
assignable addrem_ptr[0][0], addrem_ptr[0]->ADDREM_TYPE, addrem_ptr[0]->BLOCK_TYPE, addrem_ptr[0]->NODE_PTR, addrem_ptr[0]->NODE_PTR[0], addrem_ptr[0]->NODE_PTR->OMIT_ORIENT, addrem_ptr[0]->NODE_PTR->PCOORD, addrem_ptr[0]->NODE_PTR->QCOORD, addrem_ptr[0]->NODE_PTR->THEA, addrem_ptr[0]->NODE_PTR->PHEA, addrem_ptr[0]->NODE_PTR->PSEA, addrem_ptr[0]->NODE_PTR->ANGLE_UNIT, addrem_ptr[0]->NODE_PTR->NEXT, addrem_ptr[0]->NODE_PTR->NEXT[0], addrem_ptr[0]->NODE_PTR->NEXT->OMIT_ORIENT, addrem_ptr[0]->NODE_PTR->NEXT->PCOORD, addrem_ptr[0]->NODE_PTR->NEXT->QCOORD, addrem_ptr[0]->NODE_PTR->NEXT->THEA, addrem_ptr[0]->NODE_PTR->NEXT->PHEA, addrem_ptr[0]->NODE_PTR->NEXT->PSEA, addrem_ptr[0]->NODE_PTR->NEXT->ANGLE_UNIT, addrem_ptr[0]->NODE_PTR->NEXT->NEXT, addrem_ptr[0]->NODE_PTR->NEXT->NEXT[0], addrem_ptr[0]->NEXT, addrem_ptr[0]->NEXT[0], addrem_ptr[0]->NEXT->ADDREM_TYPE, addrem_ptr[0]->NEXT->BLOCK_TYPE, addrem_ptr[0]->NEXT->NODE_PTR, addrem_ptr[0]->NEXT->NODE_PTR[0], addrem_ptr[0]->NEXT->NODE_PTR->OMIT_ORIENT, addrem_ptr[0]->NEXT->NODE_PTR->PCOORD, addrem_ptr[0]->NEXT->NODE_PTR->QCOORD, addrem_ptr[0]->NEXT->NODE_PTR->THEA, addrem_ptr[0]->NEXT->NODE_PTR->PHEA, addrem_ptr[0]->NEXT->NODE_PTR->PSEA, addrem_ptr[0]->NEXT->NODE_PTR->ANGLE_UNIT, addrem_ptr[0]->NEXT->NODE_PTR->NEXT, addrem_ptr[0]->NEXT->NODE_PTR->NEXT[0], addrem_ptr[0]->NEXT->NEXT, addrem_ptr[0]->NEXT->NEXT[0], addrem_ptr[0]->NEXT->NEXT->ADDREM_TYPE, addrem_ptr[0]->NEXT->NEXT->BLOCK_TYPE, addrem_ptr[0]->NEXT->NEXT->NODE_PTR, addrem_ptr[0]->NEXT->NEXT->NODE_PTR[0], addrem_ptr[0]->NEXT->NEXT->NEXT, addrem_ptr[0]->NEXT->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == pp2.[0].info
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == pp2.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].NEXT.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0] == \old(p1)
pp2.[0] == \old(p1.PREV.NEXT)
pp2.[0] == \old(pp2.[0])
pp2.[0] == \old(pp2.[0].PREV.NEXT)
addrem_ptr.[0] == \old(addrem_ptr.[0])
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 9
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 49
p1.PREV.PREV.LINE_NUM == 7
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
addrem_ptr.[0] == null
return == 1
===========================================================================
..secoramp():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] centre_ptr centre_ptr[0] p1_et_ptr p1_et_ptr[0] p2_et_ptr p2_et_ptr[0] q1_et_ptr q1_et_ptr[0] q2_et_ptr q2_et_ptr[0] amp_unit_ptr amp_unit_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 83
p1.LINE_NUM == 10
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 69
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
centre_ptr != null
p1_et_ptr != null
p2_et_ptr != null
q1_et_ptr != null
q2_et_ptr != null
amp_unit_ptr != null
===========================================================================
..secoramp():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] centre_ptr centre_ptr[0] p1_et_ptr p1_et_ptr[0] p2_et_ptr p2_et_ptr[0] q1_et_ptr q1_et_ptr[0] q2_et_ptr q2_et_ptr[0] amp_unit_ptr amp_unit_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(centre_ptr) orig(centre_ptr[0]) orig(p1_et_ptr) orig(p1_et_ptr[0]) orig(p2_et_ptr) orig(p2_et_ptr[0]) orig(q1_et_ptr) orig(q1_et_ptr[0]) orig(q2_et_ptr) orig(q2_et_ptr[0]) orig(amp_unit_ptr) orig(amp_unit_ptr[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], centre_ptr[0], p1_et_ptr[0], p2_et_ptr[0], q1_et_ptr[0], q2_et_ptr[0], amp_unit_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
daikon.Quant.fuzzy.eq(p1_et_ptr.[0], q2_et_ptr.[0])
amp_unit_ptr.[0] == return
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 83
p1.LINE_NUM == 10
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 69
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 80
pp2.[0].LINE_NUM == 11
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 53
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
daikon.Quant.fuzzy.eq(centre_ptr.[0], 29.0)
daikon.Quant.fuzzy.eq(p1_et_ptr.[0], 25.0)
daikon.Quant.fuzzy.eq(p2_et_ptr.[0], 22.0)
daikon.Quant.fuzzy.eq(q1_et_ptr.[0], 34.0)
return == 0
===========================================================================
..secorder():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME a b c d e x y
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
daikon.Quant.fuzzy.eq(a, -7.436452136289888E-4)
daikon.Quant.fuzzy.eq(b, 2.253470343974471E-5)
daikon.Quant.fuzzy.eq(c, 1.1337209302022655)
daikon.Quant.fuzzy.eq(d, 0.0234968132791182)
daikon.Quant.fuzzy.eq(e, -406.9999999769088)
daikon.Quant.fuzzy.eq(y, 0.0) || daikon.Quant.fuzzy.eq(y, 74.47818473134136) || daikon.Quant.fuzzy.eq(y, 148.95636946268272)
::UserNames.compareTo(::Keywords) > 0
::UserNames.compareTo(::ErrorMessages) > 0
::UserNames.compareTo(::MOSErrors) > 0
::UserNames.compareTo(::GLOBLE_FILENAME) > 0
::Keywords.compareTo(::ErrorMessages) > 0
::Keywords.compareTo(::MOSErrors) > 0
::Keywords.compareTo(::GLOBLE_FILENAME) < 0
::ErrorMessages.compareTo(::MOSErrors) > 0
::ErrorMessages.compareTo(::GLOBLE_FILENAME) < 0
::MOSErrors.compareTo(::GLOBLE_FILENAME) < 0
daikon.Quant.fuzzy.lt(a, x)
daikon.Quant.fuzzy.lt(a, y)
daikon.Quant.fuzzy.lt(b, x)
daikon.Quant.fuzzy.ne(b, y)
daikon.Quant.fuzzy.lt(c, x)
daikon.Quant.fuzzy.ne(c, y)
daikon.Quant.fuzzy.lt(d, x)
daikon.Quant.fuzzy.ne(d, y)
daikon.Quant.fuzzy.lt(e, x)
daikon.Quant.fuzzy.lt(e, y)
daikon.Quant.fuzzy.gt(x, y)
===========================================================================
..secorder():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME a b c d e x y return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(a) orig(b) orig(c) orig(d) orig(e) orig(x) orig(y)
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
::UserNames.compareTo(::Keywords) > 0
::UserNames.compareTo(::ErrorMessages) > 0
::UserNames.compareTo(::MOSErrors) > 0
::UserNames.compareTo(::GLOBLE_FILENAME) > 0
::Keywords.compareTo(::ErrorMessages) > 0
::Keywords.compareTo(::MOSErrors) > 0
::Keywords.compareTo(::GLOBLE_FILENAME) < 0
::ErrorMessages.compareTo(::MOSErrors) > 0
::ErrorMessages.compareTo(::GLOBLE_FILENAME) < 0
::MOSErrors.compareTo(::GLOBLE_FILENAME) < 0
daikon.Quant.fuzzy.gt(return, \old(a))
daikon.Quant.fuzzy.gt(return, \old(b))
daikon.Quant.fuzzy.gt(return, \old(c))
daikon.Quant.fuzzy.gt(return, \old(d))
daikon.Quant.fuzzy.gt(return, \old(e))
daikon.Quant.fuzzy.lt(return, \old(x))
daikon.Quant.fuzzy.ne(return, \old(y))
===========================================================================
..sgramp2n():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME grampexc_ptr grampexc_ptr[0] grampexc_ptr->TYPE grampexc_ptr->UNIF_VAL grampexc_ptr->CENTRE grampexc_ptr->P1_ET grampexc_ptr->P2_ET grampexc_ptr->Q1_ET grampexc_ptr->Q2_ET grampexc_ptr->AMP_UNIT grampexc_ptr->PQEXP_PTR grampexc_ptr->PQEXP_PTR[0] grampexc_ptr->PQEXP_PTR->dummy geomnode_ptr geomnode_ptr[0] geomnode_ptr->LOC_P geomnode_ptr->LOC_Q geomnode_ptr->XA geomnode_ptr->YA geomnode_ptr->ZA geomnode_ptr->THEA geomnode_ptr->PHEA geomnode_ptr->PSEA geomnode_ptr->GEOMPORT_PTR geomnode_ptr->GEOMPORT_PTR[0] geomnode_ptr->GEOMPORT_PTR->AMP geomnode_ptr->GEOMPORT_PTR->PSH geomnode_ptr->GEOMPORT_PTR->PSC geomnode_ptr->GEOMPORT_PTR->PPA geomnode_ptr->GEOMPORT_PTR->PHEPOL geomnode_ptr->GEOMPORT_PTR->NEXT geomnode_ptr->GEOMPORT_PTR->NEXT[0] geomnode_ptr->GEOMPORT_PTR->NEXT->AMP geomnode_ptr->GEOMPORT_PTR->NEXT->PSH geomnode_ptr->GEOMPORT_PTR->NEXT->PSC geomnode_ptr->GEOMPORT_PTR->NEXT->PPA geomnode_ptr->GEOMPORT_PTR->NEXT->PHEPOL geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT[0] geomnode_ptr->NEXT geomnode_ptr->NEXT[0] geomnode_ptr->NEXT->LOC_P geomnode_ptr->NEXT->LOC_Q geomnode_ptr->NEXT->XA geomnode_ptr->NEXT->YA geomnode_ptr->NEXT->ZA geomnode_ptr->NEXT->THEA geomnode_ptr->NEXT->PHEA geomnode_ptr->NEXT->PSEA geomnode_ptr->NEXT->GEOMPORT_PTR geomnode_ptr->NEXT->GEOMPORT_PTR[0] geomnode_ptr->NEXT->GEOMPORT_PTR->AMP geomnode_ptr->NEXT->GEOMPORT_PTR->PSH geomnode_ptr->NEXT->GEOMPORT_PTR->PSC geomnode_ptr->NEXT->GEOMPORT_PTR->PPA geomnode_ptr->NEXT->GEOMPORT_PTR->PHEPOL geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT[0] geomnode_ptr->NEXT->NEXT geomnode_ptr->NEXT->NEXT[0] geomnode_ptr->NEXT->NEXT->LOC_P geomnode_ptr->NEXT->NEXT->LOC_Q geomnode_ptr->NEXT->NEXT->XA geomnode_ptr->NEXT->NEXT->YA geomnode_ptr->NEXT->NEXT->ZA geomnode_ptr->NEXT->NEXT->THEA geomnode_ptr->NEXT->NEXT->PHEA geomnode_ptr->NEXT->NEXT->PSEA geomnode_ptr->NEXT->NEXT->GEOMPORT_PTR geomnode_ptr->NEXT->NEXT->GEOMPORT_PTR[0] geomnode_ptr->NEXT->NEXT->NEXT geomnode_ptr->NEXT->NEXT->NEXT[0] geomnode_ptr->NEXT->NEXT->SUBGROUP_PTR geomnode_ptr->NEXT->NEXT->SUBGROUP_PTR[0] geomnode_ptr->NEXT->NEXT->SHAPE geomnode_ptr->NEXT->NEXT->PSIZE geomnode_ptr->NEXT->NEXT->QSIZE geomnode_ptr->NEXT->SUBGROUP_PTR geomnode_ptr->NEXT->SUBGROUP_PTR[0] geomnode_ptr->NEXT->SHAPE geomnode_ptr->NEXT->PSIZE geomnode_ptr->NEXT->QSIZE geomnode_ptr->SUBGROUP_PTR geomnode_ptr->SUBGROUP_PTR[0] geomnode_ptr->SHAPE geomnode_ptr->PSIZE geomnode_ptr->QSIZE port_ptr port_ptr[0] port_ptr->PORTNUM port_ptr->AMP port_ptr->AMP_UNIT port_ptr->PSC port_ptr->PSC_UNIT port_ptr->PSH port_ptr->PSH_UNIT port_ptr->PPA port_ptr->PPA_UNIT port_ptr->PHEPOL port_ptr->PHEPOL_UNIT port_ptr->OMIT_POL port_ptr->NEXT port_ptr->NEXT[0] port_ptr->NEXT->PORTNUM port_ptr->NEXT->AMP port_ptr->NEXT->AMP_UNIT port_ptr->NEXT->PSC port_ptr->NEXT->PSC_UNIT port_ptr->NEXT->PSH port_ptr->NEXT->PSH_UNIT port_ptr->NEXT->PPA port_ptr->NEXT->PPA_UNIT port_ptr->NEXT->PHEPOL port_ptr->NEXT->PHEPOL_UNIT port_ptr->NEXT->OMIT_POL port_ptr->NEXT->NEXT port_ptr->NEXT->NEXT[0] port_ptr->NEXT->NEXT->PORTNUM port_ptr->NEXT->NEXT->AMP port_ptr->NEXT->NEXT->AMP_UNIT port_ptr->NEXT->NEXT->PSC port_ptr->NEXT->NEXT->PSC_UNIT port_ptr->NEXT->NEXT->PSH port_ptr->NEXT->NEXT->PSH_UNIT port_ptr->NEXT->NEXT->PPA port_ptr->NEXT->NEXT->PPA_UNIT port_ptr->NEXT->NEXT->PHEPOL port_ptr->NEXT->NEXT->PHEPOL_UNIT port_ptr->NEXT->NEXT->OMIT_POL port_ptr->NEXT->NEXT->NEXT port_ptr->NEXT->NEXT->NEXT[0] group_shape
grampexc_ptr.TYPE == geomnode_ptr.NEXT.NEXT.LOC_Q
grampexc_ptr.TYPE == port_ptr.PORTNUM
grampexc_ptr.TYPE == port_ptr.OMIT_POL
grampexc_ptr.AMP_UNIT == port_ptr.AMP_UNIT
grampexc_ptr.AMP_UNIT == port_ptr.PSC_UNIT
grampexc_ptr.AMP_UNIT == port_ptr.PSH_UNIT
grampexc_ptr.AMP_UNIT == port_ptr.PPA_UNIT
grampexc_ptr.AMP_UNIT == port_ptr.PHEPOL_UNIT
geomnode_ptr.LOC_Q == group_shape
geomnode_ptr.NEXT.LOC_Q == group_shape
geomnode_ptr.NEXT.NEXT.SUBGROUP_PTR == geomnode_ptr.SUBGROUP_PTR
geomnode_ptr.NEXT.NEXT.SHAPE == group_shape
geomnode_ptr.NEXT.SUBGROUP_PTR == geomnode_ptr.SUBGROUP_PTR
geomnode_ptr.NEXT.SHAPE == group_shape
geomnode_ptr.SHAPE == group_shape
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
grampexc_ptr != null
grampexc_ptr.[0] != null
grampexc_ptr.TYPE == 1
daikon.Quant.fuzzy.eq(grampexc_ptr.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(grampexc_ptr.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(grampexc_ptr.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(grampexc_ptr.Q1_ET, 34.0)
grampexc_ptr.AMP_UNIT == 0
grampexc_ptr.PQEXP_PTR == null
geomnode_ptr != null
geomnode_ptr.[0] != null
geomnode_ptr.LOC_P == 8
daikon.Quant.fuzzy.eq(geomnode_ptr.XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(geomnode_ptr.YA, 148.95636946268272)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, 0.0)
geomnode_ptr.NEXT != null
geomnode_ptr.NEXT.[0] != null
geomnode_ptr.NEXT.LOC_P == 9
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.XA, 859.9999999796324)
geomnode_ptr.NEXT.NEXT != null
geomnode_ptr.NEXT.NEXT.[0] != null
geomnode_ptr.NEXT.NEXT.LOC_P == 10
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.NEXT.XA, 902.9999999898162)
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.NEXT.YA, 74.47818473134136)
geomnode_ptr.NEXT.NEXT.NEXT != null
geomnode_ptr.NEXT.NEXT.NEXT.[0] != null
geomnode_ptr.SUBGROUP_PTR == null
daikon.Quant.fuzzy.eq(geomnode_ptr.PSIZE, 86.0)
port_ptr != null
port_ptr.[0] != null
daikon.Quant.fuzzy.eq(port_ptr.AMP, 1.0)
daikon.Quant.fuzzy.eq(port_ptr.PHEPOL, 90.0)
port_ptr.NEXT == null
group_shape == 2
===========================================================================
..sgramp2n():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME grampexc_ptr grampexc_ptr[0] grampexc_ptr->TYPE grampexc_ptr->UNIF_VAL grampexc_ptr->CENTRE grampexc_ptr->P1_ET grampexc_ptr->P2_ET grampexc_ptr->Q1_ET grampexc_ptr->Q2_ET grampexc_ptr->AMP_UNIT grampexc_ptr->PQEXP_PTR grampexc_ptr->PQEXP_PTR[0] grampexc_ptr->PQEXP_PTR->dummy geomnode_ptr geomnode_ptr[0] geomnode_ptr->LOC_P geomnode_ptr->LOC_Q geomnode_ptr->XA geomnode_ptr->YA geomnode_ptr->ZA geomnode_ptr->THEA geomnode_ptr->PHEA geomnode_ptr->PSEA geomnode_ptr->GEOMPORT_PTR geomnode_ptr->GEOMPORT_PTR[0] geomnode_ptr->GEOMPORT_PTR->AMP geomnode_ptr->GEOMPORT_PTR->PSH geomnode_ptr->GEOMPORT_PTR->PSC geomnode_ptr->GEOMPORT_PTR->PPA geomnode_ptr->GEOMPORT_PTR->PHEPOL geomnode_ptr->GEOMPORT_PTR->NEXT geomnode_ptr->GEOMPORT_PTR->NEXT[0] geomnode_ptr->GEOMPORT_PTR->NEXT->AMP geomnode_ptr->GEOMPORT_PTR->NEXT->PSH geomnode_ptr->GEOMPORT_PTR->NEXT->PSC geomnode_ptr->GEOMPORT_PTR->NEXT->PPA geomnode_ptr->GEOMPORT_PTR->NEXT->PHEPOL geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT[0] geomnode_ptr->NEXT geomnode_ptr->NEXT[0] geomnode_ptr->NEXT->LOC_P geomnode_ptr->NEXT->LOC_Q geomnode_ptr->NEXT->XA geomnode_ptr->NEXT->YA geomnode_ptr->NEXT->ZA geomnode_ptr->NEXT->THEA geomnode_ptr->NEXT->PHEA geomnode_ptr->NEXT->PSEA geomnode_ptr->NEXT->GEOMPORT_PTR geomnode_ptr->NEXT->GEOMPORT_PTR[0] geomnode_ptr->NEXT->GEOMPORT_PTR->AMP geomnode_ptr->NEXT->GEOMPORT_PTR->PSH geomnode_ptr->NEXT->GEOMPORT_PTR->PSC geomnode_ptr->NEXT->GEOMPORT_PTR->PPA geomnode_ptr->NEXT->GEOMPORT_PTR->PHEPOL geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT[0] geomnode_ptr->NEXT->NEXT geomnode_ptr->NEXT->NEXT[0] geomnode_ptr->NEXT->NEXT->LOC_P geomnode_ptr->NEXT->NEXT->LOC_Q geomnode_ptr->NEXT->NEXT->XA geomnode_ptr->NEXT->NEXT->YA geomnode_ptr->NEXT->NEXT->ZA geomnode_ptr->NEXT->NEXT->THEA geomnode_ptr->NEXT->NEXT->PHEA geomnode_ptr->NEXT->NEXT->PSEA geomnode_ptr->NEXT->NEXT->GEOMPORT_PTR geomnode_ptr->NEXT->NEXT->GEOMPORT_PTR[0] geomnode_ptr->NEXT->NEXT->NEXT geomnode_ptr->NEXT->NEXT->NEXT[0] geomnode_ptr->NEXT->NEXT->SUBGROUP_PTR geomnode_ptr->NEXT->NEXT->SUBGROUP_PTR[0] geomnode_ptr->NEXT->NEXT->SHAPE geomnode_ptr->NEXT->NEXT->PSIZE geomnode_ptr->NEXT->NEXT->QSIZE geomnode_ptr->NEXT->SUBGROUP_PTR geomnode_ptr->NEXT->SUBGROUP_PTR[0] geomnode_ptr->NEXT->SHAPE geomnode_ptr->NEXT->PSIZE geomnode_ptr->NEXT->QSIZE geomnode_ptr->SUBGROUP_PTR geomnode_ptr->SUBGROUP_PTR[0] geomnode_ptr->SHAPE geomnode_ptr->PSIZE geomnode_ptr->QSIZE port_ptr port_ptr[0] port_ptr->PORTNUM port_ptr->AMP port_ptr->AMP_UNIT port_ptr->PSC port_ptr->PSC_UNIT port_ptr->PSH port_ptr->PSH_UNIT port_ptr->PPA port_ptr->PPA_UNIT port_ptr->PHEPOL port_ptr->PHEPOL_UNIT port_ptr->OMIT_POL port_ptr->NEXT port_ptr->NEXT[0] port_ptr->NEXT->PORTNUM port_ptr->NEXT->AMP port_ptr->NEXT->AMP_UNIT port_ptr->NEXT->PSC port_ptr->NEXT->PSC_UNIT port_ptr->NEXT->PSH port_ptr->NEXT->PSH_UNIT port_ptr->NEXT->PPA port_ptr->NEXT->PPA_UNIT port_ptr->NEXT->PHEPOL port_ptr->NEXT->PHEPOL_UNIT port_ptr->NEXT->OMIT_POL port_ptr->NEXT->NEXT port_ptr->NEXT->NEXT[0] port_ptr->NEXT->NEXT->PORTNUM port_ptr->NEXT->NEXT->AMP port_ptr->NEXT->NEXT->AMP_UNIT port_ptr->NEXT->NEXT->PSC port_ptr->NEXT->NEXT->PSC_UNIT port_ptr->NEXT->NEXT->PSH port_ptr->NEXT->NEXT->PSH_UNIT port_ptr->NEXT->NEXT->PPA port_ptr->NEXT->NEXT->PPA_UNIT port_ptr->NEXT->NEXT->PHEPOL port_ptr->NEXT->NEXT->PHEPOL_UNIT port_ptr->NEXT->NEXT->OMIT_POL port_ptr->NEXT->NEXT->NEXT port_ptr->NEXT->NEXT->NEXT[0] group_shape return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(grampexc_ptr) orig(grampexc_ptr[0]) orig(grampexc_ptr->TYPE) orig(grampexc_ptr->UNIF_VAL) orig(grampexc_ptr->CENTRE) orig(grampexc_ptr->P1_ET) orig(grampexc_ptr->P2_ET) orig(grampexc_ptr->Q1_ET) orig(grampexc_ptr->Q2_ET) orig(grampexc_ptr->AMP_UNIT) orig(grampexc_ptr->PQEXP_PTR) orig(grampexc_ptr->PQEXP_PTR[0]) orig(grampexc_ptr->PQEXP_PTR->dummy) orig(geomnode_ptr) orig(geomnode_ptr[0]) orig(geomnode_ptr->LOC_P) orig(geomnode_ptr->LOC_Q) orig(geomnode_ptr->XA) orig(geomnode_ptr->YA) orig(geomnode_ptr->ZA) orig(geomnode_ptr->THEA) orig(geomnode_ptr->PHEA) orig(geomnode_ptr->PSEA) orig(geomnode_ptr->GEOMPORT_PTR) orig(geomnode_ptr->GEOMPORT_PTR[0]) orig(geomnode_ptr->GEOMPORT_PTR->AMP) orig(geomnode_ptr->GEOMPORT_PTR->PSH) orig(geomnode_ptr->GEOMPORT_PTR->PSC) orig(geomnode_ptr->GEOMPORT_PTR->PPA) orig(geomnode_ptr->GEOMPORT_PTR->PHEPOL) orig(geomnode_ptr->GEOMPORT_PTR->NEXT) orig(geomnode_ptr->GEOMPORT_PTR->NEXT[0]) orig(geomnode_ptr->GEOMPORT_PTR->NEXT->AMP) orig(geomnode_ptr->GEOMPORT_PTR->NEXT->PSH) orig(geomnode_ptr->GEOMPORT_PTR->NEXT->PSC) orig(geomnode_ptr->GEOMPORT_PTR->NEXT->PPA) orig(geomnode_ptr->GEOMPORT_PTR->NEXT->PHEPOL) orig(geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT) orig(geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT[0]) orig(geomnode_ptr->NEXT) orig(geomnode_ptr->NEXT[0]) orig(geomnode_ptr->NEXT->LOC_P) orig(geomnode_ptr->NEXT->LOC_Q) orig(geomnode_ptr->NEXT->XA) orig(geomnode_ptr->NEXT->YA) orig(geomnode_ptr->NEXT->ZA) orig(geomnode_ptr->NEXT->THEA) orig(geomnode_ptr->NEXT->PHEA) orig(geomnode_ptr->NEXT->PSEA) orig(geomnode_ptr->NEXT->GEOMPORT_PTR) orig(geomnode_ptr->NEXT->GEOMPORT_PTR[0]) orig(geomnode_ptr->NEXT->GEOMPORT_PTR->AMP) orig(geomnode_ptr->NEXT->GEOMPORT_PTR->PSH) orig(geomnode_ptr->NEXT->GEOMPORT_PTR->PSC) orig(geomnode_ptr->NEXT->GEOMPORT_PTR->PPA) orig(geomnode_ptr->NEXT->GEOMPORT_PTR->PHEPOL) orig(geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT) orig(geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT[0]) orig(geomnode_ptr->NEXT->NEXT) orig(geomnode_ptr->NEXT->NEXT[0]) orig(geomnode_ptr->NEXT->NEXT->LOC_P) orig(geomnode_ptr->NEXT->NEXT->LOC_Q) orig(geomnode_ptr->NEXT->NEXT->XA) orig(geomnode_ptr->NEXT->NEXT->YA) orig(geomnode_ptr->NEXT->NEXT->ZA) orig(geomnode_ptr->NEXT->NEXT->THEA) orig(geomnode_ptr->NEXT->NEXT->PHEA) orig(geomnode_ptr->NEXT->NEXT->PSEA) orig(geomnode_ptr->NEXT->NEXT->GEOMPORT_PTR) orig(geomnode_ptr->NEXT->NEXT->GEOMPORT_PTR[0]) orig(geomnode_ptr->NEXT->NEXT->NEXT) orig(geomnode_ptr->NEXT->NEXT->NEXT[0]) orig(geomnode_ptr->NEXT->NEXT->SUBGROUP_PTR) orig(geomnode_ptr->NEXT->NEXT->SUBGROUP_PTR[0]) orig(geomnode_ptr->NEXT->NEXT->SHAPE) orig(geomnode_ptr->NEXT->NEXT->PSIZE) orig(geomnode_ptr->NEXT->NEXT->QSIZE) orig(geomnode_ptr->NEXT->SUBGROUP_PTR) orig(geomnode_ptr->NEXT->SUBGROUP_PTR[0]) orig(geomnode_ptr->NEXT->SHAPE) orig(geomnode_ptr->NEXT->PSIZE) orig(geomnode_ptr->NEXT->QSIZE) orig(geomnode_ptr->SUBGROUP_PTR) orig(geomnode_ptr->SUBGROUP_PTR[0]) orig(geomnode_ptr->SHAPE) orig(geomnode_ptr->PSIZE) orig(geomnode_ptr->QSIZE) orig(port_ptr) orig(port_ptr[0]) orig(port_ptr->PORTNUM) orig(port_ptr->AMP) orig(port_ptr->AMP_UNIT) orig(port_ptr->PSC) orig(port_ptr->PSC_UNIT) orig(port_ptr->PSH) orig(port_ptr->PSH_UNIT) orig(port_ptr->PPA) orig(port_ptr->PPA_UNIT) orig(port_ptr->PHEPOL) orig(port_ptr->PHEPOL_UNIT) orig(port_ptr->OMIT_POL) orig(port_ptr->NEXT) orig(port_ptr->NEXT[0]) orig(port_ptr->NEXT->PORTNUM) orig(port_ptr->NEXT->AMP) orig(port_ptr->NEXT->AMP_UNIT) orig(port_ptr->NEXT->PSC) orig(port_ptr->NEXT->PSC_UNIT) orig(port_ptr->NEXT->PSH) orig(port_ptr->NEXT->PSH_UNIT) orig(port_ptr->NEXT->PPA) orig(port_ptr->NEXT->PPA_UNIT) orig(port_ptr->NEXT->PHEPOL) orig(port_ptr->NEXT->PHEPOL_UNIT) orig(port_ptr->NEXT->OMIT_POL) orig(port_ptr->NEXT->NEXT) orig(port_ptr->NEXT->NEXT[0]) orig(port_ptr->NEXT->NEXT->PORTNUM) orig(port_ptr->NEXT->NEXT->AMP) orig(port_ptr->NEXT->NEXT->AMP_UNIT) orig(port_ptr->NEXT->NEXT->PSC) orig(port_ptr->NEXT->NEXT->PSC_UNIT) orig(port_ptr->NEXT->NEXT->PSH) orig(port_ptr->NEXT->NEXT->PSH_UNIT) orig(port_ptr->NEXT->NEXT->PPA) orig(port_ptr->NEXT->NEXT->PPA_UNIT) orig(port_ptr->NEXT->NEXT->PHEPOL) orig(port_ptr->NEXT->NEXT->PHEPOL_UNIT) orig(port_ptr->NEXT->NEXT->OMIT_POL) orig(port_ptr->NEXT->NEXT->NEXT) orig(port_ptr->NEXT->NEXT->NEXT[0]) orig(group_shape)
assignable grampexc_ptr->UNIF_VAL, grampexc_ptr->PQEXP_PTR[0], grampexc_ptr->PQEXP_PTR->dummy, geomnode_ptr->GEOMPORT_PTR, geomnode_ptr->GEOMPORT_PTR[0], geomnode_ptr->GEOMPORT_PTR->AMP, geomnode_ptr->GEOMPORT_PTR->PSH, geomnode_ptr->GEOMPORT_PTR->PSC, geomnode_ptr->GEOMPORT_PTR->PPA, geomnode_ptr->GEOMPORT_PTR->PHEPOL, geomnode_ptr->GEOMPORT_PTR->NEXT, geomnode_ptr->GEOMPORT_PTR->NEXT[0], geomnode_ptr->GEOMPORT_PTR->NEXT->AMP, geomnode_ptr->GEOMPORT_PTR->NEXT->PSH, geomnode_ptr->GEOMPORT_PTR->NEXT->PSC, geomnode_ptr->GEOMPORT_PTR->NEXT->PPA, geomnode_ptr->GEOMPORT_PTR->NEXT->PHEPOL, geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT, geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT[0], geomnode_ptr->NEXT->GEOMPORT_PTR, geomnode_ptr->NEXT->GEOMPORT_PTR[0], geomnode_ptr->NEXT->GEOMPORT_PTR->AMP, geomnode_ptr->NEXT->GEOMPORT_PTR->PSH, geomnode_ptr->NEXT->GEOMPORT_PTR->PSC, geomnode_ptr->NEXT->GEOMPORT_PTR->PPA, geomnode_ptr->NEXT->GEOMPORT_PTR->PHEPOL, geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT, geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT[0], geomnode_ptr->NEXT->NEXT->GEOMPORT_PTR, geomnode_ptr->NEXT->NEXT->GEOMPORT_PTR[0], geomnode_ptr->NEXT->NEXT->SUBGROUP_PTR[0], geomnode_ptr->NEXT->SUBGROUP_PTR[0], geomnode_ptr->SUBGROUP_PTR[0], port_ptr->NEXT[0], port_ptr->NEXT->PORTNUM, port_ptr->NEXT->AMP, port_ptr->NEXT->AMP_UNIT, port_ptr->NEXT->PSC, port_ptr->NEXT->PSC_UNIT, port_ptr->NEXT->PSH, port_ptr->NEXT->PSH_UNIT, port_ptr->NEXT->PPA, port_ptr->NEXT->PPA_UNIT, port_ptr->NEXT->PHEPOL, port_ptr->NEXT->PHEPOL_UNIT, port_ptr->NEXT->OMIT_POL, port_ptr->NEXT->NEXT, port_ptr->NEXT->NEXT[0], port_ptr->NEXT->NEXT->PORTNUM, port_ptr->NEXT->NEXT->AMP, port_ptr->NEXT->NEXT->AMP_UNIT, port_ptr->NEXT->NEXT->PSC, port_ptr->NEXT->NEXT->PSC_UNIT, port_ptr->NEXT->NEXT->PSH, port_ptr->NEXT->NEXT->PSH_UNIT, port_ptr->NEXT->NEXT->PPA, port_ptr->NEXT->NEXT->PPA_UNIT, port_ptr->NEXT->NEXT->PHEPOL, port_ptr->NEXT->NEXT->PHEPOL_UNIT, port_ptr->NEXT->NEXT->OMIT_POL, port_ptr->NEXT->NEXT->NEXT, port_ptr->NEXT->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
grampexc_ptr.[0] == \old(grampexc_ptr.[0])
grampexc_ptr.TYPE == geomnode_ptr.NEXT.NEXT.LOC_Q
grampexc_ptr.TYPE == port_ptr.PORTNUM
grampexc_ptr.TYPE == port_ptr.OMIT_POL
grampexc_ptr.TYPE == \old(grampexc_ptr.TYPE)
grampexc_ptr.TYPE == \old(geomnode_ptr.NEXT.NEXT.LOC_Q)
grampexc_ptr.TYPE == \old(port_ptr.PORTNUM)
grampexc_ptr.TYPE == \old(port_ptr.OMIT_POL)
daikon.Quant.fuzzy.eq(grampexc_ptr.CENTRE, geomnode_ptr.GEOMPORT_PTR.AMP)
daikon.Quant.fuzzy.eq(grampexc_ptr.P2_ET, geomnode_ptr.NEXT.GEOMPORT_PTR.AMP)
grampexc_ptr.AMP_UNIT == return
grampexc_ptr.PQEXP_PTR == \old(grampexc_ptr.PQEXP_PTR)
geomnode_ptr.[0] == \old(geomnode_ptr.[0])
geomnode_ptr.LOC_P == \old(geomnode_ptr.LOC_P)
geomnode_ptr.LOC_Q == geomnode_ptr.NEXT.LOC_Q
geomnode_ptr.LOC_Q == geomnode_ptr.NEXT.NEXT.SHAPE
geomnode_ptr.LOC_Q == geomnode_ptr.NEXT.SHAPE
geomnode_ptr.LOC_Q == geomnode_ptr.SHAPE
geomnode_ptr.LOC_Q == \old(geomnode_ptr.LOC_Q)
geomnode_ptr.LOC_Q == \old(geomnode_ptr.NEXT.LOC_Q)
geomnode_ptr.LOC_Q == \old(geomnode_ptr.NEXT.NEXT.SHAPE)
geomnode_ptr.LOC_Q == \old(geomnode_ptr.NEXT.SHAPE)
geomnode_ptr.LOC_Q == \old(geomnode_ptr.SHAPE)
geomnode_ptr.LOC_Q == \old(group_shape)
geomnode_ptr.GEOMPORT_PTR.NEXT == geomnode_ptr.NEXT.GEOMPORT_PTR.NEXT
geomnode_ptr.NEXT == \old(geomnode_ptr.NEXT)
geomnode_ptr.NEXT.[0] == \old(geomnode_ptr.NEXT.[0])
geomnode_ptr.NEXT.LOC_P == \old(geomnode_ptr.NEXT.LOC_P)
geomnode_ptr.NEXT.NEXT == \old(geomnode_ptr.NEXT.NEXT)
geomnode_ptr.NEXT.NEXT.[0] == \old(geomnode_ptr.NEXT.NEXT.[0])
geomnode_ptr.NEXT.NEXT.LOC_P == \old(geomnode_ptr.NEXT.NEXT.LOC_P)
geomnode_ptr.NEXT.NEXT.NEXT == \old(geomnode_ptr.NEXT.NEXT.NEXT)
geomnode_ptr.NEXT.NEXT.NEXT.[0] == \old(geomnode_ptr.NEXT.NEXT.NEXT.[0])
geomnode_ptr.NEXT.NEXT.SUBGROUP_PTR == geomnode_ptr.SUBGROUP_PTR
geomnode_ptr.NEXT.SUBGROUP_PTR == geomnode_ptr.SUBGROUP_PTR
geomnode_ptr.SUBGROUP_PTR == \old(geomnode_ptr.NEXT.NEXT.SUBGROUP_PTR)
geomnode_ptr.SUBGROUP_PTR == \old(geomnode_ptr.NEXT.SUBGROUP_PTR)
geomnode_ptr.SUBGROUP_PTR == \old(geomnode_ptr.SUBGROUP_PTR)
port_ptr.[0] == \old(port_ptr.[0])
port_ptr.AMP_UNIT == return
port_ptr.PSC_UNIT == return
port_ptr.PSH_UNIT == return
port_ptr.PPA_UNIT == return
port_ptr.PHEPOL_UNIT == return
port_ptr.NEXT == \old(port_ptr.NEXT)
return == \old(grampexc_ptr.AMP_UNIT)
return == \old(port_ptr.AMP_UNIT)
return == \old(port_ptr.PSC_UNIT)
return == \old(port_ptr.PSH_UNIT)
return == \old(port_ptr.PPA_UNIT)
return == \old(port_ptr.PHEPOL_UNIT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
grampexc_ptr.[0] != null
grampexc_ptr.TYPE == 1
daikon.Quant.fuzzy.eq(grampexc_ptr.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(grampexc_ptr.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(grampexc_ptr.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(grampexc_ptr.Q1_ET, 34.0)
grampexc_ptr.PQEXP_PTR == null
geomnode_ptr.[0] != null
geomnode_ptr.LOC_P == 8
geomnode_ptr.LOC_Q == 2
daikon.Quant.fuzzy.eq(geomnode_ptr.XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(geomnode_ptr.YA, 148.95636946268272)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, 0.0)
geomnode_ptr.GEOMPORT_PTR != null
geomnode_ptr.GEOMPORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(geomnode_ptr.GEOMPORT_PTR.AMP, 28.999999999999886)
geomnode_ptr.GEOMPORT_PTR.NEXT == null
geomnode_ptr.NEXT != null
geomnode_ptr.NEXT.[0] != null
geomnode_ptr.NEXT.LOC_P == 9
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.XA, 859.9999999796324)
geomnode_ptr.NEXT.GEOMPORT_PTR != null
geomnode_ptr.NEXT.GEOMPORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.GEOMPORT_PTR.AMP, 21.99999999999994)
geomnode_ptr.NEXT.NEXT != null
geomnode_ptr.NEXT.NEXT.[0] != null
geomnode_ptr.NEXT.NEXT.LOC_P == 10
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.NEXT.XA, 902.9999999898162)
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.NEXT.YA, 74.47818473134136)
geomnode_ptr.NEXT.NEXT.GEOMPORT_PTR != null
geomnode_ptr.NEXT.NEXT.GEOMPORT_PTR.[0] != null
geomnode_ptr.NEXT.NEXT.NEXT != null
geomnode_ptr.NEXT.NEXT.NEXT.[0] != null
geomnode_ptr.SUBGROUP_PTR == null
daikon.Quant.fuzzy.eq(geomnode_ptr.PSIZE, 86.0)
port_ptr.[0] != null
daikon.Quant.fuzzy.eq(port_ptr.AMP, 1.0)
daikon.Quant.fuzzy.eq(port_ptr.PHEPOL, 90.0)
port_ptr.NEXT == null
return == 0
===========================================================================
..sgrphaun():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME grphaexc_ptr grphaexc_ptr[0] grphaexc_ptr->TYPE grphaexc_ptr->UNIF_VAL grphaexc_ptr->CENTRE grphaexc_ptr->P1_EP grphaexc_ptr->P2_EP grphaexc_ptr->Q1_EP grphaexc_ptr->Q2_EP grphaexc_ptr->DIRECTION grphaexc_ptr->OMIT_ANGLE grphaexc_ptr->ANGLE_START grphaexc_ptr->ANGLE_STEP grphaexc_ptr->OMIT_PHASE grphaexc_ptr->PHASE_START grphaexc_ptr->PHASE_STEP grphaexc_ptr->U grphaexc_ptr->V grphaexc_ptr->THETA grphaexc_ptr->PHI grphaexc_ptr->PQEXP_PTR grphaexc_ptr->PQEXP_PTR[0] grphaexc_ptr->PQEXP_PTR->dummy grphaexc_ptr->ANGLE_UNIT grphaexc_ptr->PHASE_UNIT geomnode_ptr geomnode_ptr[0] geomnode_ptr->LOC_P geomnode_ptr->LOC_Q geomnode_ptr->XA geomnode_ptr->YA geomnode_ptr->ZA geomnode_ptr->THEA geomnode_ptr->PHEA geomnode_ptr->PSEA geomnode_ptr->GEOMPORT_PTR geomnode_ptr->GEOMPORT_PTR[0] geomnode_ptr->GEOMPORT_PTR->AMP geomnode_ptr->GEOMPORT_PTR->PSH geomnode_ptr->GEOMPORT_PTR->PSC geomnode_ptr->GEOMPORT_PTR->PPA geomnode_ptr->GEOMPORT_PTR->PHEPOL geomnode_ptr->GEOMPORT_PTR->NEXT geomnode_ptr->GEOMPORT_PTR->NEXT[0] geomnode_ptr->GEOMPORT_PTR->NEXT->AMP geomnode_ptr->GEOMPORT_PTR->NEXT->PSH geomnode_ptr->GEOMPORT_PTR->NEXT->PSC geomnode_ptr->GEOMPORT_PTR->NEXT->PPA geomnode_ptr->GEOMPORT_PTR->NEXT->PHEPOL geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT[0] geomnode_ptr->NEXT geomnode_ptr->NEXT[0] geomnode_ptr->NEXT->LOC_P geomnode_ptr->NEXT->LOC_Q geomnode_ptr->NEXT->XA geomnode_ptr->NEXT->YA geomnode_ptr->NEXT->ZA geomnode_ptr->NEXT->THEA geomnode_ptr->NEXT->PHEA geomnode_ptr->NEXT->PSEA geomnode_ptr->NEXT->GEOMPORT_PTR geomnode_ptr->NEXT->GEOMPORT_PTR[0] geomnode_ptr->NEXT->GEOMPORT_PTR->AMP geomnode_ptr->NEXT->GEOMPORT_PTR->PSH geomnode_ptr->NEXT->GEOMPORT_PTR->PSC geomnode_ptr->NEXT->GEOMPORT_PTR->PPA geomnode_ptr->NEXT->GEOMPORT_PTR->PHEPOL geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT[0] geomnode_ptr->NEXT->NEXT geomnode_ptr->NEXT->NEXT[0] geomnode_ptr->NEXT->NEXT->LOC_P geomnode_ptr->NEXT->NEXT->LOC_Q geomnode_ptr->NEXT->NEXT->XA geomnode_ptr->NEXT->NEXT->YA geomnode_ptr->NEXT->NEXT->ZA geomnode_ptr->NEXT->NEXT->THEA geomnode_ptr->NEXT->NEXT->PHEA geomnode_ptr->NEXT->NEXT->PSEA geomnode_ptr->NEXT->NEXT->GEOMPORT_PTR geomnode_ptr->NEXT->NEXT->GEOMPORT_PTR[0] geomnode_ptr->NEXT->NEXT->NEXT geomnode_ptr->NEXT->NEXT->NEXT[0] geomnode_ptr->NEXT->NEXT->SUBGROUP_PTR geomnode_ptr->NEXT->NEXT->SUBGROUP_PTR[0] geomnode_ptr->NEXT->NEXT->SHAPE geomnode_ptr->NEXT->NEXT->PSIZE geomnode_ptr->NEXT->NEXT->QSIZE geomnode_ptr->NEXT->SUBGROUP_PTR geomnode_ptr->NEXT->SUBGROUP_PTR[0] geomnode_ptr->NEXT->SHAPE geomnode_ptr->NEXT->PSIZE geomnode_ptr->NEXT->QSIZE geomnode_ptr->SUBGROUP_PTR geomnode_ptr->SUBGROUP_PTR[0] geomnode_ptr->SHAPE geomnode_ptr->PSIZE geomnode_ptr->QSIZE port_ptr port_ptr[0] port_ptr->PORTNUM port_ptr->AMP port_ptr->AMP_UNIT port_ptr->PSC port_ptr->PSC_UNIT port_ptr->PSH port_ptr->PSH_UNIT port_ptr->PPA port_ptr->PPA_UNIT port_ptr->PHEPOL port_ptr->PHEPOL_UNIT port_ptr->OMIT_POL port_ptr->NEXT port_ptr->NEXT[0] port_ptr->NEXT->PORTNUM port_ptr->NEXT->AMP port_ptr->NEXT->AMP_UNIT port_ptr->NEXT->PSC port_ptr->NEXT->PSC_UNIT port_ptr->NEXT->PSH port_ptr->NEXT->PSH_UNIT port_ptr->NEXT->PPA port_ptr->NEXT->PPA_UNIT port_ptr->NEXT->PHEPOL port_ptr->NEXT->PHEPOL_UNIT port_ptr->NEXT->OMIT_POL port_ptr->NEXT->NEXT port_ptr->NEXT->NEXT[0] port_ptr->NEXT->NEXT->PORTNUM port_ptr->NEXT->NEXT->AMP port_ptr->NEXT->NEXT->AMP_UNIT port_ptr->NEXT->NEXT->PSC port_ptr->NEXT->NEXT->PSC_UNIT port_ptr->NEXT->NEXT->PSH port_ptr->NEXT->NEXT->PSH_UNIT port_ptr->NEXT->NEXT->PPA port_ptr->NEXT->NEXT->PPA_UNIT port_ptr->NEXT->NEXT->PHEPOL port_ptr->NEXT->NEXT->PHEPOL_UNIT port_ptr->NEXT->NEXT->OMIT_POL port_ptr->NEXT->NEXT->NEXT port_ptr->NEXT->NEXT->NEXT[0]
grphaexc_ptr.TYPE == grphaexc_ptr.PHASE_UNIT
grphaexc_ptr.TYPE == port_ptr.AMP_UNIT
grphaexc_ptr.TYPE == port_ptr.PSC_UNIT
grphaexc_ptr.TYPE == port_ptr.PSH_UNIT
grphaexc_ptr.TYPE == port_ptr.PPA_UNIT
grphaexc_ptr.TYPE == port_ptr.PHEPOL_UNIT
geomnode_ptr.LOC_Q == geomnode_ptr.NEXT.LOC_Q
geomnode_ptr.LOC_Q == geomnode_ptr.NEXT.NEXT.SHAPE
geomnode_ptr.LOC_Q == geomnode_ptr.NEXT.SHAPE
geomnode_ptr.LOC_Q == geomnode_ptr.SHAPE
daikon.Quant.fuzzy.eq(geomnode_ptr.YA, geomnode_ptr.NEXT.YA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.THEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.PHEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.PSEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.ZA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.THEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.PHEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.PSEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.NEXT.ZA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.NEXT.THEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.NEXT.PHEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.NEXT.PSEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, port_ptr.PSC)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, port_ptr.PSH)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, port_ptr.PPA)
geomnode_ptr.GEOMPORT_PTR.NEXT == geomnode_ptr.NEXT.GEOMPORT_PTR.NEXT
geomnode_ptr.NEXT.NEXT.LOC_Q == port_ptr.PORTNUM
geomnode_ptr.NEXT.NEXT.SUBGROUP_PTR == geomnode_ptr.SUBGROUP_PTR
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.NEXT.PSIZE, geomnode_ptr.PSIZE)
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.NEXT.QSIZE, geomnode_ptr.PSIZE)
geomnode_ptr.NEXT.SUBGROUP_PTR == geomnode_ptr.SUBGROUP_PTR
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.PSIZE, geomnode_ptr.PSIZE)
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.QSIZE, geomnode_ptr.PSIZE)
daikon.Quant.fuzzy.eq(geomnode_ptr.PSIZE, geomnode_ptr.QSIZE)
port_ptr.PORTNUM == port_ptr.OMIT_POL
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
grphaexc_ptr != null
grphaexc_ptr.[0] != null
grphaexc_ptr.TYPE == 0
daikon.Quant.fuzzy.eq(grphaexc_ptr.UNIF_VAL, -219.0)
grphaexc_ptr.PQEXP_PTR == null
geomnode_ptr != null
geomnode_ptr.[0] != null
geomnode_ptr.LOC_P == 8
geomnode_ptr.LOC_Q == 2
daikon.Quant.fuzzy.eq(geomnode_ptr.XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(geomnode_ptr.YA, 148.95636946268272)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, 0.0)
geomnode_ptr.GEOMPORT_PTR != null
geomnode_ptr.GEOMPORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(geomnode_ptr.GEOMPORT_PTR.AMP, 28.999999999999886)
geomnode_ptr.GEOMPORT_PTR.NEXT == null
geomnode_ptr.NEXT != null
geomnode_ptr.NEXT.[0] != null
geomnode_ptr.NEXT.LOC_P == 9
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.XA, 859.9999999796324)
geomnode_ptr.NEXT.GEOMPORT_PTR != null
geomnode_ptr.NEXT.GEOMPORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.GEOMPORT_PTR.AMP, 21.99999999999994)
geomnode_ptr.NEXT.NEXT != null
geomnode_ptr.NEXT.NEXT.[0] != null
geomnode_ptr.NEXT.NEXT.LOC_P == 10
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.NEXT.XA, 902.9999999898162)
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.NEXT.YA, 74.47818473134136)
geomnode_ptr.NEXT.NEXT.GEOMPORT_PTR != null
geomnode_ptr.NEXT.NEXT.GEOMPORT_PTR.[0] != null
geomnode_ptr.NEXT.NEXT.NEXT != null
geomnode_ptr.NEXT.NEXT.NEXT.[0] != null
geomnode_ptr.SUBGROUP_PTR == null
daikon.Quant.fuzzy.eq(geomnode_ptr.PSIZE, 86.0)
port_ptr != null
port_ptr.[0] != null
port_ptr.PORTNUM == 1
daikon.Quant.fuzzy.eq(port_ptr.AMP, 1.0)
daikon.Quant.fuzzy.eq(port_ptr.PHEPOL, 90.0)
port_ptr.NEXT == null
===========================================================================
..sgrphaun():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME grphaexc_ptr grphaexc_ptr[0] grphaexc_ptr->TYPE grphaexc_ptr->UNIF_VAL grphaexc_ptr->CENTRE grphaexc_ptr->P1_EP grphaexc_ptr->P2_EP grphaexc_ptr->Q1_EP grphaexc_ptr->Q2_EP grphaexc_ptr->DIRECTION grphaexc_ptr->OMIT_ANGLE grphaexc_ptr->ANGLE_START grphaexc_ptr->ANGLE_STEP grphaexc_ptr->OMIT_PHASE grphaexc_ptr->PHASE_START grphaexc_ptr->PHASE_STEP grphaexc_ptr->U grphaexc_ptr->V grphaexc_ptr->THETA grphaexc_ptr->PHI grphaexc_ptr->PQEXP_PTR grphaexc_ptr->PQEXP_PTR[0] grphaexc_ptr->PQEXP_PTR->dummy grphaexc_ptr->ANGLE_UNIT grphaexc_ptr->PHASE_UNIT geomnode_ptr geomnode_ptr[0] geomnode_ptr->LOC_P geomnode_ptr->LOC_Q geomnode_ptr->XA geomnode_ptr->YA geomnode_ptr->ZA geomnode_ptr->THEA geomnode_ptr->PHEA geomnode_ptr->PSEA geomnode_ptr->GEOMPORT_PTR geomnode_ptr->GEOMPORT_PTR[0] geomnode_ptr->GEOMPORT_PTR->AMP geomnode_ptr->GEOMPORT_PTR->PSH geomnode_ptr->GEOMPORT_PTR->PSC geomnode_ptr->GEOMPORT_PTR->PPA geomnode_ptr->GEOMPORT_PTR->PHEPOL geomnode_ptr->GEOMPORT_PTR->NEXT geomnode_ptr->GEOMPORT_PTR->NEXT[0] geomnode_ptr->GEOMPORT_PTR->NEXT->AMP geomnode_ptr->GEOMPORT_PTR->NEXT->PSH geomnode_ptr->GEOMPORT_PTR->NEXT->PSC geomnode_ptr->GEOMPORT_PTR->NEXT->PPA geomnode_ptr->GEOMPORT_PTR->NEXT->PHEPOL geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT[0] geomnode_ptr->NEXT geomnode_ptr->NEXT[0] geomnode_ptr->NEXT->LOC_P geomnode_ptr->NEXT->LOC_Q geomnode_ptr->NEXT->XA geomnode_ptr->NEXT->YA geomnode_ptr->NEXT->ZA geomnode_ptr->NEXT->THEA geomnode_ptr->NEXT->PHEA geomnode_ptr->NEXT->PSEA geomnode_ptr->NEXT->GEOMPORT_PTR geomnode_ptr->NEXT->GEOMPORT_PTR[0] geomnode_ptr->NEXT->GEOMPORT_PTR->AMP geomnode_ptr->NEXT->GEOMPORT_PTR->PSH geomnode_ptr->NEXT->GEOMPORT_PTR->PSC geomnode_ptr->NEXT->GEOMPORT_PTR->PPA geomnode_ptr->NEXT->GEOMPORT_PTR->PHEPOL geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT[0] geomnode_ptr->NEXT->NEXT geomnode_ptr->NEXT->NEXT[0] geomnode_ptr->NEXT->NEXT->LOC_P geomnode_ptr->NEXT->NEXT->LOC_Q geomnode_ptr->NEXT->NEXT->XA geomnode_ptr->NEXT->NEXT->YA geomnode_ptr->NEXT->NEXT->ZA geomnode_ptr->NEXT->NEXT->THEA geomnode_ptr->NEXT->NEXT->PHEA geomnode_ptr->NEXT->NEXT->PSEA geomnode_ptr->NEXT->NEXT->GEOMPORT_PTR geomnode_ptr->NEXT->NEXT->GEOMPORT_PTR[0] geomnode_ptr->NEXT->NEXT->NEXT geomnode_ptr->NEXT->NEXT->NEXT[0] geomnode_ptr->NEXT->NEXT->SUBGROUP_PTR geomnode_ptr->NEXT->NEXT->SUBGROUP_PTR[0] geomnode_ptr->NEXT->NEXT->SHAPE geomnode_ptr->NEXT->NEXT->PSIZE geomnode_ptr->NEXT->NEXT->QSIZE geomnode_ptr->NEXT->SUBGROUP_PTR geomnode_ptr->NEXT->SUBGROUP_PTR[0] geomnode_ptr->NEXT->SHAPE geomnode_ptr->NEXT->PSIZE geomnode_ptr->NEXT->QSIZE geomnode_ptr->SUBGROUP_PTR geomnode_ptr->SUBGROUP_PTR[0] geomnode_ptr->SHAPE geomnode_ptr->PSIZE geomnode_ptr->QSIZE port_ptr port_ptr[0] port_ptr->PORTNUM port_ptr->AMP port_ptr->AMP_UNIT port_ptr->PSC port_ptr->PSC_UNIT port_ptr->PSH port_ptr->PSH_UNIT port_ptr->PPA port_ptr->PPA_UNIT port_ptr->PHEPOL port_ptr->PHEPOL_UNIT port_ptr->OMIT_POL port_ptr->NEXT port_ptr->NEXT[0] port_ptr->NEXT->PORTNUM port_ptr->NEXT->AMP port_ptr->NEXT->AMP_UNIT port_ptr->NEXT->PSC port_ptr->NEXT->PSC_UNIT port_ptr->NEXT->PSH port_ptr->NEXT->PSH_UNIT port_ptr->NEXT->PPA port_ptr->NEXT->PPA_UNIT port_ptr->NEXT->PHEPOL port_ptr->NEXT->PHEPOL_UNIT port_ptr->NEXT->OMIT_POL port_ptr->NEXT->NEXT port_ptr->NEXT->NEXT[0] port_ptr->NEXT->NEXT->PORTNUM port_ptr->NEXT->NEXT->AMP port_ptr->NEXT->NEXT->AMP_UNIT port_ptr->NEXT->NEXT->PSC port_ptr->NEXT->NEXT->PSC_UNIT port_ptr->NEXT->NEXT->PSH port_ptr->NEXT->NEXT->PSH_UNIT port_ptr->NEXT->NEXT->PPA port_ptr->NEXT->NEXT->PPA_UNIT port_ptr->NEXT->NEXT->PHEPOL port_ptr->NEXT->NEXT->PHEPOL_UNIT port_ptr->NEXT->NEXT->OMIT_POL port_ptr->NEXT->NEXT->NEXT port_ptr->NEXT->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(grphaexc_ptr) orig(grphaexc_ptr[0]) orig(grphaexc_ptr->TYPE) orig(grphaexc_ptr->UNIF_VAL) orig(grphaexc_ptr->CENTRE) orig(grphaexc_ptr->P1_EP) orig(grphaexc_ptr->P2_EP) orig(grphaexc_ptr->Q1_EP) orig(grphaexc_ptr->Q2_EP) orig(grphaexc_ptr->DIRECTION) orig(grphaexc_ptr->OMIT_ANGLE) orig(grphaexc_ptr->ANGLE_START) orig(grphaexc_ptr->ANGLE_STEP) orig(grphaexc_ptr->OMIT_PHASE) orig(grphaexc_ptr->PHASE_START) orig(grphaexc_ptr->PHASE_STEP) orig(grphaexc_ptr->U) orig(grphaexc_ptr->V) orig(grphaexc_ptr->THETA) orig(grphaexc_ptr->PHI) orig(grphaexc_ptr->PQEXP_PTR) orig(grphaexc_ptr->PQEXP_PTR[0]) orig(grphaexc_ptr->PQEXP_PTR->dummy) orig(grphaexc_ptr->ANGLE_UNIT) orig(grphaexc_ptr->PHASE_UNIT) orig(geomnode_ptr) orig(geomnode_ptr[0]) orig(geomnode_ptr->LOC_P) orig(geomnode_ptr->LOC_Q) orig(geomnode_ptr->XA) orig(geomnode_ptr->YA) orig(geomnode_ptr->ZA) orig(geomnode_ptr->THEA) orig(geomnode_ptr->PHEA) orig(geomnode_ptr->PSEA) orig(geomnode_ptr->GEOMPORT_PTR) orig(geomnode_ptr->GEOMPORT_PTR[0]) orig(geomnode_ptr->GEOMPORT_PTR->AMP) orig(geomnode_ptr->GEOMPORT_PTR->PSH) orig(geomnode_ptr->GEOMPORT_PTR->PSC) orig(geomnode_ptr->GEOMPORT_PTR->PPA) orig(geomnode_ptr->GEOMPORT_PTR->PHEPOL) orig(geomnode_ptr->GEOMPORT_PTR->NEXT) orig(geomnode_ptr->GEOMPORT_PTR->NEXT[0]) orig(geomnode_ptr->GEOMPORT_PTR->NEXT->AMP) orig(geomnode_ptr->GEOMPORT_PTR->NEXT->PSH) orig(geomnode_ptr->GEOMPORT_PTR->NEXT->PSC) orig(geomnode_ptr->GEOMPORT_PTR->NEXT->PPA) orig(geomnode_ptr->GEOMPORT_PTR->NEXT->PHEPOL) orig(geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT) orig(geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT[0]) orig(geomnode_ptr->NEXT) orig(geomnode_ptr->NEXT[0]) orig(geomnode_ptr->NEXT->LOC_P) orig(geomnode_ptr->NEXT->LOC_Q) orig(geomnode_ptr->NEXT->XA) orig(geomnode_ptr->NEXT->YA) orig(geomnode_ptr->NEXT->ZA) orig(geomnode_ptr->NEXT->THEA) orig(geomnode_ptr->NEXT->PHEA) orig(geomnode_ptr->NEXT->PSEA) orig(geomnode_ptr->NEXT->GEOMPORT_PTR) orig(geomnode_ptr->NEXT->GEOMPORT_PTR[0]) orig(geomnode_ptr->NEXT->GEOMPORT_PTR->AMP) orig(geomnode_ptr->NEXT->GEOMPORT_PTR->PSH) orig(geomnode_ptr->NEXT->GEOMPORT_PTR->PSC) orig(geomnode_ptr->NEXT->GEOMPORT_PTR->PPA) orig(geomnode_ptr->NEXT->GEOMPORT_PTR->PHEPOL) orig(geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT) orig(geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT[0]) orig(geomnode_ptr->NEXT->NEXT) orig(geomnode_ptr->NEXT->NEXT[0]) orig(geomnode_ptr->NEXT->NEXT->LOC_P) orig(geomnode_ptr->NEXT->NEXT->LOC_Q) orig(geomnode_ptr->NEXT->NEXT->XA) orig(geomnode_ptr->NEXT->NEXT->YA) orig(geomnode_ptr->NEXT->NEXT->ZA) orig(geomnode_ptr->NEXT->NEXT->THEA) orig(geomnode_ptr->NEXT->NEXT->PHEA) orig(geomnode_ptr->NEXT->NEXT->PSEA) orig(geomnode_ptr->NEXT->NEXT->GEOMPORT_PTR) orig(geomnode_ptr->NEXT->NEXT->GEOMPORT_PTR[0]) orig(geomnode_ptr->NEXT->NEXT->NEXT) orig(geomnode_ptr->NEXT->NEXT->NEXT[0]) orig(geomnode_ptr->NEXT->NEXT->SUBGROUP_PTR) orig(geomnode_ptr->NEXT->NEXT->SUBGROUP_PTR[0]) orig(geomnode_ptr->NEXT->NEXT->SHAPE) orig(geomnode_ptr->NEXT->NEXT->PSIZE) orig(geomnode_ptr->NEXT->NEXT->QSIZE) orig(geomnode_ptr->NEXT->SUBGROUP_PTR) orig(geomnode_ptr->NEXT->SUBGROUP_PTR[0]) orig(geomnode_ptr->NEXT->SHAPE) orig(geomnode_ptr->NEXT->PSIZE) orig(geomnode_ptr->NEXT->QSIZE) orig(geomnode_ptr->SUBGROUP_PTR) orig(geomnode_ptr->SUBGROUP_PTR[0]) orig(geomnode_ptr->SHAPE) orig(geomnode_ptr->PSIZE) orig(geomnode_ptr->QSIZE) orig(port_ptr) orig(port_ptr[0]) orig(port_ptr->PORTNUM) orig(port_ptr->AMP) orig(port_ptr->AMP_UNIT) orig(port_ptr->PSC) orig(port_ptr->PSC_UNIT) orig(port_ptr->PSH) orig(port_ptr->PSH_UNIT) orig(port_ptr->PPA) orig(port_ptr->PPA_UNIT) orig(port_ptr->PHEPOL) orig(port_ptr->PHEPOL_UNIT) orig(port_ptr->OMIT_POL) orig(port_ptr->NEXT) orig(port_ptr->NEXT[0]) orig(port_ptr->NEXT->PORTNUM) orig(port_ptr->NEXT->AMP) orig(port_ptr->NEXT->AMP_UNIT) orig(port_ptr->NEXT->PSC) orig(port_ptr->NEXT->PSC_UNIT) orig(port_ptr->NEXT->PSH) orig(port_ptr->NEXT->PSH_UNIT) orig(port_ptr->NEXT->PPA) orig(port_ptr->NEXT->PPA_UNIT) orig(port_ptr->NEXT->PHEPOL) orig(port_ptr->NEXT->PHEPOL_UNIT) orig(port_ptr->NEXT->OMIT_POL) orig(port_ptr->NEXT->NEXT) orig(port_ptr->NEXT->NEXT[0]) orig(port_ptr->NEXT->NEXT->PORTNUM) orig(port_ptr->NEXT->NEXT->AMP) orig(port_ptr->NEXT->NEXT->AMP_UNIT) orig(port_ptr->NEXT->NEXT->PSC) orig(port_ptr->NEXT->NEXT->PSC_UNIT) orig(port_ptr->NEXT->NEXT->PSH) orig(port_ptr->NEXT->NEXT->PSH_UNIT) orig(port_ptr->NEXT->NEXT->PPA) orig(port_ptr->NEXT->NEXT->PPA_UNIT) orig(port_ptr->NEXT->NEXT->PHEPOL) orig(port_ptr->NEXT->NEXT->PHEPOL_UNIT) orig(port_ptr->NEXT->NEXT->OMIT_POL) orig(port_ptr->NEXT->NEXT->NEXT) orig(port_ptr->NEXT->NEXT->NEXT[0])
assignable grphaexc_ptr->CENTRE, grphaexc_ptr->P1_EP, grphaexc_ptr->P2_EP, grphaexc_ptr->Q1_EP, grphaexc_ptr->Q2_EP, grphaexc_ptr->DIRECTION, grphaexc_ptr->OMIT_ANGLE, grphaexc_ptr->ANGLE_START, grphaexc_ptr->ANGLE_STEP, grphaexc_ptr->OMIT_PHASE, grphaexc_ptr->PHASE_START, grphaexc_ptr->PHASE_STEP, grphaexc_ptr->U, grphaexc_ptr->V, grphaexc_ptr->THETA, grphaexc_ptr->PHI, grphaexc_ptr->PQEXP_PTR[0], grphaexc_ptr->PQEXP_PTR->dummy, grphaexc_ptr->ANGLE_UNIT, geomnode_ptr->GEOMPORT_PTR->PSH, geomnode_ptr->GEOMPORT_PTR->PSC, geomnode_ptr->GEOMPORT_PTR->PPA, geomnode_ptr->GEOMPORT_PTR->PHEPOL, geomnode_ptr->GEOMPORT_PTR->NEXT[0], geomnode_ptr->GEOMPORT_PTR->NEXT->AMP, geomnode_ptr->GEOMPORT_PTR->NEXT->PSH, geomnode_ptr->GEOMPORT_PTR->NEXT->PSC, geomnode_ptr->GEOMPORT_PTR->NEXT->PPA, geomnode_ptr->GEOMPORT_PTR->NEXT->PHEPOL, geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT, geomnode_ptr->GEOMPORT_PTR->NEXT->NEXT[0], geomnode_ptr->NEXT->GEOMPORT_PTR->PSH, geomnode_ptr->NEXT->GEOMPORT_PTR->PSC, geomnode_ptr->NEXT->GEOMPORT_PTR->PPA, geomnode_ptr->NEXT->GEOMPORT_PTR->PHEPOL, geomnode_ptr->NEXT->GEOMPORT_PTR->NEXT[0], geomnode_ptr->NEXT->NEXT->SUBGROUP_PTR[0], geomnode_ptr->NEXT->SUBGROUP_PTR[0], geomnode_ptr->SUBGROUP_PTR[0], port_ptr->NEXT[0], port_ptr->NEXT->PORTNUM, port_ptr->NEXT->AMP, port_ptr->NEXT->AMP_UNIT, port_ptr->NEXT->PSC, port_ptr->NEXT->PSC_UNIT, port_ptr->NEXT->PSH, port_ptr->NEXT->PSH_UNIT, port_ptr->NEXT->PPA, port_ptr->NEXT->PPA_UNIT, port_ptr->NEXT->PHEPOL, port_ptr->NEXT->PHEPOL_UNIT, port_ptr->NEXT->OMIT_POL, port_ptr->NEXT->NEXT, port_ptr->NEXT->NEXT[0], port_ptr->NEXT->NEXT->PORTNUM, port_ptr->NEXT->NEXT->AMP, port_ptr->NEXT->NEXT->AMP_UNIT, port_ptr->NEXT->NEXT->PSC, port_ptr->NEXT->NEXT->PSC_UNIT, port_ptr->NEXT->NEXT->PSH, port_ptr->NEXT->NEXT->PSH_UNIT, port_ptr->NEXT->NEXT->PPA, port_ptr->NEXT->NEXT->PPA_UNIT, port_ptr->NEXT->NEXT->PHEPOL, port_ptr->NEXT->NEXT->PHEPOL_UNIT, port_ptr->NEXT->NEXT->OMIT_POL, port_ptr->NEXT->NEXT->NEXT, port_ptr->NEXT->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
grphaexc_ptr.[0] == \old(grphaexc_ptr.[0])
grphaexc_ptr.TYPE == return
daikon.Quant.fuzzy.eq(grphaexc_ptr.UNIF_VAL, geomnode_ptr.GEOMPORT_PTR.PSH)
daikon.Quant.fuzzy.eq(grphaexc_ptr.UNIF_VAL, geomnode_ptr.NEXT.GEOMPORT_PTR.PSH)
daikon.Quant.fuzzy.eq(grphaexc_ptr.UNIF_VAL, \old(grphaexc_ptr.UNIF_VAL))
grphaexc_ptr.PQEXP_PTR == \old(grphaexc_ptr.PQEXP_PTR)
grphaexc_ptr.PHASE_UNIT == return
geomnode_ptr.[0] == \old(geomnode_ptr.[0])
geomnode_ptr.LOC_P == \old(geomnode_ptr.LOC_P)
geomnode_ptr.LOC_Q == geomnode_ptr.NEXT.LOC_Q
geomnode_ptr.LOC_Q == geomnode_ptr.NEXT.NEXT.SHAPE
geomnode_ptr.LOC_Q == geomnode_ptr.NEXT.SHAPE
geomnode_ptr.LOC_Q == geomnode_ptr.SHAPE
geomnode_ptr.LOC_Q == \old(geomnode_ptr.LOC_Q)
geomnode_ptr.LOC_Q == \old(geomnode_ptr.NEXT.LOC_Q)
geomnode_ptr.LOC_Q == \old(geomnode_ptr.NEXT.NEXT.SHAPE)
geomnode_ptr.LOC_Q == \old(geomnode_ptr.NEXT.SHAPE)
geomnode_ptr.LOC_Q == \old(geomnode_ptr.SHAPE)
daikon.Quant.fuzzy.eq(geomnode_ptr.XA, \old(geomnode_ptr.XA))
daikon.Quant.fuzzy.eq(geomnode_ptr.YA, geomnode_ptr.NEXT.YA)
daikon.Quant.fuzzy.eq(geomnode_ptr.YA, \old(geomnode_ptr.YA))
daikon.Quant.fuzzy.eq(geomnode_ptr.YA, \old(geomnode_ptr.NEXT.YA))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.THEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.PHEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.PSEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.GEOMPORT_PTR.PSC)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.GEOMPORT_PTR.PPA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.ZA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.THEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.PHEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.PSEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.GEOMPORT_PTR.PSC)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.GEOMPORT_PTR.PPA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.NEXT.ZA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.NEXT.THEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.NEXT.PHEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, geomnode_ptr.NEXT.NEXT.PSEA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, port_ptr.PSC)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, port_ptr.PSH)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, port_ptr.PPA)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(geomnode_ptr.ZA))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(geomnode_ptr.THEA))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(geomnode_ptr.PHEA))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(geomnode_ptr.PSEA))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(geomnode_ptr.NEXT.ZA))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(geomnode_ptr.NEXT.THEA))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(geomnode_ptr.NEXT.PHEA))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(geomnode_ptr.NEXT.PSEA))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(geomnode_ptr.NEXT.NEXT.ZA))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(geomnode_ptr.NEXT.NEXT.THEA))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(geomnode_ptr.NEXT.NEXT.PHEA))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(geomnode_ptr.NEXT.NEXT.PSEA))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(port_ptr.PSC))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(port_ptr.PSH))
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, \old(port_ptr.PPA))
geomnode_ptr.GEOMPORT_PTR == \old(geomnode_ptr.GEOMPORT_PTR)
geomnode_ptr.GEOMPORT_PTR.[0] == \old(geomnode_ptr.GEOMPORT_PTR.[0])
daikon.Quant.fuzzy.eq(geomnode_ptr.GEOMPORT_PTR.AMP, \old(geomnode_ptr.GEOMPORT_PTR.AMP))
geomnode_ptr.GEOMPORT_PTR.NEXT == geomnode_ptr.NEXT.GEOMPORT_PTR.NEXT
geomnode_ptr.GEOMPORT_PTR.NEXT == \old(geomnode_ptr.GEOMPORT_PTR.NEXT)
geomnode_ptr.GEOMPORT_PTR.NEXT == \old(geomnode_ptr.NEXT.GEOMPORT_PTR.NEXT)
geomnode_ptr.NEXT == \old(geomnode_ptr.NEXT)
geomnode_ptr.NEXT.[0] == \old(geomnode_ptr.NEXT.[0])
geomnode_ptr.NEXT.LOC_P == \old(geomnode_ptr.NEXT.LOC_P)
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.XA, \old(geomnode_ptr.NEXT.XA))
geomnode_ptr.NEXT.GEOMPORT_PTR == \old(geomnode_ptr.NEXT.GEOMPORT_PTR)
geomnode_ptr.NEXT.GEOMPORT_PTR.[0] == \old(geomnode_ptr.NEXT.GEOMPORT_PTR.[0])
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.GEOMPORT_PTR.AMP, \old(geomnode_ptr.NEXT.GEOMPORT_PTR.AMP))
geomnode_ptr.NEXT.NEXT == \old(geomnode_ptr.NEXT.NEXT)
geomnode_ptr.NEXT.NEXT.[0] == \old(geomnode_ptr.NEXT.NEXT.[0])
geomnode_ptr.NEXT.NEXT.LOC_P == \old(geomnode_ptr.NEXT.NEXT.LOC_P)
geomnode_ptr.NEXT.NEXT.LOC_Q == port_ptr.PORTNUM
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.NEXT.XA, \old(geomnode_ptr.NEXT.NEXT.XA))
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.NEXT.YA, \old(geomnode_ptr.NEXT.NEXT.YA))
geomnode_ptr.NEXT.NEXT.GEOMPORT_PTR == \old(geomnode_ptr.NEXT.NEXT.GEOMPORT_PTR)
geomnode_ptr.NEXT.NEXT.GEOMPORT_PTR.[0] == \old(geomnode_ptr.NEXT.NEXT.GEOMPORT_PTR.[0])
geomnode_ptr.NEXT.NEXT.NEXT == \old(geomnode_ptr.NEXT.NEXT.NEXT)
geomnode_ptr.NEXT.NEXT.NEXT.[0] == \old(geomnode_ptr.NEXT.NEXT.NEXT.[0])
geomnode_ptr.NEXT.NEXT.SUBGROUP_PTR == geomnode_ptr.SUBGROUP_PTR
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.NEXT.PSIZE, geomnode_ptr.PSIZE)
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.NEXT.QSIZE, geomnode_ptr.PSIZE)
geomnode_ptr.NEXT.SUBGROUP_PTR == geomnode_ptr.SUBGROUP_PTR
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.PSIZE, geomnode_ptr.PSIZE)
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.QSIZE, geomnode_ptr.PSIZE)
geomnode_ptr.SUBGROUP_PTR == \old(geomnode_ptr.NEXT.NEXT.SUBGROUP_PTR)
geomnode_ptr.SUBGROUP_PTR == \old(geomnode_ptr.NEXT.SUBGROUP_PTR)
geomnode_ptr.SUBGROUP_PTR == \old(geomnode_ptr.SUBGROUP_PTR)
daikon.Quant.fuzzy.eq(geomnode_ptr.PSIZE, geomnode_ptr.QSIZE)
daikon.Quant.fuzzy.eq(geomnode_ptr.PSIZE, \old(geomnode_ptr.NEXT.NEXT.PSIZE))
daikon.Quant.fuzzy.eq(geomnode_ptr.PSIZE, \old(geomnode_ptr.NEXT.NEXT.QSIZE))
daikon.Quant.fuzzy.eq(geomnode_ptr.PSIZE, \old(geomnode_ptr.NEXT.PSIZE))
daikon.Quant.fuzzy.eq(geomnode_ptr.PSIZE, \old(geomnode_ptr.NEXT.QSIZE))
daikon.Quant.fuzzy.eq(geomnode_ptr.PSIZE, \old(geomnode_ptr.PSIZE))
daikon.Quant.fuzzy.eq(geomnode_ptr.PSIZE, \old(geomnode_ptr.QSIZE))
port_ptr.[0] == \old(port_ptr.[0])
port_ptr.PORTNUM == port_ptr.OMIT_POL
port_ptr.PORTNUM == \old(geomnode_ptr.NEXT.NEXT.LOC_Q)
port_ptr.PORTNUM == \old(port_ptr.PORTNUM)
port_ptr.PORTNUM == \old(port_ptr.OMIT_POL)
daikon.Quant.fuzzy.eq(port_ptr.AMP, \old(port_ptr.AMP))
port_ptr.AMP_UNIT == return
port_ptr.PSC_UNIT == return
port_ptr.PSH_UNIT == return
port_ptr.PPA_UNIT == return
daikon.Quant.fuzzy.eq(port_ptr.PHEPOL, \old(port_ptr.PHEPOL))
port_ptr.PHEPOL_UNIT == return
port_ptr.NEXT == \old(port_ptr.NEXT)
return == \old(grphaexc_ptr.TYPE)
return == \old(grphaexc_ptr.PHASE_UNIT)
return == \old(port_ptr.AMP_UNIT)
return == \old(port_ptr.PSC_UNIT)
return == \old(port_ptr.PSH_UNIT)
return == \old(port_ptr.PPA_UNIT)
return == \old(port_ptr.PHEPOL_UNIT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
grphaexc_ptr.[0] != null
daikon.Quant.fuzzy.eq(grphaexc_ptr.UNIF_VAL, -219.0)
grphaexc_ptr.PQEXP_PTR == null
geomnode_ptr.[0] != null
geomnode_ptr.LOC_P == 8
geomnode_ptr.LOC_Q == 2
daikon.Quant.fuzzy.eq(geomnode_ptr.XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(geomnode_ptr.YA, 148.95636946268272)
daikon.Quant.fuzzy.eq(geomnode_ptr.ZA, 0.0)
geomnode_ptr.GEOMPORT_PTR != null
geomnode_ptr.GEOMPORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(geomnode_ptr.GEOMPORT_PTR.AMP, 28.999999999999886)
geomnode_ptr.GEOMPORT_PTR.NEXT == null
geomnode_ptr.NEXT != null
geomnode_ptr.NEXT.[0] != null
geomnode_ptr.NEXT.LOC_P == 9
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.XA, 859.9999999796324)
geomnode_ptr.NEXT.GEOMPORT_PTR != null
geomnode_ptr.NEXT.GEOMPORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.GEOMPORT_PTR.AMP, 21.99999999999994)
geomnode_ptr.NEXT.NEXT != null
geomnode_ptr.NEXT.NEXT.[0] != null
geomnode_ptr.NEXT.NEXT.LOC_P == 10
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.NEXT.XA, 902.9999999898162)
daikon.Quant.fuzzy.eq(geomnode_ptr.NEXT.NEXT.YA, 74.47818473134136)
geomnode_ptr.NEXT.NEXT.GEOMPORT_PTR != null
geomnode_ptr.NEXT.NEXT.GEOMPORT_PTR.[0] != null
geomnode_ptr.NEXT.NEXT.NEXT != null
geomnode_ptr.NEXT.NEXT.NEXT.[0] != null
geomnode_ptr.SUBGROUP_PTR == null
daikon.Quant.fuzzy.eq(geomnode_ptr.PSIZE, 86.0)
port_ptr.[0] != null
port_ptr.PORTNUM == 1
daikon.Quant.fuzzy.eq(port_ptr.AMP, 1.0)
daikon.Quant.fuzzy.eq(port_ptr.PHEPOL, 90.0)
port_ptr.NEXT == null
return == 0
===========================================================================
..simamp():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME group_ptr group_ptr[0] group_ptr->NAME group_ptr->GRID_PTR group_ptr->GRID_PTR[0] group_ptr->GRID_PTR->NAME group_ptr->GRID_PTR->LEVEL group_ptr->GRID_PTR->TYPE group_ptr->GRID_PTR->ORIENT group_ptr->GRID_PTR->ANGLE group_ptr->GRID_PTR->ANGLE_UNIT group_ptr->GRID_PTR->PSTEP group_ptr->GRID_PTR->QSTEP group_ptr->GRID_PTR->PQSTEP_UNIT group_ptr->GRID_PTR->PX group_ptr->GRID_PTR->PY group_ptr->GRID_PTR->QX group_ptr->GRID_PTR->QY group_ptr->GRID_PTR->PQXY_UNIT group_ptr->GRID_PTR->ROT_ANGLE group_ptr->ELEM_PTR group_ptr->ELEM_PTR[0] group_ptr->ELEM_PTR->TYPE group_ptr->ELEM_PTR->NAME group_ptr->ELEM_PTR->LEVEL group_ptr->ELEM_PTR->GEOMETRY group_ptr->ELEM_PTR->RADIUS group_ptr->ELEM_PTR->RADIUS_UNIT group_ptr->ELEM_PTR->PDIM group_ptr->ELEM_PTR->QDIM group_ptr->ELEM_PTR->PQDIM_UNIT group_ptr->ELEM_PTR->MODEL group_ptr->ELEM_PTR->EXP group_ptr->ELEM_PTR->ANGLEE group_ptr->ELEM_PTR->ANGLEH group_ptr->ELEM_PTR->ANGLE_UNIT group_ptr->ELEM_PTR->TAPERE group_ptr->ELEM_PTR->TAPERH group_ptr->ELEM_PTR->TAPER_UNIT group_ptr->ELEM_PTR->POLARIZATION group_ptr->ELEM_PTR->PHEPOL group_ptr->ELEM_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->DIRECTION group_ptr->ELEM_PTR->GAIN group_ptr->ELEM_PTR->GAIN_UNIT group_ptr->ELEM_PTR->NPORTS group_ptr->ELEM_PTR->PORT_PTR group_ptr->ELEM_PTR->PORT_PTR[0] group_ptr->ELEM_PTR->PORT_PTR->PORTNUM group_ptr->ELEM_PTR->PORT_PTR->AMP group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSC group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSH group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr->ELEM_PTR->PORT_PTR->PPA group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr->ELEM_PTR->PORT_PTR->PHEPOL group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr->ELEM_PTR->PORT_PTR->NEXT group_ptr->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr->ADDREM_PTR group_ptr->ADDREM_PTR[0] group_ptr->ADDREM_PTR->ADDREM_TYPE group_ptr->ADDREM_PTR->BLOCK_TYPE group_ptr->ADDREM_PTR->NODE_PTR group_ptr->ADDREM_PTR->NODE_PTR[0] group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr->ADDREM_PTR->NODE_PTR->PCOORD group_ptr->ADDREM_PTR->NODE_PTR->QCOORD group_ptr->ADDREM_PTR->NODE_PTR->THEA group_ptr->ADDREM_PTR->NODE_PTR->PHEA group_ptr->ADDREM_PTR->NODE_PTR->PSEA group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr->ADDREM_PTR->NODE_PTR->NEXT group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT group_ptr->ADDREM_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr->ADDREM_PTR->NEXT->NODE_PTR group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr->ADDREM_PTR->NEXT->NEXT group_ptr->ADDREM_PTR->NEXT->NEXT[0] group_ptr->GRAMPEXC_PTR group_ptr->GRAMPEXC_PTR[0] group_ptr->GRAMPEXC_PTR->TYPE group_ptr->GRAMPEXC_PTR->UNIF_VAL group_ptr->GRAMPEXC_PTR->CENTRE group_ptr->GRAMPEXC_PTR->P1_ET group_ptr->GRAMPEXC_PTR->P2_ET group_ptr->GRAMPEXC_PTR->Q1_ET group_ptr->GRAMPEXC_PTR->Q2_ET group_ptr->GRAMPEXC_PTR->AMP_UNIT group_ptr->GRAMPEXC_PTR->PQEXP_PTR group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR group_ptr->GRPHAEXC_PTR[0] group_ptr->GRPHAEXC_PTR->TYPE group_ptr->GRPHAEXC_PTR->UNIF_VAL group_ptr->GRPHAEXC_PTR->CENTRE group_ptr->GRPHAEXC_PTR->P1_EP group_ptr->GRPHAEXC_PTR->P2_EP group_ptr->GRPHAEXC_PTR->Q1_EP group_ptr->GRPHAEXC_PTR->Q2_EP group_ptr->GRPHAEXC_PTR->DIRECTION group_ptr->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->GRPHAEXC_PTR->ANGLE_START group_ptr->GRPHAEXC_PTR->ANGLE_STEP group_ptr->GRPHAEXC_PTR->OMIT_PHASE group_ptr->GRPHAEXC_PTR->PHASE_START group_ptr->GRPHAEXC_PTR->PHASE_STEP group_ptr->GRPHAEXC_PTR->U group_ptr->GRPHAEXC_PTR->V group_ptr->GRPHAEXC_PTR->THETA group_ptr->GRPHAEXC_PTR->PHI group_ptr->GRPHAEXC_PTR->PQEXP_PTR group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->GRPHAEXC_PTR->PHASE_UNIT group_ptr->ERR_PTR group_ptr->ERR_PTR[0] group_ptr->ERR_PTR->AMP_TYPE group_ptr->ERR_PTR->AMP_STDEV group_ptr->ERR_PTR->AMP_LINOFFS group_ptr->ERR_PTR->AMP_LINSTEP group_ptr->ERR_PTR->AMP_2NDCENT group_ptr->ERR_PTR->AMP_2NDPET group_ptr->ERR_PTR->AMP_2NDQET group_ptr->ERR_PTR->AMP_UNIT group_ptr->ERR_PTR->PHASE_TYPE group_ptr->ERR_PTR->PHASE_STDEV group_ptr->ERR_PTR->PHASE_LINOFFS group_ptr->ERR_PTR->PHASE_LINSTEP group_ptr->ERR_PTR->PHASE_2NDCENT group_ptr->ERR_PTR->PHASE_2NDPSID group_ptr->ERR_PTR->PHASE_2NDQSID group_ptr->ERR_PTR->PHASE_QUANTSTEP group_ptr->ERR_PTR->PHASE_UNIT group_ptr->FAIL_PTR group_ptr->FAIL_PTR[0] group_ptr->FAIL_PTR->NUM_FAULTY_EL group_ptr->FAIL_PTR->FIXED_AMP group_ptr->FAIL_PTR->FIXED_PHASE group_ptr->NEXT group_ptr->NEXT[0] group_ptr->NEXT->NAME group_ptr->NEXT->GRID_PTR group_ptr->NEXT->GRID_PTR[0] group_ptr->NEXT->GRID_PTR->NAME group_ptr->NEXT->GRID_PTR->LEVEL group_ptr->NEXT->GRID_PTR->TYPE group_ptr->NEXT->GRID_PTR->ORIENT group_ptr->NEXT->GRID_PTR->ANGLE group_ptr->NEXT->GRID_PTR->ANGLE_UNIT group_ptr->NEXT->GRID_PTR->PSTEP group_ptr->NEXT->GRID_PTR->QSTEP group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr->NEXT->GRID_PTR->PX group_ptr->NEXT->GRID_PTR->PY group_ptr->NEXT->GRID_PTR->QX group_ptr->NEXT->GRID_PTR->QY group_ptr->NEXT->GRID_PTR->PQXY_UNIT group_ptr->NEXT->GRID_PTR->ROT_ANGLE group_ptr->NEXT->ELEM_PTR group_ptr->NEXT->ELEM_PTR[0] group_ptr->NEXT->ELEM_PTR->TYPE group_ptr->NEXT->ELEM_PTR->NAME group_ptr->NEXT->ELEM_PTR->LEVEL group_ptr->NEXT->ELEM_PTR->GEOMETRY group_ptr->NEXT->ELEM_PTR->RADIUS group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr->NEXT->ELEM_PTR->PDIM group_ptr->NEXT->ELEM_PTR->QDIM group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr->NEXT->ELEM_PTR->MODEL group_ptr->NEXT->ELEM_PTR->EXP group_ptr->NEXT->ELEM_PTR->ANGLEE group_ptr->NEXT->ELEM_PTR->ANGLEH group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr->NEXT->ELEM_PTR->TAPERE group_ptr->NEXT->ELEM_PTR->TAPERH group_ptr->NEXT->ELEM_PTR->TAPER_UNIT group_ptr->NEXT->ELEM_PTR->POLARIZATION group_ptr->NEXT->ELEM_PTR->PHEPOL group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr->NEXT->ELEM_PTR->DIRECTION group_ptr->NEXT->ELEM_PTR->GAIN group_ptr->NEXT->ELEM_PTR->GAIN_UNIT group_ptr->NEXT->ELEM_PTR->NPORTS group_ptr->NEXT->ELEM_PTR->PORT_PTR group_ptr->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr->NEXT->ADDREM_PTR group_ptr->NEXT->ADDREM_PTR[0] group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr->NEXT->ADDREM_PTR->NODE_PTR group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr->NEXT->ADDREM_PTR->NEXT group_ptr->NEXT->ADDREM_PTR->NEXT[0] group_ptr->NEXT->GRAMPEXC_PTR group_ptr->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->GRAMPEXC_PTR->TYPE group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr->NEXT->GRAMPEXC_PTR->CENTRE group_ptr->NEXT->GRAMPEXC_PTR->P1_ET group_ptr->NEXT->GRAMPEXC_PTR->P2_ET group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR group_ptr->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->TYPE group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr->NEXT->GRPHAEXC_PTR->CENTRE group_ptr->NEXT->GRPHAEXC_PTR->P1_EP group_ptr->NEXT->GRPHAEXC_PTR->P2_EP group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr->NEXT->GRPHAEXC_PTR->U group_ptr->NEXT->GRPHAEXC_PTR->V group_ptr->NEXT->GRPHAEXC_PTR->THETA group_ptr->NEXT->GRPHAEXC_PTR->PHI group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr->NEXT->ERR_PTR group_ptr->NEXT->ERR_PTR[0] group_ptr->NEXT->ERR_PTR->AMP_TYPE group_ptr->NEXT->ERR_PTR->AMP_STDEV group_ptr->NEXT->ERR_PTR->AMP_LINOFFS group_ptr->NEXT->ERR_PTR->AMP_LINSTEP group_ptr->NEXT->ERR_PTR->AMP_2NDCENT group_ptr->NEXT->ERR_PTR->AMP_2NDPET group_ptr->NEXT->ERR_PTR->AMP_2NDQET group_ptr->NEXT->ERR_PTR->AMP_UNIT group_ptr->NEXT->ERR_PTR->PHASE_TYPE group_ptr->NEXT->ERR_PTR->PHASE_STDEV group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr->NEXT->ERR_PTR->PHASE_UNIT group_ptr->NEXT->FAIL_PTR group_ptr->NEXT->FAIL_PTR[0] group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr->NEXT->FAIL_PTR->FIXED_AMP group_ptr->NEXT->FAIL_PTR->FIXED_PHASE group_ptr->NEXT->NEXT group_ptr->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NAME group_ptr->NEXT->NEXT->GRID_PTR group_ptr->NEXT->NEXT->GRID_PTR[0] group_ptr->NEXT->NEXT->ELEM_PTR group_ptr->NEXT->NEXT->ELEM_PTR[0] group_ptr->NEXT->NEXT->ADDREM_PTR group_ptr->NEXT->NEXT->ADDREM_PTR[0] group_ptr->NEXT->NEXT->GRAMPEXC_PTR group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->NEXT->GRPHAEXC_PTR group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->NEXT->ERR_PTR group_ptr->NEXT->NEXT->ERR_PTR[0] group_ptr->NEXT->NEXT->FAIL_PTR group_ptr->NEXT->NEXT->FAIL_PTR[0] group_ptr->NEXT->NEXT->NEXT group_ptr->NEXT->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NUM_OF_NODES group_ptr->NEXT->NEXT->SHAPE group_ptr->NEXT->NEXT->PSIZE group_ptr->NEXT->NEXT->QSIZE group_ptr->NEXT->NEXT->GEOMNODE_PTR group_ptr->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->NEXT->BUILT group_ptr->NEXT->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr->NEXT->NUM_OF_NODES group_ptr->NEXT->SHAPE group_ptr->NEXT->PSIZE group_ptr->NEXT->QSIZE group_ptr->NEXT->GEOMNODE_PTR group_ptr->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->LOC_P group_ptr->NEXT->GEOMNODE_PTR->LOC_Q group_ptr->NEXT->GEOMNODE_PTR->XA group_ptr->NEXT->GEOMNODE_PTR->YA group_ptr->NEXT->GEOMNODE_PTR->ZA group_ptr->NEXT->GEOMNODE_PTR->THEA group_ptr->NEXT->GEOMNODE_PTR->PHEA group_ptr->NEXT->GEOMNODE_PTR->PSEA group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->NEXT group_ptr->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->SHAPE group_ptr->NEXT->GEOMNODE_PTR->PSIZE group_ptr->NEXT->GEOMNODE_PTR->QSIZE group_ptr->NEXT->BUILT group_ptr->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->SUPER_GROUP_PTR[0] group_ptr->NUM_OF_NODES group_ptr->SHAPE group_ptr->PSIZE group_ptr->QSIZE group_ptr->GEOMNODE_PTR group_ptr->GEOMNODE_PTR[0] group_ptr->GEOMNODE_PTR->LOC_P group_ptr->GEOMNODE_PTR->LOC_Q group_ptr->GEOMNODE_PTR->XA group_ptr->GEOMNODE_PTR->YA group_ptr->GEOMNODE_PTR->ZA group_ptr->GEOMNODE_PTR->THEA group_ptr->GEOMNODE_PTR->PHEA group_ptr->GEOMNODE_PTR->PSEA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->NEXT group_ptr->GEOMNODE_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->GEOMNODE_PTR->SHAPE group_ptr->GEOMNODE_PTR->PSIZE group_ptr->GEOMNODE_PTR->QSIZE group_ptr->BUILT group_ptr->SUPER_GROUP_PTR group_ptr->SUPER_GROUP_PTR[0]
::UserNames.equals(group_ptr.NAME)
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.LEVEL
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.GEOMETRY
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.NPORTS
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.PORTNUM
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL
group_ptr.GRID_PTR.LEVEL == group_ptr.ADDREM_PTR.NODE_PTR.QCOORD
group_ptr.GRID_PTR.LEVEL == group_ptr.GRAMPEXC_PTR.TYPE
group_ptr.GRID_PTR.TYPE == group_ptr.SHAPE
group_ptr.GRID_PTR.ANGLE_UNIT == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GRID_PTR.QSTEP)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.PDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.QDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.QSIZE)
group_ptr.GRID_PTR.PQSTEP_UNIT == group_ptr.BUILT
group_ptr.GRID_PTR.PQXY_UNIT == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.GAIN)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSH)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PPA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.ZA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PSEA)
group_ptr.ELEM_PTR.TYPE == group_ptr.BUILT
group_ptr.ELEM_PTR.RADIUS_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PQDIM_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.MODEL == group_ptr.BUILT
group_ptr.ELEM_PTR.POLARIZATION == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.ELEM_PTR.PORT_PTR.PHEPOL)
group_ptr.ELEM_PTR.PHEPOL_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.DIRECTION == group_ptr.BUILT
group_ptr.ELEM_PTR.GAIN_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT == group_ptr.BUILT
group_ptr.ADDREM_PTR.ADDREM_TYPE == group_ptr.BUILT
group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, group_ptr.GRAMPEXC_PTR.Q2_ET)
group_ptr.GRAMPEXC_PTR.AMP_UNIT == group_ptr.BUILT
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == group_ptr.GRPHAEXC_PTR.PQEXP_PTR
group_ptr.GRPHAEXC_PTR.TYPE == group_ptr.BUILT
group_ptr.GRPHAEXC_PTR.PHASE_UNIT == group_ptr.BUILT
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.LOC_Q
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.SHAPE
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, group_ptr.QSIZE)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
group_ptr != null
group_ptr.[0] != null
group_ptr.GRID_PTR != null
group_ptr.GRID_PTR.LEVEL == 1
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, 60.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, 86.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, 0.0)
group_ptr.ELEM_PTR != null
group_ptr.ELEM_PTR.[0] != null
group_ptr.ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, 90.0)
group_ptr.ELEM_PTR.PORT_PTR != null
group_ptr.ELEM_PTR.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, 1.0)
group_ptr.ELEM_PTR.PORT_PTR.NEXT == null
group_ptr.ADDREM_PTR != null
group_ptr.ADDREM_PTR.[0] != null
group_ptr.ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.ADDREM_PTR.NODE_PTR != null
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.ADDREM_PTR.NEXT == null
group_ptr.GRAMPEXC_PTR != null
group_ptr.GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.GRPHAEXC_PTR != null
group_ptr.GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.ERR_PTR == null
group_ptr.FAIL_PTR == null
group_ptr.NUM_OF_NODES == 7
group_ptr.SHAPE == 2
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, 258.0)
group_ptr.GEOMNODE_PTR != null
group_ptr.GEOMNODE_PTR.[0] != null
group_ptr.GEOMNODE_PTR.LOC_P == 8
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.YA, 148.95636946268272)
group_ptr.GEOMNODE_PTR.NEXT != null
group_ptr.GEOMNODE_PTR.NEXT.[0] != null
group_ptr.GEOMNODE_PTR.SUBGROUP_PTR == null
group_ptr.BUILT == 0
group_ptr.SUPER_GROUP_PTR != null
===========================================================================
..simamp():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME group_ptr group_ptr[0] group_ptr->NAME group_ptr->GRID_PTR group_ptr->GRID_PTR[0] group_ptr->GRID_PTR->NAME group_ptr->GRID_PTR->LEVEL group_ptr->GRID_PTR->TYPE group_ptr->GRID_PTR->ORIENT group_ptr->GRID_PTR->ANGLE group_ptr->GRID_PTR->ANGLE_UNIT group_ptr->GRID_PTR->PSTEP group_ptr->GRID_PTR->QSTEP group_ptr->GRID_PTR->PQSTEP_UNIT group_ptr->GRID_PTR->PX group_ptr->GRID_PTR->PY group_ptr->GRID_PTR->QX group_ptr->GRID_PTR->QY group_ptr->GRID_PTR->PQXY_UNIT group_ptr->GRID_PTR->ROT_ANGLE group_ptr->ELEM_PTR group_ptr->ELEM_PTR[0] group_ptr->ELEM_PTR->TYPE group_ptr->ELEM_PTR->NAME group_ptr->ELEM_PTR->LEVEL group_ptr->ELEM_PTR->GEOMETRY group_ptr->ELEM_PTR->RADIUS group_ptr->ELEM_PTR->RADIUS_UNIT group_ptr->ELEM_PTR->PDIM group_ptr->ELEM_PTR->QDIM group_ptr->ELEM_PTR->PQDIM_UNIT group_ptr->ELEM_PTR->MODEL group_ptr->ELEM_PTR->EXP group_ptr->ELEM_PTR->ANGLEE group_ptr->ELEM_PTR->ANGLEH group_ptr->ELEM_PTR->ANGLE_UNIT group_ptr->ELEM_PTR->TAPERE group_ptr->ELEM_PTR->TAPERH group_ptr->ELEM_PTR->TAPER_UNIT group_ptr->ELEM_PTR->POLARIZATION group_ptr->ELEM_PTR->PHEPOL group_ptr->ELEM_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->DIRECTION group_ptr->ELEM_PTR->GAIN group_ptr->ELEM_PTR->GAIN_UNIT group_ptr->ELEM_PTR->NPORTS group_ptr->ELEM_PTR->PORT_PTR group_ptr->ELEM_PTR->PORT_PTR[0] group_ptr->ELEM_PTR->PORT_PTR->PORTNUM group_ptr->ELEM_PTR->PORT_PTR->AMP group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSC group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSH group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr->ELEM_PTR->PORT_PTR->PPA group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr->ELEM_PTR->PORT_PTR->PHEPOL group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr->ELEM_PTR->PORT_PTR->NEXT group_ptr->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr->ADDREM_PTR group_ptr->ADDREM_PTR[0] group_ptr->ADDREM_PTR->ADDREM_TYPE group_ptr->ADDREM_PTR->BLOCK_TYPE group_ptr->ADDREM_PTR->NODE_PTR group_ptr->ADDREM_PTR->NODE_PTR[0] group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr->ADDREM_PTR->NODE_PTR->PCOORD group_ptr->ADDREM_PTR->NODE_PTR->QCOORD group_ptr->ADDREM_PTR->NODE_PTR->THEA group_ptr->ADDREM_PTR->NODE_PTR->PHEA group_ptr->ADDREM_PTR->NODE_PTR->PSEA group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr->ADDREM_PTR->NODE_PTR->NEXT group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT group_ptr->ADDREM_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr->ADDREM_PTR->NEXT->NODE_PTR group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr->ADDREM_PTR->NEXT->NEXT group_ptr->ADDREM_PTR->NEXT->NEXT[0] group_ptr->GRAMPEXC_PTR group_ptr->GRAMPEXC_PTR[0] group_ptr->GRAMPEXC_PTR->TYPE group_ptr->GRAMPEXC_PTR->UNIF_VAL group_ptr->GRAMPEXC_PTR->CENTRE group_ptr->GRAMPEXC_PTR->P1_ET group_ptr->GRAMPEXC_PTR->P2_ET group_ptr->GRAMPEXC_PTR->Q1_ET group_ptr->GRAMPEXC_PTR->Q2_ET group_ptr->GRAMPEXC_PTR->AMP_UNIT group_ptr->GRAMPEXC_PTR->PQEXP_PTR group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR group_ptr->GRPHAEXC_PTR[0] group_ptr->GRPHAEXC_PTR->TYPE group_ptr->GRPHAEXC_PTR->UNIF_VAL group_ptr->GRPHAEXC_PTR->CENTRE group_ptr->GRPHAEXC_PTR->P1_EP group_ptr->GRPHAEXC_PTR->P2_EP group_ptr->GRPHAEXC_PTR->Q1_EP group_ptr->GRPHAEXC_PTR->Q2_EP group_ptr->GRPHAEXC_PTR->DIRECTION group_ptr->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->GRPHAEXC_PTR->ANGLE_START group_ptr->GRPHAEXC_PTR->ANGLE_STEP group_ptr->GRPHAEXC_PTR->OMIT_PHASE group_ptr->GRPHAEXC_PTR->PHASE_START group_ptr->GRPHAEXC_PTR->PHASE_STEP group_ptr->GRPHAEXC_PTR->U group_ptr->GRPHAEXC_PTR->V group_ptr->GRPHAEXC_PTR->THETA group_ptr->GRPHAEXC_PTR->PHI group_ptr->GRPHAEXC_PTR->PQEXP_PTR group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->GRPHAEXC_PTR->PHASE_UNIT group_ptr->ERR_PTR group_ptr->ERR_PTR[0] group_ptr->ERR_PTR->AMP_TYPE group_ptr->ERR_PTR->AMP_STDEV group_ptr->ERR_PTR->AMP_LINOFFS group_ptr->ERR_PTR->AMP_LINSTEP group_ptr->ERR_PTR->AMP_2NDCENT group_ptr->ERR_PTR->AMP_2NDPET group_ptr->ERR_PTR->AMP_2NDQET group_ptr->ERR_PTR->AMP_UNIT group_ptr->ERR_PTR->PHASE_TYPE group_ptr->ERR_PTR->PHASE_STDEV group_ptr->ERR_PTR->PHASE_LINOFFS group_ptr->ERR_PTR->PHASE_LINSTEP group_ptr->ERR_PTR->PHASE_2NDCENT group_ptr->ERR_PTR->PHASE_2NDPSID group_ptr->ERR_PTR->PHASE_2NDQSID group_ptr->ERR_PTR->PHASE_QUANTSTEP group_ptr->ERR_PTR->PHASE_UNIT group_ptr->FAIL_PTR group_ptr->FAIL_PTR[0] group_ptr->FAIL_PTR->NUM_FAULTY_EL group_ptr->FAIL_PTR->FIXED_AMP group_ptr->FAIL_PTR->FIXED_PHASE group_ptr->NEXT group_ptr->NEXT[0] group_ptr->NEXT->NAME group_ptr->NEXT->GRID_PTR group_ptr->NEXT->GRID_PTR[0] group_ptr->NEXT->GRID_PTR->NAME group_ptr->NEXT->GRID_PTR->LEVEL group_ptr->NEXT->GRID_PTR->TYPE group_ptr->NEXT->GRID_PTR->ORIENT group_ptr->NEXT->GRID_PTR->ANGLE group_ptr->NEXT->GRID_PTR->ANGLE_UNIT group_ptr->NEXT->GRID_PTR->PSTEP group_ptr->NEXT->GRID_PTR->QSTEP group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr->NEXT->GRID_PTR->PX group_ptr->NEXT->GRID_PTR->PY group_ptr->NEXT->GRID_PTR->QX group_ptr->NEXT->GRID_PTR->QY group_ptr->NEXT->GRID_PTR->PQXY_UNIT group_ptr->NEXT->GRID_PTR->ROT_ANGLE group_ptr->NEXT->ELEM_PTR group_ptr->NEXT->ELEM_PTR[0] group_ptr->NEXT->ELEM_PTR->TYPE group_ptr->NEXT->ELEM_PTR->NAME group_ptr->NEXT->ELEM_PTR->LEVEL group_ptr->NEXT->ELEM_PTR->GEOMETRY group_ptr->NEXT->ELEM_PTR->RADIUS group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr->NEXT->ELEM_PTR->PDIM group_ptr->NEXT->ELEM_PTR->QDIM group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr->NEXT->ELEM_PTR->MODEL group_ptr->NEXT->ELEM_PTR->EXP group_ptr->NEXT->ELEM_PTR->ANGLEE group_ptr->NEXT->ELEM_PTR->ANGLEH group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr->NEXT->ELEM_PTR->TAPERE group_ptr->NEXT->ELEM_PTR->TAPERH group_ptr->NEXT->ELEM_PTR->TAPER_UNIT group_ptr->NEXT->ELEM_PTR->POLARIZATION group_ptr->NEXT->ELEM_PTR->PHEPOL group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr->NEXT->ELEM_PTR->DIRECTION group_ptr->NEXT->ELEM_PTR->GAIN group_ptr->NEXT->ELEM_PTR->GAIN_UNIT group_ptr->NEXT->ELEM_PTR->NPORTS group_ptr->NEXT->ELEM_PTR->PORT_PTR group_ptr->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr->NEXT->ADDREM_PTR group_ptr->NEXT->ADDREM_PTR[0] group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr->NEXT->ADDREM_PTR->NODE_PTR group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr->NEXT->ADDREM_PTR->NEXT group_ptr->NEXT->ADDREM_PTR->NEXT[0] group_ptr->NEXT->GRAMPEXC_PTR group_ptr->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->GRAMPEXC_PTR->TYPE group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr->NEXT->GRAMPEXC_PTR->CENTRE group_ptr->NEXT->GRAMPEXC_PTR->P1_ET group_ptr->NEXT->GRAMPEXC_PTR->P2_ET group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR group_ptr->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->TYPE group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr->NEXT->GRPHAEXC_PTR->CENTRE group_ptr->NEXT->GRPHAEXC_PTR->P1_EP group_ptr->NEXT->GRPHAEXC_PTR->P2_EP group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr->NEXT->GRPHAEXC_PTR->U group_ptr->NEXT->GRPHAEXC_PTR->V group_ptr->NEXT->GRPHAEXC_PTR->THETA group_ptr->NEXT->GRPHAEXC_PTR->PHI group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr->NEXT->ERR_PTR group_ptr->NEXT->ERR_PTR[0] group_ptr->NEXT->ERR_PTR->AMP_TYPE group_ptr->NEXT->ERR_PTR->AMP_STDEV group_ptr->NEXT->ERR_PTR->AMP_LINOFFS group_ptr->NEXT->ERR_PTR->AMP_LINSTEP group_ptr->NEXT->ERR_PTR->AMP_2NDCENT group_ptr->NEXT->ERR_PTR->AMP_2NDPET group_ptr->NEXT->ERR_PTR->AMP_2NDQET group_ptr->NEXT->ERR_PTR->AMP_UNIT group_ptr->NEXT->ERR_PTR->PHASE_TYPE group_ptr->NEXT->ERR_PTR->PHASE_STDEV group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr->NEXT->ERR_PTR->PHASE_UNIT group_ptr->NEXT->FAIL_PTR group_ptr->NEXT->FAIL_PTR[0] group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr->NEXT->FAIL_PTR->FIXED_AMP group_ptr->NEXT->FAIL_PTR->FIXED_PHASE group_ptr->NEXT->NEXT group_ptr->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NAME group_ptr->NEXT->NEXT->GRID_PTR group_ptr->NEXT->NEXT->GRID_PTR[0] group_ptr->NEXT->NEXT->ELEM_PTR group_ptr->NEXT->NEXT->ELEM_PTR[0] group_ptr->NEXT->NEXT->ADDREM_PTR group_ptr->NEXT->NEXT->ADDREM_PTR[0] group_ptr->NEXT->NEXT->GRAMPEXC_PTR group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->NEXT->GRPHAEXC_PTR group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->NEXT->ERR_PTR group_ptr->NEXT->NEXT->ERR_PTR[0] group_ptr->NEXT->NEXT->FAIL_PTR group_ptr->NEXT->NEXT->FAIL_PTR[0] group_ptr->NEXT->NEXT->NEXT group_ptr->NEXT->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NUM_OF_NODES group_ptr->NEXT->NEXT->SHAPE group_ptr->NEXT->NEXT->PSIZE group_ptr->NEXT->NEXT->QSIZE group_ptr->NEXT->NEXT->GEOMNODE_PTR group_ptr->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->NEXT->BUILT group_ptr->NEXT->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr->NEXT->NUM_OF_NODES group_ptr->NEXT->SHAPE group_ptr->NEXT->PSIZE group_ptr->NEXT->QSIZE group_ptr->NEXT->GEOMNODE_PTR group_ptr->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->LOC_P group_ptr->NEXT->GEOMNODE_PTR->LOC_Q group_ptr->NEXT->GEOMNODE_PTR->XA group_ptr->NEXT->GEOMNODE_PTR->YA group_ptr->NEXT->GEOMNODE_PTR->ZA group_ptr->NEXT->GEOMNODE_PTR->THEA group_ptr->NEXT->GEOMNODE_PTR->PHEA group_ptr->NEXT->GEOMNODE_PTR->PSEA group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->NEXT group_ptr->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->SHAPE group_ptr->NEXT->GEOMNODE_PTR->PSIZE group_ptr->NEXT->GEOMNODE_PTR->QSIZE group_ptr->NEXT->BUILT group_ptr->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->SUPER_GROUP_PTR[0] group_ptr->NUM_OF_NODES group_ptr->SHAPE group_ptr->PSIZE group_ptr->QSIZE group_ptr->GEOMNODE_PTR group_ptr->GEOMNODE_PTR[0] group_ptr->GEOMNODE_PTR->LOC_P group_ptr->GEOMNODE_PTR->LOC_Q group_ptr->GEOMNODE_PTR->XA group_ptr->GEOMNODE_PTR->YA group_ptr->GEOMNODE_PTR->ZA group_ptr->GEOMNODE_PTR->THEA group_ptr->GEOMNODE_PTR->PHEA group_ptr->GEOMNODE_PTR->PSEA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->NEXT group_ptr->GEOMNODE_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->GEOMNODE_PTR->SHAPE group_ptr->GEOMNODE_PTR->PSIZE group_ptr->GEOMNODE_PTR->QSIZE group_ptr->BUILT group_ptr->SUPER_GROUP_PTR group_ptr->SUPER_GROUP_PTR[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(group_ptr) orig(group_ptr[0]) orig(group_ptr->NAME) orig(group_ptr->GRID_PTR) orig(group_ptr->GRID_PTR[0]) orig(group_ptr->GRID_PTR->NAME) orig(group_ptr->GRID_PTR->LEVEL) orig(group_ptr->GRID_PTR->TYPE) orig(group_ptr->GRID_PTR->ORIENT) orig(group_ptr->GRID_PTR->ANGLE) orig(group_ptr->GRID_PTR->ANGLE_UNIT) orig(group_ptr->GRID_PTR->PSTEP) orig(group_ptr->GRID_PTR->QSTEP) orig(group_ptr->GRID_PTR->PQSTEP_UNIT) orig(group_ptr->GRID_PTR->PX) orig(group_ptr->GRID_PTR->PY) orig(group_ptr->GRID_PTR->QX) orig(group_ptr->GRID_PTR->QY) orig(group_ptr->GRID_PTR->PQXY_UNIT) orig(group_ptr->GRID_PTR->ROT_ANGLE) orig(group_ptr->ELEM_PTR) orig(group_ptr->ELEM_PTR[0]) orig(group_ptr->ELEM_PTR->TYPE) orig(group_ptr->ELEM_PTR->NAME) orig(group_ptr->ELEM_PTR->LEVEL) orig(group_ptr->ELEM_PTR->GEOMETRY) orig(group_ptr->ELEM_PTR->RADIUS) orig(group_ptr->ELEM_PTR->RADIUS_UNIT) orig(group_ptr->ELEM_PTR->PDIM) orig(group_ptr->ELEM_PTR->QDIM) orig(group_ptr->ELEM_PTR->PQDIM_UNIT) orig(group_ptr->ELEM_PTR->MODEL) orig(group_ptr->ELEM_PTR->EXP) orig(group_ptr->ELEM_PTR->ANGLEE) orig(group_ptr->ELEM_PTR->ANGLEH) orig(group_ptr->ELEM_PTR->ANGLE_UNIT) orig(group_ptr->ELEM_PTR->TAPERE) orig(group_ptr->ELEM_PTR->TAPERH) orig(group_ptr->ELEM_PTR->TAPER_UNIT) orig(group_ptr->ELEM_PTR->POLARIZATION) orig(group_ptr->ELEM_PTR->PHEPOL) orig(group_ptr->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr->ELEM_PTR->DIRECTION) orig(group_ptr->ELEM_PTR->GAIN) orig(group_ptr->ELEM_PTR->GAIN_UNIT) orig(group_ptr->ELEM_PTR->NPORTS) orig(group_ptr->ELEM_PTR->PORT_PTR) orig(group_ptr->ELEM_PTR->PORT_PTR[0]) orig(group_ptr->ELEM_PTR->PORT_PTR->PORTNUM) orig(group_ptr->ELEM_PTR->PORT_PTR->AMP) orig(group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PSC) orig(group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PSH) orig(group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PPA) orig(group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PHEPOL) orig(group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL) orig(group_ptr->ELEM_PTR->PORT_PTR->NEXT) orig(group_ptr->ELEM_PTR->PORT_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR) orig(group_ptr->ADDREM_PTR[0]) orig(group_ptr->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr->ADDREM_PTR->NODE_PTR) orig(group_ptr->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT) orig(group_ptr->ADDREM_PTR->NODE_PTR->PCOORD) orig(group_ptr->ADDREM_PTR->NODE_PTR->QCOORD) orig(group_ptr->ADDREM_PTR->NODE_PTR->THEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->PHEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->PSEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT) orig(group_ptr->ADDREM_PTR->NODE_PTR->NEXT) orig(group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR->NEXT) orig(group_ptr->ADDREM_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE) orig(group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE) orig(group_ptr->ADDREM_PTR->NEXT->NODE_PTR) orig(group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0]) orig(group_ptr->ADDREM_PTR->NEXT->NEXT) orig(group_ptr->ADDREM_PTR->NEXT->NEXT[0]) orig(group_ptr->GRAMPEXC_PTR) orig(group_ptr->GRAMPEXC_PTR[0]) orig(group_ptr->GRAMPEXC_PTR->TYPE) orig(group_ptr->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr->GRAMPEXC_PTR->CENTRE) orig(group_ptr->GRAMPEXC_PTR->P1_ET) orig(group_ptr->GRAMPEXC_PTR->P2_ET) orig(group_ptr->GRAMPEXC_PTR->Q1_ET) orig(group_ptr->GRAMPEXC_PTR->Q2_ET) orig(group_ptr->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr->GRPHAEXC_PTR) orig(group_ptr->GRPHAEXC_PTR[0]) orig(group_ptr->GRPHAEXC_PTR->TYPE) orig(group_ptr->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr->GRPHAEXC_PTR->CENTRE) orig(group_ptr->GRPHAEXC_PTR->P1_EP) orig(group_ptr->GRPHAEXC_PTR->P2_EP) orig(group_ptr->GRPHAEXC_PTR->Q1_EP) orig(group_ptr->GRPHAEXC_PTR->Q2_EP) orig(group_ptr->GRPHAEXC_PTR->DIRECTION) orig(group_ptr->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr->GRPHAEXC_PTR->PHASE_START) orig(group_ptr->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr->GRPHAEXC_PTR->U) orig(group_ptr->GRPHAEXC_PTR->V) orig(group_ptr->GRPHAEXC_PTR->THETA) orig(group_ptr->GRPHAEXC_PTR->PHI) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr->ERR_PTR) orig(group_ptr->ERR_PTR[0]) orig(group_ptr->ERR_PTR->AMP_TYPE) orig(group_ptr->ERR_PTR->AMP_STDEV) orig(group_ptr->ERR_PTR->AMP_LINOFFS) orig(group_ptr->ERR_PTR->AMP_LINSTEP) orig(group_ptr->ERR_PTR->AMP_2NDCENT) orig(group_ptr->ERR_PTR->AMP_2NDPET) orig(group_ptr->ERR_PTR->AMP_2NDQET) orig(group_ptr->ERR_PTR->AMP_UNIT) orig(group_ptr->ERR_PTR->PHASE_TYPE) orig(group_ptr->ERR_PTR->PHASE_STDEV) orig(group_ptr->ERR_PTR->PHASE_LINOFFS) orig(group_ptr->ERR_PTR->PHASE_LINSTEP) orig(group_ptr->ERR_PTR->PHASE_2NDCENT) orig(group_ptr->ERR_PTR->PHASE_2NDPSID) orig(group_ptr->ERR_PTR->PHASE_2NDQSID) orig(group_ptr->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr->ERR_PTR->PHASE_UNIT) orig(group_ptr->FAIL_PTR) orig(group_ptr->FAIL_PTR[0]) orig(group_ptr->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr->FAIL_PTR->FIXED_AMP) orig(group_ptr->FAIL_PTR->FIXED_PHASE) orig(group_ptr->NEXT) orig(group_ptr->NEXT[0]) orig(group_ptr->NEXT->NAME) orig(group_ptr->NEXT->GRID_PTR) orig(group_ptr->NEXT->GRID_PTR[0]) orig(group_ptr->NEXT->GRID_PTR->NAME) orig(group_ptr->NEXT->GRID_PTR->LEVEL) orig(group_ptr->NEXT->GRID_PTR->TYPE) orig(group_ptr->NEXT->GRID_PTR->ORIENT) orig(group_ptr->NEXT->GRID_PTR->ANGLE) orig(group_ptr->NEXT->GRID_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->GRID_PTR->PSTEP) orig(group_ptr->NEXT->GRID_PTR->QSTEP) orig(group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT) orig(group_ptr->NEXT->GRID_PTR->PX) orig(group_ptr->NEXT->GRID_PTR->PY) orig(group_ptr->NEXT->GRID_PTR->QX) orig(group_ptr->NEXT->GRID_PTR->QY) orig(group_ptr->NEXT->GRID_PTR->PQXY_UNIT) orig(group_ptr->NEXT->GRID_PTR->ROT_ANGLE) orig(group_ptr->NEXT->ELEM_PTR) orig(group_ptr->NEXT->ELEM_PTR[0]) orig(group_ptr->NEXT->ELEM_PTR->TYPE) orig(group_ptr->NEXT->ELEM_PTR->NAME) orig(group_ptr->NEXT->ELEM_PTR->LEVEL) orig(group_ptr->NEXT->ELEM_PTR->GEOMETRY) orig(group_ptr->NEXT->ELEM_PTR->RADIUS) orig(group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT) orig(group_ptr->NEXT->ELEM_PTR->PDIM) orig(group_ptr->NEXT->ELEM_PTR->QDIM) orig(group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT) orig(group_ptr->NEXT->ELEM_PTR->MODEL) orig(group_ptr->NEXT->ELEM_PTR->EXP) orig(group_ptr->NEXT->ELEM_PTR->ANGLEE) orig(group_ptr->NEXT->ELEM_PTR->ANGLEH) orig(group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->ELEM_PTR->TAPERE) orig(group_ptr->NEXT->ELEM_PTR->TAPERH) orig(group_ptr->NEXT->ELEM_PTR->TAPER_UNIT) orig(group_ptr->NEXT->ELEM_PTR->POLARIZATION) orig(group_ptr->NEXT->ELEM_PTR->PHEPOL) orig(group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr->NEXT->ELEM_PTR->DIRECTION) orig(group_ptr->NEXT->ELEM_PTR->GAIN) orig(group_ptr->NEXT->ELEM_PTR->GAIN_UNIT) orig(group_ptr->NEXT->ELEM_PTR->NPORTS) orig(group_ptr->NEXT->ELEM_PTR->PORT_PTR) orig(group_ptr->NEXT->ELEM_PTR->PORT_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR) orig(group_ptr->NEXT->ADDREM_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr->NEXT->ADDREM_PTR->NODE_PTR) orig(group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR->NEXT) orig(group_ptr->NEXT->ADDREM_PTR->NEXT[0]) orig(group_ptr->NEXT->GRAMPEXC_PTR) orig(group_ptr->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr->NEXT->GRAMPEXC_PTR->TYPE) orig(group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr->NEXT->GRAMPEXC_PTR->CENTRE) orig(group_ptr->NEXT->GRAMPEXC_PTR->P1_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->P2_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR) orig(group_ptr->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR->TYPE) orig(group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr->NEXT->GRPHAEXC_PTR->CENTRE) orig(group_ptr->NEXT->GRPHAEXC_PTR->P1_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->P2_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION) orig(group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr->NEXT->GRPHAEXC_PTR->U) orig(group_ptr->NEXT->GRPHAEXC_PTR->V) orig(group_ptr->NEXT->GRPHAEXC_PTR->THETA) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHI) orig(group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr->NEXT->ERR_PTR) orig(group_ptr->NEXT->ERR_PTR[0]) orig(group_ptr->NEXT->ERR_PTR->AMP_TYPE) orig(group_ptr->NEXT->ERR_PTR->AMP_STDEV) orig(group_ptr->NEXT->ERR_PTR->AMP_LINOFFS) orig(group_ptr->NEXT->ERR_PTR->AMP_LINSTEP) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDCENT) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDPET) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDQET) orig(group_ptr->NEXT->ERR_PTR->AMP_UNIT) orig(group_ptr->NEXT->ERR_PTR->PHASE_TYPE) orig(group_ptr->NEXT->ERR_PTR->PHASE_STDEV) orig(group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS) orig(group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID) orig(group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr->NEXT->ERR_PTR->PHASE_UNIT) orig(group_ptr->NEXT->FAIL_PTR) orig(group_ptr->NEXT->FAIL_PTR[0]) orig(group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr->NEXT->FAIL_PTR->FIXED_AMP) orig(group_ptr->NEXT->FAIL_PTR->FIXED_PHASE) orig(group_ptr->NEXT->NEXT) orig(group_ptr->NEXT->NEXT[0]) orig(group_ptr->NEXT->NEXT->NAME) orig(group_ptr->NEXT->NEXT->GRID_PTR) orig(group_ptr->NEXT->NEXT->GRID_PTR[0]) orig(group_ptr->NEXT->NEXT->ELEM_PTR) orig(group_ptr->NEXT->NEXT->ELEM_PTR[0]) orig(group_ptr->NEXT->NEXT->ADDREM_PTR) orig(group_ptr->NEXT->NEXT->ADDREM_PTR[0]) orig(group_ptr->NEXT->NEXT->GRAMPEXC_PTR) orig(group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr->NEXT->NEXT->GRPHAEXC_PTR) orig(group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr->NEXT->NEXT->ERR_PTR) orig(group_ptr->NEXT->NEXT->ERR_PTR[0]) orig(group_ptr->NEXT->NEXT->FAIL_PTR) orig(group_ptr->NEXT->NEXT->FAIL_PTR[0]) orig(group_ptr->NEXT->NEXT->NEXT) orig(group_ptr->NEXT->NEXT->NEXT[0]) orig(group_ptr->NEXT->NEXT->NUM_OF_NODES) orig(group_ptr->NEXT->NEXT->SHAPE) orig(group_ptr->NEXT->NEXT->PSIZE) orig(group_ptr->NEXT->NEXT->QSIZE) orig(group_ptr->NEXT->NEXT->GEOMNODE_PTR) orig(group_ptr->NEXT->NEXT->GEOMNODE_PTR[0]) orig(group_ptr->NEXT->NEXT->BUILT) orig(group_ptr->NEXT->NEXT->SUPER_GROUP_PTR) orig(group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr->NEXT->NUM_OF_NODES) orig(group_ptr->NEXT->SHAPE) orig(group_ptr->NEXT->PSIZE) orig(group_ptr->NEXT->QSIZE) orig(group_ptr->NEXT->GEOMNODE_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->LOC_P) orig(group_ptr->NEXT->GEOMNODE_PTR->LOC_Q) orig(group_ptr->NEXT->GEOMNODE_PTR->XA) orig(group_ptr->NEXT->GEOMNODE_PTR->YA) orig(group_ptr->NEXT->GEOMNODE_PTR->ZA) orig(group_ptr->NEXT->GEOMNODE_PTR->THEA) orig(group_ptr->NEXT->GEOMNODE_PTR->PHEA) orig(group_ptr->NEXT->GEOMNODE_PTR->PSEA) orig(group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->NEXT) orig(group_ptr->NEXT->GEOMNODE_PTR->NEXT[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->SHAPE) orig(group_ptr->NEXT->GEOMNODE_PTR->PSIZE) orig(group_ptr->NEXT->GEOMNODE_PTR->QSIZE) orig(group_ptr->NEXT->BUILT) orig(group_ptr->NEXT->SUPER_GROUP_PTR) orig(group_ptr->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr->NUM_OF_NODES) orig(group_ptr->SHAPE) orig(group_ptr->PSIZE) orig(group_ptr->QSIZE) orig(group_ptr->GEOMNODE_PTR) orig(group_ptr->GEOMNODE_PTR[0]) orig(group_ptr->GEOMNODE_PTR->LOC_P) orig(group_ptr->GEOMNODE_PTR->LOC_Q) orig(group_ptr->GEOMNODE_PTR->XA) orig(group_ptr->GEOMNODE_PTR->YA) orig(group_ptr->GEOMNODE_PTR->ZA) orig(group_ptr->GEOMNODE_PTR->THEA) orig(group_ptr->GEOMNODE_PTR->PHEA) orig(group_ptr->GEOMNODE_PTR->PSEA) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0]) orig(group_ptr->GEOMNODE_PTR->NEXT) orig(group_ptr->GEOMNODE_PTR->NEXT[0]) orig(group_ptr->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr->GEOMNODE_PTR->SHAPE) orig(group_ptr->GEOMNODE_PTR->PSIZE) orig(group_ptr->GEOMNODE_PTR->QSIZE) orig(group_ptr->BUILT) orig(group_ptr->SUPER_GROUP_PTR) orig(group_ptr->SUPER_GROUP_PTR[0])
assignable group_ptr->GRID_PTR[0], group_ptr->GRID_PTR->NAME, group_ptr->GRID_PTR->ORIENT, group_ptr->GRID_PTR->PX, group_ptr->GRID_PTR->PY, group_ptr->GRID_PTR->QX, group_ptr->GRID_PTR->QY, group_ptr->ELEM_PTR->EXP, group_ptr->ELEM_PTR->ANGLEE, group_ptr->ELEM_PTR->ANGLEH, group_ptr->ELEM_PTR->ANGLE_UNIT, group_ptr->ELEM_PTR->TAPERE, group_ptr->ELEM_PTR->TAPERH, group_ptr->ELEM_PTR->TAPER_UNIT, group_ptr->ELEM_PTR->PORT_PTR->NEXT[0], group_ptr->ADDREM_PTR->NODE_PTR[0], group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT, group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0], group_ptr->ADDREM_PTR->NEXT[0], group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE, group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE, group_ptr->ADDREM_PTR->NEXT->NODE_PTR, group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0], group_ptr->ADDREM_PTR->NEXT->NEXT, group_ptr->ADDREM_PTR->NEXT->NEXT[0], group_ptr->GRAMPEXC_PTR->UNIF_VAL, group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy, group_ptr->GRPHAEXC_PTR->CENTRE, group_ptr->GRPHAEXC_PTR->P1_EP, group_ptr->GRPHAEXC_PTR->P2_EP, group_ptr->GRPHAEXC_PTR->Q1_EP, group_ptr->GRPHAEXC_PTR->Q2_EP, group_ptr->GRPHAEXC_PTR->DIRECTION, group_ptr->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr->GRPHAEXC_PTR->ANGLE_START, group_ptr->GRPHAEXC_PTR->ANGLE_STEP, group_ptr->GRPHAEXC_PTR->OMIT_PHASE, group_ptr->GRPHAEXC_PTR->PHASE_START, group_ptr->GRPHAEXC_PTR->PHASE_STEP, group_ptr->GRPHAEXC_PTR->U, group_ptr->GRPHAEXC_PTR->V, group_ptr->GRPHAEXC_PTR->THETA, group_ptr->GRPHAEXC_PTR->PHI, group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy, group_ptr->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr->ERR_PTR[0], group_ptr->ERR_PTR->AMP_TYPE, group_ptr->ERR_PTR->AMP_STDEV, group_ptr->ERR_PTR->AMP_LINOFFS, group_ptr->ERR_PTR->AMP_LINSTEP, group_ptr->ERR_PTR->AMP_2NDCENT, group_ptr->ERR_PTR->AMP_2NDPET, group_ptr->ERR_PTR->AMP_2NDQET, group_ptr->ERR_PTR->AMP_UNIT, group_ptr->ERR_PTR->PHASE_TYPE, group_ptr->ERR_PTR->PHASE_STDEV, group_ptr->ERR_PTR->PHASE_LINOFFS, group_ptr->ERR_PTR->PHASE_LINSTEP, group_ptr->ERR_PTR->PHASE_2NDCENT, group_ptr->ERR_PTR->PHASE_2NDPSID, group_ptr->ERR_PTR->PHASE_2NDQSID, group_ptr->ERR_PTR->PHASE_QUANTSTEP, group_ptr->ERR_PTR->PHASE_UNIT, group_ptr->FAIL_PTR[0], group_ptr->FAIL_PTR->NUM_FAULTY_EL, group_ptr->FAIL_PTR->FIXED_AMP, group_ptr->FAIL_PTR->FIXED_PHASE, group_ptr->NEXT, group_ptr->NEXT[0], group_ptr->NEXT->NAME, group_ptr->NEXT->GRID_PTR, group_ptr->NEXT->GRID_PTR[0], group_ptr->NEXT->GRID_PTR->NAME, group_ptr->NEXT->GRID_PTR->LEVEL, group_ptr->NEXT->GRID_PTR->TYPE, group_ptr->NEXT->GRID_PTR->ORIENT, group_ptr->NEXT->GRID_PTR->ANGLE, group_ptr->NEXT->GRID_PTR->ANGLE_UNIT, group_ptr->NEXT->GRID_PTR->PSTEP, group_ptr->NEXT->GRID_PTR->QSTEP, group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT, group_ptr->NEXT->GRID_PTR->PX, group_ptr->NEXT->GRID_PTR->PY, group_ptr->NEXT->GRID_PTR->QX, group_ptr->NEXT->GRID_PTR->QY, group_ptr->NEXT->GRID_PTR->PQXY_UNIT, group_ptr->NEXT->GRID_PTR->ROT_ANGLE, group_ptr->NEXT->ELEM_PTR, group_ptr->NEXT->ELEM_PTR[0], group_ptr->NEXT->ELEM_PTR->TYPE, group_ptr->NEXT->ELEM_PTR->NAME, group_ptr->NEXT->ELEM_PTR->LEVEL, group_ptr->NEXT->ELEM_PTR->GEOMETRY, group_ptr->NEXT->ELEM_PTR->RADIUS, group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT, group_ptr->NEXT->ELEM_PTR->PDIM, group_ptr->NEXT->ELEM_PTR->QDIM, group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT, group_ptr->NEXT->ELEM_PTR->MODEL, group_ptr->NEXT->ELEM_PTR->EXP, group_ptr->NEXT->ELEM_PTR->ANGLEE, group_ptr->NEXT->ELEM_PTR->ANGLEH, group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT, group_ptr->NEXT->ELEM_PTR->TAPERE, group_ptr->NEXT->ELEM_PTR->TAPERH, group_ptr->NEXT->ELEM_PTR->TAPER_UNIT, group_ptr->NEXT->ELEM_PTR->POLARIZATION, group_ptr->NEXT->ELEM_PTR->PHEPOL, group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT, group_ptr->NEXT->ELEM_PTR->DIRECTION, group_ptr->NEXT->ELEM_PTR->GAIN, group_ptr->NEXT->ELEM_PTR->GAIN_UNIT, group_ptr->NEXT->ELEM_PTR->NPORTS, group_ptr->NEXT->ELEM_PTR->PORT_PTR, group_ptr->NEXT->ELEM_PTR->PORT_PTR[0], group_ptr->NEXT->ADDREM_PTR, group_ptr->NEXT->ADDREM_PTR[0], group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE, group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE, group_ptr->NEXT->ADDREM_PTR->NODE_PTR, group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0], group_ptr->NEXT->ADDREM_PTR->NEXT, group_ptr->NEXT->ADDREM_PTR->NEXT[0], group_ptr->NEXT->GRAMPEXC_PTR, group_ptr->NEXT->GRAMPEXC_PTR[0], group_ptr->NEXT->GRAMPEXC_PTR->TYPE, group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL, group_ptr->NEXT->GRAMPEXC_PTR->CENTRE, group_ptr->NEXT->GRAMPEXC_PTR->P1_ET, group_ptr->NEXT->GRAMPEXC_PTR->P2_ET, group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET, group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET, group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT, group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR, group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR, group_ptr->NEXT->GRPHAEXC_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR->TYPE, group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL, group_ptr->NEXT->GRPHAEXC_PTR->CENTRE, group_ptr->NEXT->GRPHAEXC_PTR->P1_EP, group_ptr->NEXT->GRPHAEXC_PTR->P2_EP, group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP, group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP, group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION, group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START, group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP, group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP, group_ptr->NEXT->GRPHAEXC_PTR->U, group_ptr->NEXT->GRPHAEXC_PTR->V, group_ptr->NEXT->GRPHAEXC_PTR->THETA, group_ptr->NEXT->GRPHAEXC_PTR->PHI, group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR, group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT, group_ptr->NEXT->ERR_PTR, group_ptr->NEXT->ERR_PTR[0], group_ptr->NEXT->ERR_PTR->AMP_TYPE, group_ptr->NEXT->ERR_PTR->AMP_STDEV, group_ptr->NEXT->ERR_PTR->AMP_LINOFFS, group_ptr->NEXT->ERR_PTR->AMP_LINSTEP, group_ptr->NEXT->ERR_PTR->AMP_2NDCENT, group_ptr->NEXT->ERR_PTR->AMP_2NDPET, group_ptr->NEXT->ERR_PTR->AMP_2NDQET, group_ptr->NEXT->ERR_PTR->AMP_UNIT, group_ptr->NEXT->ERR_PTR->PHASE_TYPE, group_ptr->NEXT->ERR_PTR->PHASE_STDEV, group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS, group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP, group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT, group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID, group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID, group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP, group_ptr->NEXT->ERR_PTR->PHASE_UNIT, group_ptr->NEXT->FAIL_PTR, group_ptr->NEXT->FAIL_PTR[0], group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL, group_ptr->NEXT->FAIL_PTR->FIXED_AMP, group_ptr->NEXT->FAIL_PTR->FIXED_PHASE, group_ptr->NEXT->NEXT, group_ptr->NEXT->NEXT[0], group_ptr->NEXT->NEXT->NAME, group_ptr->NEXT->NEXT->GRID_PTR, group_ptr->NEXT->NEXT->GRID_PTR[0], group_ptr->NEXT->NEXT->ELEM_PTR, group_ptr->NEXT->NEXT->ELEM_PTR[0], group_ptr->NEXT->NEXT->ADDREM_PTR, group_ptr->NEXT->NEXT->ADDREM_PTR[0], group_ptr->NEXT->NEXT->GRAMPEXC_PTR, group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0], group_ptr->NEXT->NEXT->GRPHAEXC_PTR, group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0], group_ptr->NEXT->NEXT->ERR_PTR, group_ptr->NEXT->NEXT->ERR_PTR[0], group_ptr->NEXT->NEXT->FAIL_PTR, group_ptr->NEXT->NEXT->FAIL_PTR[0], group_ptr->NEXT->NEXT->NEXT, group_ptr->NEXT->NEXT->NEXT[0], group_ptr->NEXT->NEXT->NUM_OF_NODES, group_ptr->NEXT->NEXT->SHAPE, group_ptr->NEXT->NEXT->PSIZE, group_ptr->NEXT->NEXT->QSIZE, group_ptr->NEXT->NEXT->GEOMNODE_PTR, group_ptr->NEXT->NEXT->GEOMNODE_PTR[0], group_ptr->NEXT->NEXT->BUILT, group_ptr->NEXT->NEXT->SUPER_GROUP_PTR, group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0], group_ptr->NEXT->NUM_OF_NODES, group_ptr->NEXT->SHAPE, group_ptr->NEXT->PSIZE, group_ptr->NEXT->QSIZE, group_ptr->NEXT->GEOMNODE_PTR, group_ptr->NEXT->GEOMNODE_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->LOC_P, group_ptr->NEXT->GEOMNODE_PTR->LOC_Q, group_ptr->NEXT->GEOMNODE_PTR->XA, group_ptr->NEXT->GEOMNODE_PTR->YA, group_ptr->NEXT->GEOMNODE_PTR->ZA, group_ptr->NEXT->GEOMNODE_PTR->THEA, group_ptr->NEXT->GEOMNODE_PTR->PHEA, group_ptr->NEXT->GEOMNODE_PTR->PSEA, group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR, group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->NEXT, group_ptr->NEXT->GEOMNODE_PTR->NEXT[0], group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR, group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->SHAPE, group_ptr->NEXT->GEOMNODE_PTR->PSIZE, group_ptr->NEXT->GEOMNODE_PTR->QSIZE, group_ptr->NEXT->BUILT, group_ptr->NEXT->SUPER_GROUP_PTR, group_ptr->NEXT->SUPER_GROUP_PTR[0], group_ptr->GEOMNODE_PTR->GEOMPORT_PTR, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0], group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0], group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr->SUPER_GROUP_PTR[0]
::UserNames.equals(group_ptr.NAME)
::UserNames.equals(\old(::UserNames))
::UserNames.equals(\old(group_ptr.NAME))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
group_ptr.[0] == \old(group_ptr.[0])
group_ptr.GRID_PTR == \old(group_ptr.GRID_PTR)
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.LEVEL
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.GEOMETRY
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.NPORTS
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.PORTNUM
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL
group_ptr.GRID_PTR.LEVEL == group_ptr.ADDREM_PTR.NODE_PTR.QCOORD
group_ptr.GRID_PTR.LEVEL == group_ptr.GRAMPEXC_PTR.TYPE
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.GRID_PTR.LEVEL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.LEVEL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.GEOMETRY)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.NPORTS)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.PORT_PTR.PORTNUM)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ADDREM_PTR.NODE_PTR.QCOORD)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.GRAMPEXC_PTR.TYPE)
group_ptr.GRID_PTR.TYPE == group_ptr.SHAPE
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, \old(group_ptr.GRID_PTR.ANGLE))
group_ptr.GRID_PTR.ANGLE_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GRID_PTR.QSTEP)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.PDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.QDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.QSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GRID_PTR.PSTEP))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GRID_PTR.QSTEP))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.ELEM_PTR.PDIM))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.ELEM_PTR.QDIM))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GEOMNODE_PTR.PSIZE))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GEOMNODE_PTR.QSIZE))
group_ptr.GRID_PTR.PQSTEP_UNIT == return
group_ptr.GRID_PTR.PQXY_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.GAIN)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSH)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PPA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.ZA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GRID_PTR.ROT_ANGLE))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.GAIN))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PSC))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PSH))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PPA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.THEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.PHEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.PSEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.ZA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.THEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.PHEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.PSEA))
group_ptr.ELEM_PTR == \old(group_ptr.ELEM_PTR)
group_ptr.ELEM_PTR.[0] == \old(group_ptr.ELEM_PTR.[0])
group_ptr.ELEM_PTR.TYPE == return
group_ptr.ELEM_PTR.NAME.equals(\old(group_ptr.ELEM_PTR.NAME))
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, \old(group_ptr.ELEM_PTR.RADIUS))
group_ptr.ELEM_PTR.RADIUS_UNIT == return
group_ptr.ELEM_PTR.PQDIM_UNIT == return
group_ptr.ELEM_PTR.MODEL == return
group_ptr.ELEM_PTR.POLARIZATION == return
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.ELEM_PTR.PORT_PTR.PHEPOL)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, \old(group_ptr.ELEM_PTR.PHEPOL))
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, \old(group_ptr.ELEM_PTR.PORT_PTR.PHEPOL))
group_ptr.ELEM_PTR.PHEPOL_UNIT == return
group_ptr.ELEM_PTR.DIRECTION == return
group_ptr.ELEM_PTR.GAIN_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR == \old(group_ptr.ELEM_PTR.PORT_PTR)
group_ptr.ELEM_PTR.PORT_PTR.[0] == \old(group_ptr.ELEM_PTR.PORT_PTR.[0])
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, \old(group_ptr.ELEM_PTR.PORT_PTR.AMP))
group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.NEXT == \old(group_ptr.ELEM_PTR.PORT_PTR.NEXT)
group_ptr.ADDREM_PTR == \old(group_ptr.ADDREM_PTR)
group_ptr.ADDREM_PTR.[0] == \old(group_ptr.ADDREM_PTR.[0])
group_ptr.ADDREM_PTR.ADDREM_TYPE == return
group_ptr.ADDREM_PTR.BLOCK_TYPE == \old(group_ptr.ADDREM_PTR.BLOCK_TYPE)
group_ptr.ADDREM_PTR.NODE_PTR == \old(group_ptr.ADDREM_PTR.NODE_PTR)
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == \old(group_ptr.ADDREM_PTR.NODE_PTR.PCOORD)
group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT == return
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == \old(group_ptr.ADDREM_PTR.NODE_PTR.NEXT)
group_ptr.ADDREM_PTR.NEXT == \old(group_ptr.ADDREM_PTR.NEXT)
group_ptr.GRAMPEXC_PTR == \old(group_ptr.GRAMPEXC_PTR)
group_ptr.GRAMPEXC_PTR.[0] == \old(group_ptr.GRAMPEXC_PTR.[0])
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, \old(group_ptr.GRAMPEXC_PTR.CENTRE))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, group_ptr.GRAMPEXC_PTR.Q2_ET)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, \old(group_ptr.GRAMPEXC_PTR.P1_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, \old(group_ptr.GRAMPEXC_PTR.Q2_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, \old(group_ptr.GRAMPEXC_PTR.P2_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, \old(group_ptr.GRAMPEXC_PTR.Q1_ET))
group_ptr.GRAMPEXC_PTR.AMP_UNIT == return
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == group_ptr.GRPHAEXC_PTR.PQEXP_PTR
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == \old(group_ptr.GRAMPEXC_PTR.PQEXP_PTR)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == \old(group_ptr.GRPHAEXC_PTR.PQEXP_PTR)
group_ptr.GRPHAEXC_PTR == \old(group_ptr.GRPHAEXC_PTR)
group_ptr.GRPHAEXC_PTR.[0] == \old(group_ptr.GRPHAEXC_PTR.[0])
group_ptr.GRPHAEXC_PTR.TYPE == return
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, \old(group_ptr.GRPHAEXC_PTR.UNIF_VAL))
group_ptr.GRPHAEXC_PTR.PHASE_UNIT == return
group_ptr.ERR_PTR == \old(group_ptr.ERR_PTR)
group_ptr.FAIL_PTR == \old(group_ptr.FAIL_PTR)
group_ptr.NUM_OF_NODES == \old(group_ptr.NUM_OF_NODES)
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.LOC_Q
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.SHAPE
group_ptr.SHAPE == \old(group_ptr.GRID_PTR.TYPE)
group_ptr.SHAPE == \old(group_ptr.SHAPE)
group_ptr.SHAPE == \old(group_ptr.GEOMNODE_PTR.LOC_Q)
group_ptr.SHAPE == \old(group_ptr.GEOMNODE_PTR.SHAPE)
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, group_ptr.QSIZE)
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.PSIZE))
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.QSIZE))
group_ptr.GEOMNODE_PTR.LOC_P == \old(group_ptr.GEOMNODE_PTR.LOC_P)
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.XA, \old(group_ptr.GEOMNODE_PTR.XA))
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.YA, \old(group_ptr.GEOMNODE_PTR.YA))
group_ptr.BUILT == return
return == \old(group_ptr.GRID_PTR.ANGLE_UNIT)
return == \old(group_ptr.GRID_PTR.PQSTEP_UNIT)
return == \old(group_ptr.GRID_PTR.PQXY_UNIT)
return == \old(group_ptr.ELEM_PTR.TYPE)
return == \old(group_ptr.ELEM_PTR.RADIUS_UNIT)
return == \old(group_ptr.ELEM_PTR.PQDIM_UNIT)
return == \old(group_ptr.ELEM_PTR.MODEL)
return == \old(group_ptr.ELEM_PTR.POLARIZATION)
return == \old(group_ptr.ELEM_PTR.PHEPOL_UNIT)
return == \old(group_ptr.ELEM_PTR.DIRECTION)
return == \old(group_ptr.ELEM_PTR.GAIN_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT)
return == \old(group_ptr.ADDREM_PTR.ADDREM_TYPE)
return == \old(group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT)
return == \old(group_ptr.GRAMPEXC_PTR.AMP_UNIT)
return == \old(group_ptr.GRPHAEXC_PTR.TYPE)
return == \old(group_ptr.GRPHAEXC_PTR.PHASE_UNIT)
return == \old(group_ptr.BUILT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
group_ptr.[0] != null
group_ptr.GRID_PTR != null
group_ptr.GRID_PTR.LEVEL == 1
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, 60.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, 86.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, 0.0)
group_ptr.ELEM_PTR != null
group_ptr.ELEM_PTR.[0] != null
group_ptr.ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, 90.0)
group_ptr.ELEM_PTR.PORT_PTR != null
group_ptr.ELEM_PTR.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, 1.0)
group_ptr.ELEM_PTR.PORT_PTR.NEXT == null
group_ptr.ADDREM_PTR != null
group_ptr.ADDREM_PTR.[0] != null
group_ptr.ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.ADDREM_PTR.NODE_PTR != null
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.ADDREM_PTR.NEXT == null
group_ptr.GRAMPEXC_PTR != null
group_ptr.GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.GRPHAEXC_PTR != null
group_ptr.GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.ERR_PTR == null
group_ptr.FAIL_PTR == null
group_ptr.NUM_OF_NODES == 7
group_ptr.SHAPE == 2
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, 258.0)
group_ptr.GEOMNODE_PTR != null
group_ptr.GEOMNODE_PTR.[0] != null
group_ptr.GEOMNODE_PTR.LOC_P == 8
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.YA, 148.95636946268272)
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR != null
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP, 28.999999999999886)
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.NEXT == null
group_ptr.GEOMNODE_PTR.NEXT != null
group_ptr.GEOMNODE_PTR.NEXT.[0] != null
group_ptr.GEOMNODE_PTR.SUBGROUP_PTR == null
group_ptr.SUPER_GROUP_PTR != null
return == 0
===========================================================================
..simgroup():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME group_ptr group_ptr[0] group_ptr->NAME group_ptr->GRID_PTR group_ptr->GRID_PTR[0] group_ptr->GRID_PTR->NAME group_ptr->GRID_PTR->LEVEL group_ptr->GRID_PTR->TYPE group_ptr->GRID_PTR->ORIENT group_ptr->GRID_PTR->ANGLE group_ptr->GRID_PTR->ANGLE_UNIT group_ptr->GRID_PTR->PSTEP group_ptr->GRID_PTR->QSTEP group_ptr->GRID_PTR->PQSTEP_UNIT group_ptr->GRID_PTR->PX group_ptr->GRID_PTR->PY group_ptr->GRID_PTR->QX group_ptr->GRID_PTR->QY group_ptr->GRID_PTR->PQXY_UNIT group_ptr->GRID_PTR->ROT_ANGLE group_ptr->ELEM_PTR group_ptr->ELEM_PTR[0] group_ptr->ELEM_PTR->TYPE group_ptr->ELEM_PTR->NAME group_ptr->ELEM_PTR->LEVEL group_ptr->ELEM_PTR->GEOMETRY group_ptr->ELEM_PTR->RADIUS group_ptr->ELEM_PTR->RADIUS_UNIT group_ptr->ELEM_PTR->PDIM group_ptr->ELEM_PTR->QDIM group_ptr->ELEM_PTR->PQDIM_UNIT group_ptr->ELEM_PTR->MODEL group_ptr->ELEM_PTR->EXP group_ptr->ELEM_PTR->ANGLEE group_ptr->ELEM_PTR->ANGLEH group_ptr->ELEM_PTR->ANGLE_UNIT group_ptr->ELEM_PTR->TAPERE group_ptr->ELEM_PTR->TAPERH group_ptr->ELEM_PTR->TAPER_UNIT group_ptr->ELEM_PTR->POLARIZATION group_ptr->ELEM_PTR->PHEPOL group_ptr->ELEM_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->DIRECTION group_ptr->ELEM_PTR->GAIN group_ptr->ELEM_PTR->GAIN_UNIT group_ptr->ELEM_PTR->NPORTS group_ptr->ELEM_PTR->PORT_PTR group_ptr->ELEM_PTR->PORT_PTR[0] group_ptr->ELEM_PTR->PORT_PTR->PORTNUM group_ptr->ELEM_PTR->PORT_PTR->AMP group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSC group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSH group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr->ELEM_PTR->PORT_PTR->PPA group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr->ELEM_PTR->PORT_PTR->PHEPOL group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr->ELEM_PTR->PORT_PTR->NEXT group_ptr->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr->ADDREM_PTR group_ptr->ADDREM_PTR[0] group_ptr->ADDREM_PTR->ADDREM_TYPE group_ptr->ADDREM_PTR->BLOCK_TYPE group_ptr->ADDREM_PTR->NODE_PTR group_ptr->ADDREM_PTR->NODE_PTR[0] group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr->ADDREM_PTR->NODE_PTR->PCOORD group_ptr->ADDREM_PTR->NODE_PTR->QCOORD group_ptr->ADDREM_PTR->NODE_PTR->THEA group_ptr->ADDREM_PTR->NODE_PTR->PHEA group_ptr->ADDREM_PTR->NODE_PTR->PSEA group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr->ADDREM_PTR->NODE_PTR->NEXT group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT group_ptr->ADDREM_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr->ADDREM_PTR->NEXT->NODE_PTR group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr->ADDREM_PTR->NEXT->NEXT group_ptr->ADDREM_PTR->NEXT->NEXT[0] group_ptr->GRAMPEXC_PTR group_ptr->GRAMPEXC_PTR[0] group_ptr->GRAMPEXC_PTR->TYPE group_ptr->GRAMPEXC_PTR->UNIF_VAL group_ptr->GRAMPEXC_PTR->CENTRE group_ptr->GRAMPEXC_PTR->P1_ET group_ptr->GRAMPEXC_PTR->P2_ET group_ptr->GRAMPEXC_PTR->Q1_ET group_ptr->GRAMPEXC_PTR->Q2_ET group_ptr->GRAMPEXC_PTR->AMP_UNIT group_ptr->GRAMPEXC_PTR->PQEXP_PTR group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR group_ptr->GRPHAEXC_PTR[0] group_ptr->GRPHAEXC_PTR->TYPE group_ptr->GRPHAEXC_PTR->UNIF_VAL group_ptr->GRPHAEXC_PTR->CENTRE group_ptr->GRPHAEXC_PTR->P1_EP group_ptr->GRPHAEXC_PTR->P2_EP group_ptr->GRPHAEXC_PTR->Q1_EP group_ptr->GRPHAEXC_PTR->Q2_EP group_ptr->GRPHAEXC_PTR->DIRECTION group_ptr->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->GRPHAEXC_PTR->ANGLE_START group_ptr->GRPHAEXC_PTR->ANGLE_STEP group_ptr->GRPHAEXC_PTR->OMIT_PHASE group_ptr->GRPHAEXC_PTR->PHASE_START group_ptr->GRPHAEXC_PTR->PHASE_STEP group_ptr->GRPHAEXC_PTR->U group_ptr->GRPHAEXC_PTR->V group_ptr->GRPHAEXC_PTR->THETA group_ptr->GRPHAEXC_PTR->PHI group_ptr->GRPHAEXC_PTR->PQEXP_PTR group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->GRPHAEXC_PTR->PHASE_UNIT group_ptr->ERR_PTR group_ptr->ERR_PTR[0] group_ptr->ERR_PTR->AMP_TYPE group_ptr->ERR_PTR->AMP_STDEV group_ptr->ERR_PTR->AMP_LINOFFS group_ptr->ERR_PTR->AMP_LINSTEP group_ptr->ERR_PTR->AMP_2NDCENT group_ptr->ERR_PTR->AMP_2NDPET group_ptr->ERR_PTR->AMP_2NDQET group_ptr->ERR_PTR->AMP_UNIT group_ptr->ERR_PTR->PHASE_TYPE group_ptr->ERR_PTR->PHASE_STDEV group_ptr->ERR_PTR->PHASE_LINOFFS group_ptr->ERR_PTR->PHASE_LINSTEP group_ptr->ERR_PTR->PHASE_2NDCENT group_ptr->ERR_PTR->PHASE_2NDPSID group_ptr->ERR_PTR->PHASE_2NDQSID group_ptr->ERR_PTR->PHASE_QUANTSTEP group_ptr->ERR_PTR->PHASE_UNIT group_ptr->FAIL_PTR group_ptr->FAIL_PTR[0] group_ptr->FAIL_PTR->NUM_FAULTY_EL group_ptr->FAIL_PTR->FIXED_AMP group_ptr->FAIL_PTR->FIXED_PHASE group_ptr->NEXT group_ptr->NEXT[0] group_ptr->NEXT->NAME group_ptr->NEXT->GRID_PTR group_ptr->NEXT->GRID_PTR[0] group_ptr->NEXT->GRID_PTR->NAME group_ptr->NEXT->GRID_PTR->LEVEL group_ptr->NEXT->GRID_PTR->TYPE group_ptr->NEXT->GRID_PTR->ORIENT group_ptr->NEXT->GRID_PTR->ANGLE group_ptr->NEXT->GRID_PTR->ANGLE_UNIT group_ptr->NEXT->GRID_PTR->PSTEP group_ptr->NEXT->GRID_PTR->QSTEP group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr->NEXT->GRID_PTR->PX group_ptr->NEXT->GRID_PTR->PY group_ptr->NEXT->GRID_PTR->QX group_ptr->NEXT->GRID_PTR->QY group_ptr->NEXT->GRID_PTR->PQXY_UNIT group_ptr->NEXT->GRID_PTR->ROT_ANGLE group_ptr->NEXT->ELEM_PTR group_ptr->NEXT->ELEM_PTR[0] group_ptr->NEXT->ELEM_PTR->TYPE group_ptr->NEXT->ELEM_PTR->NAME group_ptr->NEXT->ELEM_PTR->LEVEL group_ptr->NEXT->ELEM_PTR->GEOMETRY group_ptr->NEXT->ELEM_PTR->RADIUS group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr->NEXT->ELEM_PTR->PDIM group_ptr->NEXT->ELEM_PTR->QDIM group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr->NEXT->ELEM_PTR->MODEL group_ptr->NEXT->ELEM_PTR->EXP group_ptr->NEXT->ELEM_PTR->ANGLEE group_ptr->NEXT->ELEM_PTR->ANGLEH group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr->NEXT->ELEM_PTR->TAPERE group_ptr->NEXT->ELEM_PTR->TAPERH group_ptr->NEXT->ELEM_PTR->TAPER_UNIT group_ptr->NEXT->ELEM_PTR->POLARIZATION group_ptr->NEXT->ELEM_PTR->PHEPOL group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr->NEXT->ELEM_PTR->DIRECTION group_ptr->NEXT->ELEM_PTR->GAIN group_ptr->NEXT->ELEM_PTR->GAIN_UNIT group_ptr->NEXT->ELEM_PTR->NPORTS group_ptr->NEXT->ELEM_PTR->PORT_PTR group_ptr->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr->NEXT->ADDREM_PTR group_ptr->NEXT->ADDREM_PTR[0] group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr->NEXT->ADDREM_PTR->NODE_PTR group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr->NEXT->ADDREM_PTR->NEXT group_ptr->NEXT->ADDREM_PTR->NEXT[0] group_ptr->NEXT->GRAMPEXC_PTR group_ptr->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->GRAMPEXC_PTR->TYPE group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr->NEXT->GRAMPEXC_PTR->CENTRE group_ptr->NEXT->GRAMPEXC_PTR->P1_ET group_ptr->NEXT->GRAMPEXC_PTR->P2_ET group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR group_ptr->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->TYPE group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr->NEXT->GRPHAEXC_PTR->CENTRE group_ptr->NEXT->GRPHAEXC_PTR->P1_EP group_ptr->NEXT->GRPHAEXC_PTR->P2_EP group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr->NEXT->GRPHAEXC_PTR->U group_ptr->NEXT->GRPHAEXC_PTR->V group_ptr->NEXT->GRPHAEXC_PTR->THETA group_ptr->NEXT->GRPHAEXC_PTR->PHI group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr->NEXT->ERR_PTR group_ptr->NEXT->ERR_PTR[0] group_ptr->NEXT->ERR_PTR->AMP_TYPE group_ptr->NEXT->ERR_PTR->AMP_STDEV group_ptr->NEXT->ERR_PTR->AMP_LINOFFS group_ptr->NEXT->ERR_PTR->AMP_LINSTEP group_ptr->NEXT->ERR_PTR->AMP_2NDCENT group_ptr->NEXT->ERR_PTR->AMP_2NDPET group_ptr->NEXT->ERR_PTR->AMP_2NDQET group_ptr->NEXT->ERR_PTR->AMP_UNIT group_ptr->NEXT->ERR_PTR->PHASE_TYPE group_ptr->NEXT->ERR_PTR->PHASE_STDEV group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr->NEXT->ERR_PTR->PHASE_UNIT group_ptr->NEXT->FAIL_PTR group_ptr->NEXT->FAIL_PTR[0] group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr->NEXT->FAIL_PTR->FIXED_AMP group_ptr->NEXT->FAIL_PTR->FIXED_PHASE group_ptr->NEXT->NEXT group_ptr->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NAME group_ptr->NEXT->NEXT->GRID_PTR group_ptr->NEXT->NEXT->GRID_PTR[0] group_ptr->NEXT->NEXT->ELEM_PTR group_ptr->NEXT->NEXT->ELEM_PTR[0] group_ptr->NEXT->NEXT->ADDREM_PTR group_ptr->NEXT->NEXT->ADDREM_PTR[0] group_ptr->NEXT->NEXT->GRAMPEXC_PTR group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->NEXT->GRPHAEXC_PTR group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->NEXT->ERR_PTR group_ptr->NEXT->NEXT->ERR_PTR[0] group_ptr->NEXT->NEXT->FAIL_PTR group_ptr->NEXT->NEXT->FAIL_PTR[0] group_ptr->NEXT->NEXT->NEXT group_ptr->NEXT->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NUM_OF_NODES group_ptr->NEXT->NEXT->SHAPE group_ptr->NEXT->NEXT->PSIZE group_ptr->NEXT->NEXT->QSIZE group_ptr->NEXT->NEXT->GEOMNODE_PTR group_ptr->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->NEXT->BUILT group_ptr->NEXT->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr->NEXT->NUM_OF_NODES group_ptr->NEXT->SHAPE group_ptr->NEXT->PSIZE group_ptr->NEXT->QSIZE group_ptr->NEXT->GEOMNODE_PTR group_ptr->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->LOC_P group_ptr->NEXT->GEOMNODE_PTR->LOC_Q group_ptr->NEXT->GEOMNODE_PTR->XA group_ptr->NEXT->GEOMNODE_PTR->YA group_ptr->NEXT->GEOMNODE_PTR->ZA group_ptr->NEXT->GEOMNODE_PTR->THEA group_ptr->NEXT->GEOMNODE_PTR->PHEA group_ptr->NEXT->GEOMNODE_PTR->PSEA group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->NEXT group_ptr->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->SHAPE group_ptr->NEXT->GEOMNODE_PTR->PSIZE group_ptr->NEXT->GEOMNODE_PTR->QSIZE group_ptr->NEXT->BUILT group_ptr->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->SUPER_GROUP_PTR[0] group_ptr->NUM_OF_NODES group_ptr->SHAPE group_ptr->PSIZE group_ptr->QSIZE group_ptr->GEOMNODE_PTR group_ptr->GEOMNODE_PTR[0] group_ptr->GEOMNODE_PTR->LOC_P group_ptr->GEOMNODE_PTR->LOC_Q group_ptr->GEOMNODE_PTR->XA group_ptr->GEOMNODE_PTR->YA group_ptr->GEOMNODE_PTR->ZA group_ptr->GEOMNODE_PTR->THEA group_ptr->GEOMNODE_PTR->PHEA group_ptr->GEOMNODE_PTR->PSEA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->NEXT group_ptr->GEOMNODE_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->GEOMNODE_PTR->SHAPE group_ptr->GEOMNODE_PTR->PSIZE group_ptr->GEOMNODE_PTR->QSIZE group_ptr->BUILT group_ptr->SUPER_GROUP_PTR group_ptr->SUPER_GROUP_PTR[0]
::UserNames.equals(group_ptr.NAME)
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.LEVEL
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.GEOMETRY
group_ptr.GRID_PTR.LEVEL == group_ptr.ADDREM_PTR.NODE_PTR.QCOORD
group_ptr.GRID_PTR.LEVEL == group_ptr.GRAMPEXC_PTR.TYPE
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.QSTEP, group_ptr.PSIZE)
group_ptr.GRID_PTR.PQSTEP_UNIT == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.TYPE == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.RADIUS_UNIT == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.MODEL == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.POLARIZATION == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.PHEPOL_UNIT == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.DIRECTION == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.GAIN, group_ptr.PSIZE)
group_ptr.ELEM_PTR.GAIN_UNIT == group_ptr.NUM_OF_NODES
group_ptr.ELEM_PTR.NPORTS == group_ptr.NUM_OF_NODES
group_ptr.ADDREM_PTR.ADDREM_TYPE == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.ADDREM_PTR.NODE_PTR.THEA, group_ptr.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.ADDREM_PTR.NODE_PTR.PHEA, group_ptr.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.ADDREM_PTR.NODE_PTR.PSEA, group_ptr.PSIZE)
group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT == group_ptr.NUM_OF_NODES
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, group_ptr.GRAMPEXC_PTR.Q2_ET)
group_ptr.GRAMPEXC_PTR.AMP_UNIT == group_ptr.NUM_OF_NODES
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == group_ptr.GRPHAEXC_PTR.PQEXP_PTR
group_ptr.GRPHAEXC_PTR.TYPE == group_ptr.NUM_OF_NODES
group_ptr.GRPHAEXC_PTR.PHASE_UNIT == group_ptr.NUM_OF_NODES
group_ptr.NUM_OF_NODES == group_ptr.SHAPE
group_ptr.NUM_OF_NODES == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, group_ptr.QSIZE)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
group_ptr != null
group_ptr.[0] != null
group_ptr.GRID_PTR != null
group_ptr.GRID_PTR.LEVEL == 1
group_ptr.GRID_PTR.TYPE == 2
group_ptr.ELEM_PTR != null
group_ptr.ELEM_PTR.[0] != null
group_ptr.ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, 90.0)
group_ptr.ELEM_PTR.PORT_PTR == null
group_ptr.ADDREM_PTR != null
group_ptr.ADDREM_PTR.[0] != null
group_ptr.ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.ADDREM_PTR.NODE_PTR != null
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.ADDREM_PTR.NEXT == null
group_ptr.GRAMPEXC_PTR != null
group_ptr.GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.GRPHAEXC_PTR != null
group_ptr.GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.ERR_PTR == null
group_ptr.FAIL_PTR == null
group_ptr.NUM_OF_NODES == 0
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, 0.0)
group_ptr.GEOMNODE_PTR == null
group_ptr.SUPER_GROUP_PTR != null
===========================================================================
..simgroup():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME group_ptr group_ptr[0] group_ptr->NAME group_ptr->GRID_PTR group_ptr->GRID_PTR[0] group_ptr->GRID_PTR->NAME group_ptr->GRID_PTR->LEVEL group_ptr->GRID_PTR->TYPE group_ptr->GRID_PTR->ORIENT group_ptr->GRID_PTR->ANGLE group_ptr->GRID_PTR->ANGLE_UNIT group_ptr->GRID_PTR->PSTEP group_ptr->GRID_PTR->QSTEP group_ptr->GRID_PTR->PQSTEP_UNIT group_ptr->GRID_PTR->PX group_ptr->GRID_PTR->PY group_ptr->GRID_PTR->QX group_ptr->GRID_PTR->QY group_ptr->GRID_PTR->PQXY_UNIT group_ptr->GRID_PTR->ROT_ANGLE group_ptr->ELEM_PTR group_ptr->ELEM_PTR[0] group_ptr->ELEM_PTR->TYPE group_ptr->ELEM_PTR->NAME group_ptr->ELEM_PTR->LEVEL group_ptr->ELEM_PTR->GEOMETRY group_ptr->ELEM_PTR->RADIUS group_ptr->ELEM_PTR->RADIUS_UNIT group_ptr->ELEM_PTR->PDIM group_ptr->ELEM_PTR->QDIM group_ptr->ELEM_PTR->PQDIM_UNIT group_ptr->ELEM_PTR->MODEL group_ptr->ELEM_PTR->EXP group_ptr->ELEM_PTR->ANGLEE group_ptr->ELEM_PTR->ANGLEH group_ptr->ELEM_PTR->ANGLE_UNIT group_ptr->ELEM_PTR->TAPERE group_ptr->ELEM_PTR->TAPERH group_ptr->ELEM_PTR->TAPER_UNIT group_ptr->ELEM_PTR->POLARIZATION group_ptr->ELEM_PTR->PHEPOL group_ptr->ELEM_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->DIRECTION group_ptr->ELEM_PTR->GAIN group_ptr->ELEM_PTR->GAIN_UNIT group_ptr->ELEM_PTR->NPORTS group_ptr->ELEM_PTR->PORT_PTR group_ptr->ELEM_PTR->PORT_PTR[0] group_ptr->ELEM_PTR->PORT_PTR->PORTNUM group_ptr->ELEM_PTR->PORT_PTR->AMP group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSC group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSH group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr->ELEM_PTR->PORT_PTR->PPA group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr->ELEM_PTR->PORT_PTR->PHEPOL group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr->ELEM_PTR->PORT_PTR->NEXT group_ptr->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr->ADDREM_PTR group_ptr->ADDREM_PTR[0] group_ptr->ADDREM_PTR->ADDREM_TYPE group_ptr->ADDREM_PTR->BLOCK_TYPE group_ptr->ADDREM_PTR->NODE_PTR group_ptr->ADDREM_PTR->NODE_PTR[0] group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr->ADDREM_PTR->NODE_PTR->PCOORD group_ptr->ADDREM_PTR->NODE_PTR->QCOORD group_ptr->ADDREM_PTR->NODE_PTR->THEA group_ptr->ADDREM_PTR->NODE_PTR->PHEA group_ptr->ADDREM_PTR->NODE_PTR->PSEA group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr->ADDREM_PTR->NODE_PTR->NEXT group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT group_ptr->ADDREM_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr->ADDREM_PTR->NEXT->NODE_PTR group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr->ADDREM_PTR->NEXT->NEXT group_ptr->ADDREM_PTR->NEXT->NEXT[0] group_ptr->GRAMPEXC_PTR group_ptr->GRAMPEXC_PTR[0] group_ptr->GRAMPEXC_PTR->TYPE group_ptr->GRAMPEXC_PTR->UNIF_VAL group_ptr->GRAMPEXC_PTR->CENTRE group_ptr->GRAMPEXC_PTR->P1_ET group_ptr->GRAMPEXC_PTR->P2_ET group_ptr->GRAMPEXC_PTR->Q1_ET group_ptr->GRAMPEXC_PTR->Q2_ET group_ptr->GRAMPEXC_PTR->AMP_UNIT group_ptr->GRAMPEXC_PTR->PQEXP_PTR group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR group_ptr->GRPHAEXC_PTR[0] group_ptr->GRPHAEXC_PTR->TYPE group_ptr->GRPHAEXC_PTR->UNIF_VAL group_ptr->GRPHAEXC_PTR->CENTRE group_ptr->GRPHAEXC_PTR->P1_EP group_ptr->GRPHAEXC_PTR->P2_EP group_ptr->GRPHAEXC_PTR->Q1_EP group_ptr->GRPHAEXC_PTR->Q2_EP group_ptr->GRPHAEXC_PTR->DIRECTION group_ptr->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->GRPHAEXC_PTR->ANGLE_START group_ptr->GRPHAEXC_PTR->ANGLE_STEP group_ptr->GRPHAEXC_PTR->OMIT_PHASE group_ptr->GRPHAEXC_PTR->PHASE_START group_ptr->GRPHAEXC_PTR->PHASE_STEP group_ptr->GRPHAEXC_PTR->U group_ptr->GRPHAEXC_PTR->V group_ptr->GRPHAEXC_PTR->THETA group_ptr->GRPHAEXC_PTR->PHI group_ptr->GRPHAEXC_PTR->PQEXP_PTR group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->GRPHAEXC_PTR->PHASE_UNIT group_ptr->ERR_PTR group_ptr->ERR_PTR[0] group_ptr->ERR_PTR->AMP_TYPE group_ptr->ERR_PTR->AMP_STDEV group_ptr->ERR_PTR->AMP_LINOFFS group_ptr->ERR_PTR->AMP_LINSTEP group_ptr->ERR_PTR->AMP_2NDCENT group_ptr->ERR_PTR->AMP_2NDPET group_ptr->ERR_PTR->AMP_2NDQET group_ptr->ERR_PTR->AMP_UNIT group_ptr->ERR_PTR->PHASE_TYPE group_ptr->ERR_PTR->PHASE_STDEV group_ptr->ERR_PTR->PHASE_LINOFFS group_ptr->ERR_PTR->PHASE_LINSTEP group_ptr->ERR_PTR->PHASE_2NDCENT group_ptr->ERR_PTR->PHASE_2NDPSID group_ptr->ERR_PTR->PHASE_2NDQSID group_ptr->ERR_PTR->PHASE_QUANTSTEP group_ptr->ERR_PTR->PHASE_UNIT group_ptr->FAIL_PTR group_ptr->FAIL_PTR[0] group_ptr->FAIL_PTR->NUM_FAULTY_EL group_ptr->FAIL_PTR->FIXED_AMP group_ptr->FAIL_PTR->FIXED_PHASE group_ptr->NEXT group_ptr->NEXT[0] group_ptr->NEXT->NAME group_ptr->NEXT->GRID_PTR group_ptr->NEXT->GRID_PTR[0] group_ptr->NEXT->GRID_PTR->NAME group_ptr->NEXT->GRID_PTR->LEVEL group_ptr->NEXT->GRID_PTR->TYPE group_ptr->NEXT->GRID_PTR->ORIENT group_ptr->NEXT->GRID_PTR->ANGLE group_ptr->NEXT->GRID_PTR->ANGLE_UNIT group_ptr->NEXT->GRID_PTR->PSTEP group_ptr->NEXT->GRID_PTR->QSTEP group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr->NEXT->GRID_PTR->PX group_ptr->NEXT->GRID_PTR->PY group_ptr->NEXT->GRID_PTR->QX group_ptr->NEXT->GRID_PTR->QY group_ptr->NEXT->GRID_PTR->PQXY_UNIT group_ptr->NEXT->GRID_PTR->ROT_ANGLE group_ptr->NEXT->ELEM_PTR group_ptr->NEXT->ELEM_PTR[0] group_ptr->NEXT->ELEM_PTR->TYPE group_ptr->NEXT->ELEM_PTR->NAME group_ptr->NEXT->ELEM_PTR->LEVEL group_ptr->NEXT->ELEM_PTR->GEOMETRY group_ptr->NEXT->ELEM_PTR->RADIUS group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr->NEXT->ELEM_PTR->PDIM group_ptr->NEXT->ELEM_PTR->QDIM group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr->NEXT->ELEM_PTR->MODEL group_ptr->NEXT->ELEM_PTR->EXP group_ptr->NEXT->ELEM_PTR->ANGLEE group_ptr->NEXT->ELEM_PTR->ANGLEH group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr->NEXT->ELEM_PTR->TAPERE group_ptr->NEXT->ELEM_PTR->TAPERH group_ptr->NEXT->ELEM_PTR->TAPER_UNIT group_ptr->NEXT->ELEM_PTR->POLARIZATION group_ptr->NEXT->ELEM_PTR->PHEPOL group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr->NEXT->ELEM_PTR->DIRECTION group_ptr->NEXT->ELEM_PTR->GAIN group_ptr->NEXT->ELEM_PTR->GAIN_UNIT group_ptr->NEXT->ELEM_PTR->NPORTS group_ptr->NEXT->ELEM_PTR->PORT_PTR group_ptr->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr->NEXT->ADDREM_PTR group_ptr->NEXT->ADDREM_PTR[0] group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr->NEXT->ADDREM_PTR->NODE_PTR group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr->NEXT->ADDREM_PTR->NEXT group_ptr->NEXT->ADDREM_PTR->NEXT[0] group_ptr->NEXT->GRAMPEXC_PTR group_ptr->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->GRAMPEXC_PTR->TYPE group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr->NEXT->GRAMPEXC_PTR->CENTRE group_ptr->NEXT->GRAMPEXC_PTR->P1_ET group_ptr->NEXT->GRAMPEXC_PTR->P2_ET group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR group_ptr->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->TYPE group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr->NEXT->GRPHAEXC_PTR->CENTRE group_ptr->NEXT->GRPHAEXC_PTR->P1_EP group_ptr->NEXT->GRPHAEXC_PTR->P2_EP group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr->NEXT->GRPHAEXC_PTR->U group_ptr->NEXT->GRPHAEXC_PTR->V group_ptr->NEXT->GRPHAEXC_PTR->THETA group_ptr->NEXT->GRPHAEXC_PTR->PHI group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr->NEXT->ERR_PTR group_ptr->NEXT->ERR_PTR[0] group_ptr->NEXT->ERR_PTR->AMP_TYPE group_ptr->NEXT->ERR_PTR->AMP_STDEV group_ptr->NEXT->ERR_PTR->AMP_LINOFFS group_ptr->NEXT->ERR_PTR->AMP_LINSTEP group_ptr->NEXT->ERR_PTR->AMP_2NDCENT group_ptr->NEXT->ERR_PTR->AMP_2NDPET group_ptr->NEXT->ERR_PTR->AMP_2NDQET group_ptr->NEXT->ERR_PTR->AMP_UNIT group_ptr->NEXT->ERR_PTR->PHASE_TYPE group_ptr->NEXT->ERR_PTR->PHASE_STDEV group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr->NEXT->ERR_PTR->PHASE_UNIT group_ptr->NEXT->FAIL_PTR group_ptr->NEXT->FAIL_PTR[0] group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr->NEXT->FAIL_PTR->FIXED_AMP group_ptr->NEXT->FAIL_PTR->FIXED_PHASE group_ptr->NEXT->NEXT group_ptr->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NAME group_ptr->NEXT->NEXT->GRID_PTR group_ptr->NEXT->NEXT->GRID_PTR[0] group_ptr->NEXT->NEXT->ELEM_PTR group_ptr->NEXT->NEXT->ELEM_PTR[0] group_ptr->NEXT->NEXT->ADDREM_PTR group_ptr->NEXT->NEXT->ADDREM_PTR[0] group_ptr->NEXT->NEXT->GRAMPEXC_PTR group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->NEXT->GRPHAEXC_PTR group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->NEXT->ERR_PTR group_ptr->NEXT->NEXT->ERR_PTR[0] group_ptr->NEXT->NEXT->FAIL_PTR group_ptr->NEXT->NEXT->FAIL_PTR[0] group_ptr->NEXT->NEXT->NEXT group_ptr->NEXT->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NUM_OF_NODES group_ptr->NEXT->NEXT->SHAPE group_ptr->NEXT->NEXT->PSIZE group_ptr->NEXT->NEXT->QSIZE group_ptr->NEXT->NEXT->GEOMNODE_PTR group_ptr->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->NEXT->BUILT group_ptr->NEXT->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr->NEXT->NUM_OF_NODES group_ptr->NEXT->SHAPE group_ptr->NEXT->PSIZE group_ptr->NEXT->QSIZE group_ptr->NEXT->GEOMNODE_PTR group_ptr->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->LOC_P group_ptr->NEXT->GEOMNODE_PTR->LOC_Q group_ptr->NEXT->GEOMNODE_PTR->XA group_ptr->NEXT->GEOMNODE_PTR->YA group_ptr->NEXT->GEOMNODE_PTR->ZA group_ptr->NEXT->GEOMNODE_PTR->THEA group_ptr->NEXT->GEOMNODE_PTR->PHEA group_ptr->NEXT->GEOMNODE_PTR->PSEA group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->NEXT group_ptr->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->SHAPE group_ptr->NEXT->GEOMNODE_PTR->PSIZE group_ptr->NEXT->GEOMNODE_PTR->QSIZE group_ptr->NEXT->BUILT group_ptr->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->SUPER_GROUP_PTR[0] group_ptr->NUM_OF_NODES group_ptr->SHAPE group_ptr->PSIZE group_ptr->QSIZE group_ptr->GEOMNODE_PTR group_ptr->GEOMNODE_PTR[0] group_ptr->GEOMNODE_PTR->LOC_P group_ptr->GEOMNODE_PTR->LOC_Q group_ptr->GEOMNODE_PTR->XA group_ptr->GEOMNODE_PTR->YA group_ptr->GEOMNODE_PTR->ZA group_ptr->GEOMNODE_PTR->THEA group_ptr->GEOMNODE_PTR->PHEA group_ptr->GEOMNODE_PTR->PSEA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->NEXT group_ptr->GEOMNODE_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->GEOMNODE_PTR->SHAPE group_ptr->GEOMNODE_PTR->PSIZE group_ptr->GEOMNODE_PTR->QSIZE group_ptr->BUILT group_ptr->SUPER_GROUP_PTR group_ptr->SUPER_GROUP_PTR[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(group_ptr) orig(group_ptr[0]) orig(group_ptr->NAME) orig(group_ptr->GRID_PTR) orig(group_ptr->GRID_PTR[0]) orig(group_ptr->GRID_PTR->NAME) orig(group_ptr->GRID_PTR->LEVEL) orig(group_ptr->GRID_PTR->TYPE) orig(group_ptr->GRID_PTR->ORIENT) orig(group_ptr->GRID_PTR->ANGLE) orig(group_ptr->GRID_PTR->ANGLE_UNIT) orig(group_ptr->GRID_PTR->PSTEP) orig(group_ptr->GRID_PTR->QSTEP) orig(group_ptr->GRID_PTR->PQSTEP_UNIT) orig(group_ptr->GRID_PTR->PX) orig(group_ptr->GRID_PTR->PY) orig(group_ptr->GRID_PTR->QX) orig(group_ptr->GRID_PTR->QY) orig(group_ptr->GRID_PTR->PQXY_UNIT) orig(group_ptr->GRID_PTR->ROT_ANGLE) orig(group_ptr->ELEM_PTR) orig(group_ptr->ELEM_PTR[0]) orig(group_ptr->ELEM_PTR->TYPE) orig(group_ptr->ELEM_PTR->NAME) orig(group_ptr->ELEM_PTR->LEVEL) orig(group_ptr->ELEM_PTR->GEOMETRY) orig(group_ptr->ELEM_PTR->RADIUS) orig(group_ptr->ELEM_PTR->RADIUS_UNIT) orig(group_ptr->ELEM_PTR->PDIM) orig(group_ptr->ELEM_PTR->QDIM) orig(group_ptr->ELEM_PTR->PQDIM_UNIT) orig(group_ptr->ELEM_PTR->MODEL) orig(group_ptr->ELEM_PTR->EXP) orig(group_ptr->ELEM_PTR->ANGLEE) orig(group_ptr->ELEM_PTR->ANGLEH) orig(group_ptr->ELEM_PTR->ANGLE_UNIT) orig(group_ptr->ELEM_PTR->TAPERE) orig(group_ptr->ELEM_PTR->TAPERH) orig(group_ptr->ELEM_PTR->TAPER_UNIT) orig(group_ptr->ELEM_PTR->POLARIZATION) orig(group_ptr->ELEM_PTR->PHEPOL) orig(group_ptr->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr->ELEM_PTR->DIRECTION) orig(group_ptr->ELEM_PTR->GAIN) orig(group_ptr->ELEM_PTR->GAIN_UNIT) orig(group_ptr->ELEM_PTR->NPORTS) orig(group_ptr->ELEM_PTR->PORT_PTR) orig(group_ptr->ELEM_PTR->PORT_PTR[0]) orig(group_ptr->ELEM_PTR->PORT_PTR->PORTNUM) orig(group_ptr->ELEM_PTR->PORT_PTR->AMP) orig(group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PSC) orig(group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PSH) orig(group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PPA) orig(group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PHEPOL) orig(group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL) orig(group_ptr->ELEM_PTR->PORT_PTR->NEXT) orig(group_ptr->ELEM_PTR->PORT_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR) orig(group_ptr->ADDREM_PTR[0]) orig(group_ptr->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr->ADDREM_PTR->NODE_PTR) orig(group_ptr->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT) orig(group_ptr->ADDREM_PTR->NODE_PTR->PCOORD) orig(group_ptr->ADDREM_PTR->NODE_PTR->QCOORD) orig(group_ptr->ADDREM_PTR->NODE_PTR->THEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->PHEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->PSEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT) orig(group_ptr->ADDREM_PTR->NODE_PTR->NEXT) orig(group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR->NEXT) orig(group_ptr->ADDREM_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE) orig(group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE) orig(group_ptr->ADDREM_PTR->NEXT->NODE_PTR) orig(group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0]) orig(group_ptr->ADDREM_PTR->NEXT->NEXT) orig(group_ptr->ADDREM_PTR->NEXT->NEXT[0]) orig(group_ptr->GRAMPEXC_PTR) orig(group_ptr->GRAMPEXC_PTR[0]) orig(group_ptr->GRAMPEXC_PTR->TYPE) orig(group_ptr->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr->GRAMPEXC_PTR->CENTRE) orig(group_ptr->GRAMPEXC_PTR->P1_ET) orig(group_ptr->GRAMPEXC_PTR->P2_ET) orig(group_ptr->GRAMPEXC_PTR->Q1_ET) orig(group_ptr->GRAMPEXC_PTR->Q2_ET) orig(group_ptr->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr->GRPHAEXC_PTR) orig(group_ptr->GRPHAEXC_PTR[0]) orig(group_ptr->GRPHAEXC_PTR->TYPE) orig(group_ptr->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr->GRPHAEXC_PTR->CENTRE) orig(group_ptr->GRPHAEXC_PTR->P1_EP) orig(group_ptr->GRPHAEXC_PTR->P2_EP) orig(group_ptr->GRPHAEXC_PTR->Q1_EP) orig(group_ptr->GRPHAEXC_PTR->Q2_EP) orig(group_ptr->GRPHAEXC_PTR->DIRECTION) orig(group_ptr->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr->GRPHAEXC_PTR->PHASE_START) orig(group_ptr->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr->GRPHAEXC_PTR->U) orig(group_ptr->GRPHAEXC_PTR->V) orig(group_ptr->GRPHAEXC_PTR->THETA) orig(group_ptr->GRPHAEXC_PTR->PHI) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr->ERR_PTR) orig(group_ptr->ERR_PTR[0]) orig(group_ptr->ERR_PTR->AMP_TYPE) orig(group_ptr->ERR_PTR->AMP_STDEV) orig(group_ptr->ERR_PTR->AMP_LINOFFS) orig(group_ptr->ERR_PTR->AMP_LINSTEP) orig(group_ptr->ERR_PTR->AMP_2NDCENT) orig(group_ptr->ERR_PTR->AMP_2NDPET) orig(group_ptr->ERR_PTR->AMP_2NDQET) orig(group_ptr->ERR_PTR->AMP_UNIT) orig(group_ptr->ERR_PTR->PHASE_TYPE) orig(group_ptr->ERR_PTR->PHASE_STDEV) orig(group_ptr->ERR_PTR->PHASE_LINOFFS) orig(group_ptr->ERR_PTR->PHASE_LINSTEP) orig(group_ptr->ERR_PTR->PHASE_2NDCENT) orig(group_ptr->ERR_PTR->PHASE_2NDPSID) orig(group_ptr->ERR_PTR->PHASE_2NDQSID) orig(group_ptr->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr->ERR_PTR->PHASE_UNIT) orig(group_ptr->FAIL_PTR) orig(group_ptr->FAIL_PTR[0]) orig(group_ptr->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr->FAIL_PTR->FIXED_AMP) orig(group_ptr->FAIL_PTR->FIXED_PHASE) orig(group_ptr->NEXT) orig(group_ptr->NEXT[0]) orig(group_ptr->NEXT->NAME) orig(group_ptr->NEXT->GRID_PTR) orig(group_ptr->NEXT->GRID_PTR[0]) orig(group_ptr->NEXT->GRID_PTR->NAME) orig(group_ptr->NEXT->GRID_PTR->LEVEL) orig(group_ptr->NEXT->GRID_PTR->TYPE) orig(group_ptr->NEXT->GRID_PTR->ORIENT) orig(group_ptr->NEXT->GRID_PTR->ANGLE) orig(group_ptr->NEXT->GRID_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->GRID_PTR->PSTEP) orig(group_ptr->NEXT->GRID_PTR->QSTEP) orig(group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT) orig(group_ptr->NEXT->GRID_PTR->PX) orig(group_ptr->NEXT->GRID_PTR->PY) orig(group_ptr->NEXT->GRID_PTR->QX) orig(group_ptr->NEXT->GRID_PTR->QY) orig(group_ptr->NEXT->GRID_PTR->PQXY_UNIT) orig(group_ptr->NEXT->GRID_PTR->ROT_ANGLE) orig(group_ptr->NEXT->ELEM_PTR) orig(group_ptr->NEXT->ELEM_PTR[0]) orig(group_ptr->NEXT->ELEM_PTR->TYPE) orig(group_ptr->NEXT->ELEM_PTR->NAME) orig(group_ptr->NEXT->ELEM_PTR->LEVEL) orig(group_ptr->NEXT->ELEM_PTR->GEOMETRY) orig(group_ptr->NEXT->ELEM_PTR->RADIUS) orig(group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT) orig(group_ptr->NEXT->ELEM_PTR->PDIM) orig(group_ptr->NEXT->ELEM_PTR->QDIM) orig(group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT) orig(group_ptr->NEXT->ELEM_PTR->MODEL) orig(group_ptr->NEXT->ELEM_PTR->EXP) orig(group_ptr->NEXT->ELEM_PTR->ANGLEE) orig(group_ptr->NEXT->ELEM_PTR->ANGLEH) orig(group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->ELEM_PTR->TAPERE) orig(group_ptr->NEXT->ELEM_PTR->TAPERH) orig(group_ptr->NEXT->ELEM_PTR->TAPER_UNIT) orig(group_ptr->NEXT->ELEM_PTR->POLARIZATION) orig(group_ptr->NEXT->ELEM_PTR->PHEPOL) orig(group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr->NEXT->ELEM_PTR->DIRECTION) orig(group_ptr->NEXT->ELEM_PTR->GAIN) orig(group_ptr->NEXT->ELEM_PTR->GAIN_UNIT) orig(group_ptr->NEXT->ELEM_PTR->NPORTS) orig(group_ptr->NEXT->ELEM_PTR->PORT_PTR) orig(group_ptr->NEXT->ELEM_PTR->PORT_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR) orig(group_ptr->NEXT->ADDREM_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr->NEXT->ADDREM_PTR->NODE_PTR) orig(group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR->NEXT) orig(group_ptr->NEXT->ADDREM_PTR->NEXT[0]) orig(group_ptr->NEXT->GRAMPEXC_PTR) orig(group_ptr->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr->NEXT->GRAMPEXC_PTR->TYPE) orig(group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr->NEXT->GRAMPEXC_PTR->CENTRE) orig(group_ptr->NEXT->GRAMPEXC_PTR->P1_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->P2_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR) orig(group_ptr->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR->TYPE) orig(group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr->NEXT->GRPHAEXC_PTR->CENTRE) orig(group_ptr->NEXT->GRPHAEXC_PTR->P1_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->P2_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION) orig(group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr->NEXT->GRPHAEXC_PTR->U) orig(group_ptr->NEXT->GRPHAEXC_PTR->V) orig(group_ptr->NEXT->GRPHAEXC_PTR->THETA) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHI) orig(group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr->NEXT->ERR_PTR) orig(group_ptr->NEXT->ERR_PTR[0]) orig(group_ptr->NEXT->ERR_PTR->AMP_TYPE) orig(group_ptr->NEXT->ERR_PTR->AMP_STDEV) orig(group_ptr->NEXT->ERR_PTR->AMP_LINOFFS) orig(group_ptr->NEXT->ERR_PTR->AMP_LINSTEP) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDCENT) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDPET) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDQET) orig(group_ptr->NEXT->ERR_PTR->AMP_UNIT) orig(group_ptr->NEXT->ERR_PTR->PHASE_TYPE) orig(group_ptr->NEXT->ERR_PTR->PHASE_STDEV) orig(group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS) orig(group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID) orig(group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr->NEXT->ERR_PTR->PHASE_UNIT) orig(group_ptr->NEXT->FAIL_PTR) orig(group_ptr->NEXT->FAIL_PTR[0]) orig(group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr->NEXT->FAIL_PTR->FIXED_AMP) orig(group_ptr->NEXT->FAIL_PTR->FIXED_PHASE) orig(group_ptr->NEXT->NEXT) orig(group_ptr->NEXT->NEXT[0]) orig(group_ptr->NEXT->NEXT->NAME) orig(group_ptr->NEXT->NEXT->GRID_PTR) orig(group_ptr->NEXT->NEXT->GRID_PTR[0]) orig(group_ptr->NEXT->NEXT->ELEM_PTR) orig(group_ptr->NEXT->NEXT->ELEM_PTR[0]) orig(group_ptr->NEXT->NEXT->ADDREM_PTR) orig(group_ptr->NEXT->NEXT->ADDREM_PTR[0]) orig(group_ptr->NEXT->NEXT->GRAMPEXC_PTR) orig(group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr->NEXT->NEXT->GRPHAEXC_PTR) orig(group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr->NEXT->NEXT->ERR_PTR) orig(group_ptr->NEXT->NEXT->ERR_PTR[0]) orig(group_ptr->NEXT->NEXT->FAIL_PTR) orig(group_ptr->NEXT->NEXT->FAIL_PTR[0]) orig(group_ptr->NEXT->NEXT->NEXT) orig(group_ptr->NEXT->NEXT->NEXT[0]) orig(group_ptr->NEXT->NEXT->NUM_OF_NODES) orig(group_ptr->NEXT->NEXT->SHAPE) orig(group_ptr->NEXT->NEXT->PSIZE) orig(group_ptr->NEXT->NEXT->QSIZE) orig(group_ptr->NEXT->NEXT->GEOMNODE_PTR) orig(group_ptr->NEXT->NEXT->GEOMNODE_PTR[0]) orig(group_ptr->NEXT->NEXT->BUILT) orig(group_ptr->NEXT->NEXT->SUPER_GROUP_PTR) orig(group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr->NEXT->NUM_OF_NODES) orig(group_ptr->NEXT->SHAPE) orig(group_ptr->NEXT->PSIZE) orig(group_ptr->NEXT->QSIZE) orig(group_ptr->NEXT->GEOMNODE_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->LOC_P) orig(group_ptr->NEXT->GEOMNODE_PTR->LOC_Q) orig(group_ptr->NEXT->GEOMNODE_PTR->XA) orig(group_ptr->NEXT->GEOMNODE_PTR->YA) orig(group_ptr->NEXT->GEOMNODE_PTR->ZA) orig(group_ptr->NEXT->GEOMNODE_PTR->THEA) orig(group_ptr->NEXT->GEOMNODE_PTR->PHEA) orig(group_ptr->NEXT->GEOMNODE_PTR->PSEA) orig(group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->NEXT) orig(group_ptr->NEXT->GEOMNODE_PTR->NEXT[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->SHAPE) orig(group_ptr->NEXT->GEOMNODE_PTR->PSIZE) orig(group_ptr->NEXT->GEOMNODE_PTR->QSIZE) orig(group_ptr->NEXT->BUILT) orig(group_ptr->NEXT->SUPER_GROUP_PTR) orig(group_ptr->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr->NUM_OF_NODES) orig(group_ptr->SHAPE) orig(group_ptr->PSIZE) orig(group_ptr->QSIZE) orig(group_ptr->GEOMNODE_PTR) orig(group_ptr->GEOMNODE_PTR[0]) orig(group_ptr->GEOMNODE_PTR->LOC_P) orig(group_ptr->GEOMNODE_PTR->LOC_Q) orig(group_ptr->GEOMNODE_PTR->XA) orig(group_ptr->GEOMNODE_PTR->YA) orig(group_ptr->GEOMNODE_PTR->ZA) orig(group_ptr->GEOMNODE_PTR->THEA) orig(group_ptr->GEOMNODE_PTR->PHEA) orig(group_ptr->GEOMNODE_PTR->PSEA) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0]) orig(group_ptr->GEOMNODE_PTR->NEXT) orig(group_ptr->GEOMNODE_PTR->NEXT[0]) orig(group_ptr->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr->GEOMNODE_PTR->SHAPE) orig(group_ptr->GEOMNODE_PTR->PSIZE) orig(group_ptr->GEOMNODE_PTR->QSIZE) orig(group_ptr->BUILT) orig(group_ptr->SUPER_GROUP_PTR) orig(group_ptr->SUPER_GROUP_PTR[0])
assignable group_ptr->GRID_PTR[0], group_ptr->GRID_PTR->NAME, group_ptr->GRID_PTR->ORIENT, group_ptr->GRID_PTR->ANGLE, group_ptr->GRID_PTR->ANGLE_UNIT, group_ptr->GRID_PTR->PSTEP, group_ptr->GRID_PTR->QSTEP, group_ptr->GRID_PTR->PX, group_ptr->GRID_PTR->PY, group_ptr->GRID_PTR->QX, group_ptr->GRID_PTR->QY, group_ptr->GRID_PTR->PQXY_UNIT, group_ptr->GRID_PTR->ROT_ANGLE, group_ptr->ELEM_PTR->PDIM, group_ptr->ELEM_PTR->QDIM, group_ptr->ELEM_PTR->PQDIM_UNIT, group_ptr->ELEM_PTR->EXP, group_ptr->ELEM_PTR->ANGLEE, group_ptr->ELEM_PTR->ANGLEH, group_ptr->ELEM_PTR->ANGLE_UNIT, group_ptr->ELEM_PTR->TAPERE, group_ptr->ELEM_PTR->TAPERH, group_ptr->ELEM_PTR->TAPER_UNIT, group_ptr->ELEM_PTR->NPORTS, group_ptr->ELEM_PTR->PORT_PTR, group_ptr->ELEM_PTR->PORT_PTR[0], group_ptr->ELEM_PTR->PORT_PTR->PORTNUM, group_ptr->ELEM_PTR->PORT_PTR->AMP, group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT, group_ptr->ELEM_PTR->PORT_PTR->PSC, group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT, group_ptr->ELEM_PTR->PORT_PTR->PSH, group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT, group_ptr->ELEM_PTR->PORT_PTR->PPA, group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT, group_ptr->ELEM_PTR->PORT_PTR->PHEPOL, group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT, group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL, group_ptr->ELEM_PTR->PORT_PTR->NEXT, group_ptr->ELEM_PTR->PORT_PTR->NEXT[0], group_ptr->ADDREM_PTR->NODE_PTR[0], group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT, group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0], group_ptr->ADDREM_PTR->NEXT[0], group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE, group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE, group_ptr->ADDREM_PTR->NEXT->NODE_PTR, group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0], group_ptr->ADDREM_PTR->NEXT->NEXT, group_ptr->ADDREM_PTR->NEXT->NEXT[0], group_ptr->GRAMPEXC_PTR->UNIF_VAL, group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy, group_ptr->GRPHAEXC_PTR->CENTRE, group_ptr->GRPHAEXC_PTR->P1_EP, group_ptr->GRPHAEXC_PTR->P2_EP, group_ptr->GRPHAEXC_PTR->Q1_EP, group_ptr->GRPHAEXC_PTR->Q2_EP, group_ptr->GRPHAEXC_PTR->DIRECTION, group_ptr->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr->GRPHAEXC_PTR->ANGLE_START, group_ptr->GRPHAEXC_PTR->ANGLE_STEP, group_ptr->GRPHAEXC_PTR->OMIT_PHASE, group_ptr->GRPHAEXC_PTR->PHASE_START, group_ptr->GRPHAEXC_PTR->PHASE_STEP, group_ptr->GRPHAEXC_PTR->U, group_ptr->GRPHAEXC_PTR->V, group_ptr->GRPHAEXC_PTR->THETA, group_ptr->GRPHAEXC_PTR->PHI, group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy, group_ptr->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr->ERR_PTR[0], group_ptr->ERR_PTR->AMP_TYPE, group_ptr->ERR_PTR->AMP_STDEV, group_ptr->ERR_PTR->AMP_LINOFFS, group_ptr->ERR_PTR->AMP_LINSTEP, group_ptr->ERR_PTR->AMP_2NDCENT, group_ptr->ERR_PTR->AMP_2NDPET, group_ptr->ERR_PTR->AMP_2NDQET, group_ptr->ERR_PTR->AMP_UNIT, group_ptr->ERR_PTR->PHASE_TYPE, group_ptr->ERR_PTR->PHASE_STDEV, group_ptr->ERR_PTR->PHASE_LINOFFS, group_ptr->ERR_PTR->PHASE_LINSTEP, group_ptr->ERR_PTR->PHASE_2NDCENT, group_ptr->ERR_PTR->PHASE_2NDPSID, group_ptr->ERR_PTR->PHASE_2NDQSID, group_ptr->ERR_PTR->PHASE_QUANTSTEP, group_ptr->ERR_PTR->PHASE_UNIT, group_ptr->FAIL_PTR[0], group_ptr->FAIL_PTR->NUM_FAULTY_EL, group_ptr->FAIL_PTR->FIXED_AMP, group_ptr->FAIL_PTR->FIXED_PHASE, group_ptr->NEXT, group_ptr->NEXT[0], group_ptr->NEXT->NAME, group_ptr->NEXT->GRID_PTR, group_ptr->NEXT->GRID_PTR[0], group_ptr->NEXT->GRID_PTR->NAME, group_ptr->NEXT->GRID_PTR->LEVEL, group_ptr->NEXT->GRID_PTR->TYPE, group_ptr->NEXT->GRID_PTR->ORIENT, group_ptr->NEXT->GRID_PTR->ANGLE, group_ptr->NEXT->GRID_PTR->ANGLE_UNIT, group_ptr->NEXT->GRID_PTR->PSTEP, group_ptr->NEXT->GRID_PTR->QSTEP, group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT, group_ptr->NEXT->GRID_PTR->PX, group_ptr->NEXT->GRID_PTR->PY, group_ptr->NEXT->GRID_PTR->QX, group_ptr->NEXT->GRID_PTR->QY, group_ptr->NEXT->GRID_PTR->PQXY_UNIT, group_ptr->NEXT->GRID_PTR->ROT_ANGLE, group_ptr->NEXT->ELEM_PTR, group_ptr->NEXT->ELEM_PTR[0], group_ptr->NEXT->ELEM_PTR->TYPE, group_ptr->NEXT->ELEM_PTR->NAME, group_ptr->NEXT->ELEM_PTR->LEVEL, group_ptr->NEXT->ELEM_PTR->GEOMETRY, group_ptr->NEXT->ELEM_PTR->RADIUS, group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT, group_ptr->NEXT->ELEM_PTR->PDIM, group_ptr->NEXT->ELEM_PTR->QDIM, group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT, group_ptr->NEXT->ELEM_PTR->MODEL, group_ptr->NEXT->ELEM_PTR->EXP, group_ptr->NEXT->ELEM_PTR->ANGLEE, group_ptr->NEXT->ELEM_PTR->ANGLEH, group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT, group_ptr->NEXT->ELEM_PTR->TAPERE, group_ptr->NEXT->ELEM_PTR->TAPERH, group_ptr->NEXT->ELEM_PTR->TAPER_UNIT, group_ptr->NEXT->ELEM_PTR->POLARIZATION, group_ptr->NEXT->ELEM_PTR->PHEPOL, group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT, group_ptr->NEXT->ELEM_PTR->DIRECTION, group_ptr->NEXT->ELEM_PTR->GAIN, group_ptr->NEXT->ELEM_PTR->GAIN_UNIT, group_ptr->NEXT->ELEM_PTR->NPORTS, group_ptr->NEXT->ELEM_PTR->PORT_PTR, group_ptr->NEXT->ELEM_PTR->PORT_PTR[0], group_ptr->NEXT->ADDREM_PTR, group_ptr->NEXT->ADDREM_PTR[0], group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE, group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE, group_ptr->NEXT->ADDREM_PTR->NODE_PTR, group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0], group_ptr->NEXT->ADDREM_PTR->NEXT, group_ptr->NEXT->ADDREM_PTR->NEXT[0], group_ptr->NEXT->GRAMPEXC_PTR, group_ptr->NEXT->GRAMPEXC_PTR[0], group_ptr->NEXT->GRAMPEXC_PTR->TYPE, group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL, group_ptr->NEXT->GRAMPEXC_PTR->CENTRE, group_ptr->NEXT->GRAMPEXC_PTR->P1_ET, group_ptr->NEXT->GRAMPEXC_PTR->P2_ET, group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET, group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET, group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT, group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR, group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR, group_ptr->NEXT->GRPHAEXC_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR->TYPE, group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL, group_ptr->NEXT->GRPHAEXC_PTR->CENTRE, group_ptr->NEXT->GRPHAEXC_PTR->P1_EP, group_ptr->NEXT->GRPHAEXC_PTR->P2_EP, group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP, group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP, group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION, group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START, group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP, group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP, group_ptr->NEXT->GRPHAEXC_PTR->U, group_ptr->NEXT->GRPHAEXC_PTR->V, group_ptr->NEXT->GRPHAEXC_PTR->THETA, group_ptr->NEXT->GRPHAEXC_PTR->PHI, group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR, group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT, group_ptr->NEXT->ERR_PTR, group_ptr->NEXT->ERR_PTR[0], group_ptr->NEXT->ERR_PTR->AMP_TYPE, group_ptr->NEXT->ERR_PTR->AMP_STDEV, group_ptr->NEXT->ERR_PTR->AMP_LINOFFS, group_ptr->NEXT->ERR_PTR->AMP_LINSTEP, group_ptr->NEXT->ERR_PTR->AMP_2NDCENT, group_ptr->NEXT->ERR_PTR->AMP_2NDPET, group_ptr->NEXT->ERR_PTR->AMP_2NDQET, group_ptr->NEXT->ERR_PTR->AMP_UNIT, group_ptr->NEXT->ERR_PTR->PHASE_TYPE, group_ptr->NEXT->ERR_PTR->PHASE_STDEV, group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS, group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP, group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT, group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID, group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID, group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP, group_ptr->NEXT->ERR_PTR->PHASE_UNIT, group_ptr->NEXT->FAIL_PTR, group_ptr->NEXT->FAIL_PTR[0], group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL, group_ptr->NEXT->FAIL_PTR->FIXED_AMP, group_ptr->NEXT->FAIL_PTR->FIXED_PHASE, group_ptr->NEXT->NEXT, group_ptr->NEXT->NEXT[0], group_ptr->NEXT->NEXT->NAME, group_ptr->NEXT->NEXT->GRID_PTR, group_ptr->NEXT->NEXT->GRID_PTR[0], group_ptr->NEXT->NEXT->ELEM_PTR, group_ptr->NEXT->NEXT->ELEM_PTR[0], group_ptr->NEXT->NEXT->ADDREM_PTR, group_ptr->NEXT->NEXT->ADDREM_PTR[0], group_ptr->NEXT->NEXT->GRAMPEXC_PTR, group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0], group_ptr->NEXT->NEXT->GRPHAEXC_PTR, group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0], group_ptr->NEXT->NEXT->ERR_PTR, group_ptr->NEXT->NEXT->ERR_PTR[0], group_ptr->NEXT->NEXT->FAIL_PTR, group_ptr->NEXT->NEXT->FAIL_PTR[0], group_ptr->NEXT->NEXT->NEXT, group_ptr->NEXT->NEXT->NEXT[0], group_ptr->NEXT->NEXT->NUM_OF_NODES, group_ptr->NEXT->NEXT->SHAPE, group_ptr->NEXT->NEXT->PSIZE, group_ptr->NEXT->NEXT->QSIZE, group_ptr->NEXT->NEXT->GEOMNODE_PTR, group_ptr->NEXT->NEXT->GEOMNODE_PTR[0], group_ptr->NEXT->NEXT->BUILT, group_ptr->NEXT->NEXT->SUPER_GROUP_PTR, group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0], group_ptr->NEXT->NUM_OF_NODES, group_ptr->NEXT->SHAPE, group_ptr->NEXT->PSIZE, group_ptr->NEXT->QSIZE, group_ptr->NEXT->GEOMNODE_PTR, group_ptr->NEXT->GEOMNODE_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->LOC_P, group_ptr->NEXT->GEOMNODE_PTR->LOC_Q, group_ptr->NEXT->GEOMNODE_PTR->XA, group_ptr->NEXT->GEOMNODE_PTR->YA, group_ptr->NEXT->GEOMNODE_PTR->ZA, group_ptr->NEXT->GEOMNODE_PTR->THEA, group_ptr->NEXT->GEOMNODE_PTR->PHEA, group_ptr->NEXT->GEOMNODE_PTR->PSEA, group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR, group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->NEXT, group_ptr->NEXT->GEOMNODE_PTR->NEXT[0], group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR, group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->SHAPE, group_ptr->NEXT->GEOMNODE_PTR->PSIZE, group_ptr->NEXT->GEOMNODE_PTR->QSIZE, group_ptr->NEXT->BUILT, group_ptr->NEXT->SUPER_GROUP_PTR, group_ptr->NEXT->SUPER_GROUP_PTR[0], group_ptr->NUM_OF_NODES, group_ptr->SHAPE, group_ptr->PSIZE, group_ptr->QSIZE, group_ptr->GEOMNODE_PTR, group_ptr->GEOMNODE_PTR[0], group_ptr->GEOMNODE_PTR->LOC_P, group_ptr->GEOMNODE_PTR->LOC_Q, group_ptr->GEOMNODE_PTR->XA, group_ptr->GEOMNODE_PTR->YA, group_ptr->GEOMNODE_PTR->ZA, group_ptr->GEOMNODE_PTR->THEA, group_ptr->GEOMNODE_PTR->PHEA, group_ptr->GEOMNODE_PTR->PSEA, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0], group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0], group_ptr->GEOMNODE_PTR->NEXT, group_ptr->GEOMNODE_PTR->NEXT[0], group_ptr->GEOMNODE_PTR->SUBGROUP_PTR, group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr->GEOMNODE_PTR->SHAPE, group_ptr->GEOMNODE_PTR->PSIZE, group_ptr->GEOMNODE_PTR->QSIZE, group_ptr->SUPER_GROUP_PTR[0]
::UserNames.equals(group_ptr.NAME)
::UserNames.equals(\old(::UserNames))
::UserNames.equals(\old(group_ptr.NAME))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
group_ptr.[0] == \old(group_ptr.[0])
group_ptr.GRID_PTR == \old(group_ptr.GRID_PTR)
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.LEVEL
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.GEOMETRY
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.NPORTS
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.PORTNUM
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL
group_ptr.GRID_PTR.LEVEL == group_ptr.ADDREM_PTR.NODE_PTR.QCOORD
group_ptr.GRID_PTR.LEVEL == group_ptr.GRAMPEXC_PTR.TYPE
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.GRID_PTR.LEVEL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.LEVEL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.GEOMETRY)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ADDREM_PTR.NODE_PTR.QCOORD)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.GRAMPEXC_PTR.TYPE)
group_ptr.GRID_PTR.TYPE == group_ptr.SHAPE
group_ptr.GRID_PTR.ANGLE_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GRID_PTR.QSTEP)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.PDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.QDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.QSIZE)
group_ptr.GRID_PTR.PQSTEP_UNIT == return
group_ptr.GRID_PTR.PQXY_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.GAIN)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSH)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PPA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.ZA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GRID_PTR.PSTEP))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GRID_PTR.QSTEP))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.GAIN))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.THEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.PHEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.PSEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.PSIZE))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.QSIZE))
group_ptr.ELEM_PTR == \old(group_ptr.ELEM_PTR)
group_ptr.ELEM_PTR.[0] == \old(group_ptr.ELEM_PTR.[0])
group_ptr.ELEM_PTR.TYPE == return
group_ptr.ELEM_PTR.NAME.equals(\old(group_ptr.ELEM_PTR.NAME))
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, \old(group_ptr.ELEM_PTR.RADIUS))
group_ptr.ELEM_PTR.RADIUS_UNIT == return
group_ptr.ELEM_PTR.PQDIM_UNIT == return
group_ptr.ELEM_PTR.MODEL == return
group_ptr.ELEM_PTR.POLARIZATION == return
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.ELEM_PTR.PORT_PTR.PHEPOL)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, \old(group_ptr.ELEM_PTR.PHEPOL))
group_ptr.ELEM_PTR.PHEPOL_UNIT == return
group_ptr.ELEM_PTR.DIRECTION == return
group_ptr.ELEM_PTR.GAIN_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.NEXT == \old(group_ptr.ELEM_PTR.PORT_PTR)
group_ptr.ADDREM_PTR == \old(group_ptr.ADDREM_PTR)
group_ptr.ADDREM_PTR.[0] == \old(group_ptr.ADDREM_PTR.[0])
group_ptr.ADDREM_PTR.ADDREM_TYPE == return
group_ptr.ADDREM_PTR.BLOCK_TYPE == \old(group_ptr.ADDREM_PTR.BLOCK_TYPE)
group_ptr.ADDREM_PTR.NODE_PTR == \old(group_ptr.ADDREM_PTR.NODE_PTR)
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == \old(group_ptr.ADDREM_PTR.NODE_PTR.PCOORD)
group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT == return
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == \old(group_ptr.ADDREM_PTR.NODE_PTR.NEXT)
group_ptr.ADDREM_PTR.NEXT == \old(group_ptr.ADDREM_PTR.NEXT)
group_ptr.GRAMPEXC_PTR == \old(group_ptr.GRAMPEXC_PTR)
group_ptr.GRAMPEXC_PTR.[0] == \old(group_ptr.GRAMPEXC_PTR.[0])
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, \old(group_ptr.GRAMPEXC_PTR.CENTRE))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, group_ptr.GRAMPEXC_PTR.Q2_ET)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, \old(group_ptr.GRAMPEXC_PTR.P1_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, \old(group_ptr.GRAMPEXC_PTR.Q2_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, \old(group_ptr.GRAMPEXC_PTR.P2_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, \old(group_ptr.GRAMPEXC_PTR.Q1_ET))
group_ptr.GRAMPEXC_PTR.AMP_UNIT == return
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == group_ptr.GRPHAEXC_PTR.PQEXP_PTR
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == \old(group_ptr.GRAMPEXC_PTR.PQEXP_PTR)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == \old(group_ptr.GRPHAEXC_PTR.PQEXP_PTR)
group_ptr.GRPHAEXC_PTR == \old(group_ptr.GRPHAEXC_PTR)
group_ptr.GRPHAEXC_PTR.[0] == \old(group_ptr.GRPHAEXC_PTR.[0])
group_ptr.GRPHAEXC_PTR.TYPE == return
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, \old(group_ptr.GRPHAEXC_PTR.UNIF_VAL))
group_ptr.GRPHAEXC_PTR.PHASE_UNIT == return
group_ptr.ERR_PTR == \old(group_ptr.ERR_PTR)
group_ptr.FAIL_PTR == \old(group_ptr.FAIL_PTR)
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.LOC_Q
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.SHAPE
group_ptr.SHAPE == \old(group_ptr.GRID_PTR.TYPE)
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, group_ptr.QSIZE)
group_ptr.BUILT == return
return == \old(group_ptr.GRID_PTR.PQSTEP_UNIT)
return == \old(group_ptr.ELEM_PTR.TYPE)
return == \old(group_ptr.ELEM_PTR.RADIUS_UNIT)
return == \old(group_ptr.ELEM_PTR.MODEL)
return == \old(group_ptr.ELEM_PTR.POLARIZATION)
return == \old(group_ptr.ELEM_PTR.PHEPOL_UNIT)
return == \old(group_ptr.ELEM_PTR.DIRECTION)
return == \old(group_ptr.ELEM_PTR.GAIN_UNIT)
return == \old(group_ptr.ELEM_PTR.NPORTS)
return == \old(group_ptr.ADDREM_PTR.ADDREM_TYPE)
return == \old(group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT)
return == \old(group_ptr.GRAMPEXC_PTR.AMP_UNIT)
return == \old(group_ptr.GRPHAEXC_PTR.TYPE)
return == \old(group_ptr.GRPHAEXC_PTR.PHASE_UNIT)
return == \old(group_ptr.NUM_OF_NODES)
return == \old(group_ptr.SHAPE)
return == \old(group_ptr.BUILT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
group_ptr.[0] != null
group_ptr.GRID_PTR != null
group_ptr.GRID_PTR.LEVEL == 1
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, 60.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, 86.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, 0.0)
group_ptr.ELEM_PTR != null
group_ptr.ELEM_PTR.[0] != null
group_ptr.ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, 90.0)
group_ptr.ELEM_PTR.PORT_PTR != null
group_ptr.ELEM_PTR.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, 1.0)
group_ptr.ELEM_PTR.PORT_PTR.NEXT == null
group_ptr.ADDREM_PTR != null
group_ptr.ADDREM_PTR.[0] != null
group_ptr.ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.ADDREM_PTR.NODE_PTR != null
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.ADDREM_PTR.NEXT == null
group_ptr.GRAMPEXC_PTR != null
group_ptr.GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.GRPHAEXC_PTR != null
group_ptr.GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.ERR_PTR == null
group_ptr.FAIL_PTR == null
group_ptr.NUM_OF_NODES == 7
group_ptr.SHAPE == 2
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, 258.0)
group_ptr.GEOMNODE_PTR != null
group_ptr.GEOMNODE_PTR.[0] != null
group_ptr.GEOMNODE_PTR.LOC_P == 8
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.YA, 148.95636946268272)
group_ptr.GEOMNODE_PTR.NEXT != null
group_ptr.GEOMNODE_PTR.NEXT.[0] != null
group_ptr.GEOMNODE_PTR.SUBGROUP_PTR == null
group_ptr.SUPER_GROUP_PTR != null
return == 0
===========================================================================
..simpha():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME group_ptr group_ptr[0] group_ptr->NAME group_ptr->GRID_PTR group_ptr->GRID_PTR[0] group_ptr->GRID_PTR->NAME group_ptr->GRID_PTR->LEVEL group_ptr->GRID_PTR->TYPE group_ptr->GRID_PTR->ORIENT group_ptr->GRID_PTR->ANGLE group_ptr->GRID_PTR->ANGLE_UNIT group_ptr->GRID_PTR->PSTEP group_ptr->GRID_PTR->QSTEP group_ptr->GRID_PTR->PQSTEP_UNIT group_ptr->GRID_PTR->PX group_ptr->GRID_PTR->PY group_ptr->GRID_PTR->QX group_ptr->GRID_PTR->QY group_ptr->GRID_PTR->PQXY_UNIT group_ptr->GRID_PTR->ROT_ANGLE group_ptr->ELEM_PTR group_ptr->ELEM_PTR[0] group_ptr->ELEM_PTR->TYPE group_ptr->ELEM_PTR->NAME group_ptr->ELEM_PTR->LEVEL group_ptr->ELEM_PTR->GEOMETRY group_ptr->ELEM_PTR->RADIUS group_ptr->ELEM_PTR->RADIUS_UNIT group_ptr->ELEM_PTR->PDIM group_ptr->ELEM_PTR->QDIM group_ptr->ELEM_PTR->PQDIM_UNIT group_ptr->ELEM_PTR->MODEL group_ptr->ELEM_PTR->EXP group_ptr->ELEM_PTR->ANGLEE group_ptr->ELEM_PTR->ANGLEH group_ptr->ELEM_PTR->ANGLE_UNIT group_ptr->ELEM_PTR->TAPERE group_ptr->ELEM_PTR->TAPERH group_ptr->ELEM_PTR->TAPER_UNIT group_ptr->ELEM_PTR->POLARIZATION group_ptr->ELEM_PTR->PHEPOL group_ptr->ELEM_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->DIRECTION group_ptr->ELEM_PTR->GAIN group_ptr->ELEM_PTR->GAIN_UNIT group_ptr->ELEM_PTR->NPORTS group_ptr->ELEM_PTR->PORT_PTR group_ptr->ELEM_PTR->PORT_PTR[0] group_ptr->ELEM_PTR->PORT_PTR->PORTNUM group_ptr->ELEM_PTR->PORT_PTR->AMP group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSC group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSH group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr->ELEM_PTR->PORT_PTR->PPA group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr->ELEM_PTR->PORT_PTR->PHEPOL group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr->ELEM_PTR->PORT_PTR->NEXT group_ptr->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr->ADDREM_PTR group_ptr->ADDREM_PTR[0] group_ptr->ADDREM_PTR->ADDREM_TYPE group_ptr->ADDREM_PTR->BLOCK_TYPE group_ptr->ADDREM_PTR->NODE_PTR group_ptr->ADDREM_PTR->NODE_PTR[0] group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr->ADDREM_PTR->NODE_PTR->PCOORD group_ptr->ADDREM_PTR->NODE_PTR->QCOORD group_ptr->ADDREM_PTR->NODE_PTR->THEA group_ptr->ADDREM_PTR->NODE_PTR->PHEA group_ptr->ADDREM_PTR->NODE_PTR->PSEA group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr->ADDREM_PTR->NODE_PTR->NEXT group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT group_ptr->ADDREM_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr->ADDREM_PTR->NEXT->NODE_PTR group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr->ADDREM_PTR->NEXT->NEXT group_ptr->ADDREM_PTR->NEXT->NEXT[0] group_ptr->GRAMPEXC_PTR group_ptr->GRAMPEXC_PTR[0] group_ptr->GRAMPEXC_PTR->TYPE group_ptr->GRAMPEXC_PTR->UNIF_VAL group_ptr->GRAMPEXC_PTR->CENTRE group_ptr->GRAMPEXC_PTR->P1_ET group_ptr->GRAMPEXC_PTR->P2_ET group_ptr->GRAMPEXC_PTR->Q1_ET group_ptr->GRAMPEXC_PTR->Q2_ET group_ptr->GRAMPEXC_PTR->AMP_UNIT group_ptr->GRAMPEXC_PTR->PQEXP_PTR group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR group_ptr->GRPHAEXC_PTR[0] group_ptr->GRPHAEXC_PTR->TYPE group_ptr->GRPHAEXC_PTR->UNIF_VAL group_ptr->GRPHAEXC_PTR->CENTRE group_ptr->GRPHAEXC_PTR->P1_EP group_ptr->GRPHAEXC_PTR->P2_EP group_ptr->GRPHAEXC_PTR->Q1_EP group_ptr->GRPHAEXC_PTR->Q2_EP group_ptr->GRPHAEXC_PTR->DIRECTION group_ptr->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->GRPHAEXC_PTR->ANGLE_START group_ptr->GRPHAEXC_PTR->ANGLE_STEP group_ptr->GRPHAEXC_PTR->OMIT_PHASE group_ptr->GRPHAEXC_PTR->PHASE_START group_ptr->GRPHAEXC_PTR->PHASE_STEP group_ptr->GRPHAEXC_PTR->U group_ptr->GRPHAEXC_PTR->V group_ptr->GRPHAEXC_PTR->THETA group_ptr->GRPHAEXC_PTR->PHI group_ptr->GRPHAEXC_PTR->PQEXP_PTR group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->GRPHAEXC_PTR->PHASE_UNIT group_ptr->ERR_PTR group_ptr->ERR_PTR[0] group_ptr->ERR_PTR->AMP_TYPE group_ptr->ERR_PTR->AMP_STDEV group_ptr->ERR_PTR->AMP_LINOFFS group_ptr->ERR_PTR->AMP_LINSTEP group_ptr->ERR_PTR->AMP_2NDCENT group_ptr->ERR_PTR->AMP_2NDPET group_ptr->ERR_PTR->AMP_2NDQET group_ptr->ERR_PTR->AMP_UNIT group_ptr->ERR_PTR->PHASE_TYPE group_ptr->ERR_PTR->PHASE_STDEV group_ptr->ERR_PTR->PHASE_LINOFFS group_ptr->ERR_PTR->PHASE_LINSTEP group_ptr->ERR_PTR->PHASE_2NDCENT group_ptr->ERR_PTR->PHASE_2NDPSID group_ptr->ERR_PTR->PHASE_2NDQSID group_ptr->ERR_PTR->PHASE_QUANTSTEP group_ptr->ERR_PTR->PHASE_UNIT group_ptr->FAIL_PTR group_ptr->FAIL_PTR[0] group_ptr->FAIL_PTR->NUM_FAULTY_EL group_ptr->FAIL_PTR->FIXED_AMP group_ptr->FAIL_PTR->FIXED_PHASE group_ptr->NEXT group_ptr->NEXT[0] group_ptr->NEXT->NAME group_ptr->NEXT->GRID_PTR group_ptr->NEXT->GRID_PTR[0] group_ptr->NEXT->GRID_PTR->NAME group_ptr->NEXT->GRID_PTR->LEVEL group_ptr->NEXT->GRID_PTR->TYPE group_ptr->NEXT->GRID_PTR->ORIENT group_ptr->NEXT->GRID_PTR->ANGLE group_ptr->NEXT->GRID_PTR->ANGLE_UNIT group_ptr->NEXT->GRID_PTR->PSTEP group_ptr->NEXT->GRID_PTR->QSTEP group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr->NEXT->GRID_PTR->PX group_ptr->NEXT->GRID_PTR->PY group_ptr->NEXT->GRID_PTR->QX group_ptr->NEXT->GRID_PTR->QY group_ptr->NEXT->GRID_PTR->PQXY_UNIT group_ptr->NEXT->GRID_PTR->ROT_ANGLE group_ptr->NEXT->ELEM_PTR group_ptr->NEXT->ELEM_PTR[0] group_ptr->NEXT->ELEM_PTR->TYPE group_ptr->NEXT->ELEM_PTR->NAME group_ptr->NEXT->ELEM_PTR->LEVEL group_ptr->NEXT->ELEM_PTR->GEOMETRY group_ptr->NEXT->ELEM_PTR->RADIUS group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr->NEXT->ELEM_PTR->PDIM group_ptr->NEXT->ELEM_PTR->QDIM group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr->NEXT->ELEM_PTR->MODEL group_ptr->NEXT->ELEM_PTR->EXP group_ptr->NEXT->ELEM_PTR->ANGLEE group_ptr->NEXT->ELEM_PTR->ANGLEH group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr->NEXT->ELEM_PTR->TAPERE group_ptr->NEXT->ELEM_PTR->TAPERH group_ptr->NEXT->ELEM_PTR->TAPER_UNIT group_ptr->NEXT->ELEM_PTR->POLARIZATION group_ptr->NEXT->ELEM_PTR->PHEPOL group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr->NEXT->ELEM_PTR->DIRECTION group_ptr->NEXT->ELEM_PTR->GAIN group_ptr->NEXT->ELEM_PTR->GAIN_UNIT group_ptr->NEXT->ELEM_PTR->NPORTS group_ptr->NEXT->ELEM_PTR->PORT_PTR group_ptr->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr->NEXT->ADDREM_PTR group_ptr->NEXT->ADDREM_PTR[0] group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr->NEXT->ADDREM_PTR->NODE_PTR group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr->NEXT->ADDREM_PTR->NEXT group_ptr->NEXT->ADDREM_PTR->NEXT[0] group_ptr->NEXT->GRAMPEXC_PTR group_ptr->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->GRAMPEXC_PTR->TYPE group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr->NEXT->GRAMPEXC_PTR->CENTRE group_ptr->NEXT->GRAMPEXC_PTR->P1_ET group_ptr->NEXT->GRAMPEXC_PTR->P2_ET group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR group_ptr->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->TYPE group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr->NEXT->GRPHAEXC_PTR->CENTRE group_ptr->NEXT->GRPHAEXC_PTR->P1_EP group_ptr->NEXT->GRPHAEXC_PTR->P2_EP group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr->NEXT->GRPHAEXC_PTR->U group_ptr->NEXT->GRPHAEXC_PTR->V group_ptr->NEXT->GRPHAEXC_PTR->THETA group_ptr->NEXT->GRPHAEXC_PTR->PHI group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr->NEXT->ERR_PTR group_ptr->NEXT->ERR_PTR[0] group_ptr->NEXT->ERR_PTR->AMP_TYPE group_ptr->NEXT->ERR_PTR->AMP_STDEV group_ptr->NEXT->ERR_PTR->AMP_LINOFFS group_ptr->NEXT->ERR_PTR->AMP_LINSTEP group_ptr->NEXT->ERR_PTR->AMP_2NDCENT group_ptr->NEXT->ERR_PTR->AMP_2NDPET group_ptr->NEXT->ERR_PTR->AMP_2NDQET group_ptr->NEXT->ERR_PTR->AMP_UNIT group_ptr->NEXT->ERR_PTR->PHASE_TYPE group_ptr->NEXT->ERR_PTR->PHASE_STDEV group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr->NEXT->ERR_PTR->PHASE_UNIT group_ptr->NEXT->FAIL_PTR group_ptr->NEXT->FAIL_PTR[0] group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr->NEXT->FAIL_PTR->FIXED_AMP group_ptr->NEXT->FAIL_PTR->FIXED_PHASE group_ptr->NEXT->NEXT group_ptr->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NAME group_ptr->NEXT->NEXT->GRID_PTR group_ptr->NEXT->NEXT->GRID_PTR[0] group_ptr->NEXT->NEXT->ELEM_PTR group_ptr->NEXT->NEXT->ELEM_PTR[0] group_ptr->NEXT->NEXT->ADDREM_PTR group_ptr->NEXT->NEXT->ADDREM_PTR[0] group_ptr->NEXT->NEXT->GRAMPEXC_PTR group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->NEXT->GRPHAEXC_PTR group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->NEXT->ERR_PTR group_ptr->NEXT->NEXT->ERR_PTR[0] group_ptr->NEXT->NEXT->FAIL_PTR group_ptr->NEXT->NEXT->FAIL_PTR[0] group_ptr->NEXT->NEXT->NEXT group_ptr->NEXT->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NUM_OF_NODES group_ptr->NEXT->NEXT->SHAPE group_ptr->NEXT->NEXT->PSIZE group_ptr->NEXT->NEXT->QSIZE group_ptr->NEXT->NEXT->GEOMNODE_PTR group_ptr->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->NEXT->BUILT group_ptr->NEXT->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr->NEXT->NUM_OF_NODES group_ptr->NEXT->SHAPE group_ptr->NEXT->PSIZE group_ptr->NEXT->QSIZE group_ptr->NEXT->GEOMNODE_PTR group_ptr->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->LOC_P group_ptr->NEXT->GEOMNODE_PTR->LOC_Q group_ptr->NEXT->GEOMNODE_PTR->XA group_ptr->NEXT->GEOMNODE_PTR->YA group_ptr->NEXT->GEOMNODE_PTR->ZA group_ptr->NEXT->GEOMNODE_PTR->THEA group_ptr->NEXT->GEOMNODE_PTR->PHEA group_ptr->NEXT->GEOMNODE_PTR->PSEA group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->NEXT group_ptr->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->SHAPE group_ptr->NEXT->GEOMNODE_PTR->PSIZE group_ptr->NEXT->GEOMNODE_PTR->QSIZE group_ptr->NEXT->BUILT group_ptr->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->SUPER_GROUP_PTR[0] group_ptr->NUM_OF_NODES group_ptr->SHAPE group_ptr->PSIZE group_ptr->QSIZE group_ptr->GEOMNODE_PTR group_ptr->GEOMNODE_PTR[0] group_ptr->GEOMNODE_PTR->LOC_P group_ptr->GEOMNODE_PTR->LOC_Q group_ptr->GEOMNODE_PTR->XA group_ptr->GEOMNODE_PTR->YA group_ptr->GEOMNODE_PTR->ZA group_ptr->GEOMNODE_PTR->THEA group_ptr->GEOMNODE_PTR->PHEA group_ptr->GEOMNODE_PTR->PSEA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->NEXT group_ptr->GEOMNODE_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->GEOMNODE_PTR->SHAPE group_ptr->GEOMNODE_PTR->PSIZE group_ptr->GEOMNODE_PTR->QSIZE group_ptr->BUILT group_ptr->SUPER_GROUP_PTR group_ptr->SUPER_GROUP_PTR[0]
::UserNames.equals(group_ptr.NAME)
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.LEVEL
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.GEOMETRY
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.NPORTS
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.PORTNUM
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL
group_ptr.GRID_PTR.LEVEL == group_ptr.ADDREM_PTR.NODE_PTR.QCOORD
group_ptr.GRID_PTR.LEVEL == group_ptr.GRAMPEXC_PTR.TYPE
group_ptr.GRID_PTR.TYPE == group_ptr.SHAPE
group_ptr.GRID_PTR.ANGLE_UNIT == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GRID_PTR.QSTEP)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.PDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.QDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.QSIZE)
group_ptr.GRID_PTR.PQSTEP_UNIT == group_ptr.BUILT
group_ptr.GRID_PTR.PQXY_UNIT == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.GAIN)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSH)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PPA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.ZA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PSEA)
group_ptr.ELEM_PTR.TYPE == group_ptr.BUILT
group_ptr.ELEM_PTR.RADIUS_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PQDIM_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.MODEL == group_ptr.BUILT
group_ptr.ELEM_PTR.POLARIZATION == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.ELEM_PTR.PORT_PTR.PHEPOL)
group_ptr.ELEM_PTR.PHEPOL_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.DIRECTION == group_ptr.BUILT
group_ptr.ELEM_PTR.GAIN_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT == group_ptr.BUILT
group_ptr.ADDREM_PTR.ADDREM_TYPE == group_ptr.BUILT
group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, group_ptr.GRAMPEXC_PTR.Q2_ET)
group_ptr.GRAMPEXC_PTR.AMP_UNIT == group_ptr.BUILT
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == group_ptr.GRPHAEXC_PTR.PQEXP_PTR
group_ptr.GRPHAEXC_PTR.TYPE == group_ptr.BUILT
group_ptr.GRPHAEXC_PTR.PHASE_UNIT == group_ptr.BUILT
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.LOC_Q
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.SHAPE
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, group_ptr.QSIZE)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
group_ptr != null
group_ptr.[0] != null
group_ptr.GRID_PTR != null
group_ptr.GRID_PTR.LEVEL == 1
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, 60.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, 86.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, 0.0)
group_ptr.ELEM_PTR != null
group_ptr.ELEM_PTR.[0] != null
group_ptr.ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, 90.0)
group_ptr.ELEM_PTR.PORT_PTR != null
group_ptr.ELEM_PTR.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, 1.0)
group_ptr.ELEM_PTR.PORT_PTR.NEXT == null
group_ptr.ADDREM_PTR != null
group_ptr.ADDREM_PTR.[0] != null
group_ptr.ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.ADDREM_PTR.NODE_PTR != null
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.ADDREM_PTR.NEXT == null
group_ptr.GRAMPEXC_PTR != null
group_ptr.GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.GRPHAEXC_PTR != null
group_ptr.GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.ERR_PTR == null
group_ptr.FAIL_PTR == null
group_ptr.NUM_OF_NODES == 7
group_ptr.SHAPE == 2
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, 258.0)
group_ptr.GEOMNODE_PTR != null
group_ptr.GEOMNODE_PTR.[0] != null
group_ptr.GEOMNODE_PTR.LOC_P == 8
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.YA, 148.95636946268272)
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR != null
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP, 28.999999999999886)
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.NEXT == null
group_ptr.GEOMNODE_PTR.NEXT != null
group_ptr.GEOMNODE_PTR.NEXT.[0] != null
group_ptr.GEOMNODE_PTR.SUBGROUP_PTR == null
group_ptr.BUILT == 0
group_ptr.SUPER_GROUP_PTR != null
===========================================================================
..simpha():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME group_ptr group_ptr[0] group_ptr->NAME group_ptr->GRID_PTR group_ptr->GRID_PTR[0] group_ptr->GRID_PTR->NAME group_ptr->GRID_PTR->LEVEL group_ptr->GRID_PTR->TYPE group_ptr->GRID_PTR->ORIENT group_ptr->GRID_PTR->ANGLE group_ptr->GRID_PTR->ANGLE_UNIT group_ptr->GRID_PTR->PSTEP group_ptr->GRID_PTR->QSTEP group_ptr->GRID_PTR->PQSTEP_UNIT group_ptr->GRID_PTR->PX group_ptr->GRID_PTR->PY group_ptr->GRID_PTR->QX group_ptr->GRID_PTR->QY group_ptr->GRID_PTR->PQXY_UNIT group_ptr->GRID_PTR->ROT_ANGLE group_ptr->ELEM_PTR group_ptr->ELEM_PTR[0] group_ptr->ELEM_PTR->TYPE group_ptr->ELEM_PTR->NAME group_ptr->ELEM_PTR->LEVEL group_ptr->ELEM_PTR->GEOMETRY group_ptr->ELEM_PTR->RADIUS group_ptr->ELEM_PTR->RADIUS_UNIT group_ptr->ELEM_PTR->PDIM group_ptr->ELEM_PTR->QDIM group_ptr->ELEM_PTR->PQDIM_UNIT group_ptr->ELEM_PTR->MODEL group_ptr->ELEM_PTR->EXP group_ptr->ELEM_PTR->ANGLEE group_ptr->ELEM_PTR->ANGLEH group_ptr->ELEM_PTR->ANGLE_UNIT group_ptr->ELEM_PTR->TAPERE group_ptr->ELEM_PTR->TAPERH group_ptr->ELEM_PTR->TAPER_UNIT group_ptr->ELEM_PTR->POLARIZATION group_ptr->ELEM_PTR->PHEPOL group_ptr->ELEM_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->DIRECTION group_ptr->ELEM_PTR->GAIN group_ptr->ELEM_PTR->GAIN_UNIT group_ptr->ELEM_PTR->NPORTS group_ptr->ELEM_PTR->PORT_PTR group_ptr->ELEM_PTR->PORT_PTR[0] group_ptr->ELEM_PTR->PORT_PTR->PORTNUM group_ptr->ELEM_PTR->PORT_PTR->AMP group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSC group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSH group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr->ELEM_PTR->PORT_PTR->PPA group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr->ELEM_PTR->PORT_PTR->PHEPOL group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr->ELEM_PTR->PORT_PTR->NEXT group_ptr->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr->ADDREM_PTR group_ptr->ADDREM_PTR[0] group_ptr->ADDREM_PTR->ADDREM_TYPE group_ptr->ADDREM_PTR->BLOCK_TYPE group_ptr->ADDREM_PTR->NODE_PTR group_ptr->ADDREM_PTR->NODE_PTR[0] group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr->ADDREM_PTR->NODE_PTR->PCOORD group_ptr->ADDREM_PTR->NODE_PTR->QCOORD group_ptr->ADDREM_PTR->NODE_PTR->THEA group_ptr->ADDREM_PTR->NODE_PTR->PHEA group_ptr->ADDREM_PTR->NODE_PTR->PSEA group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr->ADDREM_PTR->NODE_PTR->NEXT group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT group_ptr->ADDREM_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr->ADDREM_PTR->NEXT->NODE_PTR group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr->ADDREM_PTR->NEXT->NEXT group_ptr->ADDREM_PTR->NEXT->NEXT[0] group_ptr->GRAMPEXC_PTR group_ptr->GRAMPEXC_PTR[0] group_ptr->GRAMPEXC_PTR->TYPE group_ptr->GRAMPEXC_PTR->UNIF_VAL group_ptr->GRAMPEXC_PTR->CENTRE group_ptr->GRAMPEXC_PTR->P1_ET group_ptr->GRAMPEXC_PTR->P2_ET group_ptr->GRAMPEXC_PTR->Q1_ET group_ptr->GRAMPEXC_PTR->Q2_ET group_ptr->GRAMPEXC_PTR->AMP_UNIT group_ptr->GRAMPEXC_PTR->PQEXP_PTR group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR group_ptr->GRPHAEXC_PTR[0] group_ptr->GRPHAEXC_PTR->TYPE group_ptr->GRPHAEXC_PTR->UNIF_VAL group_ptr->GRPHAEXC_PTR->CENTRE group_ptr->GRPHAEXC_PTR->P1_EP group_ptr->GRPHAEXC_PTR->P2_EP group_ptr->GRPHAEXC_PTR->Q1_EP group_ptr->GRPHAEXC_PTR->Q2_EP group_ptr->GRPHAEXC_PTR->DIRECTION group_ptr->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->GRPHAEXC_PTR->ANGLE_START group_ptr->GRPHAEXC_PTR->ANGLE_STEP group_ptr->GRPHAEXC_PTR->OMIT_PHASE group_ptr->GRPHAEXC_PTR->PHASE_START group_ptr->GRPHAEXC_PTR->PHASE_STEP group_ptr->GRPHAEXC_PTR->U group_ptr->GRPHAEXC_PTR->V group_ptr->GRPHAEXC_PTR->THETA group_ptr->GRPHAEXC_PTR->PHI group_ptr->GRPHAEXC_PTR->PQEXP_PTR group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->GRPHAEXC_PTR->PHASE_UNIT group_ptr->ERR_PTR group_ptr->ERR_PTR[0] group_ptr->ERR_PTR->AMP_TYPE group_ptr->ERR_PTR->AMP_STDEV group_ptr->ERR_PTR->AMP_LINOFFS group_ptr->ERR_PTR->AMP_LINSTEP group_ptr->ERR_PTR->AMP_2NDCENT group_ptr->ERR_PTR->AMP_2NDPET group_ptr->ERR_PTR->AMP_2NDQET group_ptr->ERR_PTR->AMP_UNIT group_ptr->ERR_PTR->PHASE_TYPE group_ptr->ERR_PTR->PHASE_STDEV group_ptr->ERR_PTR->PHASE_LINOFFS group_ptr->ERR_PTR->PHASE_LINSTEP group_ptr->ERR_PTR->PHASE_2NDCENT group_ptr->ERR_PTR->PHASE_2NDPSID group_ptr->ERR_PTR->PHASE_2NDQSID group_ptr->ERR_PTR->PHASE_QUANTSTEP group_ptr->ERR_PTR->PHASE_UNIT group_ptr->FAIL_PTR group_ptr->FAIL_PTR[0] group_ptr->FAIL_PTR->NUM_FAULTY_EL group_ptr->FAIL_PTR->FIXED_AMP group_ptr->FAIL_PTR->FIXED_PHASE group_ptr->NEXT group_ptr->NEXT[0] group_ptr->NEXT->NAME group_ptr->NEXT->GRID_PTR group_ptr->NEXT->GRID_PTR[0] group_ptr->NEXT->GRID_PTR->NAME group_ptr->NEXT->GRID_PTR->LEVEL group_ptr->NEXT->GRID_PTR->TYPE group_ptr->NEXT->GRID_PTR->ORIENT group_ptr->NEXT->GRID_PTR->ANGLE group_ptr->NEXT->GRID_PTR->ANGLE_UNIT group_ptr->NEXT->GRID_PTR->PSTEP group_ptr->NEXT->GRID_PTR->QSTEP group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr->NEXT->GRID_PTR->PX group_ptr->NEXT->GRID_PTR->PY group_ptr->NEXT->GRID_PTR->QX group_ptr->NEXT->GRID_PTR->QY group_ptr->NEXT->GRID_PTR->PQXY_UNIT group_ptr->NEXT->GRID_PTR->ROT_ANGLE group_ptr->NEXT->ELEM_PTR group_ptr->NEXT->ELEM_PTR[0] group_ptr->NEXT->ELEM_PTR->TYPE group_ptr->NEXT->ELEM_PTR->NAME group_ptr->NEXT->ELEM_PTR->LEVEL group_ptr->NEXT->ELEM_PTR->GEOMETRY group_ptr->NEXT->ELEM_PTR->RADIUS group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr->NEXT->ELEM_PTR->PDIM group_ptr->NEXT->ELEM_PTR->QDIM group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr->NEXT->ELEM_PTR->MODEL group_ptr->NEXT->ELEM_PTR->EXP group_ptr->NEXT->ELEM_PTR->ANGLEE group_ptr->NEXT->ELEM_PTR->ANGLEH group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr->NEXT->ELEM_PTR->TAPERE group_ptr->NEXT->ELEM_PTR->TAPERH group_ptr->NEXT->ELEM_PTR->TAPER_UNIT group_ptr->NEXT->ELEM_PTR->POLARIZATION group_ptr->NEXT->ELEM_PTR->PHEPOL group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr->NEXT->ELEM_PTR->DIRECTION group_ptr->NEXT->ELEM_PTR->GAIN group_ptr->NEXT->ELEM_PTR->GAIN_UNIT group_ptr->NEXT->ELEM_PTR->NPORTS group_ptr->NEXT->ELEM_PTR->PORT_PTR group_ptr->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr->NEXT->ADDREM_PTR group_ptr->NEXT->ADDREM_PTR[0] group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr->NEXT->ADDREM_PTR->NODE_PTR group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr->NEXT->ADDREM_PTR->NEXT group_ptr->NEXT->ADDREM_PTR->NEXT[0] group_ptr->NEXT->GRAMPEXC_PTR group_ptr->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->GRAMPEXC_PTR->TYPE group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr->NEXT->GRAMPEXC_PTR->CENTRE group_ptr->NEXT->GRAMPEXC_PTR->P1_ET group_ptr->NEXT->GRAMPEXC_PTR->P2_ET group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR group_ptr->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->TYPE group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr->NEXT->GRPHAEXC_PTR->CENTRE group_ptr->NEXT->GRPHAEXC_PTR->P1_EP group_ptr->NEXT->GRPHAEXC_PTR->P2_EP group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr->NEXT->GRPHAEXC_PTR->U group_ptr->NEXT->GRPHAEXC_PTR->V group_ptr->NEXT->GRPHAEXC_PTR->THETA group_ptr->NEXT->GRPHAEXC_PTR->PHI group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr->NEXT->ERR_PTR group_ptr->NEXT->ERR_PTR[0] group_ptr->NEXT->ERR_PTR->AMP_TYPE group_ptr->NEXT->ERR_PTR->AMP_STDEV group_ptr->NEXT->ERR_PTR->AMP_LINOFFS group_ptr->NEXT->ERR_PTR->AMP_LINSTEP group_ptr->NEXT->ERR_PTR->AMP_2NDCENT group_ptr->NEXT->ERR_PTR->AMP_2NDPET group_ptr->NEXT->ERR_PTR->AMP_2NDQET group_ptr->NEXT->ERR_PTR->AMP_UNIT group_ptr->NEXT->ERR_PTR->PHASE_TYPE group_ptr->NEXT->ERR_PTR->PHASE_STDEV group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr->NEXT->ERR_PTR->PHASE_UNIT group_ptr->NEXT->FAIL_PTR group_ptr->NEXT->FAIL_PTR[0] group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr->NEXT->FAIL_PTR->FIXED_AMP group_ptr->NEXT->FAIL_PTR->FIXED_PHASE group_ptr->NEXT->NEXT group_ptr->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NAME group_ptr->NEXT->NEXT->GRID_PTR group_ptr->NEXT->NEXT->GRID_PTR[0] group_ptr->NEXT->NEXT->ELEM_PTR group_ptr->NEXT->NEXT->ELEM_PTR[0] group_ptr->NEXT->NEXT->ADDREM_PTR group_ptr->NEXT->NEXT->ADDREM_PTR[0] group_ptr->NEXT->NEXT->GRAMPEXC_PTR group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->NEXT->GRPHAEXC_PTR group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->NEXT->ERR_PTR group_ptr->NEXT->NEXT->ERR_PTR[0] group_ptr->NEXT->NEXT->FAIL_PTR group_ptr->NEXT->NEXT->FAIL_PTR[0] group_ptr->NEXT->NEXT->NEXT group_ptr->NEXT->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NUM_OF_NODES group_ptr->NEXT->NEXT->SHAPE group_ptr->NEXT->NEXT->PSIZE group_ptr->NEXT->NEXT->QSIZE group_ptr->NEXT->NEXT->GEOMNODE_PTR group_ptr->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->NEXT->BUILT group_ptr->NEXT->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr->NEXT->NUM_OF_NODES group_ptr->NEXT->SHAPE group_ptr->NEXT->PSIZE group_ptr->NEXT->QSIZE group_ptr->NEXT->GEOMNODE_PTR group_ptr->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->LOC_P group_ptr->NEXT->GEOMNODE_PTR->LOC_Q group_ptr->NEXT->GEOMNODE_PTR->XA group_ptr->NEXT->GEOMNODE_PTR->YA group_ptr->NEXT->GEOMNODE_PTR->ZA group_ptr->NEXT->GEOMNODE_PTR->THEA group_ptr->NEXT->GEOMNODE_PTR->PHEA group_ptr->NEXT->GEOMNODE_PTR->PSEA group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->NEXT group_ptr->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->SHAPE group_ptr->NEXT->GEOMNODE_PTR->PSIZE group_ptr->NEXT->GEOMNODE_PTR->QSIZE group_ptr->NEXT->BUILT group_ptr->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->SUPER_GROUP_PTR[0] group_ptr->NUM_OF_NODES group_ptr->SHAPE group_ptr->PSIZE group_ptr->QSIZE group_ptr->GEOMNODE_PTR group_ptr->GEOMNODE_PTR[0] group_ptr->GEOMNODE_PTR->LOC_P group_ptr->GEOMNODE_PTR->LOC_Q group_ptr->GEOMNODE_PTR->XA group_ptr->GEOMNODE_PTR->YA group_ptr->GEOMNODE_PTR->ZA group_ptr->GEOMNODE_PTR->THEA group_ptr->GEOMNODE_PTR->PHEA group_ptr->GEOMNODE_PTR->PSEA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->NEXT group_ptr->GEOMNODE_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->GEOMNODE_PTR->SHAPE group_ptr->GEOMNODE_PTR->PSIZE group_ptr->GEOMNODE_PTR->QSIZE group_ptr->BUILT group_ptr->SUPER_GROUP_PTR group_ptr->SUPER_GROUP_PTR[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(group_ptr) orig(group_ptr[0]) orig(group_ptr->NAME) orig(group_ptr->GRID_PTR) orig(group_ptr->GRID_PTR[0]) orig(group_ptr->GRID_PTR->NAME) orig(group_ptr->GRID_PTR->LEVEL) orig(group_ptr->GRID_PTR->TYPE) orig(group_ptr->GRID_PTR->ORIENT) orig(group_ptr->GRID_PTR->ANGLE) orig(group_ptr->GRID_PTR->ANGLE_UNIT) orig(group_ptr->GRID_PTR->PSTEP) orig(group_ptr->GRID_PTR->QSTEP) orig(group_ptr->GRID_PTR->PQSTEP_UNIT) orig(group_ptr->GRID_PTR->PX) orig(group_ptr->GRID_PTR->PY) orig(group_ptr->GRID_PTR->QX) orig(group_ptr->GRID_PTR->QY) orig(group_ptr->GRID_PTR->PQXY_UNIT) orig(group_ptr->GRID_PTR->ROT_ANGLE) orig(group_ptr->ELEM_PTR) orig(group_ptr->ELEM_PTR[0]) orig(group_ptr->ELEM_PTR->TYPE) orig(group_ptr->ELEM_PTR->NAME) orig(group_ptr->ELEM_PTR->LEVEL) orig(group_ptr->ELEM_PTR->GEOMETRY) orig(group_ptr->ELEM_PTR->RADIUS) orig(group_ptr->ELEM_PTR->RADIUS_UNIT) orig(group_ptr->ELEM_PTR->PDIM) orig(group_ptr->ELEM_PTR->QDIM) orig(group_ptr->ELEM_PTR->PQDIM_UNIT) orig(group_ptr->ELEM_PTR->MODEL) orig(group_ptr->ELEM_PTR->EXP) orig(group_ptr->ELEM_PTR->ANGLEE) orig(group_ptr->ELEM_PTR->ANGLEH) orig(group_ptr->ELEM_PTR->ANGLE_UNIT) orig(group_ptr->ELEM_PTR->TAPERE) orig(group_ptr->ELEM_PTR->TAPERH) orig(group_ptr->ELEM_PTR->TAPER_UNIT) orig(group_ptr->ELEM_PTR->POLARIZATION) orig(group_ptr->ELEM_PTR->PHEPOL) orig(group_ptr->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr->ELEM_PTR->DIRECTION) orig(group_ptr->ELEM_PTR->GAIN) orig(group_ptr->ELEM_PTR->GAIN_UNIT) orig(group_ptr->ELEM_PTR->NPORTS) orig(group_ptr->ELEM_PTR->PORT_PTR) orig(group_ptr->ELEM_PTR->PORT_PTR[0]) orig(group_ptr->ELEM_PTR->PORT_PTR->PORTNUM) orig(group_ptr->ELEM_PTR->PORT_PTR->AMP) orig(group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PSC) orig(group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PSH) orig(group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PPA) orig(group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PHEPOL) orig(group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL) orig(group_ptr->ELEM_PTR->PORT_PTR->NEXT) orig(group_ptr->ELEM_PTR->PORT_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR) orig(group_ptr->ADDREM_PTR[0]) orig(group_ptr->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr->ADDREM_PTR->NODE_PTR) orig(group_ptr->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT) orig(group_ptr->ADDREM_PTR->NODE_PTR->PCOORD) orig(group_ptr->ADDREM_PTR->NODE_PTR->QCOORD) orig(group_ptr->ADDREM_PTR->NODE_PTR->THEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->PHEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->PSEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT) orig(group_ptr->ADDREM_PTR->NODE_PTR->NEXT) orig(group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR->NEXT) orig(group_ptr->ADDREM_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE) orig(group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE) orig(group_ptr->ADDREM_PTR->NEXT->NODE_PTR) orig(group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0]) orig(group_ptr->ADDREM_PTR->NEXT->NEXT) orig(group_ptr->ADDREM_PTR->NEXT->NEXT[0]) orig(group_ptr->GRAMPEXC_PTR) orig(group_ptr->GRAMPEXC_PTR[0]) orig(group_ptr->GRAMPEXC_PTR->TYPE) orig(group_ptr->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr->GRAMPEXC_PTR->CENTRE) orig(group_ptr->GRAMPEXC_PTR->P1_ET) orig(group_ptr->GRAMPEXC_PTR->P2_ET) orig(group_ptr->GRAMPEXC_PTR->Q1_ET) orig(group_ptr->GRAMPEXC_PTR->Q2_ET) orig(group_ptr->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr->GRPHAEXC_PTR) orig(group_ptr->GRPHAEXC_PTR[0]) orig(group_ptr->GRPHAEXC_PTR->TYPE) orig(group_ptr->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr->GRPHAEXC_PTR->CENTRE) orig(group_ptr->GRPHAEXC_PTR->P1_EP) orig(group_ptr->GRPHAEXC_PTR->P2_EP) orig(group_ptr->GRPHAEXC_PTR->Q1_EP) orig(group_ptr->GRPHAEXC_PTR->Q2_EP) orig(group_ptr->GRPHAEXC_PTR->DIRECTION) orig(group_ptr->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr->GRPHAEXC_PTR->PHASE_START) orig(group_ptr->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr->GRPHAEXC_PTR->U) orig(group_ptr->GRPHAEXC_PTR->V) orig(group_ptr->GRPHAEXC_PTR->THETA) orig(group_ptr->GRPHAEXC_PTR->PHI) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr->ERR_PTR) orig(group_ptr->ERR_PTR[0]) orig(group_ptr->ERR_PTR->AMP_TYPE) orig(group_ptr->ERR_PTR->AMP_STDEV) orig(group_ptr->ERR_PTR->AMP_LINOFFS) orig(group_ptr->ERR_PTR->AMP_LINSTEP) orig(group_ptr->ERR_PTR->AMP_2NDCENT) orig(group_ptr->ERR_PTR->AMP_2NDPET) orig(group_ptr->ERR_PTR->AMP_2NDQET) orig(group_ptr->ERR_PTR->AMP_UNIT) orig(group_ptr->ERR_PTR->PHASE_TYPE) orig(group_ptr->ERR_PTR->PHASE_STDEV) orig(group_ptr->ERR_PTR->PHASE_LINOFFS) orig(group_ptr->ERR_PTR->PHASE_LINSTEP) orig(group_ptr->ERR_PTR->PHASE_2NDCENT) orig(group_ptr->ERR_PTR->PHASE_2NDPSID) orig(group_ptr->ERR_PTR->PHASE_2NDQSID) orig(group_ptr->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr->ERR_PTR->PHASE_UNIT) orig(group_ptr->FAIL_PTR) orig(group_ptr->FAIL_PTR[0]) orig(group_ptr->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr->FAIL_PTR->FIXED_AMP) orig(group_ptr->FAIL_PTR->FIXED_PHASE) orig(group_ptr->NEXT) orig(group_ptr->NEXT[0]) orig(group_ptr->NEXT->NAME) orig(group_ptr->NEXT->GRID_PTR) orig(group_ptr->NEXT->GRID_PTR[0]) orig(group_ptr->NEXT->GRID_PTR->NAME) orig(group_ptr->NEXT->GRID_PTR->LEVEL) orig(group_ptr->NEXT->GRID_PTR->TYPE) orig(group_ptr->NEXT->GRID_PTR->ORIENT) orig(group_ptr->NEXT->GRID_PTR->ANGLE) orig(group_ptr->NEXT->GRID_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->GRID_PTR->PSTEP) orig(group_ptr->NEXT->GRID_PTR->QSTEP) orig(group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT) orig(group_ptr->NEXT->GRID_PTR->PX) orig(group_ptr->NEXT->GRID_PTR->PY) orig(group_ptr->NEXT->GRID_PTR->QX) orig(group_ptr->NEXT->GRID_PTR->QY) orig(group_ptr->NEXT->GRID_PTR->PQXY_UNIT) orig(group_ptr->NEXT->GRID_PTR->ROT_ANGLE) orig(group_ptr->NEXT->ELEM_PTR) orig(group_ptr->NEXT->ELEM_PTR[0]) orig(group_ptr->NEXT->ELEM_PTR->TYPE) orig(group_ptr->NEXT->ELEM_PTR->NAME) orig(group_ptr->NEXT->ELEM_PTR->LEVEL) orig(group_ptr->NEXT->ELEM_PTR->GEOMETRY) orig(group_ptr->NEXT->ELEM_PTR->RADIUS) orig(group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT) orig(group_ptr->NEXT->ELEM_PTR->PDIM) orig(group_ptr->NEXT->ELEM_PTR->QDIM) orig(group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT) orig(group_ptr->NEXT->ELEM_PTR->MODEL) orig(group_ptr->NEXT->ELEM_PTR->EXP) orig(group_ptr->NEXT->ELEM_PTR->ANGLEE) orig(group_ptr->NEXT->ELEM_PTR->ANGLEH) orig(group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->ELEM_PTR->TAPERE) orig(group_ptr->NEXT->ELEM_PTR->TAPERH) orig(group_ptr->NEXT->ELEM_PTR->TAPER_UNIT) orig(group_ptr->NEXT->ELEM_PTR->POLARIZATION) orig(group_ptr->NEXT->ELEM_PTR->PHEPOL) orig(group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr->NEXT->ELEM_PTR->DIRECTION) orig(group_ptr->NEXT->ELEM_PTR->GAIN) orig(group_ptr->NEXT->ELEM_PTR->GAIN_UNIT) orig(group_ptr->NEXT->ELEM_PTR->NPORTS) orig(group_ptr->NEXT->ELEM_PTR->PORT_PTR) orig(group_ptr->NEXT->ELEM_PTR->PORT_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR) orig(group_ptr->NEXT->ADDREM_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr->NEXT->ADDREM_PTR->NODE_PTR) orig(group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR->NEXT) orig(group_ptr->NEXT->ADDREM_PTR->NEXT[0]) orig(group_ptr->NEXT->GRAMPEXC_PTR) orig(group_ptr->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr->NEXT->GRAMPEXC_PTR->TYPE) orig(group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr->NEXT->GRAMPEXC_PTR->CENTRE) orig(group_ptr->NEXT->GRAMPEXC_PTR->P1_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->P2_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR) orig(group_ptr->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR->TYPE) orig(group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr->NEXT->GRPHAEXC_PTR->CENTRE) orig(group_ptr->NEXT->GRPHAEXC_PTR->P1_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->P2_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION) orig(group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr->NEXT->GRPHAEXC_PTR->U) orig(group_ptr->NEXT->GRPHAEXC_PTR->V) orig(group_ptr->NEXT->GRPHAEXC_PTR->THETA) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHI) orig(group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr->NEXT->ERR_PTR) orig(group_ptr->NEXT->ERR_PTR[0]) orig(group_ptr->NEXT->ERR_PTR->AMP_TYPE) orig(group_ptr->NEXT->ERR_PTR->AMP_STDEV) orig(group_ptr->NEXT->ERR_PTR->AMP_LINOFFS) orig(group_ptr->NEXT->ERR_PTR->AMP_LINSTEP) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDCENT) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDPET) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDQET) orig(group_ptr->NEXT->ERR_PTR->AMP_UNIT) orig(group_ptr->NEXT->ERR_PTR->PHASE_TYPE) orig(group_ptr->NEXT->ERR_PTR->PHASE_STDEV) orig(group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS) orig(group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID) orig(group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr->NEXT->ERR_PTR->PHASE_UNIT) orig(group_ptr->NEXT->FAIL_PTR) orig(group_ptr->NEXT->FAIL_PTR[0]) orig(group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr->NEXT->FAIL_PTR->FIXED_AMP) orig(group_ptr->NEXT->FAIL_PTR->FIXED_PHASE) orig(group_ptr->NEXT->NEXT) orig(group_ptr->NEXT->NEXT[0]) orig(group_ptr->NEXT->NEXT->NAME) orig(group_ptr->NEXT->NEXT->GRID_PTR) orig(group_ptr->NEXT->NEXT->GRID_PTR[0]) orig(group_ptr->NEXT->NEXT->ELEM_PTR) orig(group_ptr->NEXT->NEXT->ELEM_PTR[0]) orig(group_ptr->NEXT->NEXT->ADDREM_PTR) orig(group_ptr->NEXT->NEXT->ADDREM_PTR[0]) orig(group_ptr->NEXT->NEXT->GRAMPEXC_PTR) orig(group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr->NEXT->NEXT->GRPHAEXC_PTR) orig(group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr->NEXT->NEXT->ERR_PTR) orig(group_ptr->NEXT->NEXT->ERR_PTR[0]) orig(group_ptr->NEXT->NEXT->FAIL_PTR) orig(group_ptr->NEXT->NEXT->FAIL_PTR[0]) orig(group_ptr->NEXT->NEXT->NEXT) orig(group_ptr->NEXT->NEXT->NEXT[0]) orig(group_ptr->NEXT->NEXT->NUM_OF_NODES) orig(group_ptr->NEXT->NEXT->SHAPE) orig(group_ptr->NEXT->NEXT->PSIZE) orig(group_ptr->NEXT->NEXT->QSIZE) orig(group_ptr->NEXT->NEXT->GEOMNODE_PTR) orig(group_ptr->NEXT->NEXT->GEOMNODE_PTR[0]) orig(group_ptr->NEXT->NEXT->BUILT) orig(group_ptr->NEXT->NEXT->SUPER_GROUP_PTR) orig(group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr->NEXT->NUM_OF_NODES) orig(group_ptr->NEXT->SHAPE) orig(group_ptr->NEXT->PSIZE) orig(group_ptr->NEXT->QSIZE) orig(group_ptr->NEXT->GEOMNODE_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->LOC_P) orig(group_ptr->NEXT->GEOMNODE_PTR->LOC_Q) orig(group_ptr->NEXT->GEOMNODE_PTR->XA) orig(group_ptr->NEXT->GEOMNODE_PTR->YA) orig(group_ptr->NEXT->GEOMNODE_PTR->ZA) orig(group_ptr->NEXT->GEOMNODE_PTR->THEA) orig(group_ptr->NEXT->GEOMNODE_PTR->PHEA) orig(group_ptr->NEXT->GEOMNODE_PTR->PSEA) orig(group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->NEXT) orig(group_ptr->NEXT->GEOMNODE_PTR->NEXT[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->SHAPE) orig(group_ptr->NEXT->GEOMNODE_PTR->PSIZE) orig(group_ptr->NEXT->GEOMNODE_PTR->QSIZE) orig(group_ptr->NEXT->BUILT) orig(group_ptr->NEXT->SUPER_GROUP_PTR) orig(group_ptr->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr->NUM_OF_NODES) orig(group_ptr->SHAPE) orig(group_ptr->PSIZE) orig(group_ptr->QSIZE) orig(group_ptr->GEOMNODE_PTR) orig(group_ptr->GEOMNODE_PTR[0]) orig(group_ptr->GEOMNODE_PTR->LOC_P) orig(group_ptr->GEOMNODE_PTR->LOC_Q) orig(group_ptr->GEOMNODE_PTR->XA) orig(group_ptr->GEOMNODE_PTR->YA) orig(group_ptr->GEOMNODE_PTR->ZA) orig(group_ptr->GEOMNODE_PTR->THEA) orig(group_ptr->GEOMNODE_PTR->PHEA) orig(group_ptr->GEOMNODE_PTR->PSEA) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0]) orig(group_ptr->GEOMNODE_PTR->NEXT) orig(group_ptr->GEOMNODE_PTR->NEXT[0]) orig(group_ptr->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr->GEOMNODE_PTR->SHAPE) orig(group_ptr->GEOMNODE_PTR->PSIZE) orig(group_ptr->GEOMNODE_PTR->QSIZE) orig(group_ptr->BUILT) orig(group_ptr->SUPER_GROUP_PTR) orig(group_ptr->SUPER_GROUP_PTR[0])
assignable group_ptr->GRID_PTR[0], group_ptr->GRID_PTR->NAME, group_ptr->GRID_PTR->ORIENT, group_ptr->GRID_PTR->PX, group_ptr->GRID_PTR->PY, group_ptr->GRID_PTR->QX, group_ptr->GRID_PTR->QY, group_ptr->ELEM_PTR->EXP, group_ptr->ELEM_PTR->ANGLEE, group_ptr->ELEM_PTR->ANGLEH, group_ptr->ELEM_PTR->ANGLE_UNIT, group_ptr->ELEM_PTR->TAPERE, group_ptr->ELEM_PTR->TAPERH, group_ptr->ELEM_PTR->TAPER_UNIT, group_ptr->ELEM_PTR->PORT_PTR->NEXT[0], group_ptr->ADDREM_PTR->NODE_PTR[0], group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT, group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0], group_ptr->ADDREM_PTR->NEXT[0], group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE, group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE, group_ptr->ADDREM_PTR->NEXT->NODE_PTR, group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0], group_ptr->ADDREM_PTR->NEXT->NEXT, group_ptr->ADDREM_PTR->NEXT->NEXT[0], group_ptr->GRAMPEXC_PTR->UNIF_VAL, group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy, group_ptr->GRPHAEXC_PTR->CENTRE, group_ptr->GRPHAEXC_PTR->P1_EP, group_ptr->GRPHAEXC_PTR->P2_EP, group_ptr->GRPHAEXC_PTR->Q1_EP, group_ptr->GRPHAEXC_PTR->Q2_EP, group_ptr->GRPHAEXC_PTR->DIRECTION, group_ptr->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr->GRPHAEXC_PTR->ANGLE_START, group_ptr->GRPHAEXC_PTR->ANGLE_STEP, group_ptr->GRPHAEXC_PTR->OMIT_PHASE, group_ptr->GRPHAEXC_PTR->PHASE_START, group_ptr->GRPHAEXC_PTR->PHASE_STEP, group_ptr->GRPHAEXC_PTR->U, group_ptr->GRPHAEXC_PTR->V, group_ptr->GRPHAEXC_PTR->THETA, group_ptr->GRPHAEXC_PTR->PHI, group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy, group_ptr->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr->ERR_PTR[0], group_ptr->ERR_PTR->AMP_TYPE, group_ptr->ERR_PTR->AMP_STDEV, group_ptr->ERR_PTR->AMP_LINOFFS, group_ptr->ERR_PTR->AMP_LINSTEP, group_ptr->ERR_PTR->AMP_2NDCENT, group_ptr->ERR_PTR->AMP_2NDPET, group_ptr->ERR_PTR->AMP_2NDQET, group_ptr->ERR_PTR->AMP_UNIT, group_ptr->ERR_PTR->PHASE_TYPE, group_ptr->ERR_PTR->PHASE_STDEV, group_ptr->ERR_PTR->PHASE_LINOFFS, group_ptr->ERR_PTR->PHASE_LINSTEP, group_ptr->ERR_PTR->PHASE_2NDCENT, group_ptr->ERR_PTR->PHASE_2NDPSID, group_ptr->ERR_PTR->PHASE_2NDQSID, group_ptr->ERR_PTR->PHASE_QUANTSTEP, group_ptr->ERR_PTR->PHASE_UNIT, group_ptr->FAIL_PTR[0], group_ptr->FAIL_PTR->NUM_FAULTY_EL, group_ptr->FAIL_PTR->FIXED_AMP, group_ptr->FAIL_PTR->FIXED_PHASE, group_ptr->NEXT, group_ptr->NEXT[0], group_ptr->NEXT->NAME, group_ptr->NEXT->GRID_PTR, group_ptr->NEXT->GRID_PTR[0], group_ptr->NEXT->GRID_PTR->NAME, group_ptr->NEXT->GRID_PTR->LEVEL, group_ptr->NEXT->GRID_PTR->TYPE, group_ptr->NEXT->GRID_PTR->ORIENT, group_ptr->NEXT->GRID_PTR->ANGLE, group_ptr->NEXT->GRID_PTR->ANGLE_UNIT, group_ptr->NEXT->GRID_PTR->PSTEP, group_ptr->NEXT->GRID_PTR->QSTEP, group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT, group_ptr->NEXT->GRID_PTR->PX, group_ptr->NEXT->GRID_PTR->PY, group_ptr->NEXT->GRID_PTR->QX, group_ptr->NEXT->GRID_PTR->QY, group_ptr->NEXT->GRID_PTR->PQXY_UNIT, group_ptr->NEXT->GRID_PTR->ROT_ANGLE, group_ptr->NEXT->ELEM_PTR, group_ptr->NEXT->ELEM_PTR[0], group_ptr->NEXT->ELEM_PTR->TYPE, group_ptr->NEXT->ELEM_PTR->NAME, group_ptr->NEXT->ELEM_PTR->LEVEL, group_ptr->NEXT->ELEM_PTR->GEOMETRY, group_ptr->NEXT->ELEM_PTR->RADIUS, group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT, group_ptr->NEXT->ELEM_PTR->PDIM, group_ptr->NEXT->ELEM_PTR->QDIM, group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT, group_ptr->NEXT->ELEM_PTR->MODEL, group_ptr->NEXT->ELEM_PTR->EXP, group_ptr->NEXT->ELEM_PTR->ANGLEE, group_ptr->NEXT->ELEM_PTR->ANGLEH, group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT, group_ptr->NEXT->ELEM_PTR->TAPERE, group_ptr->NEXT->ELEM_PTR->TAPERH, group_ptr->NEXT->ELEM_PTR->TAPER_UNIT, group_ptr->NEXT->ELEM_PTR->POLARIZATION, group_ptr->NEXT->ELEM_PTR->PHEPOL, group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT, group_ptr->NEXT->ELEM_PTR->DIRECTION, group_ptr->NEXT->ELEM_PTR->GAIN, group_ptr->NEXT->ELEM_PTR->GAIN_UNIT, group_ptr->NEXT->ELEM_PTR->NPORTS, group_ptr->NEXT->ELEM_PTR->PORT_PTR, group_ptr->NEXT->ELEM_PTR->PORT_PTR[0], group_ptr->NEXT->ADDREM_PTR, group_ptr->NEXT->ADDREM_PTR[0], group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE, group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE, group_ptr->NEXT->ADDREM_PTR->NODE_PTR, group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0], group_ptr->NEXT->ADDREM_PTR->NEXT, group_ptr->NEXT->ADDREM_PTR->NEXT[0], group_ptr->NEXT->GRAMPEXC_PTR, group_ptr->NEXT->GRAMPEXC_PTR[0], group_ptr->NEXT->GRAMPEXC_PTR->TYPE, group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL, group_ptr->NEXT->GRAMPEXC_PTR->CENTRE, group_ptr->NEXT->GRAMPEXC_PTR->P1_ET, group_ptr->NEXT->GRAMPEXC_PTR->P2_ET, group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET, group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET, group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT, group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR, group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR, group_ptr->NEXT->GRPHAEXC_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR->TYPE, group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL, group_ptr->NEXT->GRPHAEXC_PTR->CENTRE, group_ptr->NEXT->GRPHAEXC_PTR->P1_EP, group_ptr->NEXT->GRPHAEXC_PTR->P2_EP, group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP, group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP, group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION, group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START, group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP, group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP, group_ptr->NEXT->GRPHAEXC_PTR->U, group_ptr->NEXT->GRPHAEXC_PTR->V, group_ptr->NEXT->GRPHAEXC_PTR->THETA, group_ptr->NEXT->GRPHAEXC_PTR->PHI, group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR, group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT, group_ptr->NEXT->ERR_PTR, group_ptr->NEXT->ERR_PTR[0], group_ptr->NEXT->ERR_PTR->AMP_TYPE, group_ptr->NEXT->ERR_PTR->AMP_STDEV, group_ptr->NEXT->ERR_PTR->AMP_LINOFFS, group_ptr->NEXT->ERR_PTR->AMP_LINSTEP, group_ptr->NEXT->ERR_PTR->AMP_2NDCENT, group_ptr->NEXT->ERR_PTR->AMP_2NDPET, group_ptr->NEXT->ERR_PTR->AMP_2NDQET, group_ptr->NEXT->ERR_PTR->AMP_UNIT, group_ptr->NEXT->ERR_PTR->PHASE_TYPE, group_ptr->NEXT->ERR_PTR->PHASE_STDEV, group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS, group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP, group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT, group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID, group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID, group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP, group_ptr->NEXT->ERR_PTR->PHASE_UNIT, group_ptr->NEXT->FAIL_PTR, group_ptr->NEXT->FAIL_PTR[0], group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL, group_ptr->NEXT->FAIL_PTR->FIXED_AMP, group_ptr->NEXT->FAIL_PTR->FIXED_PHASE, group_ptr->NEXT->NEXT, group_ptr->NEXT->NEXT[0], group_ptr->NEXT->NEXT->NAME, group_ptr->NEXT->NEXT->GRID_PTR, group_ptr->NEXT->NEXT->GRID_PTR[0], group_ptr->NEXT->NEXT->ELEM_PTR, group_ptr->NEXT->NEXT->ELEM_PTR[0], group_ptr->NEXT->NEXT->ADDREM_PTR, group_ptr->NEXT->NEXT->ADDREM_PTR[0], group_ptr->NEXT->NEXT->GRAMPEXC_PTR, group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0], group_ptr->NEXT->NEXT->GRPHAEXC_PTR, group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0], group_ptr->NEXT->NEXT->ERR_PTR, group_ptr->NEXT->NEXT->ERR_PTR[0], group_ptr->NEXT->NEXT->FAIL_PTR, group_ptr->NEXT->NEXT->FAIL_PTR[0], group_ptr->NEXT->NEXT->NEXT, group_ptr->NEXT->NEXT->NEXT[0], group_ptr->NEXT->NEXT->NUM_OF_NODES, group_ptr->NEXT->NEXT->SHAPE, group_ptr->NEXT->NEXT->PSIZE, group_ptr->NEXT->NEXT->QSIZE, group_ptr->NEXT->NEXT->GEOMNODE_PTR, group_ptr->NEXT->NEXT->GEOMNODE_PTR[0], group_ptr->NEXT->NEXT->BUILT, group_ptr->NEXT->NEXT->SUPER_GROUP_PTR, group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0], group_ptr->NEXT->NUM_OF_NODES, group_ptr->NEXT->SHAPE, group_ptr->NEXT->PSIZE, group_ptr->NEXT->QSIZE, group_ptr->NEXT->GEOMNODE_PTR, group_ptr->NEXT->GEOMNODE_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->LOC_P, group_ptr->NEXT->GEOMNODE_PTR->LOC_Q, group_ptr->NEXT->GEOMNODE_PTR->XA, group_ptr->NEXT->GEOMNODE_PTR->YA, group_ptr->NEXT->GEOMNODE_PTR->ZA, group_ptr->NEXT->GEOMNODE_PTR->THEA, group_ptr->NEXT->GEOMNODE_PTR->PHEA, group_ptr->NEXT->GEOMNODE_PTR->PSEA, group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR, group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->NEXT, group_ptr->NEXT->GEOMNODE_PTR->NEXT[0], group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR, group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->SHAPE, group_ptr->NEXT->GEOMNODE_PTR->PSIZE, group_ptr->NEXT->GEOMNODE_PTR->QSIZE, group_ptr->NEXT->BUILT, group_ptr->NEXT->SUPER_GROUP_PTR, group_ptr->NEXT->SUPER_GROUP_PTR[0], group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0], group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr->SUPER_GROUP_PTR[0]
::UserNames.equals(group_ptr.NAME)
::UserNames.equals(\old(::UserNames))
::UserNames.equals(\old(group_ptr.NAME))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
group_ptr.[0] == \old(group_ptr.[0])
group_ptr.GRID_PTR == \old(group_ptr.GRID_PTR)
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.LEVEL
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.GEOMETRY
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.NPORTS
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.PORTNUM
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL
group_ptr.GRID_PTR.LEVEL == group_ptr.ADDREM_PTR.NODE_PTR.QCOORD
group_ptr.GRID_PTR.LEVEL == group_ptr.GRAMPEXC_PTR.TYPE
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.GRID_PTR.LEVEL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.LEVEL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.GEOMETRY)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.NPORTS)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.PORT_PTR.PORTNUM)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ADDREM_PTR.NODE_PTR.QCOORD)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.GRAMPEXC_PTR.TYPE)
group_ptr.GRID_PTR.TYPE == group_ptr.SHAPE
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, \old(group_ptr.GRID_PTR.ANGLE))
group_ptr.GRID_PTR.ANGLE_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GRID_PTR.QSTEP)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.PDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.QDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.QSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GRID_PTR.PSTEP))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GRID_PTR.QSTEP))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.ELEM_PTR.PDIM))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.ELEM_PTR.QDIM))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GEOMNODE_PTR.PSIZE))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GEOMNODE_PTR.QSIZE))
group_ptr.GRID_PTR.PQSTEP_UNIT == return
group_ptr.GRID_PTR.PQXY_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.GAIN)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSH)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PPA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.ZA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PPA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GRID_PTR.ROT_ANGLE))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.GAIN))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PSC))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PSH))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PPA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.THEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.PHEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.PSEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.ZA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.THEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.PHEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.PSEA))
group_ptr.ELEM_PTR == \old(group_ptr.ELEM_PTR)
group_ptr.ELEM_PTR.[0] == \old(group_ptr.ELEM_PTR.[0])
group_ptr.ELEM_PTR.TYPE == return
group_ptr.ELEM_PTR.NAME.equals(\old(group_ptr.ELEM_PTR.NAME))
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, \old(group_ptr.ELEM_PTR.RADIUS))
group_ptr.ELEM_PTR.RADIUS_UNIT == return
group_ptr.ELEM_PTR.PQDIM_UNIT == return
group_ptr.ELEM_PTR.MODEL == return
group_ptr.ELEM_PTR.POLARIZATION == return
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.ELEM_PTR.PORT_PTR.PHEPOL)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, \old(group_ptr.ELEM_PTR.PHEPOL))
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, \old(group_ptr.ELEM_PTR.PORT_PTR.PHEPOL))
group_ptr.ELEM_PTR.PHEPOL_UNIT == return
group_ptr.ELEM_PTR.DIRECTION == return
group_ptr.ELEM_PTR.GAIN_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR == \old(group_ptr.ELEM_PTR.PORT_PTR)
group_ptr.ELEM_PTR.PORT_PTR.[0] == \old(group_ptr.ELEM_PTR.PORT_PTR.[0])
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, \old(group_ptr.ELEM_PTR.PORT_PTR.AMP))
group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.NEXT == \old(group_ptr.ELEM_PTR.PORT_PTR.NEXT)
group_ptr.ADDREM_PTR == \old(group_ptr.ADDREM_PTR)
group_ptr.ADDREM_PTR.[0] == \old(group_ptr.ADDREM_PTR.[0])
group_ptr.ADDREM_PTR.ADDREM_TYPE == return
group_ptr.ADDREM_PTR.BLOCK_TYPE == \old(group_ptr.ADDREM_PTR.BLOCK_TYPE)
group_ptr.ADDREM_PTR.NODE_PTR == \old(group_ptr.ADDREM_PTR.NODE_PTR)
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == \old(group_ptr.ADDREM_PTR.NODE_PTR.PCOORD)
group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT == return
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == \old(group_ptr.ADDREM_PTR.NODE_PTR.NEXT)
group_ptr.ADDREM_PTR.NEXT == \old(group_ptr.ADDREM_PTR.NEXT)
group_ptr.GRAMPEXC_PTR == \old(group_ptr.GRAMPEXC_PTR)
group_ptr.GRAMPEXC_PTR.[0] == \old(group_ptr.GRAMPEXC_PTR.[0])
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, \old(group_ptr.GRAMPEXC_PTR.CENTRE))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, group_ptr.GRAMPEXC_PTR.Q2_ET)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, \old(group_ptr.GRAMPEXC_PTR.P1_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, \old(group_ptr.GRAMPEXC_PTR.Q2_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, \old(group_ptr.GRAMPEXC_PTR.P2_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, \old(group_ptr.GRAMPEXC_PTR.Q1_ET))
group_ptr.GRAMPEXC_PTR.AMP_UNIT == return
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == group_ptr.GRPHAEXC_PTR.PQEXP_PTR
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == \old(group_ptr.GRAMPEXC_PTR.PQEXP_PTR)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == \old(group_ptr.GRPHAEXC_PTR.PQEXP_PTR)
group_ptr.GRPHAEXC_PTR == \old(group_ptr.GRPHAEXC_PTR)
group_ptr.GRPHAEXC_PTR.[0] == \old(group_ptr.GRPHAEXC_PTR.[0])
group_ptr.GRPHAEXC_PTR.TYPE == return
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PSH)
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, \old(group_ptr.GRPHAEXC_PTR.UNIF_VAL))
group_ptr.GRPHAEXC_PTR.PHASE_UNIT == return
group_ptr.ERR_PTR == \old(group_ptr.ERR_PTR)
group_ptr.FAIL_PTR == \old(group_ptr.FAIL_PTR)
group_ptr.NUM_OF_NODES == \old(group_ptr.NUM_OF_NODES)
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.LOC_Q
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.SHAPE
group_ptr.SHAPE == \old(group_ptr.GRID_PTR.TYPE)
group_ptr.SHAPE == \old(group_ptr.SHAPE)
group_ptr.SHAPE == \old(group_ptr.GEOMNODE_PTR.LOC_Q)
group_ptr.SHAPE == \old(group_ptr.GEOMNODE_PTR.SHAPE)
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, group_ptr.QSIZE)
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.PSIZE))
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.QSIZE))
group_ptr.GEOMNODE_PTR.LOC_P == \old(group_ptr.GEOMNODE_PTR.LOC_P)
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.XA, \old(group_ptr.GEOMNODE_PTR.XA))
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.YA, \old(group_ptr.GEOMNODE_PTR.YA))
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP, \old(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP))
group_ptr.BUILT == return
return == \old(group_ptr.GRID_PTR.ANGLE_UNIT)
return == \old(group_ptr.GRID_PTR.PQSTEP_UNIT)
return == \old(group_ptr.GRID_PTR.PQXY_UNIT)
return == \old(group_ptr.ELEM_PTR.TYPE)
return == \old(group_ptr.ELEM_PTR.RADIUS_UNIT)
return == \old(group_ptr.ELEM_PTR.PQDIM_UNIT)
return == \old(group_ptr.ELEM_PTR.MODEL)
return == \old(group_ptr.ELEM_PTR.POLARIZATION)
return == \old(group_ptr.ELEM_PTR.PHEPOL_UNIT)
return == \old(group_ptr.ELEM_PTR.DIRECTION)
return == \old(group_ptr.ELEM_PTR.GAIN_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT)
return == \old(group_ptr.ADDREM_PTR.ADDREM_TYPE)
return == \old(group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT)
return == \old(group_ptr.GRAMPEXC_PTR.AMP_UNIT)
return == \old(group_ptr.GRPHAEXC_PTR.TYPE)
return == \old(group_ptr.GRPHAEXC_PTR.PHASE_UNIT)
return == \old(group_ptr.BUILT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
group_ptr.[0] != null
group_ptr.GRID_PTR != null
group_ptr.GRID_PTR.LEVEL == 1
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, 60.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, 86.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, 0.0)
group_ptr.ELEM_PTR != null
group_ptr.ELEM_PTR.[0] != null
group_ptr.ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, 90.0)
group_ptr.ELEM_PTR.PORT_PTR != null
group_ptr.ELEM_PTR.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, 1.0)
group_ptr.ELEM_PTR.PORT_PTR.NEXT == null
group_ptr.ADDREM_PTR != null
group_ptr.ADDREM_PTR.[0] != null
group_ptr.ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.ADDREM_PTR.NODE_PTR != null
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.ADDREM_PTR.NEXT == null
group_ptr.GRAMPEXC_PTR != null
group_ptr.GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.GRPHAEXC_PTR != null
group_ptr.GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.ERR_PTR == null
group_ptr.FAIL_PTR == null
group_ptr.NUM_OF_NODES == 7
group_ptr.SHAPE == 2
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, 258.0)
group_ptr.GEOMNODE_PTR != null
group_ptr.GEOMNODE_PTR.[0] != null
group_ptr.GEOMNODE_PTR.LOC_P == 8
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.YA, 148.95636946268272)
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR != null
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP, 28.999999999999886)
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.NEXT == null
group_ptr.GEOMNODE_PTR.NEXT != null
group_ptr.GEOMNODE_PTR.NEXT.[0] != null
group_ptr.GEOMNODE_PTR.SUBGROUP_PTR == null
group_ptr.SUPER_GROUP_PTR != null
return == 0
===========================================================================
..simpol():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME group_ptr group_ptr[0] group_ptr->NAME group_ptr->GRID_PTR group_ptr->GRID_PTR[0] group_ptr->GRID_PTR->NAME group_ptr->GRID_PTR->LEVEL group_ptr->GRID_PTR->TYPE group_ptr->GRID_PTR->ORIENT group_ptr->GRID_PTR->ANGLE group_ptr->GRID_PTR->ANGLE_UNIT group_ptr->GRID_PTR->PSTEP group_ptr->GRID_PTR->QSTEP group_ptr->GRID_PTR->PQSTEP_UNIT group_ptr->GRID_PTR->PX group_ptr->GRID_PTR->PY group_ptr->GRID_PTR->QX group_ptr->GRID_PTR->QY group_ptr->GRID_PTR->PQXY_UNIT group_ptr->GRID_PTR->ROT_ANGLE group_ptr->ELEM_PTR group_ptr->ELEM_PTR[0] group_ptr->ELEM_PTR->TYPE group_ptr->ELEM_PTR->NAME group_ptr->ELEM_PTR->LEVEL group_ptr->ELEM_PTR->GEOMETRY group_ptr->ELEM_PTR->RADIUS group_ptr->ELEM_PTR->RADIUS_UNIT group_ptr->ELEM_PTR->PDIM group_ptr->ELEM_PTR->QDIM group_ptr->ELEM_PTR->PQDIM_UNIT group_ptr->ELEM_PTR->MODEL group_ptr->ELEM_PTR->EXP group_ptr->ELEM_PTR->ANGLEE group_ptr->ELEM_PTR->ANGLEH group_ptr->ELEM_PTR->ANGLE_UNIT group_ptr->ELEM_PTR->TAPERE group_ptr->ELEM_PTR->TAPERH group_ptr->ELEM_PTR->TAPER_UNIT group_ptr->ELEM_PTR->POLARIZATION group_ptr->ELEM_PTR->PHEPOL group_ptr->ELEM_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->DIRECTION group_ptr->ELEM_PTR->GAIN group_ptr->ELEM_PTR->GAIN_UNIT group_ptr->ELEM_PTR->NPORTS group_ptr->ELEM_PTR->PORT_PTR group_ptr->ELEM_PTR->PORT_PTR[0] group_ptr->ELEM_PTR->PORT_PTR->PORTNUM group_ptr->ELEM_PTR->PORT_PTR->AMP group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSC group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSH group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr->ELEM_PTR->PORT_PTR->PPA group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr->ELEM_PTR->PORT_PTR->PHEPOL group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr->ELEM_PTR->PORT_PTR->NEXT group_ptr->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr->ADDREM_PTR group_ptr->ADDREM_PTR[0] group_ptr->ADDREM_PTR->ADDREM_TYPE group_ptr->ADDREM_PTR->BLOCK_TYPE group_ptr->ADDREM_PTR->NODE_PTR group_ptr->ADDREM_PTR->NODE_PTR[0] group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr->ADDREM_PTR->NODE_PTR->PCOORD group_ptr->ADDREM_PTR->NODE_PTR->QCOORD group_ptr->ADDREM_PTR->NODE_PTR->THEA group_ptr->ADDREM_PTR->NODE_PTR->PHEA group_ptr->ADDREM_PTR->NODE_PTR->PSEA group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr->ADDREM_PTR->NODE_PTR->NEXT group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT group_ptr->ADDREM_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr->ADDREM_PTR->NEXT->NODE_PTR group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr->ADDREM_PTR->NEXT->NEXT group_ptr->ADDREM_PTR->NEXT->NEXT[0] group_ptr->GRAMPEXC_PTR group_ptr->GRAMPEXC_PTR[0] group_ptr->GRAMPEXC_PTR->TYPE group_ptr->GRAMPEXC_PTR->UNIF_VAL group_ptr->GRAMPEXC_PTR->CENTRE group_ptr->GRAMPEXC_PTR->P1_ET group_ptr->GRAMPEXC_PTR->P2_ET group_ptr->GRAMPEXC_PTR->Q1_ET group_ptr->GRAMPEXC_PTR->Q2_ET group_ptr->GRAMPEXC_PTR->AMP_UNIT group_ptr->GRAMPEXC_PTR->PQEXP_PTR group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR group_ptr->GRPHAEXC_PTR[0] group_ptr->GRPHAEXC_PTR->TYPE group_ptr->GRPHAEXC_PTR->UNIF_VAL group_ptr->GRPHAEXC_PTR->CENTRE group_ptr->GRPHAEXC_PTR->P1_EP group_ptr->GRPHAEXC_PTR->P2_EP group_ptr->GRPHAEXC_PTR->Q1_EP group_ptr->GRPHAEXC_PTR->Q2_EP group_ptr->GRPHAEXC_PTR->DIRECTION group_ptr->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->GRPHAEXC_PTR->ANGLE_START group_ptr->GRPHAEXC_PTR->ANGLE_STEP group_ptr->GRPHAEXC_PTR->OMIT_PHASE group_ptr->GRPHAEXC_PTR->PHASE_START group_ptr->GRPHAEXC_PTR->PHASE_STEP group_ptr->GRPHAEXC_PTR->U group_ptr->GRPHAEXC_PTR->V group_ptr->GRPHAEXC_PTR->THETA group_ptr->GRPHAEXC_PTR->PHI group_ptr->GRPHAEXC_PTR->PQEXP_PTR group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->GRPHAEXC_PTR->PHASE_UNIT group_ptr->ERR_PTR group_ptr->ERR_PTR[0] group_ptr->ERR_PTR->AMP_TYPE group_ptr->ERR_PTR->AMP_STDEV group_ptr->ERR_PTR->AMP_LINOFFS group_ptr->ERR_PTR->AMP_LINSTEP group_ptr->ERR_PTR->AMP_2NDCENT group_ptr->ERR_PTR->AMP_2NDPET group_ptr->ERR_PTR->AMP_2NDQET group_ptr->ERR_PTR->AMP_UNIT group_ptr->ERR_PTR->PHASE_TYPE group_ptr->ERR_PTR->PHASE_STDEV group_ptr->ERR_PTR->PHASE_LINOFFS group_ptr->ERR_PTR->PHASE_LINSTEP group_ptr->ERR_PTR->PHASE_2NDCENT group_ptr->ERR_PTR->PHASE_2NDPSID group_ptr->ERR_PTR->PHASE_2NDQSID group_ptr->ERR_PTR->PHASE_QUANTSTEP group_ptr->ERR_PTR->PHASE_UNIT group_ptr->FAIL_PTR group_ptr->FAIL_PTR[0] group_ptr->FAIL_PTR->NUM_FAULTY_EL group_ptr->FAIL_PTR->FIXED_AMP group_ptr->FAIL_PTR->FIXED_PHASE group_ptr->NEXT group_ptr->NEXT[0] group_ptr->NEXT->NAME group_ptr->NEXT->GRID_PTR group_ptr->NEXT->GRID_PTR[0] group_ptr->NEXT->GRID_PTR->NAME group_ptr->NEXT->GRID_PTR->LEVEL group_ptr->NEXT->GRID_PTR->TYPE group_ptr->NEXT->GRID_PTR->ORIENT group_ptr->NEXT->GRID_PTR->ANGLE group_ptr->NEXT->GRID_PTR->ANGLE_UNIT group_ptr->NEXT->GRID_PTR->PSTEP group_ptr->NEXT->GRID_PTR->QSTEP group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr->NEXT->GRID_PTR->PX group_ptr->NEXT->GRID_PTR->PY group_ptr->NEXT->GRID_PTR->QX group_ptr->NEXT->GRID_PTR->QY group_ptr->NEXT->GRID_PTR->PQXY_UNIT group_ptr->NEXT->GRID_PTR->ROT_ANGLE group_ptr->NEXT->ELEM_PTR group_ptr->NEXT->ELEM_PTR[0] group_ptr->NEXT->ELEM_PTR->TYPE group_ptr->NEXT->ELEM_PTR->NAME group_ptr->NEXT->ELEM_PTR->LEVEL group_ptr->NEXT->ELEM_PTR->GEOMETRY group_ptr->NEXT->ELEM_PTR->RADIUS group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr->NEXT->ELEM_PTR->PDIM group_ptr->NEXT->ELEM_PTR->QDIM group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr->NEXT->ELEM_PTR->MODEL group_ptr->NEXT->ELEM_PTR->EXP group_ptr->NEXT->ELEM_PTR->ANGLEE group_ptr->NEXT->ELEM_PTR->ANGLEH group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr->NEXT->ELEM_PTR->TAPERE group_ptr->NEXT->ELEM_PTR->TAPERH group_ptr->NEXT->ELEM_PTR->TAPER_UNIT group_ptr->NEXT->ELEM_PTR->POLARIZATION group_ptr->NEXT->ELEM_PTR->PHEPOL group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr->NEXT->ELEM_PTR->DIRECTION group_ptr->NEXT->ELEM_PTR->GAIN group_ptr->NEXT->ELEM_PTR->GAIN_UNIT group_ptr->NEXT->ELEM_PTR->NPORTS group_ptr->NEXT->ELEM_PTR->PORT_PTR group_ptr->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr->NEXT->ADDREM_PTR group_ptr->NEXT->ADDREM_PTR[0] group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr->NEXT->ADDREM_PTR->NODE_PTR group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr->NEXT->ADDREM_PTR->NEXT group_ptr->NEXT->ADDREM_PTR->NEXT[0] group_ptr->NEXT->GRAMPEXC_PTR group_ptr->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->GRAMPEXC_PTR->TYPE group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr->NEXT->GRAMPEXC_PTR->CENTRE group_ptr->NEXT->GRAMPEXC_PTR->P1_ET group_ptr->NEXT->GRAMPEXC_PTR->P2_ET group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR group_ptr->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->TYPE group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr->NEXT->GRPHAEXC_PTR->CENTRE group_ptr->NEXT->GRPHAEXC_PTR->P1_EP group_ptr->NEXT->GRPHAEXC_PTR->P2_EP group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr->NEXT->GRPHAEXC_PTR->U group_ptr->NEXT->GRPHAEXC_PTR->V group_ptr->NEXT->GRPHAEXC_PTR->THETA group_ptr->NEXT->GRPHAEXC_PTR->PHI group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr->NEXT->ERR_PTR group_ptr->NEXT->ERR_PTR[0] group_ptr->NEXT->ERR_PTR->AMP_TYPE group_ptr->NEXT->ERR_PTR->AMP_STDEV group_ptr->NEXT->ERR_PTR->AMP_LINOFFS group_ptr->NEXT->ERR_PTR->AMP_LINSTEP group_ptr->NEXT->ERR_PTR->AMP_2NDCENT group_ptr->NEXT->ERR_PTR->AMP_2NDPET group_ptr->NEXT->ERR_PTR->AMP_2NDQET group_ptr->NEXT->ERR_PTR->AMP_UNIT group_ptr->NEXT->ERR_PTR->PHASE_TYPE group_ptr->NEXT->ERR_PTR->PHASE_STDEV group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr->NEXT->ERR_PTR->PHASE_UNIT group_ptr->NEXT->FAIL_PTR group_ptr->NEXT->FAIL_PTR[0] group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr->NEXT->FAIL_PTR->FIXED_AMP group_ptr->NEXT->FAIL_PTR->FIXED_PHASE group_ptr->NEXT->NEXT group_ptr->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NAME group_ptr->NEXT->NEXT->GRID_PTR group_ptr->NEXT->NEXT->GRID_PTR[0] group_ptr->NEXT->NEXT->ELEM_PTR group_ptr->NEXT->NEXT->ELEM_PTR[0] group_ptr->NEXT->NEXT->ADDREM_PTR group_ptr->NEXT->NEXT->ADDREM_PTR[0] group_ptr->NEXT->NEXT->GRAMPEXC_PTR group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->NEXT->GRPHAEXC_PTR group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->NEXT->ERR_PTR group_ptr->NEXT->NEXT->ERR_PTR[0] group_ptr->NEXT->NEXT->FAIL_PTR group_ptr->NEXT->NEXT->FAIL_PTR[0] group_ptr->NEXT->NEXT->NEXT group_ptr->NEXT->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NUM_OF_NODES group_ptr->NEXT->NEXT->SHAPE group_ptr->NEXT->NEXT->PSIZE group_ptr->NEXT->NEXT->QSIZE group_ptr->NEXT->NEXT->GEOMNODE_PTR group_ptr->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->NEXT->BUILT group_ptr->NEXT->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr->NEXT->NUM_OF_NODES group_ptr->NEXT->SHAPE group_ptr->NEXT->PSIZE group_ptr->NEXT->QSIZE group_ptr->NEXT->GEOMNODE_PTR group_ptr->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->LOC_P group_ptr->NEXT->GEOMNODE_PTR->LOC_Q group_ptr->NEXT->GEOMNODE_PTR->XA group_ptr->NEXT->GEOMNODE_PTR->YA group_ptr->NEXT->GEOMNODE_PTR->ZA group_ptr->NEXT->GEOMNODE_PTR->THEA group_ptr->NEXT->GEOMNODE_PTR->PHEA group_ptr->NEXT->GEOMNODE_PTR->PSEA group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->NEXT group_ptr->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->SHAPE group_ptr->NEXT->GEOMNODE_PTR->PSIZE group_ptr->NEXT->GEOMNODE_PTR->QSIZE group_ptr->NEXT->BUILT group_ptr->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->SUPER_GROUP_PTR[0] group_ptr->NUM_OF_NODES group_ptr->SHAPE group_ptr->PSIZE group_ptr->QSIZE group_ptr->GEOMNODE_PTR group_ptr->GEOMNODE_PTR[0] group_ptr->GEOMNODE_PTR->LOC_P group_ptr->GEOMNODE_PTR->LOC_Q group_ptr->GEOMNODE_PTR->XA group_ptr->GEOMNODE_PTR->YA group_ptr->GEOMNODE_PTR->ZA group_ptr->GEOMNODE_PTR->THEA group_ptr->GEOMNODE_PTR->PHEA group_ptr->GEOMNODE_PTR->PSEA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->NEXT group_ptr->GEOMNODE_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->GEOMNODE_PTR->SHAPE group_ptr->GEOMNODE_PTR->PSIZE group_ptr->GEOMNODE_PTR->QSIZE group_ptr->BUILT group_ptr->SUPER_GROUP_PTR group_ptr->SUPER_GROUP_PTR[0]
::UserNames.equals(group_ptr.NAME)
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.LEVEL
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.GEOMETRY
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.NPORTS
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.PORTNUM
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL
group_ptr.GRID_PTR.LEVEL == group_ptr.ADDREM_PTR.NODE_PTR.QCOORD
group_ptr.GRID_PTR.LEVEL == group_ptr.GRAMPEXC_PTR.TYPE
group_ptr.GRID_PTR.TYPE == group_ptr.SHAPE
group_ptr.GRID_PTR.ANGLE_UNIT == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GRID_PTR.QSTEP)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.PDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.QDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.QSIZE)
group_ptr.GRID_PTR.PQSTEP_UNIT == group_ptr.BUILT
group_ptr.GRID_PTR.PQXY_UNIT == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.GAIN)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSH)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PPA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.ZA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PPA)
group_ptr.ELEM_PTR.TYPE == group_ptr.BUILT
group_ptr.ELEM_PTR.RADIUS_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PQDIM_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.MODEL == group_ptr.BUILT
group_ptr.ELEM_PTR.POLARIZATION == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.ELEM_PTR.PORT_PTR.PHEPOL)
group_ptr.ELEM_PTR.PHEPOL_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.DIRECTION == group_ptr.BUILT
group_ptr.ELEM_PTR.GAIN_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT == group_ptr.BUILT
group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT == group_ptr.BUILT
group_ptr.ADDREM_PTR.ADDREM_TYPE == group_ptr.BUILT
group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, group_ptr.GRAMPEXC_PTR.Q2_ET)
group_ptr.GRAMPEXC_PTR.AMP_UNIT == group_ptr.BUILT
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == group_ptr.GRPHAEXC_PTR.PQEXP_PTR
group_ptr.GRPHAEXC_PTR.TYPE == group_ptr.BUILT
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PSH)
group_ptr.GRPHAEXC_PTR.PHASE_UNIT == group_ptr.BUILT
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.LOC_Q
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.SHAPE
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, group_ptr.QSIZE)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
group_ptr != null
group_ptr.[0] != null
group_ptr.GRID_PTR != null
group_ptr.GRID_PTR.LEVEL == 1
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, 60.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, 86.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, 0.0)
group_ptr.ELEM_PTR != null
group_ptr.ELEM_PTR.[0] != null
group_ptr.ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, 90.0)
group_ptr.ELEM_PTR.PORT_PTR != null
group_ptr.ELEM_PTR.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, 1.0)
group_ptr.ELEM_PTR.PORT_PTR.NEXT == null
group_ptr.ADDREM_PTR != null
group_ptr.ADDREM_PTR.[0] != null
group_ptr.ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.ADDREM_PTR.NODE_PTR != null
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.ADDREM_PTR.NEXT == null
group_ptr.GRAMPEXC_PTR != null
group_ptr.GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.GRPHAEXC_PTR != null
group_ptr.GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.ERR_PTR == null
group_ptr.FAIL_PTR == null
group_ptr.NUM_OF_NODES == 7
group_ptr.SHAPE == 2
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, 258.0)
group_ptr.GEOMNODE_PTR != null
group_ptr.GEOMNODE_PTR.[0] != null
group_ptr.GEOMNODE_PTR.LOC_P == 8
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.YA, 148.95636946268272)
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR != null
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP, 28.999999999999886)
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.NEXT == null
group_ptr.GEOMNODE_PTR.NEXT != null
group_ptr.GEOMNODE_PTR.NEXT.[0] != null
group_ptr.GEOMNODE_PTR.SUBGROUP_PTR == null
group_ptr.BUILT == 0
group_ptr.SUPER_GROUP_PTR != null
===========================================================================
..simpol():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME group_ptr group_ptr[0] group_ptr->NAME group_ptr->GRID_PTR group_ptr->GRID_PTR[0] group_ptr->GRID_PTR->NAME group_ptr->GRID_PTR->LEVEL group_ptr->GRID_PTR->TYPE group_ptr->GRID_PTR->ORIENT group_ptr->GRID_PTR->ANGLE group_ptr->GRID_PTR->ANGLE_UNIT group_ptr->GRID_PTR->PSTEP group_ptr->GRID_PTR->QSTEP group_ptr->GRID_PTR->PQSTEP_UNIT group_ptr->GRID_PTR->PX group_ptr->GRID_PTR->PY group_ptr->GRID_PTR->QX group_ptr->GRID_PTR->QY group_ptr->GRID_PTR->PQXY_UNIT group_ptr->GRID_PTR->ROT_ANGLE group_ptr->ELEM_PTR group_ptr->ELEM_PTR[0] group_ptr->ELEM_PTR->TYPE group_ptr->ELEM_PTR->NAME group_ptr->ELEM_PTR->LEVEL group_ptr->ELEM_PTR->GEOMETRY group_ptr->ELEM_PTR->RADIUS group_ptr->ELEM_PTR->RADIUS_UNIT group_ptr->ELEM_PTR->PDIM group_ptr->ELEM_PTR->QDIM group_ptr->ELEM_PTR->PQDIM_UNIT group_ptr->ELEM_PTR->MODEL group_ptr->ELEM_PTR->EXP group_ptr->ELEM_PTR->ANGLEE group_ptr->ELEM_PTR->ANGLEH group_ptr->ELEM_PTR->ANGLE_UNIT group_ptr->ELEM_PTR->TAPERE group_ptr->ELEM_PTR->TAPERH group_ptr->ELEM_PTR->TAPER_UNIT group_ptr->ELEM_PTR->POLARIZATION group_ptr->ELEM_PTR->PHEPOL group_ptr->ELEM_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->DIRECTION group_ptr->ELEM_PTR->GAIN group_ptr->ELEM_PTR->GAIN_UNIT group_ptr->ELEM_PTR->NPORTS group_ptr->ELEM_PTR->PORT_PTR group_ptr->ELEM_PTR->PORT_PTR[0] group_ptr->ELEM_PTR->PORT_PTR->PORTNUM group_ptr->ELEM_PTR->PORT_PTR->AMP group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSC group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT group_ptr->ELEM_PTR->PORT_PTR->PSH group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT group_ptr->ELEM_PTR->PORT_PTR->PPA group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT group_ptr->ELEM_PTR->PORT_PTR->PHEPOL group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL group_ptr->ELEM_PTR->PORT_PTR->NEXT group_ptr->ELEM_PTR->PORT_PTR->NEXT[0] group_ptr->ADDREM_PTR group_ptr->ADDREM_PTR[0] group_ptr->ADDREM_PTR->ADDREM_TYPE group_ptr->ADDREM_PTR->BLOCK_TYPE group_ptr->ADDREM_PTR->NODE_PTR group_ptr->ADDREM_PTR->NODE_PTR[0] group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT group_ptr->ADDREM_PTR->NODE_PTR->PCOORD group_ptr->ADDREM_PTR->NODE_PTR->QCOORD group_ptr->ADDREM_PTR->NODE_PTR->THEA group_ptr->ADDREM_PTR->NODE_PTR->PHEA group_ptr->ADDREM_PTR->NODE_PTR->PSEA group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT group_ptr->ADDREM_PTR->NODE_PTR->NEXT group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT group_ptr->ADDREM_PTR->NEXT[0] group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE group_ptr->ADDREM_PTR->NEXT->NODE_PTR group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0] group_ptr->ADDREM_PTR->NEXT->NEXT group_ptr->ADDREM_PTR->NEXT->NEXT[0] group_ptr->GRAMPEXC_PTR group_ptr->GRAMPEXC_PTR[0] group_ptr->GRAMPEXC_PTR->TYPE group_ptr->GRAMPEXC_PTR->UNIF_VAL group_ptr->GRAMPEXC_PTR->CENTRE group_ptr->GRAMPEXC_PTR->P1_ET group_ptr->GRAMPEXC_PTR->P2_ET group_ptr->GRAMPEXC_PTR->Q1_ET group_ptr->GRAMPEXC_PTR->Q2_ET group_ptr->GRAMPEXC_PTR->AMP_UNIT group_ptr->GRAMPEXC_PTR->PQEXP_PTR group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR group_ptr->GRPHAEXC_PTR[0] group_ptr->GRPHAEXC_PTR->TYPE group_ptr->GRPHAEXC_PTR->UNIF_VAL group_ptr->GRPHAEXC_PTR->CENTRE group_ptr->GRPHAEXC_PTR->P1_EP group_ptr->GRPHAEXC_PTR->P2_EP group_ptr->GRPHAEXC_PTR->Q1_EP group_ptr->GRPHAEXC_PTR->Q2_EP group_ptr->GRPHAEXC_PTR->DIRECTION group_ptr->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->GRPHAEXC_PTR->ANGLE_START group_ptr->GRPHAEXC_PTR->ANGLE_STEP group_ptr->GRPHAEXC_PTR->OMIT_PHASE group_ptr->GRPHAEXC_PTR->PHASE_START group_ptr->GRPHAEXC_PTR->PHASE_STEP group_ptr->GRPHAEXC_PTR->U group_ptr->GRPHAEXC_PTR->V group_ptr->GRPHAEXC_PTR->THETA group_ptr->GRPHAEXC_PTR->PHI group_ptr->GRPHAEXC_PTR->PQEXP_PTR group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy group_ptr->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->GRPHAEXC_PTR->PHASE_UNIT group_ptr->ERR_PTR group_ptr->ERR_PTR[0] group_ptr->ERR_PTR->AMP_TYPE group_ptr->ERR_PTR->AMP_STDEV group_ptr->ERR_PTR->AMP_LINOFFS group_ptr->ERR_PTR->AMP_LINSTEP group_ptr->ERR_PTR->AMP_2NDCENT group_ptr->ERR_PTR->AMP_2NDPET group_ptr->ERR_PTR->AMP_2NDQET group_ptr->ERR_PTR->AMP_UNIT group_ptr->ERR_PTR->PHASE_TYPE group_ptr->ERR_PTR->PHASE_STDEV group_ptr->ERR_PTR->PHASE_LINOFFS group_ptr->ERR_PTR->PHASE_LINSTEP group_ptr->ERR_PTR->PHASE_2NDCENT group_ptr->ERR_PTR->PHASE_2NDPSID group_ptr->ERR_PTR->PHASE_2NDQSID group_ptr->ERR_PTR->PHASE_QUANTSTEP group_ptr->ERR_PTR->PHASE_UNIT group_ptr->FAIL_PTR group_ptr->FAIL_PTR[0] group_ptr->FAIL_PTR->NUM_FAULTY_EL group_ptr->FAIL_PTR->FIXED_AMP group_ptr->FAIL_PTR->FIXED_PHASE group_ptr->NEXT group_ptr->NEXT[0] group_ptr->NEXT->NAME group_ptr->NEXT->GRID_PTR group_ptr->NEXT->GRID_PTR[0] group_ptr->NEXT->GRID_PTR->NAME group_ptr->NEXT->GRID_PTR->LEVEL group_ptr->NEXT->GRID_PTR->TYPE group_ptr->NEXT->GRID_PTR->ORIENT group_ptr->NEXT->GRID_PTR->ANGLE group_ptr->NEXT->GRID_PTR->ANGLE_UNIT group_ptr->NEXT->GRID_PTR->PSTEP group_ptr->NEXT->GRID_PTR->QSTEP group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT group_ptr->NEXT->GRID_PTR->PX group_ptr->NEXT->GRID_PTR->PY group_ptr->NEXT->GRID_PTR->QX group_ptr->NEXT->GRID_PTR->QY group_ptr->NEXT->GRID_PTR->PQXY_UNIT group_ptr->NEXT->GRID_PTR->ROT_ANGLE group_ptr->NEXT->ELEM_PTR group_ptr->NEXT->ELEM_PTR[0] group_ptr->NEXT->ELEM_PTR->TYPE group_ptr->NEXT->ELEM_PTR->NAME group_ptr->NEXT->ELEM_PTR->LEVEL group_ptr->NEXT->ELEM_PTR->GEOMETRY group_ptr->NEXT->ELEM_PTR->RADIUS group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT group_ptr->NEXT->ELEM_PTR->PDIM group_ptr->NEXT->ELEM_PTR->QDIM group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT group_ptr->NEXT->ELEM_PTR->MODEL group_ptr->NEXT->ELEM_PTR->EXP group_ptr->NEXT->ELEM_PTR->ANGLEE group_ptr->NEXT->ELEM_PTR->ANGLEH group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT group_ptr->NEXT->ELEM_PTR->TAPERE group_ptr->NEXT->ELEM_PTR->TAPERH group_ptr->NEXT->ELEM_PTR->TAPER_UNIT group_ptr->NEXT->ELEM_PTR->POLARIZATION group_ptr->NEXT->ELEM_PTR->PHEPOL group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT group_ptr->NEXT->ELEM_PTR->DIRECTION group_ptr->NEXT->ELEM_PTR->GAIN group_ptr->NEXT->ELEM_PTR->GAIN_UNIT group_ptr->NEXT->ELEM_PTR->NPORTS group_ptr->NEXT->ELEM_PTR->PORT_PTR group_ptr->NEXT->ELEM_PTR->PORT_PTR[0] group_ptr->NEXT->ADDREM_PTR group_ptr->NEXT->ADDREM_PTR[0] group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE group_ptr->NEXT->ADDREM_PTR->NODE_PTR group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0] group_ptr->NEXT->ADDREM_PTR->NEXT group_ptr->NEXT->ADDREM_PTR->NEXT[0] group_ptr->NEXT->GRAMPEXC_PTR group_ptr->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->GRAMPEXC_PTR->TYPE group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL group_ptr->NEXT->GRAMPEXC_PTR->CENTRE group_ptr->NEXT->GRAMPEXC_PTR->P1_ET group_ptr->NEXT->GRAMPEXC_PTR->P2_ET group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR group_ptr->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->TYPE group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL group_ptr->NEXT->GRPHAEXC_PTR->CENTRE group_ptr->NEXT->GRPHAEXC_PTR->P1_EP group_ptr->NEXT->GRPHAEXC_PTR->P2_EP group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP group_ptr->NEXT->GRPHAEXC_PTR->U group_ptr->NEXT->GRPHAEXC_PTR->V group_ptr->NEXT->GRPHAEXC_PTR->THETA group_ptr->NEXT->GRPHAEXC_PTR->PHI group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0] group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT group_ptr->NEXT->ERR_PTR group_ptr->NEXT->ERR_PTR[0] group_ptr->NEXT->ERR_PTR->AMP_TYPE group_ptr->NEXT->ERR_PTR->AMP_STDEV group_ptr->NEXT->ERR_PTR->AMP_LINOFFS group_ptr->NEXT->ERR_PTR->AMP_LINSTEP group_ptr->NEXT->ERR_PTR->AMP_2NDCENT group_ptr->NEXT->ERR_PTR->AMP_2NDPET group_ptr->NEXT->ERR_PTR->AMP_2NDQET group_ptr->NEXT->ERR_PTR->AMP_UNIT group_ptr->NEXT->ERR_PTR->PHASE_TYPE group_ptr->NEXT->ERR_PTR->PHASE_STDEV group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP group_ptr->NEXT->ERR_PTR->PHASE_UNIT group_ptr->NEXT->FAIL_PTR group_ptr->NEXT->FAIL_PTR[0] group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL group_ptr->NEXT->FAIL_PTR->FIXED_AMP group_ptr->NEXT->FAIL_PTR->FIXED_PHASE group_ptr->NEXT->NEXT group_ptr->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NAME group_ptr->NEXT->NEXT->GRID_PTR group_ptr->NEXT->NEXT->GRID_PTR[0] group_ptr->NEXT->NEXT->ELEM_PTR group_ptr->NEXT->NEXT->ELEM_PTR[0] group_ptr->NEXT->NEXT->ADDREM_PTR group_ptr->NEXT->NEXT->ADDREM_PTR[0] group_ptr->NEXT->NEXT->GRAMPEXC_PTR group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0] group_ptr->NEXT->NEXT->GRPHAEXC_PTR group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0] group_ptr->NEXT->NEXT->ERR_PTR group_ptr->NEXT->NEXT->ERR_PTR[0] group_ptr->NEXT->NEXT->FAIL_PTR group_ptr->NEXT->NEXT->FAIL_PTR[0] group_ptr->NEXT->NEXT->NEXT group_ptr->NEXT->NEXT->NEXT[0] group_ptr->NEXT->NEXT->NUM_OF_NODES group_ptr->NEXT->NEXT->SHAPE group_ptr->NEXT->NEXT->PSIZE group_ptr->NEXT->NEXT->QSIZE group_ptr->NEXT->NEXT->GEOMNODE_PTR group_ptr->NEXT->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->NEXT->BUILT group_ptr->NEXT->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0] group_ptr->NEXT->NUM_OF_NODES group_ptr->NEXT->SHAPE group_ptr->NEXT->PSIZE group_ptr->NEXT->QSIZE group_ptr->NEXT->GEOMNODE_PTR group_ptr->NEXT->GEOMNODE_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->LOC_P group_ptr->NEXT->GEOMNODE_PTR->LOC_Q group_ptr->NEXT->GEOMNODE_PTR->XA group_ptr->NEXT->GEOMNODE_PTR->YA group_ptr->NEXT->GEOMNODE_PTR->ZA group_ptr->NEXT->GEOMNODE_PTR->THEA group_ptr->NEXT->GEOMNODE_PTR->PHEA group_ptr->NEXT->GEOMNODE_PTR->PSEA group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->NEXT group_ptr->NEXT->GEOMNODE_PTR->NEXT[0] group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->NEXT->GEOMNODE_PTR->SHAPE group_ptr->NEXT->GEOMNODE_PTR->PSIZE group_ptr->NEXT->GEOMNODE_PTR->QSIZE group_ptr->NEXT->BUILT group_ptr->NEXT->SUPER_GROUP_PTR group_ptr->NEXT->SUPER_GROUP_PTR[0] group_ptr->NUM_OF_NODES group_ptr->SHAPE group_ptr->PSIZE group_ptr->QSIZE group_ptr->GEOMNODE_PTR group_ptr->GEOMNODE_PTR[0] group_ptr->GEOMNODE_PTR->LOC_P group_ptr->GEOMNODE_PTR->LOC_Q group_ptr->GEOMNODE_PTR->XA group_ptr->GEOMNODE_PTR->YA group_ptr->GEOMNODE_PTR->ZA group_ptr->GEOMNODE_PTR->THEA group_ptr->GEOMNODE_PTR->PHEA group_ptr->GEOMNODE_PTR->PSEA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0] group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->NEXT group_ptr->GEOMNODE_PTR->NEXT[0] group_ptr->GEOMNODE_PTR->SUBGROUP_PTR group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0] group_ptr->GEOMNODE_PTR->SHAPE group_ptr->GEOMNODE_PTR->PSIZE group_ptr->GEOMNODE_PTR->QSIZE group_ptr->BUILT group_ptr->SUPER_GROUP_PTR group_ptr->SUPER_GROUP_PTR[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(group_ptr) orig(group_ptr[0]) orig(group_ptr->NAME) orig(group_ptr->GRID_PTR) orig(group_ptr->GRID_PTR[0]) orig(group_ptr->GRID_PTR->NAME) orig(group_ptr->GRID_PTR->LEVEL) orig(group_ptr->GRID_PTR->TYPE) orig(group_ptr->GRID_PTR->ORIENT) orig(group_ptr->GRID_PTR->ANGLE) orig(group_ptr->GRID_PTR->ANGLE_UNIT) orig(group_ptr->GRID_PTR->PSTEP) orig(group_ptr->GRID_PTR->QSTEP) orig(group_ptr->GRID_PTR->PQSTEP_UNIT) orig(group_ptr->GRID_PTR->PX) orig(group_ptr->GRID_PTR->PY) orig(group_ptr->GRID_PTR->QX) orig(group_ptr->GRID_PTR->QY) orig(group_ptr->GRID_PTR->PQXY_UNIT) orig(group_ptr->GRID_PTR->ROT_ANGLE) orig(group_ptr->ELEM_PTR) orig(group_ptr->ELEM_PTR[0]) orig(group_ptr->ELEM_PTR->TYPE) orig(group_ptr->ELEM_PTR->NAME) orig(group_ptr->ELEM_PTR->LEVEL) orig(group_ptr->ELEM_PTR->GEOMETRY) orig(group_ptr->ELEM_PTR->RADIUS) orig(group_ptr->ELEM_PTR->RADIUS_UNIT) orig(group_ptr->ELEM_PTR->PDIM) orig(group_ptr->ELEM_PTR->QDIM) orig(group_ptr->ELEM_PTR->PQDIM_UNIT) orig(group_ptr->ELEM_PTR->MODEL) orig(group_ptr->ELEM_PTR->EXP) orig(group_ptr->ELEM_PTR->ANGLEE) orig(group_ptr->ELEM_PTR->ANGLEH) orig(group_ptr->ELEM_PTR->ANGLE_UNIT) orig(group_ptr->ELEM_PTR->TAPERE) orig(group_ptr->ELEM_PTR->TAPERH) orig(group_ptr->ELEM_PTR->TAPER_UNIT) orig(group_ptr->ELEM_PTR->POLARIZATION) orig(group_ptr->ELEM_PTR->PHEPOL) orig(group_ptr->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr->ELEM_PTR->DIRECTION) orig(group_ptr->ELEM_PTR->GAIN) orig(group_ptr->ELEM_PTR->GAIN_UNIT) orig(group_ptr->ELEM_PTR->NPORTS) orig(group_ptr->ELEM_PTR->PORT_PTR) orig(group_ptr->ELEM_PTR->PORT_PTR[0]) orig(group_ptr->ELEM_PTR->PORT_PTR->PORTNUM) orig(group_ptr->ELEM_PTR->PORT_PTR->AMP) orig(group_ptr->ELEM_PTR->PORT_PTR->AMP_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PSC) orig(group_ptr->ELEM_PTR->PORT_PTR->PSC_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PSH) orig(group_ptr->ELEM_PTR->PORT_PTR->PSH_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PPA) orig(group_ptr->ELEM_PTR->PORT_PTR->PPA_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->PHEPOL) orig(group_ptr->ELEM_PTR->PORT_PTR->PHEPOL_UNIT) orig(group_ptr->ELEM_PTR->PORT_PTR->OMIT_POL) orig(group_ptr->ELEM_PTR->PORT_PTR->NEXT) orig(group_ptr->ELEM_PTR->PORT_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR) orig(group_ptr->ADDREM_PTR[0]) orig(group_ptr->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr->ADDREM_PTR->NODE_PTR) orig(group_ptr->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT) orig(group_ptr->ADDREM_PTR->NODE_PTR->PCOORD) orig(group_ptr->ADDREM_PTR->NODE_PTR->QCOORD) orig(group_ptr->ADDREM_PTR->NODE_PTR->THEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->PHEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->PSEA) orig(group_ptr->ADDREM_PTR->NODE_PTR->ANGLE_UNIT) orig(group_ptr->ADDREM_PTR->NODE_PTR->NEXT) orig(group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR->NEXT) orig(group_ptr->ADDREM_PTR->NEXT[0]) orig(group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE) orig(group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE) orig(group_ptr->ADDREM_PTR->NEXT->NODE_PTR) orig(group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0]) orig(group_ptr->ADDREM_PTR->NEXT->NEXT) orig(group_ptr->ADDREM_PTR->NEXT->NEXT[0]) orig(group_ptr->GRAMPEXC_PTR) orig(group_ptr->GRAMPEXC_PTR[0]) orig(group_ptr->GRAMPEXC_PTR->TYPE) orig(group_ptr->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr->GRAMPEXC_PTR->CENTRE) orig(group_ptr->GRAMPEXC_PTR->P1_ET) orig(group_ptr->GRAMPEXC_PTR->P2_ET) orig(group_ptr->GRAMPEXC_PTR->Q1_ET) orig(group_ptr->GRAMPEXC_PTR->Q2_ET) orig(group_ptr->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr->GRPHAEXC_PTR) orig(group_ptr->GRPHAEXC_PTR[0]) orig(group_ptr->GRPHAEXC_PTR->TYPE) orig(group_ptr->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr->GRPHAEXC_PTR->CENTRE) orig(group_ptr->GRPHAEXC_PTR->P1_EP) orig(group_ptr->GRPHAEXC_PTR->P2_EP) orig(group_ptr->GRPHAEXC_PTR->Q1_EP) orig(group_ptr->GRPHAEXC_PTR->Q2_EP) orig(group_ptr->GRPHAEXC_PTR->DIRECTION) orig(group_ptr->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr->GRPHAEXC_PTR->PHASE_START) orig(group_ptr->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr->GRPHAEXC_PTR->U) orig(group_ptr->GRPHAEXC_PTR->V) orig(group_ptr->GRPHAEXC_PTR->THETA) orig(group_ptr->GRPHAEXC_PTR->PHI) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy) orig(group_ptr->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr->ERR_PTR) orig(group_ptr->ERR_PTR[0]) orig(group_ptr->ERR_PTR->AMP_TYPE) orig(group_ptr->ERR_PTR->AMP_STDEV) orig(group_ptr->ERR_PTR->AMP_LINOFFS) orig(group_ptr->ERR_PTR->AMP_LINSTEP) orig(group_ptr->ERR_PTR->AMP_2NDCENT) orig(group_ptr->ERR_PTR->AMP_2NDPET) orig(group_ptr->ERR_PTR->AMP_2NDQET) orig(group_ptr->ERR_PTR->AMP_UNIT) orig(group_ptr->ERR_PTR->PHASE_TYPE) orig(group_ptr->ERR_PTR->PHASE_STDEV) orig(group_ptr->ERR_PTR->PHASE_LINOFFS) orig(group_ptr->ERR_PTR->PHASE_LINSTEP) orig(group_ptr->ERR_PTR->PHASE_2NDCENT) orig(group_ptr->ERR_PTR->PHASE_2NDPSID) orig(group_ptr->ERR_PTR->PHASE_2NDQSID) orig(group_ptr->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr->ERR_PTR->PHASE_UNIT) orig(group_ptr->FAIL_PTR) orig(group_ptr->FAIL_PTR[0]) orig(group_ptr->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr->FAIL_PTR->FIXED_AMP) orig(group_ptr->FAIL_PTR->FIXED_PHASE) orig(group_ptr->NEXT) orig(group_ptr->NEXT[0]) orig(group_ptr->NEXT->NAME) orig(group_ptr->NEXT->GRID_PTR) orig(group_ptr->NEXT->GRID_PTR[0]) orig(group_ptr->NEXT->GRID_PTR->NAME) orig(group_ptr->NEXT->GRID_PTR->LEVEL) orig(group_ptr->NEXT->GRID_PTR->TYPE) orig(group_ptr->NEXT->GRID_PTR->ORIENT) orig(group_ptr->NEXT->GRID_PTR->ANGLE) orig(group_ptr->NEXT->GRID_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->GRID_PTR->PSTEP) orig(group_ptr->NEXT->GRID_PTR->QSTEP) orig(group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT) orig(group_ptr->NEXT->GRID_PTR->PX) orig(group_ptr->NEXT->GRID_PTR->PY) orig(group_ptr->NEXT->GRID_PTR->QX) orig(group_ptr->NEXT->GRID_PTR->QY) orig(group_ptr->NEXT->GRID_PTR->PQXY_UNIT) orig(group_ptr->NEXT->GRID_PTR->ROT_ANGLE) orig(group_ptr->NEXT->ELEM_PTR) orig(group_ptr->NEXT->ELEM_PTR[0]) orig(group_ptr->NEXT->ELEM_PTR->TYPE) orig(group_ptr->NEXT->ELEM_PTR->NAME) orig(group_ptr->NEXT->ELEM_PTR->LEVEL) orig(group_ptr->NEXT->ELEM_PTR->GEOMETRY) orig(group_ptr->NEXT->ELEM_PTR->RADIUS) orig(group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT) orig(group_ptr->NEXT->ELEM_PTR->PDIM) orig(group_ptr->NEXT->ELEM_PTR->QDIM) orig(group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT) orig(group_ptr->NEXT->ELEM_PTR->MODEL) orig(group_ptr->NEXT->ELEM_PTR->EXP) orig(group_ptr->NEXT->ELEM_PTR->ANGLEE) orig(group_ptr->NEXT->ELEM_PTR->ANGLEH) orig(group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->ELEM_PTR->TAPERE) orig(group_ptr->NEXT->ELEM_PTR->TAPERH) orig(group_ptr->NEXT->ELEM_PTR->TAPER_UNIT) orig(group_ptr->NEXT->ELEM_PTR->POLARIZATION) orig(group_ptr->NEXT->ELEM_PTR->PHEPOL) orig(group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT) orig(group_ptr->NEXT->ELEM_PTR->DIRECTION) orig(group_ptr->NEXT->ELEM_PTR->GAIN) orig(group_ptr->NEXT->ELEM_PTR->GAIN_UNIT) orig(group_ptr->NEXT->ELEM_PTR->NPORTS) orig(group_ptr->NEXT->ELEM_PTR->PORT_PTR) orig(group_ptr->NEXT->ELEM_PTR->PORT_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR) orig(group_ptr->NEXT->ADDREM_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE) orig(group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE) orig(group_ptr->NEXT->ADDREM_PTR->NODE_PTR) orig(group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0]) orig(group_ptr->NEXT->ADDREM_PTR->NEXT) orig(group_ptr->NEXT->ADDREM_PTR->NEXT[0]) orig(group_ptr->NEXT->GRAMPEXC_PTR) orig(group_ptr->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr->NEXT->GRAMPEXC_PTR->TYPE) orig(group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL) orig(group_ptr->NEXT->GRAMPEXC_PTR->CENTRE) orig(group_ptr->NEXT->GRAMPEXC_PTR->P1_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->P2_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET) orig(group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT) orig(group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR) orig(group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR) orig(group_ptr->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR->TYPE) orig(group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL) orig(group_ptr->NEXT->GRPHAEXC_PTR->CENTRE) orig(group_ptr->NEXT->GRPHAEXC_PTR->P1_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->P2_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP) orig(group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION) orig(group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP) orig(group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP) orig(group_ptr->NEXT->GRPHAEXC_PTR->U) orig(group_ptr->NEXT->GRPHAEXC_PTR->V) orig(group_ptr->NEXT->GRPHAEXC_PTR->THETA) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHI) orig(group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR) orig(group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0]) orig(group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT) orig(group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT) orig(group_ptr->NEXT->ERR_PTR) orig(group_ptr->NEXT->ERR_PTR[0]) orig(group_ptr->NEXT->ERR_PTR->AMP_TYPE) orig(group_ptr->NEXT->ERR_PTR->AMP_STDEV) orig(group_ptr->NEXT->ERR_PTR->AMP_LINOFFS) orig(group_ptr->NEXT->ERR_PTR->AMP_LINSTEP) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDCENT) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDPET) orig(group_ptr->NEXT->ERR_PTR->AMP_2NDQET) orig(group_ptr->NEXT->ERR_PTR->AMP_UNIT) orig(group_ptr->NEXT->ERR_PTR->PHASE_TYPE) orig(group_ptr->NEXT->ERR_PTR->PHASE_STDEV) orig(group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS) orig(group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID) orig(group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID) orig(group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP) orig(group_ptr->NEXT->ERR_PTR->PHASE_UNIT) orig(group_ptr->NEXT->FAIL_PTR) orig(group_ptr->NEXT->FAIL_PTR[0]) orig(group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL) orig(group_ptr->NEXT->FAIL_PTR->FIXED_AMP) orig(group_ptr->NEXT->FAIL_PTR->FIXED_PHASE) orig(group_ptr->NEXT->NEXT) orig(group_ptr->NEXT->NEXT[0]) orig(group_ptr->NEXT->NEXT->NAME) orig(group_ptr->NEXT->NEXT->GRID_PTR) orig(group_ptr->NEXT->NEXT->GRID_PTR[0]) orig(group_ptr->NEXT->NEXT->ELEM_PTR) orig(group_ptr->NEXT->NEXT->ELEM_PTR[0]) orig(group_ptr->NEXT->NEXT->ADDREM_PTR) orig(group_ptr->NEXT->NEXT->ADDREM_PTR[0]) orig(group_ptr->NEXT->NEXT->GRAMPEXC_PTR) orig(group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0]) orig(group_ptr->NEXT->NEXT->GRPHAEXC_PTR) orig(group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0]) orig(group_ptr->NEXT->NEXT->ERR_PTR) orig(group_ptr->NEXT->NEXT->ERR_PTR[0]) orig(group_ptr->NEXT->NEXT->FAIL_PTR) orig(group_ptr->NEXT->NEXT->FAIL_PTR[0]) orig(group_ptr->NEXT->NEXT->NEXT) orig(group_ptr->NEXT->NEXT->NEXT[0]) orig(group_ptr->NEXT->NEXT->NUM_OF_NODES) orig(group_ptr->NEXT->NEXT->SHAPE) orig(group_ptr->NEXT->NEXT->PSIZE) orig(group_ptr->NEXT->NEXT->QSIZE) orig(group_ptr->NEXT->NEXT->GEOMNODE_PTR) orig(group_ptr->NEXT->NEXT->GEOMNODE_PTR[0]) orig(group_ptr->NEXT->NEXT->BUILT) orig(group_ptr->NEXT->NEXT->SUPER_GROUP_PTR) orig(group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr->NEXT->NUM_OF_NODES) orig(group_ptr->NEXT->SHAPE) orig(group_ptr->NEXT->PSIZE) orig(group_ptr->NEXT->QSIZE) orig(group_ptr->NEXT->GEOMNODE_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->LOC_P) orig(group_ptr->NEXT->GEOMNODE_PTR->LOC_Q) orig(group_ptr->NEXT->GEOMNODE_PTR->XA) orig(group_ptr->NEXT->GEOMNODE_PTR->YA) orig(group_ptr->NEXT->GEOMNODE_PTR->ZA) orig(group_ptr->NEXT->GEOMNODE_PTR->THEA) orig(group_ptr->NEXT->GEOMNODE_PTR->PHEA) orig(group_ptr->NEXT->GEOMNODE_PTR->PSEA) orig(group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->NEXT) orig(group_ptr->NEXT->GEOMNODE_PTR->NEXT[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr->NEXT->GEOMNODE_PTR->SHAPE) orig(group_ptr->NEXT->GEOMNODE_PTR->PSIZE) orig(group_ptr->NEXT->GEOMNODE_PTR->QSIZE) orig(group_ptr->NEXT->BUILT) orig(group_ptr->NEXT->SUPER_GROUP_PTR) orig(group_ptr->NEXT->SUPER_GROUP_PTR[0]) orig(group_ptr->NUM_OF_NODES) orig(group_ptr->SHAPE) orig(group_ptr->PSIZE) orig(group_ptr->QSIZE) orig(group_ptr->GEOMNODE_PTR) orig(group_ptr->GEOMNODE_PTR[0]) orig(group_ptr->GEOMNODE_PTR->LOC_P) orig(group_ptr->GEOMNODE_PTR->LOC_Q) orig(group_ptr->GEOMNODE_PTR->XA) orig(group_ptr->GEOMNODE_PTR->YA) orig(group_ptr->GEOMNODE_PTR->ZA) orig(group_ptr->GEOMNODE_PTR->THEA) orig(group_ptr->GEOMNODE_PTR->PHEA) orig(group_ptr->GEOMNODE_PTR->PSEA) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR[0]) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->AMP) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSH) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PSC) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PPA) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT) orig(group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0]) orig(group_ptr->GEOMNODE_PTR->NEXT) orig(group_ptr->GEOMNODE_PTR->NEXT[0]) orig(group_ptr->GEOMNODE_PTR->SUBGROUP_PTR) orig(group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0]) orig(group_ptr->GEOMNODE_PTR->SHAPE) orig(group_ptr->GEOMNODE_PTR->PSIZE) orig(group_ptr->GEOMNODE_PTR->QSIZE) orig(group_ptr->BUILT) orig(group_ptr->SUPER_GROUP_PTR) orig(group_ptr->SUPER_GROUP_PTR[0])
assignable group_ptr->GRID_PTR[0], group_ptr->GRID_PTR->NAME, group_ptr->GRID_PTR->ORIENT, group_ptr->GRID_PTR->PX, group_ptr->GRID_PTR->PY, group_ptr->GRID_PTR->QX, group_ptr->GRID_PTR->QY, group_ptr->ELEM_PTR->EXP, group_ptr->ELEM_PTR->ANGLEE, group_ptr->ELEM_PTR->ANGLEH, group_ptr->ELEM_PTR->ANGLE_UNIT, group_ptr->ELEM_PTR->TAPERE, group_ptr->ELEM_PTR->TAPERH, group_ptr->ELEM_PTR->TAPER_UNIT, group_ptr->ELEM_PTR->PORT_PTR->NEXT[0], group_ptr->ADDREM_PTR->NODE_PTR[0], group_ptr->ADDREM_PTR->NODE_PTR->OMIT_ORIENT, group_ptr->ADDREM_PTR->NODE_PTR->NEXT[0], group_ptr->ADDREM_PTR->NEXT[0], group_ptr->ADDREM_PTR->NEXT->ADDREM_TYPE, group_ptr->ADDREM_PTR->NEXT->BLOCK_TYPE, group_ptr->ADDREM_PTR->NEXT->NODE_PTR, group_ptr->ADDREM_PTR->NEXT->NODE_PTR[0], group_ptr->ADDREM_PTR->NEXT->NEXT, group_ptr->ADDREM_PTR->NEXT->NEXT[0], group_ptr->GRAMPEXC_PTR->UNIF_VAL, group_ptr->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr->GRAMPEXC_PTR->PQEXP_PTR->dummy, group_ptr->GRPHAEXC_PTR->CENTRE, group_ptr->GRPHAEXC_PTR->P1_EP, group_ptr->GRPHAEXC_PTR->P2_EP, group_ptr->GRPHAEXC_PTR->Q1_EP, group_ptr->GRPHAEXC_PTR->Q2_EP, group_ptr->GRPHAEXC_PTR->DIRECTION, group_ptr->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr->GRPHAEXC_PTR->ANGLE_START, group_ptr->GRPHAEXC_PTR->ANGLE_STEP, group_ptr->GRPHAEXC_PTR->OMIT_PHASE, group_ptr->GRPHAEXC_PTR->PHASE_START, group_ptr->GRPHAEXC_PTR->PHASE_STEP, group_ptr->GRPHAEXC_PTR->U, group_ptr->GRPHAEXC_PTR->V, group_ptr->GRPHAEXC_PTR->THETA, group_ptr->GRPHAEXC_PTR->PHI, group_ptr->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr->GRPHAEXC_PTR->PQEXP_PTR->dummy, group_ptr->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr->ERR_PTR[0], group_ptr->ERR_PTR->AMP_TYPE, group_ptr->ERR_PTR->AMP_STDEV, group_ptr->ERR_PTR->AMP_LINOFFS, group_ptr->ERR_PTR->AMP_LINSTEP, group_ptr->ERR_PTR->AMP_2NDCENT, group_ptr->ERR_PTR->AMP_2NDPET, group_ptr->ERR_PTR->AMP_2NDQET, group_ptr->ERR_PTR->AMP_UNIT, group_ptr->ERR_PTR->PHASE_TYPE, group_ptr->ERR_PTR->PHASE_STDEV, group_ptr->ERR_PTR->PHASE_LINOFFS, group_ptr->ERR_PTR->PHASE_LINSTEP, group_ptr->ERR_PTR->PHASE_2NDCENT, group_ptr->ERR_PTR->PHASE_2NDPSID, group_ptr->ERR_PTR->PHASE_2NDQSID, group_ptr->ERR_PTR->PHASE_QUANTSTEP, group_ptr->ERR_PTR->PHASE_UNIT, group_ptr->FAIL_PTR[0], group_ptr->FAIL_PTR->NUM_FAULTY_EL, group_ptr->FAIL_PTR->FIXED_AMP, group_ptr->FAIL_PTR->FIXED_PHASE, group_ptr->NEXT, group_ptr->NEXT[0], group_ptr->NEXT->NAME, group_ptr->NEXT->GRID_PTR, group_ptr->NEXT->GRID_PTR[0], group_ptr->NEXT->GRID_PTR->NAME, group_ptr->NEXT->GRID_PTR->LEVEL, group_ptr->NEXT->GRID_PTR->TYPE, group_ptr->NEXT->GRID_PTR->ORIENT, group_ptr->NEXT->GRID_PTR->ANGLE, group_ptr->NEXT->GRID_PTR->ANGLE_UNIT, group_ptr->NEXT->GRID_PTR->PSTEP, group_ptr->NEXT->GRID_PTR->QSTEP, group_ptr->NEXT->GRID_PTR->PQSTEP_UNIT, group_ptr->NEXT->GRID_PTR->PX, group_ptr->NEXT->GRID_PTR->PY, group_ptr->NEXT->GRID_PTR->QX, group_ptr->NEXT->GRID_PTR->QY, group_ptr->NEXT->GRID_PTR->PQXY_UNIT, group_ptr->NEXT->GRID_PTR->ROT_ANGLE, group_ptr->NEXT->ELEM_PTR, group_ptr->NEXT->ELEM_PTR[0], group_ptr->NEXT->ELEM_PTR->TYPE, group_ptr->NEXT->ELEM_PTR->NAME, group_ptr->NEXT->ELEM_PTR->LEVEL, group_ptr->NEXT->ELEM_PTR->GEOMETRY, group_ptr->NEXT->ELEM_PTR->RADIUS, group_ptr->NEXT->ELEM_PTR->RADIUS_UNIT, group_ptr->NEXT->ELEM_PTR->PDIM, group_ptr->NEXT->ELEM_PTR->QDIM, group_ptr->NEXT->ELEM_PTR->PQDIM_UNIT, group_ptr->NEXT->ELEM_PTR->MODEL, group_ptr->NEXT->ELEM_PTR->EXP, group_ptr->NEXT->ELEM_PTR->ANGLEE, group_ptr->NEXT->ELEM_PTR->ANGLEH, group_ptr->NEXT->ELEM_PTR->ANGLE_UNIT, group_ptr->NEXT->ELEM_PTR->TAPERE, group_ptr->NEXT->ELEM_PTR->TAPERH, group_ptr->NEXT->ELEM_PTR->TAPER_UNIT, group_ptr->NEXT->ELEM_PTR->POLARIZATION, group_ptr->NEXT->ELEM_PTR->PHEPOL, group_ptr->NEXT->ELEM_PTR->PHEPOL_UNIT, group_ptr->NEXT->ELEM_PTR->DIRECTION, group_ptr->NEXT->ELEM_PTR->GAIN, group_ptr->NEXT->ELEM_PTR->GAIN_UNIT, group_ptr->NEXT->ELEM_PTR->NPORTS, group_ptr->NEXT->ELEM_PTR->PORT_PTR, group_ptr->NEXT->ELEM_PTR->PORT_PTR[0], group_ptr->NEXT->ADDREM_PTR, group_ptr->NEXT->ADDREM_PTR[0], group_ptr->NEXT->ADDREM_PTR->ADDREM_TYPE, group_ptr->NEXT->ADDREM_PTR->BLOCK_TYPE, group_ptr->NEXT->ADDREM_PTR->NODE_PTR, group_ptr->NEXT->ADDREM_PTR->NODE_PTR[0], group_ptr->NEXT->ADDREM_PTR->NEXT, group_ptr->NEXT->ADDREM_PTR->NEXT[0], group_ptr->NEXT->GRAMPEXC_PTR, group_ptr->NEXT->GRAMPEXC_PTR[0], group_ptr->NEXT->GRAMPEXC_PTR->TYPE, group_ptr->NEXT->GRAMPEXC_PTR->UNIF_VAL, group_ptr->NEXT->GRAMPEXC_PTR->CENTRE, group_ptr->NEXT->GRAMPEXC_PTR->P1_ET, group_ptr->NEXT->GRAMPEXC_PTR->P2_ET, group_ptr->NEXT->GRAMPEXC_PTR->Q1_ET, group_ptr->NEXT->GRAMPEXC_PTR->Q2_ET, group_ptr->NEXT->GRAMPEXC_PTR->AMP_UNIT, group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR, group_ptr->NEXT->GRAMPEXC_PTR->PQEXP_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR, group_ptr->NEXT->GRPHAEXC_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR->TYPE, group_ptr->NEXT->GRPHAEXC_PTR->UNIF_VAL, group_ptr->NEXT->GRPHAEXC_PTR->CENTRE, group_ptr->NEXT->GRPHAEXC_PTR->P1_EP, group_ptr->NEXT->GRPHAEXC_PTR->P2_EP, group_ptr->NEXT->GRPHAEXC_PTR->Q1_EP, group_ptr->NEXT->GRPHAEXC_PTR->Q2_EP, group_ptr->NEXT->GRPHAEXC_PTR->DIRECTION, group_ptr->NEXT->GRPHAEXC_PTR->OMIT_ANGLE, group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_START, group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_STEP, group_ptr->NEXT->GRPHAEXC_PTR->OMIT_PHASE, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_START, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_STEP, group_ptr->NEXT->GRPHAEXC_PTR->U, group_ptr->NEXT->GRPHAEXC_PTR->V, group_ptr->NEXT->GRPHAEXC_PTR->THETA, group_ptr->NEXT->GRPHAEXC_PTR->PHI, group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR, group_ptr->NEXT->GRPHAEXC_PTR->PQEXP_PTR[0], group_ptr->NEXT->GRPHAEXC_PTR->ANGLE_UNIT, group_ptr->NEXT->GRPHAEXC_PTR->PHASE_UNIT, group_ptr->NEXT->ERR_PTR, group_ptr->NEXT->ERR_PTR[0], group_ptr->NEXT->ERR_PTR->AMP_TYPE, group_ptr->NEXT->ERR_PTR->AMP_STDEV, group_ptr->NEXT->ERR_PTR->AMP_LINOFFS, group_ptr->NEXT->ERR_PTR->AMP_LINSTEP, group_ptr->NEXT->ERR_PTR->AMP_2NDCENT, group_ptr->NEXT->ERR_PTR->AMP_2NDPET, group_ptr->NEXT->ERR_PTR->AMP_2NDQET, group_ptr->NEXT->ERR_PTR->AMP_UNIT, group_ptr->NEXT->ERR_PTR->PHASE_TYPE, group_ptr->NEXT->ERR_PTR->PHASE_STDEV, group_ptr->NEXT->ERR_PTR->PHASE_LINOFFS, group_ptr->NEXT->ERR_PTR->PHASE_LINSTEP, group_ptr->NEXT->ERR_PTR->PHASE_2NDCENT, group_ptr->NEXT->ERR_PTR->PHASE_2NDPSID, group_ptr->NEXT->ERR_PTR->PHASE_2NDQSID, group_ptr->NEXT->ERR_PTR->PHASE_QUANTSTEP, group_ptr->NEXT->ERR_PTR->PHASE_UNIT, group_ptr->NEXT->FAIL_PTR, group_ptr->NEXT->FAIL_PTR[0], group_ptr->NEXT->FAIL_PTR->NUM_FAULTY_EL, group_ptr->NEXT->FAIL_PTR->FIXED_AMP, group_ptr->NEXT->FAIL_PTR->FIXED_PHASE, group_ptr->NEXT->NEXT, group_ptr->NEXT->NEXT[0], group_ptr->NEXT->NEXT->NAME, group_ptr->NEXT->NEXT->GRID_PTR, group_ptr->NEXT->NEXT->GRID_PTR[0], group_ptr->NEXT->NEXT->ELEM_PTR, group_ptr->NEXT->NEXT->ELEM_PTR[0], group_ptr->NEXT->NEXT->ADDREM_PTR, group_ptr->NEXT->NEXT->ADDREM_PTR[0], group_ptr->NEXT->NEXT->GRAMPEXC_PTR, group_ptr->NEXT->NEXT->GRAMPEXC_PTR[0], group_ptr->NEXT->NEXT->GRPHAEXC_PTR, group_ptr->NEXT->NEXT->GRPHAEXC_PTR[0], group_ptr->NEXT->NEXT->ERR_PTR, group_ptr->NEXT->NEXT->ERR_PTR[0], group_ptr->NEXT->NEXT->FAIL_PTR, group_ptr->NEXT->NEXT->FAIL_PTR[0], group_ptr->NEXT->NEXT->NEXT, group_ptr->NEXT->NEXT->NEXT[0], group_ptr->NEXT->NEXT->NUM_OF_NODES, group_ptr->NEXT->NEXT->SHAPE, group_ptr->NEXT->NEXT->PSIZE, group_ptr->NEXT->NEXT->QSIZE, group_ptr->NEXT->NEXT->GEOMNODE_PTR, group_ptr->NEXT->NEXT->GEOMNODE_PTR[0], group_ptr->NEXT->NEXT->BUILT, group_ptr->NEXT->NEXT->SUPER_GROUP_PTR, group_ptr->NEXT->NEXT->SUPER_GROUP_PTR[0], group_ptr->NEXT->NUM_OF_NODES, group_ptr->NEXT->SHAPE, group_ptr->NEXT->PSIZE, group_ptr->NEXT->QSIZE, group_ptr->NEXT->GEOMNODE_PTR, group_ptr->NEXT->GEOMNODE_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->LOC_P, group_ptr->NEXT->GEOMNODE_PTR->LOC_Q, group_ptr->NEXT->GEOMNODE_PTR->XA, group_ptr->NEXT->GEOMNODE_PTR->YA, group_ptr->NEXT->GEOMNODE_PTR->ZA, group_ptr->NEXT->GEOMNODE_PTR->THEA, group_ptr->NEXT->GEOMNODE_PTR->PHEA, group_ptr->NEXT->GEOMNODE_PTR->PSEA, group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR, group_ptr->NEXT->GEOMNODE_PTR->GEOMPORT_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->NEXT, group_ptr->NEXT->GEOMNODE_PTR->NEXT[0], group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR, group_ptr->NEXT->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr->NEXT->GEOMNODE_PTR->SHAPE, group_ptr->NEXT->GEOMNODE_PTR->PSIZE, group_ptr->NEXT->GEOMNODE_PTR->QSIZE, group_ptr->NEXT->BUILT, group_ptr->NEXT->SUPER_GROUP_PTR, group_ptr->NEXT->SUPER_GROUP_PTR[0], group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->PHEPOL, group_ptr->GEOMNODE_PTR->GEOMPORT_PTR->NEXT[0], group_ptr->GEOMNODE_PTR->SUBGROUP_PTR[0], group_ptr->SUPER_GROUP_PTR[0]
::UserNames.equals(group_ptr.NAME)
::UserNames.equals(\old(::UserNames))
::UserNames.equals(\old(group_ptr.NAME))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
group_ptr.[0] == \old(group_ptr.[0])
group_ptr.GRID_PTR == \old(group_ptr.GRID_PTR)
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.LEVEL
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.GEOMETRY
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.NPORTS
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.PORTNUM
group_ptr.GRID_PTR.LEVEL == group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL
group_ptr.GRID_PTR.LEVEL == group_ptr.ADDREM_PTR.NODE_PTR.QCOORD
group_ptr.GRID_PTR.LEVEL == group_ptr.GRAMPEXC_PTR.TYPE
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.GRID_PTR.LEVEL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.LEVEL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.GEOMETRY)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.NPORTS)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.PORT_PTR.PORTNUM)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ELEM_PTR.PORT_PTR.OMIT_POL)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.ADDREM_PTR.NODE_PTR.QCOORD)
group_ptr.GRID_PTR.LEVEL == \old(group_ptr.GRAMPEXC_PTR.TYPE)
group_ptr.GRID_PTR.TYPE == group_ptr.SHAPE
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, \old(group_ptr.GRID_PTR.ANGLE))
group_ptr.GRID_PTR.ANGLE_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GRID_PTR.QSTEP)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.PDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.ELEM_PTR.QDIM)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.PSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, group_ptr.GEOMNODE_PTR.QSIZE)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GRID_PTR.PSTEP))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GRID_PTR.QSTEP))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.ELEM_PTR.PDIM))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.ELEM_PTR.QDIM))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GEOMNODE_PTR.PSIZE))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, \old(group_ptr.GEOMNODE_PTR.QSIZE))
group_ptr.GRID_PTR.PQSTEP_UNIT == return
group_ptr.GRID_PTR.PQXY_UNIT == return
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.GAIN)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PSH)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ELEM_PTR.PORT_PTR.PPA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.ADDREM_PTR.NODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.ZA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.THEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PHEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.PSEA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PSC)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PPA)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GRID_PTR.ROT_ANGLE))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.GAIN))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PSC))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PSH))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ELEM_PTR.PORT_PTR.PPA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.THEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.PHEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.ADDREM_PTR.NODE_PTR.PSEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.ZA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.THEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.PHEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.PSEA))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PSC))
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, \old(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PPA))
group_ptr.ELEM_PTR == \old(group_ptr.ELEM_PTR)
group_ptr.ELEM_PTR.[0] == \old(group_ptr.ELEM_PTR.[0])
group_ptr.ELEM_PTR.TYPE == return
group_ptr.ELEM_PTR.NAME.equals(\old(group_ptr.ELEM_PTR.NAME))
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, \old(group_ptr.ELEM_PTR.RADIUS))
group_ptr.ELEM_PTR.RADIUS_UNIT == return
group_ptr.ELEM_PTR.PQDIM_UNIT == return
group_ptr.ELEM_PTR.MODEL == return
group_ptr.ELEM_PTR.POLARIZATION == return
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.ELEM_PTR.PORT_PTR.PHEPOL)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PHEPOL)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, \old(group_ptr.ELEM_PTR.PHEPOL))
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, \old(group_ptr.ELEM_PTR.PORT_PTR.PHEPOL))
group_ptr.ELEM_PTR.PHEPOL_UNIT == return
group_ptr.ELEM_PTR.DIRECTION == return
group_ptr.ELEM_PTR.GAIN_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR == \old(group_ptr.ELEM_PTR.PORT_PTR)
group_ptr.ELEM_PTR.PORT_PTR.[0] == \old(group_ptr.ELEM_PTR.PORT_PTR.[0])
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, \old(group_ptr.ELEM_PTR.PORT_PTR.AMP))
group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT == return
group_ptr.ELEM_PTR.PORT_PTR.NEXT == \old(group_ptr.ELEM_PTR.PORT_PTR.NEXT)
group_ptr.ADDREM_PTR == \old(group_ptr.ADDREM_PTR)
group_ptr.ADDREM_PTR.[0] == \old(group_ptr.ADDREM_PTR.[0])
group_ptr.ADDREM_PTR.ADDREM_TYPE == return
group_ptr.ADDREM_PTR.BLOCK_TYPE == \old(group_ptr.ADDREM_PTR.BLOCK_TYPE)
group_ptr.ADDREM_PTR.NODE_PTR == \old(group_ptr.ADDREM_PTR.NODE_PTR)
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == \old(group_ptr.ADDREM_PTR.NODE_PTR.PCOORD)
group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT == return
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == \old(group_ptr.ADDREM_PTR.NODE_PTR.NEXT)
group_ptr.ADDREM_PTR.NEXT == \old(group_ptr.ADDREM_PTR.NEXT)
group_ptr.GRAMPEXC_PTR == \old(group_ptr.GRAMPEXC_PTR)
group_ptr.GRAMPEXC_PTR.[0] == \old(group_ptr.GRAMPEXC_PTR.[0])
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, \old(group_ptr.GRAMPEXC_PTR.CENTRE))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, group_ptr.GRAMPEXC_PTR.Q2_ET)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, \old(group_ptr.GRAMPEXC_PTR.P1_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, \old(group_ptr.GRAMPEXC_PTR.Q2_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, \old(group_ptr.GRAMPEXC_PTR.P2_ET))
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, \old(group_ptr.GRAMPEXC_PTR.Q1_ET))
group_ptr.GRAMPEXC_PTR.AMP_UNIT == return
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == group_ptr.GRPHAEXC_PTR.PQEXP_PTR
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == \old(group_ptr.GRAMPEXC_PTR.PQEXP_PTR)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == \old(group_ptr.GRPHAEXC_PTR.PQEXP_PTR)
group_ptr.GRPHAEXC_PTR == \old(group_ptr.GRPHAEXC_PTR)
group_ptr.GRPHAEXC_PTR.[0] == \old(group_ptr.GRPHAEXC_PTR.[0])
group_ptr.GRPHAEXC_PTR.TYPE == return
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PSH)
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, \old(group_ptr.GRPHAEXC_PTR.UNIF_VAL))
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, \old(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.PSH))
group_ptr.GRPHAEXC_PTR.PHASE_UNIT == return
group_ptr.ERR_PTR == \old(group_ptr.ERR_PTR)
group_ptr.FAIL_PTR == \old(group_ptr.FAIL_PTR)
group_ptr.NUM_OF_NODES == \old(group_ptr.NUM_OF_NODES)
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.LOC_Q
group_ptr.SHAPE == group_ptr.GEOMNODE_PTR.SHAPE
group_ptr.SHAPE == \old(group_ptr.GRID_PTR.TYPE)
group_ptr.SHAPE == \old(group_ptr.SHAPE)
group_ptr.SHAPE == \old(group_ptr.GEOMNODE_PTR.LOC_Q)
group_ptr.SHAPE == \old(group_ptr.GEOMNODE_PTR.SHAPE)
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, group_ptr.QSIZE)
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.PSIZE))
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, \old(group_ptr.QSIZE))
group_ptr.GEOMNODE_PTR.LOC_P == \old(group_ptr.GEOMNODE_PTR.LOC_P)
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.XA, \old(group_ptr.GEOMNODE_PTR.XA))
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.YA, \old(group_ptr.GEOMNODE_PTR.YA))
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP, \old(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP))
group_ptr.BUILT == return
return == \old(group_ptr.GRID_PTR.ANGLE_UNIT)
return == \old(group_ptr.GRID_PTR.PQSTEP_UNIT)
return == \old(group_ptr.GRID_PTR.PQXY_UNIT)
return == \old(group_ptr.ELEM_PTR.TYPE)
return == \old(group_ptr.ELEM_PTR.RADIUS_UNIT)
return == \old(group_ptr.ELEM_PTR.PQDIM_UNIT)
return == \old(group_ptr.ELEM_PTR.MODEL)
return == \old(group_ptr.ELEM_PTR.POLARIZATION)
return == \old(group_ptr.ELEM_PTR.PHEPOL_UNIT)
return == \old(group_ptr.ELEM_PTR.DIRECTION)
return == \old(group_ptr.ELEM_PTR.GAIN_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.AMP_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PSC_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PSH_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PPA_UNIT)
return == \old(group_ptr.ELEM_PTR.PORT_PTR.PHEPOL_UNIT)
return == \old(group_ptr.ADDREM_PTR.ADDREM_TYPE)
return == \old(group_ptr.ADDREM_PTR.NODE_PTR.ANGLE_UNIT)
return == \old(group_ptr.GRAMPEXC_PTR.AMP_UNIT)
return == \old(group_ptr.GRPHAEXC_PTR.TYPE)
return == \old(group_ptr.GRPHAEXC_PTR.PHASE_UNIT)
return == \old(group_ptr.BUILT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
group_ptr.[0] != null
group_ptr.GRID_PTR != null
group_ptr.GRID_PTR.LEVEL == 1
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ANGLE, 60.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.PSTEP, 86.0)
daikon.Quant.fuzzy.eq(group_ptr.GRID_PTR.ROT_ANGLE, 0.0)
group_ptr.ELEM_PTR != null
group_ptr.ELEM_PTR.[0] != null
group_ptr.ELEM_PTR.NAME.equals("ELEMENT")
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.RADIUS, 43.0)
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PHEPOL, 90.0)
group_ptr.ELEM_PTR.PORT_PTR != null
group_ptr.ELEM_PTR.PORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.ELEM_PTR.PORT_PTR.AMP, 1.0)
group_ptr.ELEM_PTR.PORT_PTR.NEXT == null
group_ptr.ADDREM_PTR != null
group_ptr.ADDREM_PTR.[0] != null
group_ptr.ADDREM_PTR.BLOCK_TYPE == 3
group_ptr.ADDREM_PTR.NODE_PTR != null
group_ptr.ADDREM_PTR.NODE_PTR.PCOORD == 9
group_ptr.ADDREM_PTR.NODE_PTR.NEXT == null
group_ptr.ADDREM_PTR.NEXT == null
group_ptr.GRAMPEXC_PTR != null
group_ptr.GRAMPEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.CENTRE, 29.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P1_ET, 25.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.P2_ET, 22.0)
daikon.Quant.fuzzy.eq(group_ptr.GRAMPEXC_PTR.Q1_ET, 34.0)
group_ptr.GRAMPEXC_PTR.PQEXP_PTR == null
group_ptr.GRPHAEXC_PTR != null
group_ptr.GRPHAEXC_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GRPHAEXC_PTR.UNIF_VAL, -219.0)
group_ptr.ERR_PTR == null
group_ptr.FAIL_PTR == null
group_ptr.NUM_OF_NODES == 7
group_ptr.SHAPE == 2
daikon.Quant.fuzzy.eq(group_ptr.PSIZE, 258.0)
group_ptr.GEOMNODE_PTR != null
group_ptr.GEOMNODE_PTR.[0] != null
group_ptr.GEOMNODE_PTR.LOC_P == 8
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.XA, 773.9999999796324)
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.YA, 148.95636946268272)
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR != null
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.[0] != null
daikon.Quant.fuzzy.eq(group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.AMP, 28.999999999999886)
group_ptr.GEOMNODE_PTR.GEOMPORT_PTR.NEXT == null
group_ptr.GEOMNODE_PTR.NEXT != null
group_ptr.GEOMNODE_PTR.NEXT.[0] != null
group_ptr.GEOMNODE_PTR.SUBGROUP_PTR == null
group_ptr.SUPER_GROUP_PTR != null
return == 0
===========================================================================
..sinelem():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] elem_ptr elem_ptr[0] elem_ptr[0][0] elem_ptr[0]->TYPE elem_ptr[0]->NAME elem_ptr[0]->LEVEL elem_ptr[0]->GEOMETRY elem_ptr[0]->RADIUS elem_ptr[0]->RADIUS_UNIT elem_ptr[0]->PDIM elem_ptr[0]->QDIM elem_ptr[0]->PQDIM_UNIT elem_ptr[0]->MODEL elem_ptr[0]->EXP elem_ptr[0]->ANGLEE elem_ptr[0]->ANGLEH elem_ptr[0]->ANGLE_UNIT elem_ptr[0]->TAPERE elem_ptr[0]->TAPERH elem_ptr[0]->TAPER_UNIT elem_ptr[0]->POLARIZATION elem_ptr[0]->PHEPOL elem_ptr[0]->PHEPOL_UNIT elem_ptr[0]->DIRECTION elem_ptr[0]->GAIN elem_ptr[0]->GAIN_UNIT elem_ptr[0]->NPORTS elem_ptr[0]->PORT_PTR elem_ptr[0]->PORT_PTR[0] elem_ptr[0]->PORT_PTR->PORTNUM elem_ptr[0]->PORT_PTR->AMP elem_ptr[0]->PORT_PTR->AMP_UNIT elem_ptr[0]->PORT_PTR->PSC elem_ptr[0]->PORT_PTR->PSC_UNIT elem_ptr[0]->PORT_PTR->PSH elem_ptr[0]->PORT_PTR->PSH_UNIT elem_ptr[0]->PORT_PTR->PPA elem_ptr[0]->PORT_PTR->PPA_UNIT elem_ptr[0]->PORT_PTR->PHEPOL elem_ptr[0]->PORT_PTR->PHEPOL_UNIT elem_ptr[0]->PORT_PTR->OMIT_POL elem_ptr[0]->PORT_PTR->NEXT elem_ptr[0]->PORT_PTR->NEXT[0] elem_ptr[0]->PORT_PTR->NEXT->PORTNUM elem_ptr[0]->PORT_PTR->NEXT->AMP elem_ptr[0]->PORT_PTR->NEXT->AMP_UNIT elem_ptr[0]->PORT_PTR->NEXT->PSC elem_ptr[0]->PORT_PTR->NEXT->PSC_UNIT elem_ptr[0]->PORT_PTR->NEXT->PSH elem_ptr[0]->PORT_PTR->NEXT->PSH_UNIT elem_ptr[0]->PORT_PTR->NEXT->PPA elem_ptr[0]->PORT_PTR->NEXT->PPA_UNIT elem_ptr[0]->PORT_PTR->NEXT->PHEPOL elem_ptr[0]->PORT_PTR->NEXT->PHEPOL_UNIT elem_ptr[0]->PORT_PTR->NEXT->OMIT_POL elem_ptr[0]->PORT_PTR->NEXT->NEXT elem_ptr[0]->PORT_PTR->NEXT->NEXT[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 5
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 84
p1.PREV.PREV.LINE_NUM == 4
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
elem_ptr != null
elem_ptr.[0] != null
===========================================================================
..sinelem():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] elem_ptr elem_ptr[0] elem_ptr[0][0] elem_ptr[0]->TYPE elem_ptr[0]->NAME elem_ptr[0]->LEVEL elem_ptr[0]->GEOMETRY elem_ptr[0]->RADIUS elem_ptr[0]->RADIUS_UNIT elem_ptr[0]->PDIM elem_ptr[0]->QDIM elem_ptr[0]->PQDIM_UNIT elem_ptr[0]->MODEL elem_ptr[0]->EXP elem_ptr[0]->ANGLEE elem_ptr[0]->ANGLEH elem_ptr[0]->ANGLE_UNIT elem_ptr[0]->TAPERE elem_ptr[0]->TAPERH elem_ptr[0]->TAPER_UNIT elem_ptr[0]->POLARIZATION elem_ptr[0]->PHEPOL elem_ptr[0]->PHEPOL_UNIT elem_ptr[0]->DIRECTION elem_ptr[0]->GAIN elem_ptr[0]->GAIN_UNIT elem_ptr[0]->NPORTS elem_ptr[0]->PORT_PTR elem_ptr[0]->PORT_PTR[0] elem_ptr[0]->PORT_PTR->PORTNUM elem_ptr[0]->PORT_PTR->AMP elem_ptr[0]->PORT_PTR->AMP_UNIT elem_ptr[0]->PORT_PTR->PSC elem_ptr[0]->PORT_PTR->PSC_UNIT elem_ptr[0]->PORT_PTR->PSH elem_ptr[0]->PORT_PTR->PSH_UNIT elem_ptr[0]->PORT_PTR->PPA elem_ptr[0]->PORT_PTR->PPA_UNIT elem_ptr[0]->PORT_PTR->PHEPOL elem_ptr[0]->PORT_PTR->PHEPOL_UNIT elem_ptr[0]->PORT_PTR->OMIT_POL elem_ptr[0]->PORT_PTR->NEXT elem_ptr[0]->PORT_PTR->NEXT[0] elem_ptr[0]->PORT_PTR->NEXT->PORTNUM elem_ptr[0]->PORT_PTR->NEXT->AMP elem_ptr[0]->PORT_PTR->NEXT->AMP_UNIT elem_ptr[0]->PORT_PTR->NEXT->PSC elem_ptr[0]->PORT_PTR->NEXT->PSC_UNIT elem_ptr[0]->PORT_PTR->NEXT->PSH elem_ptr[0]->PORT_PTR->NEXT->PSH_UNIT elem_ptr[0]->PORT_PTR->NEXT->PPA elem_ptr[0]->PORT_PTR->NEXT->PPA_UNIT elem_ptr[0]->PORT_PTR->NEXT->PHEPOL elem_ptr[0]->PORT_PTR->NEXT->PHEPOL_UNIT elem_ptr[0]->PORT_PTR->NEXT->OMIT_POL elem_ptr[0]->PORT_PTR->NEXT->NEXT elem_ptr[0]->PORT_PTR->NEXT->NEXT[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(elem_ptr) orig(elem_ptr[0]) orig(elem_ptr[0][0]) orig(elem_ptr[0]->TYPE) orig(elem_ptr[0]->NAME) orig(elem_ptr[0]->LEVEL) orig(elem_ptr[0]->GEOMETRY) orig(elem_ptr[0]->RADIUS) orig(elem_ptr[0]->RADIUS_UNIT) orig(elem_ptr[0]->PDIM) orig(elem_ptr[0]->QDIM) orig(elem_ptr[0]->PQDIM_UNIT) orig(elem_ptr[0]->MODEL) orig(elem_ptr[0]->EXP) orig(elem_ptr[0]->ANGLEE) orig(elem_ptr[0]->ANGLEH) orig(elem_ptr[0]->ANGLE_UNIT) orig(elem_ptr[0]->TAPERE) orig(elem_ptr[0]->TAPERH) orig(elem_ptr[0]->TAPER_UNIT) orig(elem_ptr[0]->POLARIZATION) orig(elem_ptr[0]->PHEPOL) orig(elem_ptr[0]->PHEPOL_UNIT) orig(elem_ptr[0]->DIRECTION) orig(elem_ptr[0]->GAIN) orig(elem_ptr[0]->GAIN_UNIT) orig(elem_ptr[0]->NPORTS) orig(elem_ptr[0]->PORT_PTR) orig(elem_ptr[0]->PORT_PTR[0]) orig(elem_ptr[0]->PORT_PTR->PORTNUM) orig(elem_ptr[0]->PORT_PTR->AMP) orig(elem_ptr[0]->PORT_PTR->AMP_UNIT) orig(elem_ptr[0]->PORT_PTR->PSC) orig(elem_ptr[0]->PORT_PTR->PSC_UNIT) orig(elem_ptr[0]->PORT_PTR->PSH) orig(elem_ptr[0]->PORT_PTR->PSH_UNIT) orig(elem_ptr[0]->PORT_PTR->PPA) orig(elem_ptr[0]->PORT_PTR->PPA_UNIT) orig(elem_ptr[0]->PORT_PTR->PHEPOL) orig(elem_ptr[0]->PORT_PTR->PHEPOL_UNIT) orig(elem_ptr[0]->PORT_PTR->OMIT_POL) orig(elem_ptr[0]->PORT_PTR->NEXT) orig(elem_ptr[0]->PORT_PTR->NEXT[0]) orig(elem_ptr[0]->PORT_PTR->NEXT->PORTNUM) orig(elem_ptr[0]->PORT_PTR->NEXT->AMP) orig(elem_ptr[0]->PORT_PTR->NEXT->AMP_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->PSC) orig(elem_ptr[0]->PORT_PTR->NEXT->PSC_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->PSH) orig(elem_ptr[0]->PORT_PTR->NEXT->PSH_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->PPA) orig(elem_ptr[0]->PORT_PTR->NEXT->PPA_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->PHEPOL) orig(elem_ptr[0]->PORT_PTR->NEXT->PHEPOL_UNIT) orig(elem_ptr[0]->PORT_PTR->NEXT->OMIT_POL) orig(elem_ptr[0]->PORT_PTR->NEXT->NEXT) orig(elem_ptr[0]->PORT_PTR->NEXT->NEXT[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->LINE_NUM, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], elem_ptr[0][0], elem_ptr[0]->TYPE, elem_ptr[0]->NAME, elem_ptr[0]->LEVEL, elem_ptr[0]->GEOMETRY, elem_ptr[0]->RADIUS, elem_ptr[0]->RADIUS_UNIT, elem_ptr[0]->PDIM, elem_ptr[0]->QDIM, elem_ptr[0]->PQDIM_UNIT, elem_ptr[0]->MODEL, elem_ptr[0]->EXP, elem_ptr[0]->ANGLEE, elem_ptr[0]->ANGLEH, elem_ptr[0]->ANGLE_UNIT, elem_ptr[0]->TAPERE, elem_ptr[0]->TAPERH, elem_ptr[0]->TAPER_UNIT, elem_ptr[0]->POLARIZATION, elem_ptr[0]->PHEPOL, elem_ptr[0]->PHEPOL_UNIT, elem_ptr[0]->DIRECTION, elem_ptr[0]->GAIN, elem_ptr[0]->GAIN_UNIT, elem_ptr[0]->NPORTS, elem_ptr[0]->PORT_PTR, elem_ptr[0]->PORT_PTR[0], elem_ptr[0]->PORT_PTR->PORTNUM, elem_ptr[0]->PORT_PTR->AMP, elem_ptr[0]->PORT_PTR->AMP_UNIT, elem_ptr[0]->PORT_PTR->PSC, elem_ptr[0]->PORT_PTR->PSC_UNIT, elem_ptr[0]->PORT_PTR->PSH, elem_ptr[0]->PORT_PTR->PSH_UNIT, elem_ptr[0]->PORT_PTR->PPA, elem_ptr[0]->PORT_PTR->PPA_UNIT, elem_ptr[0]->PORT_PTR->PHEPOL, elem_ptr[0]->PORT_PTR->PHEPOL_UNIT, elem_ptr[0]->PORT_PTR->OMIT_POL, elem_ptr[0]->PORT_PTR->NEXT, elem_ptr[0]->PORT_PTR->NEXT[0], elem_ptr[0]->PORT_PTR->NEXT->PORTNUM, elem_ptr[0]->PORT_PTR->NEXT->AMP, elem_ptr[0]->PORT_PTR->NEXT->AMP_UNIT, elem_ptr[0]->PORT_PTR->NEXT->PSC, elem_ptr[0]->PORT_PTR->NEXT->PSC_UNIT, elem_ptr[0]->PORT_PTR->NEXT->PSH, elem_ptr[0]->PORT_PTR->NEXT->PSH_UNIT, elem_ptr[0]->PORT_PTR->NEXT->PPA, elem_ptr[0]->PORT_PTR->NEXT->PPA_UNIT, elem_ptr[0]->PORT_PTR->NEXT->PHEPOL, elem_ptr[0]->PORT_PTR->NEXT->PHEPOL_UNIT, elem_ptr[0]->PORT_PTR->NEXT->OMIT_POL, elem_ptr[0]->PORT_PTR->NEXT->NEXT, elem_ptr[0]->PORT_PTR->NEXT->NEXT[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
elem_ptr.[0] == \old(elem_ptr.[0])
elem_ptr.[0].TYPE == return
elem_ptr.[0].RADIUS_UNIT == return
elem_ptr.[0].MODEL == return
elem_ptr.[0].POLARIZATION == return
elem_ptr.[0].PHEPOL_UNIT == return
elem_ptr.[0].DIRECTION == return
elem_ptr.[0].GAIN_UNIT == return
elem_ptr.[0].NPORTS == return
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 71
p1.LINE_NUM == 5
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 84
p1.PREV.PREV.LINE_NUM == 4
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 65
pp2.[0].LINE_NUM == 7
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 51
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
elem_ptr.[0] != null
elem_ptr.[0].[0] != null
elem_ptr.[0].NAME.equals("")
elem_ptr.[0].GEOMETRY == 1
daikon.Quant.fuzzy.eq(elem_ptr.[0].RADIUS, 43.0)
daikon.Quant.fuzzy.eq(elem_ptr.[0].PHEPOL, 90.0)
daikon.Quant.fuzzy.eq(elem_ptr.[0].GAIN, 0.0)
elem_ptr.[0].PORT_PTR == null
return == 0
::UserNames.contains(elem_ptr.[0].NAME)
::Keywords.contains(elem_ptr.[0].NAME)
::ErrorMessages.contains(elem_ptr.[0].NAME)
::MOSErrors.contains(elem_ptr.[0].NAME)
::GLOBLE_FILENAME.contains(elem_ptr.[0].NAME)
===========================================================================
..sinstep():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] step_ptr step_ptr[0] step_unit_ptr step_unit_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 69
p1.LINE_NUM == 4
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 76
p1.PREV.PREV.LINE_NUM == 3
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
step_ptr != null
daikon.Quant.fuzzy.eq(step_ptr.[0], 0.0)
step_unit_ptr != null
step_unit_ptr.[0] == 0
===========================================================================
..sinstep():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] step_ptr step_ptr[0] step_unit_ptr step_unit_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(step_ptr) orig(step_ptr[0]) orig(step_unit_ptr) orig(step_unit_ptr[0])
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == pp2.[0].info
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV.PREV.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.PREV.PREV.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == pp2.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].NEXT.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0] == \old(p1)
pp2.[0] == \old(p1.PREV.NEXT)
pp2.[0] == \old(pp2.[0])
pp2.[0] == \old(pp2.[0].PREV.NEXT)
daikon.Quant.fuzzy.eq(step_ptr.[0], \old(step_ptr.[0]))
step_unit_ptr.[0] == \old(step_unit_ptr.[0])
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 69
p1.LINE_NUM == 4
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 76
p1.PREV.PREV.LINE_NUM == 3
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
daikon.Quant.fuzzy.eq(step_ptr.[0], 0.0)
step_unit_ptr.[0] == 0
return == 1
===========================================================================
..squgrdef():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] pstep_ptr pstep_ptr[0] pstep_unit_ptr pstep_unit_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 72
p1.LINE_NUM == 3
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 68
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
pstep_ptr != null
pstep_unit_ptr != null
===========================================================================
..squgrdef():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] pstep_ptr pstep_ptr[0] pstep_unit_ptr pstep_unit_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(pstep_ptr) orig(pstep_ptr[0]) orig(pstep_unit_ptr) orig(pstep_unit_ptr[0])
assignable pstep_ptr[0], pstep_unit_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == pp2.[0].info
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == pp2.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].NEXT.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0] == \old(p1)
pp2.[0] == \old(p1.PREV.NEXT)
pp2.[0] == \old(pp2.[0])
pp2.[0] == \old(pp2.[0].PREV.NEXT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 72
p1.LINE_NUM == 3
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 68
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
daikon.Quant.fuzzy.eq(pstep_ptr.[0], 0.0)
pstep_unit_ptr.[0] == 0
return == 1
===========================================================================
..unaminit():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME
::UserNames.equals(::MOSErrors)
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::GLOBLE_FILENAME.equals("gr2712")
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..unaminit():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME)
::UserNames.equals(::MOSErrors)
::UserNames.equals(\old(::UserNames))
::UserNames.equals(\old(::MOSErrors))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::GLOBLE_FILENAME.equals("gr2712")
::Keywords.contains(::UserNames)
::ErrorMessages.contains(::UserNames)
::GLOBLE_FILENAME.contains(::UserNames)
===========================================================================
..unifamp():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] unif_val_ptr unif_val_ptr[0] amp_unit_ptr amp_unit_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 83
p1.LINE_NUM == 10
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 69
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
unif_val_ptr != null
amp_unit_ptr != null
===========================================================================
..unifamp():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] unif_val_ptr unif_val_ptr[0] amp_unit_ptr amp_unit_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(unif_val_ptr) orig(unif_val_ptr[0]) orig(amp_unit_ptr) orig(amp_unit_ptr[0])
assignable unif_val_ptr[0], amp_unit_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == pp2.[0].info
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.info == \old(p1.PREV.PREV.info)
p1.PREV.PREV.info == \old(pp2.[0].PREV.PREV.info)
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == pp2.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == pp2.[0].NEXT.[0]
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0] == \old(p1)
pp2.[0] == \old(p1.PREV.NEXT)
pp2.[0] == \old(pp2.[0])
pp2.[0] == \old(pp2.[0].PREV.NEXT)
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 83
p1.LINE_NUM == 10
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 69
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
return == 1
===========================================================================
..unifpha():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] unif_val_ptr unif_val_ptr[0] phase_unit_ptr phase_unit_ptr[0]
p1 == p1.PREV.NEXT
p1 == pp2.[0]
p1 == pp2.[0].PREV.NEXT
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == pp2.[0].[0]
p1.[0] == pp2.[0].PREV.NEXT.[0]
p1.info == pp2.[0].info
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == pp2.[0].PREV
p1.PREV == pp2.[0].PREV.PREV.NEXT
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == pp2.[0].PREV.[0]
p1.PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.PREV == pp2.[0].PREV.PREV
p1.PREV.PREV.[0] == pp2.[0].PREV.PREV.[0]
p1.PREV.PREV.info == pp2.[0].PREV.PREV.info
p1.PREV.PREV.PREV == pp2.[0].PREV.PREV.PREV
p1.PREV.PREV.PREV.[0] == pp2.[0].PREV.PREV.PREV.[0]
p1.NEXT == pp2.[0].NEXT
p1.NEXT.[0] == pp2.[0].NEXT.[0]
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1 != null
p1.[0] != null
p1.info == 85
p1.LINE_NUM == 11
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.info == 69
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2 != null
unif_val_ptr != null
phase_unit_ptr != null
===========================================================================
..unifpha():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME p1 p1[0] p1->info p1->LINE_NUM p1->PREV p1->PREV[0] p1->PREV->info p1->PREV->LINE_NUM p1->PREV->PREV p1->PREV->PREV[0] p1->PREV->PREV->info p1->PREV->PREV->LINE_NUM p1->PREV->PREV->PREV p1->PREV->PREV->PREV[0] p1->PREV->PREV->NEXT p1->PREV->PREV->NEXT[0] p1->PREV->NEXT p1->PREV->NEXT[0] p1->NEXT p1->NEXT[0] pp2 pp2[0] pp2[0][0] pp2[0]->info pp2[0]->LINE_NUM pp2[0]->PREV pp2[0]->PREV[0] pp2[0]->PREV->info pp2[0]->PREV->LINE_NUM pp2[0]->PREV->PREV pp2[0]->PREV->PREV[0] pp2[0]->PREV->PREV->info pp2[0]->PREV->PREV->LINE_NUM pp2[0]->PREV->PREV->PREV pp2[0]->PREV->PREV->PREV[0] pp2[0]->PREV->PREV->NEXT pp2[0]->PREV->PREV->NEXT[0] pp2[0]->PREV->NEXT pp2[0]->PREV->NEXT[0] pp2[0]->NEXT pp2[0]->NEXT[0] unif_val_ptr unif_val_ptr[0] phase_unit_ptr phase_unit_ptr[0] return orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME) orig(p1) orig(p1[0]) orig(p1->info) orig(p1->LINE_NUM) orig(p1->PREV) orig(p1->PREV[0]) orig(p1->PREV->info) orig(p1->PREV->LINE_NUM) orig(p1->PREV->PREV) orig(p1->PREV->PREV[0]) orig(p1->PREV->PREV->info) orig(p1->PREV->PREV->LINE_NUM) orig(p1->PREV->PREV->PREV) orig(p1->PREV->PREV->PREV[0]) orig(p1->PREV->PREV->NEXT) orig(p1->PREV->PREV->NEXT[0]) orig(p1->PREV->NEXT) orig(p1->PREV->NEXT[0]) orig(p1->NEXT) orig(p1->NEXT[0]) orig(pp2) orig(pp2[0]) orig(pp2[0][0]) orig(pp2[0]->info) orig(pp2[0]->LINE_NUM) orig(pp2[0]->PREV) orig(pp2[0]->PREV[0]) orig(pp2[0]->PREV->info) orig(pp2[0]->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV) orig(pp2[0]->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->info) orig(pp2[0]->PREV->PREV->LINE_NUM) orig(pp2[0]->PREV->PREV->PREV) orig(pp2[0]->PREV->PREV->PREV[0]) orig(pp2[0]->PREV->PREV->NEXT) orig(pp2[0]->PREV->PREV->NEXT[0]) orig(pp2[0]->PREV->NEXT) orig(pp2[0]->PREV->NEXT[0]) orig(pp2[0]->NEXT) orig(pp2[0]->NEXT[0]) orig(unif_val_ptr) orig(unif_val_ptr[0]) orig(phase_unit_ptr) orig(phase_unit_ptr[0])
assignable pp2[0], pp2[0][0], pp2[0]->info, pp2[0]->LINE_NUM, pp2[0]->PREV, pp2[0]->PREV[0], pp2[0]->PREV->LINE_NUM, pp2[0]->PREV->PREV, pp2[0]->PREV->PREV[0], pp2[0]->PREV->PREV->info, pp2[0]->PREV->PREV->PREV, pp2[0]->PREV->PREV->PREV[0], pp2[0]->PREV->PREV->NEXT, pp2[0]->PREV->PREV->NEXT[0], pp2[0]->PREV->NEXT, pp2[0]->PREV->NEXT[0], pp2[0]->NEXT, pp2[0]->NEXT[0], unif_val_ptr[0], phase_unit_ptr[0]
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
p1.[0] == p1.PREV.NEXT.[0]
p1.[0] == \old(p1.[0])
p1.[0] == \old(p1.PREV.NEXT.[0])
p1.[0] == \old(pp2.[0].[0])
p1.[0] == \old(pp2.[0].PREV.NEXT.[0])
p1.info == \old(p1.info)
p1.info == \old(pp2.[0].info)
p1.LINE_NUM == p1.PREV.LINE_NUM
p1.LINE_NUM == p1.PREV.PREV.LINE_NUM
p1.LINE_NUM == pp2.[0].PREV.PREV.LINE_NUM
p1.LINE_NUM == \old(p1.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.LINE_NUM)
p1.LINE_NUM == \old(p1.PREV.PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.LINE_NUM)
p1.LINE_NUM == \old(pp2.[0].PREV.PREV.LINE_NUM)
p1.PREV == p1.PREV.PREV.NEXT
p1.PREV == \old(p1.PREV)
p1.PREV == \old(p1.PREV.PREV.NEXT)
p1.PREV == \old(pp2.[0].PREV)
p1.PREV == \old(pp2.[0].PREV.PREV.NEXT)
p1.PREV.[0] == p1.PREV.PREV.NEXT.[0]
p1.PREV.[0] == \old(p1.PREV.[0])
p1.PREV.[0] == \old(p1.PREV.PREV.NEXT.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.[0])
p1.PREV.[0] == \old(pp2.[0].PREV.PREV.NEXT.[0])
p1.PREV.info == pp2.[0].PREV.info
p1.PREV.info == \old(p1.PREV.info)
p1.PREV.info == \old(pp2.[0].PREV.info)
p1.PREV.PREV == \old(p1.PREV.PREV)
p1.PREV.PREV == \old(pp2.[0].PREV.PREV)
p1.PREV.PREV.[0] == \old(p1.PREV.PREV.[0])
p1.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.[0])
p1.PREV.PREV.info == pp2.[0].info
p1.PREV.PREV.PREV == \old(p1.PREV.PREV.PREV)
p1.PREV.PREV.PREV == \old(pp2.[0].PREV.PREV.PREV)
p1.PREV.PREV.PREV.[0] == \old(p1.PREV.PREV.PREV.[0])
p1.PREV.PREV.PREV.[0] == \old(pp2.[0].PREV.PREV.PREV.[0])
p1.PREV.NEXT == \old(p1)
p1.NEXT == \old(p1.NEXT)
p1.NEXT == \old(pp2.[0].NEXT)
p1.NEXT.[0] == \old(p1.NEXT.[0])
p1.NEXT.[0] == \old(pp2.[0].NEXT.[0])
pp2.[0] == pp2.[0].PREV.NEXT
pp2.[0].[0] == pp2.[0].PREV.NEXT.[0]
pp2.[0].info == \old(p1.PREV.PREV.info)
pp2.[0].info == \old(pp2.[0].PREV.PREV.info)
pp2.[0].LINE_NUM == pp2.[0].PREV.LINE_NUM
pp2.[0].PREV == pp2.[0].PREV.PREV.NEXT
pp2.[0].PREV.[0] == pp2.[0].PREV.PREV.NEXT.[0]
phase_unit_ptr.[0] == return
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
p1.[0] != null
p1.info == 85
p1.LINE_NUM == 11
p1.PREV != null
p1.PREV.[0] != null
p1.PREV.info == 32
p1.PREV.PREV != null
p1.PREV.PREV.[0] != null
p1.PREV.PREV.PREV != null
p1.PREV.PREV.PREV.[0] != null
p1.NEXT != null
p1.NEXT.[0] != null
pp2.[0] != null
pp2.[0].[0] != null
pp2.[0].info == 69
pp2.[0].LINE_NUM == 12
pp2.[0].PREV != null
pp2.[0].PREV.[0] != null
pp2.[0].PREV.PREV != null
pp2.[0].PREV.PREV.[0] != null
pp2.[0].PREV.PREV.info == 57
pp2.[0].PREV.PREV.PREV != null
pp2.[0].PREV.PREV.PREV.[0] != null
pp2.[0].NEXT != null
pp2.[0].NEXT.[0] != null
daikon.Quant.fuzzy.eq(unif_val_ptr.[0], -219.0)
return == 0
===========================================================================
..waitcont():::ENTER
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
===========================================================================
..waitcont():::EXIT
    Variables: ::UserNames ::Keywords ::ErrorMessages ::MOSErrors ::GLOBLE_FILENAME orig(::UserNames) orig(::Keywords) orig(::ErrorMessages) orig(::MOSErrors) orig(::GLOBLE_FILENAME)
::UserNames.equals(\old(::UserNames))
::Keywords.equals(\old(::Keywords))
::ErrorMessages.equals(\old(::ErrorMessages))
::MOSErrors.equals(\old(::MOSErrors))
::GLOBLE_FILENAME.equals(\old(::GLOBLE_FILENAME))
::UserNames.equals("testgroup")
::Keywords.equals("PLANE")
::ErrorMessages.equals("** ERROR 0: NO ERRORS")
::MOSErrors.equals("** ERROR  B0: Out of memory during MOS.")
::GLOBLE_FILENAME.equals("gr2712")
