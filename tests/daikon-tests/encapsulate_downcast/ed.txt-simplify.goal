===========================================================================
misc.EncapsulateDowncast:::CLASS
(EQ (hash (select |random| (select |EncapsulateDowncast| |misc|))) (hashcode 1001))
(NEQ (hash (select |random| (select |EncapsulateDowncast| |misc|))) null)
(EQ (hash (select |random2| (select |EncapsulateDowncast| |misc|))) (hashcode 1002))
(NEQ (hash (select |random2| (select |EncapsulateDowncast| |misc|))) null)
===========================================================================
misc.EncapsulateDowncast.main(java.lang.String[]):::ENTER
(EQ (hash |argv|) (hashcode 1003))
(EQ (typeof |argv|) |T_java.lang.String[]|)
(AND (EQ (arrayLength |argv|) 0) (FORALL (|i|) (IMPLIES (AND (<= 0 |i|) (<= |i| (- (arrayLength |argv|) 1))) (NEQ (select (select elems |argv|) |i|)  null))))
(EQ (arrayLength |argv|) 0)
===========================================================================
misc.EncapsulateDowncast.main(java.lang.String[]):::EXIT
(EQ (hash (select |random| (select |EncapsulateDowncast| |misc|))) (hash (select |random| (select |EncapsulateDowncast| |__orig__misc|))))
(EQ (hash (select |random2| (select |EncapsulateDowncast| |misc|))) (hash (select |random2| (select |EncapsulateDowncast| |__orig__misc|))))
(FORALL (|i| |j|) (IMPLIES (AND (<= 0 |i|) (<= |i| (- (arrayLength |argv|) 1)) (<= 0 |j|) (<= |j| (- (arrayLength |__orig__argv|) 1)) (EQ |i| |j|)) (EQ (select (select elems |argv|) |i|) (select (select elems |__orig__argv|) |j|))))
(AND (EQ (arrayLength |argv|) 0) (FORALL (|i|) (IMPLIES (AND (<= 0 |i|) (<= |i| (- (arrayLength |argv|) 1))) (NEQ (select (select elems |argv|) |i|)  null))))
(EQ (arrayLength |argv|) 0)
===========================================================================
misc.EncapsulateDowncast.showLastPerson(java.util.Vector):::ENTER
(NEQ (hash |list|) null)
(FORALL (|i| |j|) (IMPLIES (AND (<= 0 |i|) (<= |i| (- (arrayLength |list|) 1)) (<= 0 |j|) (<= |j| (- (arrayLength |list|) 1)) (NEQ |i| |j|)) (NEQ (select (select elems |list|) |i|) (select (select elems |list|) |j|))))
(FORALL (|i|) (IMPLIES (AND (<= 0 |i|) (<= |i| (- (arrayLength |list|) 1))) (NEQ (select (select elems |list|) |i|) null)))
(FORALL (|i|) (IMPLIES (AND (<= 0 |i|) (<= |i| (- (arrayLength |list|) 1))) (EQ (typeof (select (select elems |list|) |i|)) |T_misc.Person|)))
===========================================================================
misc.EncapsulateDowncast.showLastPerson(java.util.Vector):::EXIT
(EQ (hash (select |random| (select |EncapsulateDowncast| |misc|))) (hash (select |random| (select |EncapsulateDowncast| |__orig__misc|))))
(EQ (hash (select |random2| (select |EncapsulateDowncast| |misc|))) (hash (select |random2| (select |EncapsulateDowncast| |__orig__misc|))))
(FORALL (|i| |j|) (IMPLIES (AND (<= 0 |i|) (<= |i| (- (arrayLength |list|) 1)) (<= 0 |j|) (<= |j| (- (arrayLength |__orig__list|) 1)) (EQ |i| |j|)) (EQ (select (select elems |list|) |i|) (select (select elems |__orig__list|) |j|))))
(FORALL (|i| |j|) (IMPLIES (AND (<= 0 |i|) (<= |i| (- (arrayLength |list|) 1)) (<= 0 |j|) (<= |j| (- (arrayLength |list|) 1)) (NEQ |i| |j|)) (NEQ (select (select elems |list|) |i|) (select (select elems |list|) |j|))))
(FORALL (|i|) (IMPLIES (AND (<= 0 |i|) (<= |i| (- (arrayLength |list|) 1))) (NEQ (select (select elems |list|) |i|) null)))
(FORALL (|i|) (IMPLIES (AND (<= 0 |i|) (<= |i| (- (arrayLength |list|) 1))) (EQ (typeof (select (select elems |list|) |i|)) |T_misc.Person|)))
===========================================================================
misc.Person:::OBJECT
(NEQ (hash (select |_name| |this|)) null)
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:Simplify) needs to be implemented: this._name.toString is printable
(>= (select |_height| |this|) 0)
===========================================================================
misc.Person.Person(java.lang.String, int, int):::ENTER
(NEQ (hash |name|) null)
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:Simplify) needs to be implemented: name.toString is printable
(>= |height| 0)
===========================================================================
misc.Person.Person(java.lang.String, int, int):::EXIT
(EQ (hash (select |_name| |this|)) (hash |__orig__name|))
(EQ (select |_height| |this|) |__orig__height|)
(EQ (select |_weight| |this|) |__orig__weight|)
(EQ (select |toString| |name|) (select |toString| |__orig__name|))
warning: method daikon.inv.unary.string.PrintableString.format(OutputFormat:Simplify) needs to be implemented: name.toString is printable
