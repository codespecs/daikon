===========================================================================
misc.Suppress02:::OBJECT
    Variables: this this.theArray this.theArray[] this.i this.j size(this.theArray[]) size(this.theArray[])-1
this != null
this.theArray != null
this.theArray != null
daikon.Quant.eltsGTE(this.theArray, 0)
this.i <= 49
this.i >= 0
daikon.Quant.size(this.theArray) == 1000
daikon.Quant.eltsLT(this.theArray, daikon.Quant.size(this.theArray)-1)
(!(this.j == 0)) || (this.i == 0)
this.i <= this.j
===========================================================================
misc.Suppress02.Suppress02():::EXIT
    Variables: this this.theArray this.theArray[] this.i this.j size(this.theArray[]) size(this.theArray[])-1
this.i == 0
this.j == 5
===========================================================================
misc.Suppress02.f(int):::ENTER
    Variables: this this.theArray this.theArray[] this.i this.j n size(this.theArray[]) size(this.theArray[])-1
(!(n == 0)) || (this.i == 0)
this.i <= n
===========================================================================
misc.Suppress02.f(int):::EXIT
    Variables: this this.theArray this.theArray[] this.i this.j n orig(this) orig(this.theArray) orig(this.theArray[]) orig(this.i) orig(this.j) orig(n) size(this.theArray[]) size(this.theArray[])-1 orig(size(this.theArray[])) orig(size(this.theArray[]))-1
assignable this.i, this.j
this.theArray == \old(this.theArray)
daikon.Quant.pairwiseEqual(this.theArray, \old(this.theArray))
(!(\old(n) == 0)) || (this.i == 0)
this.i <= \old(n)
(!(this.j == 0)) || (\old(this.i) == 0)
this.j != \old(this.j)
(!(\old(n) == 0)) || (this.j == 0)
(!(this.j == 0)) || (\old(n) == 0)
===========================================================================
misc.Suppress02.main(java.lang.String[]):::ENTER
    Variables: args args.getClass().getName() args[] args[].toString size(args[]) size(args[])-1
args != null
args.getClass().getName() == java.lang.String[].class.getName()
daikon.Quant.pairwiseEqual(daikon.Quant.collectObject(args, "toString()"), new String[] {  })
===========================================================================
misc.Suppress02.main(java.lang.String[]):::EXIT
    Variables: args args.getClass().getName() args[] args[].toString orig(args) orig(args.getClass().getName()) orig(args[]) orig(args[].toString) size(args[]) size(args[])-1 orig(size(args[])) orig(size(args[]))-1
daikon.Quant.pairwiseEqual(args, \old(args))
daikon.Quant.pairwiseEqual(daikon.Quant.collectObject(args, "toString()"), new String[] {  })
