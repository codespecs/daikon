===========================================================================
MapQuick1.StreetNumberSet:::OBJECT
this.begins != null
this.begins[] contains no duplicates
this.begins[] elements >= 0
this.ends != null
this.ends[] contains no duplicates
this.ends[] elements >= 0
size(this.begins[]) >= 1
size(this.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.StreetNumberSet(java.lang.String):::ENTER
numbers != null
numbers.toString is printable
===========================================================================
MapQuick1.StreetNumberSet.StreetNumberSet(java.lang.String):::EXIT
numbers.toString == orig(numbers.toString)
numbers.toString is printable
===========================================================================
MapQuick1.StreetNumberSet.checkRep():::ENTER
===========================================================================
MapQuick1.StreetNumberSet.checkRep():::EXIT
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
===========================================================================
MapQuick1.StreetNumberSet.contains(int):::ENTER
n >= 0
===========================================================================
MapQuick1.StreetNumberSet.contains(int):::EXIT118
return == true
===========================================================================
MapQuick1.StreetNumberSet.contains(int):::EXIT118;condition="return == true"
===========================================================================
MapQuick1.StreetNumberSet.contains(int):::EXIT123
return == false
===========================================================================
MapQuick1.StreetNumberSet.contains(int):::EXIT123;condition="not(return == true)"
===========================================================================
MapQuick1.StreetNumberSet.contains(int):::EXIT
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
===========================================================================
MapQuick1.StreetNumberSet.contains(int):::EXIT;condition="return == true"
return == true
===========================================================================
MapQuick1.StreetNumberSet.contains(int):::EXIT;condition="not(return == true)"
return == false
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::ENTER
other.begins != null
other.begins[] contains no duplicates
other.begins[] elements >= 0
other.ends != null
other.ends[] contains no duplicates
other.ends[] elements >= 0
size(other.begins[]) >= 1
size(other.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::ENTER;condition="not((begins.length == 0))"
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::ENTER;condition="not(begins.length == 0)"
this.begins != null
this.begins[] contains no duplicates
this.begins[] elements >= 0
this.ends != null
this.ends[] contains no duplicates
this.ends[] elements >= 0
other.begins != null
other.begins[] contains no duplicates
other.begins[] elements >= 0
other.ends != null
other.ends[] contains no duplicates
other.ends[] elements >= 0
size(this.begins[]) >= 1
size(this.ends[]) >= 1
size(other.begins[]) >= 1
size(other.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT271
return == false
orig(other) == null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT271;condition="not(return == true)"
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT271;condition="not((begins.length == 0))"
return == false
orig(other) == null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT271;condition="not(orig((begins.length == 0)))"
return == false
orig(other) == null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT271;condition="not(begins.length == 0)"
return == false
orig(other) == null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT271;condition="not(orig(begins.length == 0))"
return == false
orig(other) == null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT272
this.begins == other.begins
this.begins == orig(other.begins)
this.ends == other.ends
this.ends == orig(other.ends)
orig(this) == orig(other)
return == true
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT272;condition="return == true"
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT272;condition="not((begins.length == 0))"
this.begins == other.begins
this.begins == orig(other.begins)
this.ends == other.ends
this.ends == orig(other.ends)
orig(this) == orig(other)
return == true
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT272;condition="not(orig((begins.length == 0)))"
this.begins == other.begins
this.begins == orig(other.begins)
this.ends == other.ends
this.ends == orig(other.ends)
orig(this) == orig(other)
return == true
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT272;condition="not(begins.length == 0)"
this.begins == other.begins
this.begins == orig(other.begins)
this.ends == other.ends
this.ends == orig(other.ends)
orig(this) == orig(other)
return == true
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT272;condition="not(orig(begins.length == 0))"
this.begins == other.begins
this.begins == orig(other.begins)
this.ends == other.ends
this.ends == orig(other.ends)
orig(this) == orig(other)
return == true
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT281
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT281;condition="not(return == true)"
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT281;condition="not((begins.length == 0))"
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT281;condition="not(orig((begins.length == 0)))"
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT281;condition="not(begins.length == 0)"
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT281;condition="not(orig(begins.length == 0))"
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT282
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT282;condition="not(return == true)"
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT282;condition="not((begins.length == 0))"
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT282;condition="not(orig((begins.length == 0)))"
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT282;condition="not(begins.length == 0)"
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT282;condition="not(orig(begins.length == 0))"
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT286
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT286;condition="not(return == true)"
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT286;condition="not((begins.length == 0))"
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT286;condition="not(orig((begins.length == 0)))"
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT286;condition="not(begins.length == 0)"
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT286;condition="not(orig(begins.length == 0))"
return == false
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT290
return == true
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT290;condition="return == true"
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT290;condition="not((begins.length == 0))"
return == true
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT290;condition="not(orig((begins.length == 0)))"
return == true
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT290;condition="not(begins.length == 0)"
return == true
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT290;condition="not(orig(begins.length == 0))"
return == true
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
other.begins == orig(other.begins)
other.begins[] == orig(other.begins[])
other.ends == orig(other.ends)
other.ends[] == orig(other.ends[])
(return == true)  ==>  (orig(other) != null)
other.begins != null
other.begins[] contains no duplicates
other.begins[] elements >= 0
other.ends != null
other.ends[] contains no duplicates
other.ends[] elements >= 0
size(other.begins[]) >= 1
size(other.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT;condition="return == true"
return == true
orig(other) != null
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT;condition="not(return == true)"
return == false
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT;condition="not((begins.length == 0))"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
other.begins == orig(other.begins)
other.begins[] == orig(other.begins[])
other.ends == orig(other.ends)
other.ends[] == orig(other.ends[])
this.begins != null
this.begins[] contains no duplicates
this.begins[] elements >= 0
this.ends != null
this.ends[] contains no duplicates
this.ends[] elements >= 0
other.begins != null
other.begins[] contains no duplicates
other.begins[] elements >= 0
other.ends != null
other.ends[] contains no duplicates
other.ends[] elements >= 0
size(this.begins[]) >= 1
size(this.ends[]) >= 1
size(other.begins[]) >= 1
size(other.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT;condition="not(orig((begins.length == 0)))"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
other.begins == orig(other.begins)
other.begins[] == orig(other.begins[])
other.ends == orig(other.ends)
other.ends[] == orig(other.ends[])
this.begins != null
this.begins[] contains no duplicates
this.begins[] elements >= 0
this.ends != null
this.ends[] contains no duplicates
this.ends[] elements >= 0
other.begins != null
other.begins[] contains no duplicates
other.begins[] elements >= 0
other.ends != null
other.ends[] contains no duplicates
other.ends[] elements >= 0
size(this.begins[]) >= 1
size(this.ends[]) >= 1
size(other.begins[]) >= 1
size(other.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT;condition="not(begins.length == 0)"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
other.begins == orig(other.begins)
other.begins[] == orig(other.begins[])
other.ends == orig(other.ends)
other.ends[] == orig(other.ends[])
this.begins != null
this.begins[] contains no duplicates
this.begins[] elements >= 0
this.ends != null
this.ends[] contains no duplicates
this.ends[] elements >= 0
other.begins != null
other.begins[] contains no duplicates
other.begins[] elements >= 0
other.ends != null
other.ends[] contains no duplicates
other.ends[] elements >= 0
size(this.begins[]) >= 1
size(this.ends[]) >= 1
size(other.begins[]) >= 1
size(other.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.equals(MapQuick1.StreetNumberSet):::EXIT;condition="not(orig(begins.length == 0))"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
other.begins == orig(other.begins)
other.begins[] == orig(other.begins[])
other.ends == orig(other.ends)
other.ends[] == orig(other.ends[])
this.begins != null
this.begins[] contains no duplicates
this.begins[] elements >= 0
this.ends != null
this.ends[] contains no duplicates
this.ends[] elements >= 0
other.begins != null
other.begins[] contains no duplicates
other.begins[] elements >= 0
other.ends != null
other.ends[] contains no duplicates
other.ends[] elements >= 0
size(this.begins[]) >= 1
size(this.ends[]) >= 1
size(other.begins[]) >= 1
size(other.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.equals(java.lang.Object):::ENTER
o.getClass().getName() is printable
===========================================================================
MapQuick1.StreetNumberSet.equals(java.lang.Object):::ENTER;condition="not((begins.length == 0))"
===========================================================================
MapQuick1.StreetNumberSet.equals(java.lang.Object):::EXIT
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
(return == true)  ==>  (orig(o) != null)
(return == true)  ==>  (orig(o.getClass().getName()) == MapQuick1.StreetNumberSet.class)
===========================================================================
MapQuick1.StreetNumberSet.equals(java.lang.Object):::EXIT;condition="return == true"
return == true
orig(o) != null
orig(o.getClass().getName()) == MapQuick1.StreetNumberSet.class
===========================================================================
MapQuick1.StreetNumberSet.equals(java.lang.Object):::EXIT;condition="not(return == true)"
return == false
===========================================================================
MapQuick1.StreetNumberSet.equals(java.lang.Object):::EXIT;condition="not((begins.length == 0))"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
this.begins != null
this.begins[] contains no duplicates
this.ends != null
this.ends[] contains no duplicates
size(this.begins[]) >= 1
size(this.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.equals(java.lang.Object):::EXIT;condition="not(orig((begins.length == 0)))"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
this.begins != null
this.begins[] contains no duplicates
this.ends != null
this.ends[] contains no duplicates
orig(o.getClass().getName()) is printable
size(this.begins[]) >= 1
size(this.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.equals(java.lang.Object):::EXIT;condition="not(begins.length == 0)"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
this.begins != null
this.begins[] contains no duplicates
this.ends != null
this.ends[] contains no duplicates
orig(o.getClass().getName()) is printable
size(this.begins[]) >= 1
size(this.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.equals(java.lang.Object):::EXIT;condition="not(orig(begins.length == 0))"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
this.begins != null
this.begins[] contains no duplicates
this.ends != null
this.ends[] contains no duplicates
orig(o.getClass().getName()) is printable
size(this.begins[]) >= 1
size(this.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.hashCode():::ENTER
this.begins[] elements one of { 1, 3, 7 }
this.begins[] one of { [1], [3, 1, 7] }
this.ends[] elements one of { 1, 5, 7 }
this.ends[] one of { [5, 1, 7], [7] }
size(this.begins[]) one of { 1, 3 }
size(this.ends[]) one of { 1, 3 }
===========================================================================
MapQuick1.StreetNumberSet.hashCode():::ENTER;condition="not((begins.length == 0))"
===========================================================================
MapQuick1.StreetNumberSet.hashCode():::ENTER;condition="not(begins.length == 0)"
this.begins[] elements one of { 1, 3, 7 }
this.begins[] one of { [1], [3, 1, 7] }
this.ends[] elements one of { 1, 5, 7 }
this.ends[] one of { [5, 1, 7], [7] }
size(this.begins[]) one of { 1, 3 }
size(this.ends[]) one of { 1, 3 }
===========================================================================
MapQuick1.StreetNumberSet.hashCode():::EXIT
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
this.begins[] elements one of { 1, 3, 7 }
this.begins[] one of { [1], [3, 1, 7] }
this.ends[] elements one of { 1, 5, 7 }
this.ends[] one of { [5, 1, 7], [7] }
return == 122
size(this.begins[]) one of { 1, 3 }
size(this.ends[]) one of { 1, 3 }
===========================================================================
MapQuick1.StreetNumberSet.hashCode():::EXIT;condition="not((begins.length == 0))"
===========================================================================
MapQuick1.StreetNumberSet.hashCode():::EXIT;condition="not(orig((begins.length == 0)))"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
this.begins[] elements one of { 1, 3, 7 }
this.begins[] one of { [1], [3, 1, 7] }
this.ends[] elements one of { 1, 5, 7 }
this.ends[] one of { [5, 1, 7], [7] }
return == 122
size(this.begins[]) one of { 1, 3 }
size(this.ends[]) one of { 1, 3 }
===========================================================================
MapQuick1.StreetNumberSet.hashCode():::EXIT;condition="not(begins.length == 0)"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
this.begins[] elements one of { 1, 3, 7 }
this.begins[] one of { [1], [3, 1, 7] }
this.ends[] elements one of { 1, 5, 7 }
this.ends[] one of { [5, 1, 7], [7] }
return == 122
size(this.begins[]) one of { 1, 3 }
size(this.ends[]) one of { 1, 3 }
===========================================================================
MapQuick1.StreetNumberSet.hashCode():::EXIT;condition="not(orig(begins.length == 0))"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
this.begins[] elements one of { 1, 3, 7 }
this.begins[] one of { [1], [3, 1, 7] }
this.ends[] elements one of { 1, 5, 7 }
this.ends[] one of { [5, 1, 7], [7] }
return == 122
size(this.begins[]) one of { 1, 3 }
size(this.ends[]) one of { 1, 3 }
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::ENTER
other != null
other.begins != null
other.begins[] contains no duplicates
other.begins[] elements >= 0
other.ends != null
other.ends[] contains no duplicates
other.ends[] elements >= 0
size(other.begins[]) >= 1
size(other.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::ENTER;condition="not((begins.length == 0))"
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::EXIT253
return == true
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::EXIT253;condition="return == true"
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::EXIT253;condition="not((begins.length == 0))"
return == true
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::EXIT253;condition="not(orig((begins.length == 0)))"
return == true
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::EXIT257
return == false
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::EXIT257;condition="not(return == true)"
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::EXIT257;condition="not((begins.length == 0))"
return == false
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::EXIT257;condition="not(orig((begins.length == 0)))"
return == false
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::EXIT
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
other.begins == orig(other.begins)
other.begins[] == orig(other.begins[])
other.ends == orig(other.ends)
other.ends[] == orig(other.ends[])
other.begins != null
other.begins[] contains no duplicates
other.begins[] elements >= 0
other.ends != null
other.ends[] contains no duplicates
other.ends[] elements >= 0
size(other.begins[]) >= 1
size(other.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::EXIT;condition="return == true"
return == true
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::EXIT;condition="not(return == true)"
return == false
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::EXIT;condition="not((begins.length == 0))"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
other.begins == orig(other.begins)
other.begins[] == orig(other.begins[])
other.ends == orig(other.ends)
other.ends[] == orig(other.ends[])
this.begins != null
this.begins[] contains no duplicates
this.begins[] elements >= 0
this.ends != null
this.ends[] contains no duplicates
this.ends[] elements >= 0
other.begins != null
other.begins[] contains no duplicates
other.begins[] elements >= 0
other.ends != null
other.ends[] contains no duplicates
other.ends[] elements >= 0
size(this.begins[]) >= 1
size(this.ends[]) >= 1
size(other.begins[]) >= 1
size(other.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.intersects(MapQuick1.StreetNumberSet):::EXIT;condition="not(orig((begins.length == 0)))"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
other.begins == orig(other.begins)
other.begins[] == orig(other.begins[])
other.ends == orig(other.ends)
other.ends[] == orig(other.ends[])
this.begins != null
this.begins[] contains no duplicates
this.begins[] elements >= 0
this.ends != null
this.ends[] contains no duplicates
this.ends[] elements >= 0
other.begins != null
other.begins[] contains no duplicates
other.begins[] elements >= 0
other.ends != null
other.ends[] contains no duplicates
other.ends[] elements >= 0
orig(other) != null
size(this.begins[]) >= 1
size(this.ends[]) >= 1
size(other.begins[]) >= 1
size(other.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.isEmpty():::ENTER
===========================================================================
MapQuick1.StreetNumberSet.isEmpty():::EXIT
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
return == false
===========================================================================
MapQuick1.StreetNumberSet.isEmpty():::EXIT;condition="not(return == true)"
===========================================================================
MapQuick1.StreetNumberSet.isEmpty():::EXIT;condition="not((begins.length == 0))"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
this.begins != null
this.begins[] contains no duplicates
this.begins[] elements >= 0
this.ends != null
this.ends[] contains no duplicates
this.ends[] elements >= 0
return == false
size(this.begins[]) >= 1
size(this.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.isEmpty():::EXIT;condition="not(orig((begins.length == 0)))"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
this.begins != null
this.begins[] contains no duplicates
this.begins[] elements >= 0
this.ends != null
this.ends[] contains no duplicates
this.ends[] elements >= 0
return == false
size(this.begins[]) >= 1
size(this.ends[]) >= 1
===========================================================================
MapQuick1.StreetNumberSet.max():::ENTER
===========================================================================
MapQuick1.StreetNumberSet.max():::ENTER;condition="not((begins.length == 0))"
===========================================================================
MapQuick1.StreetNumberSet.max():::EXIT
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
return >= 0
this.begins[] elements <= return
return in this.ends[]
this.ends[] elements <= return
===========================================================================
MapQuick1.StreetNumberSet.max():::EXIT;condition="not((begins.length == 0))"
===========================================================================
MapQuick1.StreetNumberSet.max():::EXIT;condition="not(orig((begins.length == 0)))"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
this.begins != null
this.begins[] contains no duplicates
this.begins[] elements >= 0
this.ends != null
this.ends[] contains no duplicates
this.ends[] elements >= 0
return >= 0
size(this.begins[]) >= 1
size(this.ends[]) >= 1
this.begins[] elements <= return
return in this.ends[]
this.ends[] elements <= return
===========================================================================
MapQuick1.StreetNumberSet.min():::ENTER
===========================================================================
MapQuick1.StreetNumberSet.min():::ENTER;condition="not((begins.length == 0))"
===========================================================================
MapQuick1.StreetNumberSet.min():::EXIT
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
return >= 0
return in this.begins[]
this.begins[] elements >= return
this.ends[] elements >= return
===========================================================================
MapQuick1.StreetNumberSet.min():::EXIT;condition="not((begins.length == 0))"
===========================================================================
MapQuick1.StreetNumberSet.min():::EXIT;condition="not(orig((begins.length == 0)))"
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
this.begins != null
this.begins[] contains no duplicates
this.begins[] elements >= 0
this.ends != null
this.ends[] contains no duplicates
this.ends[] elements >= 0
return >= 0
size(this.begins[]) >= 1
size(this.ends[]) >= 1
return in this.begins[]
this.begins[] elements >= return
this.ends[] elements >= return
===========================================================================
MapQuick1.StreetNumberSet.orderStatistic(int):::ENTER
n >= 0
===========================================================================
MapQuick1.StreetNumberSet.orderStatistic(int):::EXIT
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
return >= 0
(orig(n) == 0) ==> (return == 0)
return <= orig(n)
===========================================================================
MapQuick1.StreetNumberSet.parityOf(int):::ENTER
i >= 0
===========================================================================
MapQuick1.StreetNumberSet.parityOf(int):::EXIT
return one of { 0, 1 }
(orig(i) == 0) ==> (return == 0)
return <= orig(i)
return is a bitwise subset of orig(i)
===========================================================================
MapQuick1.StreetNumberSet.size():::ENTER
===========================================================================
MapQuick1.StreetNumberSet.size():::EXIT
this.begins == orig(this.begins)
this.begins[] == orig(this.begins[])
this.ends == orig(this.ends)
this.ends[] == orig(this.ends[])
