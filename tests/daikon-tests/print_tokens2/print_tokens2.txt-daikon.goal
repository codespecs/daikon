===========================================================================
..get_char():::ENTER
::buffer is printable
fp has only one value
fp != null
===========================================================================
..get_char():::EXIT
::buffer == orig(::buffer)
::buffer is printable
return != 0
===========================================================================
..get_token():::ENTER
::buffer is printable
tp has only one value
tp != null
===========================================================================
..get_token():::EXIT
::buffer == return
===========================================================================
..is_eof_token():::ENTER
===========================================================================
..is_eof_token():::EXIT
::buffer == orig(::buffer)
return one of { 0, 1 }
===========================================================================
..open_character_stream():::ENTER
::buffer == ""
===========================================================================
..open_character_stream():::EXIT
::buffer == orig(::buffer)
::buffer == ""
return has only one value
===========================================================================
..open_token_stream():::ENTER
::buffer == fname
::buffer == ""
===========================================================================
..open_token_stream():::EXIT
::buffer == orig(::buffer)
::buffer == orig(fname)
::buffer == ""
return has only one value
===========================================================================
..print_token():::ENTER
::buffer == tok
===========================================================================
..print_token():::EXIT
::buffer == orig(::buffer)
::buffer == orig(tok)
===========================================================================
print_tokens2.c.is_char_constant():::ENTER
::buffer == str
===========================================================================
print_tokens2.c.is_char_constant():::EXIT
::buffer == orig(::buffer)
::buffer == orig(str)
return == 0
===========================================================================
print_tokens2.c.is_comment():::ENTER
::buffer == ident
===========================================================================
print_tokens2.c.is_comment():::EXIT
::buffer == orig(::buffer)
::buffer == orig(ident)
return one of { 0, 1 }
===========================================================================
print_tokens2.c.is_identifier():::ENTER
::buffer == str
===========================================================================
print_tokens2.c.is_identifier():::EXIT
::buffer == orig(::buffer)
::buffer == orig(str)
return one of { 0, 1 }
===========================================================================
print_tokens2.c.is_keyword():::ENTER
::buffer == str
===========================================================================
print_tokens2.c.is_keyword():::EXIT
::buffer == orig(::buffer)
::buffer == orig(str)
return one of { 0, 1 }
===========================================================================
print_tokens2.c.is_num_constant():::ENTER
::buffer == str
===========================================================================
print_tokens2.c.is_num_constant():::EXIT
::buffer == orig(::buffer)
::buffer == orig(str)
return one of { 0, 1 }
===========================================================================
print_tokens2.c.is_spec_symbol():::ENTER
===========================================================================
print_tokens2.c.is_spec_symbol():::EXIT
::buffer == orig(::buffer)
return one of { 0, 1 }
===========================================================================
print_tokens2.c.is_str_constant():::ENTER
::buffer == str
===========================================================================
print_tokens2.c.is_str_constant():::EXIT
::buffer == orig(::buffer)
::buffer == orig(str)
return one of { 0, 1 }
===========================================================================
print_tokens2.c.is_token_end():::ENTER
::buffer is printable
str_com_id one of { 0, 1, 2 }
str_com_id < ch
===========================================================================
print_tokens2.c.is_token_end():::EXIT
::buffer == orig(::buffer)
::buffer is printable
return one of { 0, 1 }
(return & orig(ch)) == 0
return < orig(ch)
===========================================================================
print_tokens2.c.print_spec_symbol():::ENTER
::buffer == str
::buffer one of { "'", ")", "`" }
::buffer is printable
===========================================================================
print_tokens2.c.print_spec_symbol():::EXIT
::buffer == orig(::buffer)
::buffer == orig(str)
::buffer one of { "'", ")", "`" }
::buffer is printable
===========================================================================
print_tokens2.c.token_type():::ENTER
::buffer == tok
===========================================================================
print_tokens2.c.token_type():::EXIT
::buffer == orig(::buffer)
::buffer == orig(tok)
return >= 1
