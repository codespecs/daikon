package org.checkerframework.checker.nullness.qual:
annotation @Nullable:
annotation @NonNull:

package javautil:
class Vector13 : // 41700/41700 obj/class samples
  field serialVersionUID :  // long
  field elementData :  // java.lang.Object[]
  field elementCount :  // int
  field capacityIncrement :  // int
  method <init>()V throws Ljava/lang/Throwable; : // 0 samples
    return:
  method <init>()V : // 5 samples
    return:
  method <init>(I)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // initialCapacity
  method <init>(I)V : // 260 samples
    return:
    parameter #0 :  // initialCapacity
  method <init>(II)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // initialCapacity
    parameter #1 :  // capacityIncrement
  method <init>(II)V : // 1785 samples
    return:
    parameter #0 :  // initialCapacity
    parameter #1 :  // capacityIncrement
  method addElement(Ljava/lang/Object;)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // obj
  method addElement(Ljava/lang/Object;)V : // 3760 samples
    return:
    parameter #0 : @Nullable // obj
  method capacity()V throws Ljava/lang/Throwable; : // 0 samples
    return:
  method capacity()I : // 0 samples
    return:
  method clone()V throws Ljava/lang/Throwable; : // 0 samples
    return:
  method clone()Ljava/lang/Object; : // 150 samples
    return:
  method contains(Ljava/lang/Object;)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // elem
  method contains(Ljava/lang/Object;)Z : // 300 samples
    return:
    parameter #0 :  // elem
  method copyInto([Ljava/lang/Object;)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // anArray
  method copyInto([Ljava/lang/Object;)V : // 450 samples
    return:
    parameter #0 :  // anArray
  method elementAt(I)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // index
  method elementAt(I)Ljava/lang/Object; : // 375 samples
    return: @Nullable
    parameter #0 :  // index
  method elements()V throws Ljava/lang/Throwable; : // 0 samples
    return:
  method elements()Ljava/util/Enumeration; : // 300 samples
    return:
  method ensureCapacity(I)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // minCapacity
  method ensureCapacity(I)V : // 900 samples
    return:
    parameter #0 :  // minCapacity
  method ensureCapacityHelper(I)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // minCapacity
  method ensureCapacityHelper(I)V : // 1450 samples
    return:
    parameter #0 :  // minCapacity
  method firstElement()V throws Ljava/lang/Throwable; : // 0 samples
    return:
  method firstElement()Ljava/lang/Object; : // 125 samples
    return: @Nullable
  method indexOf(Ljava/lang/Object;)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // elem
  method indexOf(Ljava/lang/Object;)I : // 900 samples
    return:
    parameter #0 :  // elem
  method indexOf(Ljava/lang/Object;I)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // elem
    parameter #1 :  // index
  method indexOf(Ljava/lang/Object;I)I : // 5700 samples
    return:
    parameter #0 :  // elem
    parameter #1 :  // index
  method insertElementAt(Ljava/lang/Object;I)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // obj
    parameter #1 :  // index
  method insertElementAt(Ljava/lang/Object;I)V : // 150 samples
    return:
    parameter #0 : @Nullable // obj
    parameter #1 :  // index
  method isEmpty()V throws Ljava/lang/Throwable; : // 0 samples
    return:
  method isEmpty()Z : // 150 samples
    return:
  method lastElement()V throws Ljava/lang/Throwable; : // 0 samples
    return:
  method lastElement()Ljava/lang/Object; : // 125 samples
    return: @Nullable
  method lastIndexOf(Ljava/lang/Object;)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // elem
  method lastIndexOf(Ljava/lang/Object;)I : // 750 samples
    return:
    parameter #0 :  // elem
  method lastIndexOf(Ljava/lang/Object;I)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // elem
    parameter #1 :  // index
  method lastIndexOf(Ljava/lang/Object;I)I : // 2625 samples
    return:
    parameter #0 :  // elem
    parameter #1 :  // index
  method removeAllElements()V throws Ljava/lang/Throwable; : // 0 samples
    return:
  method removeAllElements()V : // 150 samples
    return:
  method removeElement(Ljava/lang/Object;)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // obj
  method removeElement(Ljava/lang/Object;)Z : // 150 samples
    return:
    parameter #0 :  // obj
  method removeElementAt(I)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // index
  method removeElementAt(I)V : // 190 samples
    return:
    parameter #0 :  // index
  method setElementAt(Ljava/lang/Object;I)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // obj
    parameter #1 :  // index
  method setElementAt(Ljava/lang/Object;I)V : // 375 samples
    return:
    parameter #0 : @Nullable // obj
    parameter #1 :  // index
  method setSize(I)V throws Ljava/lang/Throwable; : // 0 samples
    return:
    parameter #0 :  // newSize
  method setSize(I)V : // 150 samples
    return:
    parameter #0 :  // newSize
  method size()V throws Ljava/lang/Throwable; : // 0 samples
    return:
  method size()I : // 300 samples
    return:
  method toString()V throws Ljava/lang/Throwable; : // 0 samples
    return:
  method toString()Ljava/lang/String; : // 150 samples
    return:
  method trimToSize()V throws Ljava/lang/Throwable; : // 0 samples
    return:
  method trimToSize()V : // 150 samples
    return:


