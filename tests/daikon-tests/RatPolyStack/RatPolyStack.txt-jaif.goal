package org.checkerframework.checker.nullness.qual:
annotation @Nullable:
annotation @NonNull:

package PolyCalc:
class Cons : // 87/- obj/class samples
  field head :  // PolyCalc.RatPoly
  field tail : @Nullable  // PolyCalc.Cons
  method <init>(LPolyCalc/RatPoly;LPolyCalc/;)V : // 87 samples
    return:
    parameter #0 :  // h
    parameter #1 : @Nullable  // t


package PolyCalc:
class RatPolyStack : // 825/- obj/class samples
  field polys : @Nullable  // PolyCalc.Cons
  field size :  // int
  method <init>()V : // 23 samples
    return:
  method add()V : // 5 samples
    return:
  method clear()V : // 2 samples
    return:
  method div()V : // 4 samples
    return:
  method dup()V : // 3 samples
    return:
  method get(I)LPolyCalc/RatPoly; : // 99 samples
    return:
    parameter #0 :  // index
  method getCons(I)LPolyCalc/Cons; : // 99 samples
    return:
    parameter #0 :  // index
  method mul()V : // 5 samples
    return:
  method pop()LPolyCalc/RatPoly; : // 41 samples
    return:
  method push(LPolyCalc/RatPoly;)V : // 84 samples
    return:
    parameter #0 :  // p
  method size()I : // 51 samples
    return:
  method sub()V : // 5 samples
    return:
  method swap()V : // 3 samples
    return:


