===========================================================================
six170.HuffmanCodec:::OBJECT
    Variables: this this.encodingMap this.encodingMap.getClass().getName() this.decodingTree this.decodingTree.symbol this.decodingTree.symbol.symbol this.decodingTree.symbol.symbol.getClass().getName() this.decodingTree.symbol.frequency this.decodingTree.left this.decodingTree.left.symbol this.decodingTree.left.left this.decodingTree.left.right this.decodingTree.right this.decodingTree.right.symbol this.decodingTree.right.left this.decodingTree.right.right
this.encodingMap != null
this.encodingMap.getClass().getName() == java.util.LinkedHashMap.class.getName()
this.decodingTree != null
this.decodingTree.symbol == null
this.decodingTree.left != null
this.decodingTree.left.symbol == null
this.decodingTree.left.left != null
this.decodingTree.left.right != null
this.decodingTree.right != null
this.decodingTree.right.symbol == null
this.decodingTree.right.left != null
this.decodingTree.right.right != null
===========================================================================
six170.HuffmanCodec.HuffmanCodec(java.util.List):::ENTER
    Variables: huffmanSymbols huffmanSymbols[] huffmanSymbols[].getClass().getName() huffmanSymbols.getClass().getName() size(huffmanSymbols[]) size(huffmanSymbols[])-1
daikon.Quant.eltsEqual(daikon.Quant.typeArray(huffmanSymbols), "six170.HuffmanSymbol")
huffmanSymbols.getClass().getName() == java.util.ArrayList.class.getName()
(daikon.Quant.size(huffmanSymbols) >> daikon.Quant.size(huffmanSymbols)-1 == 0)
===========================================================================
six170.HuffmanCodec.HuffmanCodec(java.util.List):::EXIT
    Variables: this this.encodingMap this.encodingMap.getClass().getName() this.decodingTree this.decodingTree.symbol this.decodingTree.symbol.symbol this.decodingTree.symbol.symbol.getClass().getName() this.decodingTree.symbol.frequency this.decodingTree.left this.decodingTree.left.symbol this.decodingTree.left.left this.decodingTree.left.right this.decodingTree.right this.decodingTree.right.symbol this.decodingTree.right.left this.decodingTree.right.right huffmanSymbols huffmanSymbols[] huffmanSymbols[].getClass().getName() huffmanSymbols.getClass().getName() orig(huffmanSymbols) orig(huffmanSymbols[]) orig(huffmanSymbols[].getClass().getName()) orig(huffmanSymbols.getClass().getName()) size(huffmanSymbols[]) size(huffmanSymbols[])-1 orig(size(huffmanSymbols[])) orig(size(huffmanSymbols[]))-1
daikon.Quant.pairwiseEqual(huffmanSymbols, \old(huffmanSymbols))
daikon.Quant.eltsEqual(daikon.Quant.typeArray(huffmanSymbols), "six170.HuffmanSymbol")
(\old(daikon.Quant.size(huffmanSymbols)) >> daikon.Quant.size(huffmanSymbols)-1 == 0)
===========================================================================
six170.HuffmanCodec.addToMap(java.util.Map, six170.HuffmanTree, java.util.List):::ENTER
    Variables: encodingMap encodingMap.getClass().getName() subTree subTree.symbol subTree.symbol.symbol subTree.symbol.symbol.getClass().getName() subTree.symbol.frequency subTree.left subTree.left.symbol subTree.left.left subTree.left.right subTree.right subTree.right.symbol subTree.right.left subTree.right.right bitStack bitStack[] bitStack[].getClass().getName() bitStack.getClass().getName() size(bitStack[]) size(bitStack[])-1
encodingMap != null
encodingMap.getClass().getName() == java.util.LinkedHashMap.class.getName()
subTree != null
(subTree.symbol != null)  ==>  (subTree.symbol.symbol != null)
((subTree.symbol != null) && (subTree.symbol.symbol != null))  ==>  (subTree.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(subTree.symbol != null)  ==>  (subTree.symbol.frequency >= 1)
bitStack != null
daikon.Quant.eltsNotEqual(bitStack, null)
daikon.Quant.eltsEqual(daikon.Quant.typeArray(bitStack), "java.lang.Boolean")
bitStack.getClass().getName() == java.util.ArrayList.class.getName()
((subTree.symbol != null) && (subTree.symbol.symbol != null))  ==>  (encodingMap.getClass().getName() != subTree.symbol.symbol.getClass().getName())
encodingMap.getClass().getName() != bitStack.getClass().getName()
((subTree.symbol != null) && (subTree.symbol.symbol != null))  ==>  (subTree.symbol.symbol.getClass().getName() != bitStack.getClass().getName())
===========================================================================
six170.HuffmanCodec.addToMap(java.util.Map, six170.HuffmanTree, java.util.List):::EXIT
    Variables: encodingMap encodingMap.getClass().getName() subTree subTree.symbol subTree.symbol.symbol subTree.symbol.symbol.getClass().getName() subTree.symbol.frequency subTree.left subTree.left.symbol subTree.left.left subTree.left.right subTree.right subTree.right.symbol subTree.right.left subTree.right.right bitStack bitStack[] bitStack[].getClass().getName() bitStack.getClass().getName() orig(encodingMap) orig(encodingMap.getClass().getName()) orig(subTree) orig(subTree.symbol) orig(subTree.symbol.symbol) orig(subTree.symbol.symbol.getClass().getName()) orig(subTree.symbol.frequency) orig(subTree.left) orig(subTree.left.symbol) orig(subTree.left.left) orig(subTree.left.right) orig(subTree.right) orig(subTree.right.symbol) orig(subTree.right.left) orig(subTree.right.right) orig(bitStack) orig(bitStack[]) orig(bitStack[].getClass().getName()) orig(bitStack.getClass().getName()) size(bitStack[]) size(bitStack[])-1 orig(size(bitStack[])) orig(size(bitStack[]))-1
subTree.symbol == \old(subTree.symbol)
((subTree.symbol != null) && (\old(subTree.symbol) != null))  ==>  (subTree.symbol.symbol == \old(subTree.symbol.symbol))
((subTree.symbol != null) && (subTree.symbol.symbol != null) && (\old(subTree.symbol) != null) && (\old(subTree.symbol.symbol) != null))  ==>  (subTree.symbol.symbol.getClass().getName() == \old(subTree.symbol.symbol.getClass().getName()))
((subTree.symbol != null) && (\old(subTree.symbol) != null))  ==>  (subTree.symbol.frequency == \old(subTree.symbol.frequency))
subTree.left == \old(subTree.left)
((subTree.left != null) && (\old(subTree.left) != null))  ==>  (subTree.left.symbol == \old(subTree.left.symbol))
((subTree.left != null) && (\old(subTree.left) != null))  ==>  (subTree.left.left == \old(subTree.left.left))
((subTree.left != null) && (\old(subTree.left) != null))  ==>  (subTree.left.right == \old(subTree.left.right))
subTree.right == \old(subTree.right)
((subTree.right != null) && (\old(subTree.right) != null))  ==>  (subTree.right.symbol == \old(subTree.right.symbol))
((subTree.right != null) && (\old(subTree.right) != null))  ==>  (subTree.right.left == \old(subTree.right.left))
((subTree.right != null) && (\old(subTree.right) != null))  ==>  (subTree.right.right == \old(subTree.right.right))
daikon.Quant.pairwiseEqual(bitStack, \old(bitStack))
(subTree.symbol != null)  ==>  (subTree.symbol.symbol != null)
((subTree.symbol != null) && (subTree.symbol.symbol != null))  ==>  (subTree.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(subTree.symbol != null)  ==>  (subTree.symbol.frequency >= 1)
daikon.Quant.eltsNotEqual(bitStack, null)
daikon.Quant.eltsEqual(daikon.Quant.typeArray(bitStack), "java.lang.Boolean")
((subTree.symbol != null) && (subTree.symbol.symbol != null))  ==>  (subTree.symbol.symbol.getClass().getName() != \old(encodingMap.getClass().getName()))
((subTree.symbol != null) && (subTree.symbol.symbol != null))  ==>  (subTree.symbol.symbol.getClass().getName() != \old(bitStack.getClass().getName()))
===========================================================================
six170.HuffmanCodec.buildDecodingTree(java.util.List):::ENTER
    Variables: huffmanSymbols huffmanSymbols[] huffmanSymbols[].getClass().getName() huffmanSymbols.getClass().getName() size(huffmanSymbols[]) size(huffmanSymbols[])-1
daikon.Quant.eltsEqual(daikon.Quant.typeArray(huffmanSymbols), "six170.HuffmanSymbol")
huffmanSymbols.getClass().getName() == java.util.ArrayList.class.getName()
(daikon.Quant.size(huffmanSymbols) >> daikon.Quant.size(huffmanSymbols)-1 == 0)
===========================================================================
six170.HuffmanCodec.buildDecodingTree(java.util.List):::EXIT
    Variables: huffmanSymbols huffmanSymbols[] huffmanSymbols[].getClass().getName() huffmanSymbols.getClass().getName() return return.symbol return.symbol.symbol return.symbol.symbol.getClass().getName() return.symbol.frequency return.left return.left.symbol return.left.left return.left.right return.right return.right.symbol return.right.left return.right.right orig(huffmanSymbols) orig(huffmanSymbols[]) orig(huffmanSymbols[].getClass().getName()) orig(huffmanSymbols.getClass().getName()) size(huffmanSymbols[]) size(huffmanSymbols[])-1 orig(size(huffmanSymbols[])) orig(size(huffmanSymbols[]))-1
daikon.Quant.pairwiseEqual(huffmanSymbols, \old(huffmanSymbols))
daikon.Quant.eltsEqual(daikon.Quant.typeArray(huffmanSymbols), "six170.HuffmanSymbol")
\result.symbol == null
\result.left.symbol == null
\result.right.symbol == null
(\old(daikon.Quant.size(huffmanSymbols)) >> daikon.Quant.size(huffmanSymbols)-1 == 0)
===========================================================================
six170.HuffmanCodec.buildEncodingMap(six170.HuffmanTree):::ENTER
    Variables: decodingTree decodingTree.symbol decodingTree.symbol.symbol decodingTree.symbol.symbol.getClass().getName() decodingTree.symbol.frequency decodingTree.left decodingTree.left.symbol decodingTree.left.left decodingTree.left.right decodingTree.right decodingTree.right.symbol decodingTree.right.left decodingTree.right.right
decodingTree.symbol == null
decodingTree.left.symbol == null
decodingTree.right.symbol == null
===========================================================================
six170.HuffmanCodec.buildEncodingMap(six170.HuffmanTree):::EXIT
    Variables: decodingTree decodingTree.symbol decodingTree.symbol.symbol decodingTree.symbol.symbol.getClass().getName() decodingTree.symbol.frequency decodingTree.left decodingTree.left.symbol decodingTree.left.left decodingTree.left.right decodingTree.right decodingTree.right.symbol decodingTree.right.left decodingTree.right.right return return.getClass().getName() orig(decodingTree) orig(decodingTree.symbol) orig(decodingTree.symbol.symbol) orig(decodingTree.symbol.symbol.getClass().getName()) orig(decodingTree.symbol.frequency) orig(decodingTree.left) orig(decodingTree.left.symbol) orig(decodingTree.left.left) orig(decodingTree.left.right) orig(decodingTree.right) orig(decodingTree.right.symbol) orig(decodingTree.right.left) orig(decodingTree.right.right)
assignable decodingTree.symbol.symbol, decodingTree.symbol.frequency
decodingTree.symbol == \old(decodingTree.symbol)
decodingTree.left == \old(decodingTree.left)
decodingTree.left.symbol == \old(decodingTree.left.symbol)
decodingTree.left.left == \old(decodingTree.left.left)
decodingTree.left.right == \old(decodingTree.left.right)
decodingTree.right == \old(decodingTree.right)
decodingTree.right.symbol == \old(decodingTree.right.symbol)
decodingTree.right.left == \old(decodingTree.right.left)
decodingTree.right.right == \old(decodingTree.right.right)
decodingTree.symbol == null
decodingTree.left.symbol == null
decodingTree.right.symbol == null
\result.getClass().getName() == java.util.LinkedHashMap.class.getName()
===========================================================================
six170.HuffmanCodec.decode(java.util.List):::ENTER
    Variables: this this.encodingMap this.encodingMap.getClass().getName() this.decodingTree this.decodingTree.symbol this.decodingTree.symbol.symbol this.decodingTree.symbol.symbol.getClass().getName() this.decodingTree.symbol.frequency this.decodingTree.left this.decodingTree.left.symbol this.decodingTree.left.left this.decodingTree.left.right this.decodingTree.right this.decodingTree.right.symbol this.decodingTree.right.left this.decodingTree.right.right inputBitStream inputBitStream[] inputBitStream[].getClass().getName() inputBitStream.getClass().getName() size(inputBitStream[]) size(inputBitStream[])-1
daikon.Quant.eltsEqual(daikon.Quant.typeArray(inputBitStream), "java.lang.Boolean")
inputBitStream.getClass().getName() == java.util.ArrayList.class.getName()
daikon.Quant.size(inputBitStream) == (daikon.Quant.size(inputBitStream)-1 | daikon.Quant.size(inputBitStream))
===========================================================================
six170.HuffmanCodec.decode(java.util.List):::EXIT
    Variables: this this.encodingMap this.encodingMap.getClass().getName() this.decodingTree this.decodingTree.symbol this.decodingTree.symbol.symbol this.decodingTree.symbol.symbol.getClass().getName() this.decodingTree.symbol.frequency this.decodingTree.left this.decodingTree.left.symbol this.decodingTree.left.left this.decodingTree.left.right this.decodingTree.right this.decodingTree.right.symbol this.decodingTree.right.left this.decodingTree.right.right inputBitStream inputBitStream[] inputBitStream[].getClass().getName() inputBitStream.getClass().getName() return return[] return[].getClass().getName() return.getClass().getName() orig(this) orig(this.encodingMap) orig(this.encodingMap.getClass().getName()) orig(this.decodingTree) orig(this.decodingTree.symbol) orig(this.decodingTree.symbol.symbol) orig(this.decodingTree.symbol.symbol.getClass().getName()) orig(this.decodingTree.symbol.frequency) orig(this.decodingTree.left) orig(this.decodingTree.left.symbol) orig(this.decodingTree.left.left) orig(this.decodingTree.left.right) orig(this.decodingTree.right) orig(this.decodingTree.right.symbol) orig(this.decodingTree.right.left) orig(this.decodingTree.right.right) orig(inputBitStream) orig(inputBitStream[]) orig(inputBitStream[].getClass().getName()) orig(inputBitStream.getClass().getName()) size(inputBitStream[]) size(inputBitStream[])-1 size(return[]) size(return[])-1 orig(size(inputBitStream[])) orig(size(inputBitStream[]))-1
assignable this.decodingTree.symbol.symbol, this.decodingTree.symbol.frequency
this.encodingMap == \old(this.encodingMap)
this.encodingMap.getClass().getName() == \old(this.encodingMap.getClass().getName())
this.decodingTree == \old(this.decodingTree)
this.decodingTree.symbol == \old(this.decodingTree.symbol)
this.decodingTree.left == \old(this.decodingTree.left)
this.decodingTree.left.symbol == \old(this.decodingTree.left.symbol)
this.decodingTree.left.left == \old(this.decodingTree.left.left)
this.decodingTree.left.right == \old(this.decodingTree.left.right)
this.decodingTree.right == \old(this.decodingTree.right)
this.decodingTree.right.symbol == \old(this.decodingTree.right.symbol)
this.decodingTree.right.left == \old(this.decodingTree.right.left)
this.decodingTree.right.right == \old(this.decodingTree.right.right)
daikon.Quant.pairwiseEqual(inputBitStream, \old(inputBitStream))
\result.getClass().getName() == \old(inputBitStream.getClass().getName())
daikon.Quant.eltsEqual(daikon.Quant.typeArray(inputBitStream), "java.lang.Boolean")
daikon.Quant.eltsEqual(daikon.Quant.typeArray(\result), "java.lang.Character")
\result.getClass().getName() == java.util.ArrayList.class.getName()
\old(daikon.Quant.size(inputBitStream)) == (daikon.Quant.size(inputBitStream)-1 | \old(daikon.Quant.size(inputBitStream)))
===========================================================================
six170.HuffmanCodec.encode(java.util.List):::ENTER
    Variables: this this.encodingMap this.encodingMap.getClass().getName() this.decodingTree this.decodingTree.symbol this.decodingTree.symbol.symbol this.decodingTree.symbol.symbol.getClass().getName() this.decodingTree.symbol.frequency this.decodingTree.left this.decodingTree.left.symbol this.decodingTree.left.left this.decodingTree.left.right this.decodingTree.right this.decodingTree.right.symbol this.decodingTree.right.left this.decodingTree.right.right inputStream inputStream[] inputStream[].getClass().getName() inputStream.getClass().getName() size(inputStream[]) size(inputStream[])-1
daikon.Quant.eltsEqual(daikon.Quant.typeArray(inputStream), "java.lang.Character")
inputStream.getClass().getName() == java.util.ArrayList.class.getName()
===========================================================================
six170.HuffmanCodec.encode(java.util.List):::EXIT
    Variables: this this.encodingMap this.encodingMap.getClass().getName() this.decodingTree this.decodingTree.symbol this.decodingTree.symbol.symbol this.decodingTree.symbol.symbol.getClass().getName() this.decodingTree.symbol.frequency this.decodingTree.left this.decodingTree.left.symbol this.decodingTree.left.left this.decodingTree.left.right this.decodingTree.right this.decodingTree.right.symbol this.decodingTree.right.left this.decodingTree.right.right inputStream inputStream[] inputStream[].getClass().getName() inputStream.getClass().getName() return return[] return[].getClass().getName() return.getClass().getName() orig(this) orig(this.encodingMap) orig(this.encodingMap.getClass().getName()) orig(this.decodingTree) orig(this.decodingTree.symbol) orig(this.decodingTree.symbol.symbol) orig(this.decodingTree.symbol.symbol.getClass().getName()) orig(this.decodingTree.symbol.frequency) orig(this.decodingTree.left) orig(this.decodingTree.left.symbol) orig(this.decodingTree.left.left) orig(this.decodingTree.left.right) orig(this.decodingTree.right) orig(this.decodingTree.right.symbol) orig(this.decodingTree.right.left) orig(this.decodingTree.right.right) orig(inputStream) orig(inputStream[]) orig(inputStream[].getClass().getName()) orig(inputStream.getClass().getName()) size(inputStream[]) size(inputStream[])-1 size(return[]) size(return[])-1 orig(size(inputStream[])) orig(size(inputStream[]))-1
assignable this.decodingTree.symbol.symbol, this.decodingTree.symbol.frequency
this.encodingMap == \old(this.encodingMap)
this.encodingMap.getClass().getName() == \old(this.encodingMap.getClass().getName())
this.decodingTree == \old(this.decodingTree)
this.decodingTree.symbol == \old(this.decodingTree.symbol)
this.decodingTree.left == \old(this.decodingTree.left)
this.decodingTree.left.symbol == \old(this.decodingTree.left.symbol)
this.decodingTree.left.left == \old(this.decodingTree.left.left)
this.decodingTree.left.right == \old(this.decodingTree.left.right)
this.decodingTree.right == \old(this.decodingTree.right)
this.decodingTree.right.symbol == \old(this.decodingTree.right.symbol)
this.decodingTree.right.left == \old(this.decodingTree.right.left)
this.decodingTree.right.right == \old(this.decodingTree.right.right)
daikon.Quant.pairwiseEqual(inputStream, \old(inputStream))
\result.getClass().getName() == \old(inputStream.getClass().getName())
daikon.Quant.eltsEqual(daikon.Quant.typeArray(inputStream), "java.lang.Character")
daikon.Quant.eltsEqual(daikon.Quant.typeArray(\result), "java.lang.Boolean")
\result.getClass().getName() == java.util.ArrayList.class.getName()
daikon.Quant.size(\result) == (daikon.Quant.size(\result)-1 | daikon.Quant.size(\result))
===========================================================================
six170.HuffmanCodec.extractSmallest(java.util.List):::ENTER
    Variables: nodeList nodeList[] nodeList[].getClass().getName() nodeList.getClass().getName() size(nodeList[]) size(nodeList[])-1
nodeList != null
daikon.Quant.noDups(nodeList)
daikon.Quant.eltsNotEqual(nodeList, null)
daikon.Quant.eltsEqual(daikon.Quant.typeArray(nodeList), "six170.HuffmanTree")
nodeList.getClass().getName() == java.util.ArrayList.class.getName()
daikon.Quant.size(nodeList) >= 1
===========================================================================
six170.HuffmanCodec.extractSmallest(java.util.List):::EXIT
    Variables: nodeList nodeList[] nodeList[].getClass().getName() nodeList.getClass().getName() return return.symbol return.symbol.symbol return.symbol.symbol.getClass().getName() return.symbol.frequency return.left return.left.symbol return.left.left return.left.right return.right return.right.symbol return.right.left return.right.right orig(nodeList) orig(nodeList[]) orig(nodeList[].getClass().getName()) orig(nodeList.getClass().getName()) size(nodeList[]) size(nodeList[])-1 orig(size(nodeList[])) orig(size(nodeList[]))-1
assignable nodeList[*]
daikon.Quant.noDups(nodeList)
daikon.Quant.eltsNotEqual(nodeList, null)
daikon.Quant.eltsEqual(daikon.Quant.typeArray(nodeList), "six170.HuffmanTree")
\result != null
(\result.symbol != null)  ==>  (\result.symbol.symbol != null)
((\result.symbol != null) && (\result.symbol.symbol != null))  ==>  (\result.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(\result.symbol != null)  ==>  (\result.symbol.frequency >= 1)
daikon.Quant.subsetOf(nodeList, \old(nodeList))
((\result.symbol != null) && (\result.symbol.symbol != null))  ==>  (\result.symbol.symbol.getClass().getName() != \old(nodeList.getClass().getName()))
===========================================================================
six170.HuffmanSymbol:::OBJECT
    Variables: this this.symbol this.symbol.getClass().getName() this.frequency
this.symbol != null
this.symbol.getClass().getName() == java.lang.Character.class.getName()
this.frequency >= 1
===========================================================================
six170.HuffmanSymbol.HuffmanSymbol(java.lang.Object, int):::ENTER
    Variables: symbol symbol.getClass().getName() frequency
symbol != null
symbol.getClass().getName() == java.lang.Character.class.getName()
frequency >= 1
===========================================================================
six170.HuffmanSymbol.HuffmanSymbol(java.lang.Object, int):::EXIT
    Variables: this this.symbol this.symbol.getClass().getName() this.frequency symbol symbol.getClass().getName() frequency orig(symbol) orig(symbol.getClass().getName()) orig(frequency)
this.symbol == \old(symbol)
this.symbol.getClass().getName() == \old(symbol.getClass().getName())
this.frequency == \old(frequency)
===========================================================================
six170.HuffmanSymbol.frequency():::ENTER
    Variables: this this.symbol this.symbol.getClass().getName() this.frequency
===========================================================================
six170.HuffmanSymbol.frequency():::EXIT
    Variables: this this.symbol this.symbol.getClass().getName() this.frequency return orig(this) orig(this.symbol) orig(this.symbol.getClass().getName()) orig(this.frequency)
this.symbol == \old(this.symbol)
this.symbol.getClass().getName() == \old(this.symbol.getClass().getName())
this.frequency == \result
\result == \old(this.frequency)
\result >= 1
===========================================================================
six170.HuffmanSymbol.symbol():::ENTER
    Variables: this this.symbol this.symbol.getClass().getName() this.frequency
===========================================================================
six170.HuffmanSymbol.symbol():::EXIT
    Variables: this this.symbol this.symbol.getClass().getName() this.frequency return return.getClass().getName() orig(this) orig(this.symbol) orig(this.symbol.getClass().getName()) orig(this.frequency)
this.symbol == \result
this.symbol.getClass().getName() == \result.getClass().getName()
this.frequency == \old(this.frequency)
\result == \old(this.symbol)
\result.getClass().getName() == \old(this.symbol.getClass().getName())
\result != null
\result.getClass().getName() == java.lang.Character.class.getName()
===========================================================================
six170.HuffmanTree:::OBJECT
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right
((this.left != null) && (this.left.symbol != null) && (this.left.symbol.symbol != null) && (this.right != null) && (this.right.symbol != null) && (this.right.symbol.symbol != null))  ==>  (this.left.symbol.symbol.getClass().getName() == this.right.symbol.symbol.getClass().getName())
(this.symbol != null)  ==>  (this.symbol.symbol != null)
((this.symbol != null) && (this.symbol.symbol != null))  ==>  (this.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(this.symbol != null)  ==>  (this.symbol.frequency >= 1)
((this.left != null) && (this.left.symbol != null))  ==>  (this.left.symbol.symbol != null)
((this.left != null) && (this.left.symbol != null) && (this.left.symbol.symbol != null))  ==>  (this.left.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
((this.left != null) && (this.left.symbol != null))  ==>  (this.left.symbol.frequency >= 1)
((this.right != null) && (this.right.symbol != null))  ==>  (this.right.symbol.symbol != null)
((this.right != null) && (this.right.symbol != null) && (this.right.symbol.symbol != null))  ==>  (this.right.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
((this.right != null) && (this.right.symbol != null))  ==>  (this.right.symbol.frequency >= 1)
((this.left != null) && (this.left.symbol != null) && (this.right != null) && (this.right.symbol != null))  ==>  ((this.left.symbol.frequency >> this.right.symbol.frequency == 0))
((this.left != null) && (this.left.symbol != null) && (this.right != null) && (this.right.symbol != null))  ==>  (this.left.symbol.frequency <= this.right.symbol.frequency)
===========================================================================
six170.HuffmanTree.HuffmanTree(six170.HuffmanSymbol):::ENTER
    Variables: symbol symbol.symbol symbol.symbol.getClass().getName() symbol.frequency
symbol != null
symbol.symbol != null
symbol.symbol.getClass().getName() == java.lang.Character.class.getName()
symbol.frequency >= 1
===========================================================================
six170.HuffmanTree.HuffmanTree(six170.HuffmanSymbol):::EXIT
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right symbol symbol.symbol symbol.symbol.getClass().getName() symbol.frequency orig(symbol) orig(symbol.symbol) orig(symbol.symbol.getClass().getName()) orig(symbol.frequency)
this.symbol == \old(symbol)
this.symbol.symbol == symbol.symbol
this.symbol.symbol.getClass().getName() == symbol.symbol.getClass().getName()
this.symbol.frequency == symbol.frequency
this.left == this.right
symbol.symbol == \old(symbol.symbol)
symbol.symbol.getClass().getName() == \old(symbol.symbol.getClass().getName())
symbol.frequency == \old(symbol.frequency)
this.symbol != null
this.left == null
symbol.symbol != null
symbol.symbol.getClass().getName() == java.lang.Character.class.getName()
symbol.frequency >= 1
===========================================================================
six170.HuffmanTree.HuffmanTree(six170.HuffmanTree, six170.HuffmanTree):::ENTER
    Variables: left left.symbol left.symbol.symbol left.symbol.symbol.getClass().getName() left.symbol.frequency left.left left.left.symbol left.left.left left.left.right left.right left.right.symbol left.right.left left.right.right right right.symbol right.symbol.symbol right.symbol.symbol.getClass().getName() right.symbol.frequency right.left right.left.symbol right.left.left right.left.right right.right right.right.symbol right.right.left right.right.right
((left.symbol != null) && (left.symbol.symbol != null) && (right.symbol != null) && (right.symbol.symbol != null))  ==>  (left.symbol.symbol.getClass().getName() == right.symbol.symbol.getClass().getName())
left != null
(left.symbol != null)  ==>  (left.symbol.symbol != null)
((left.symbol != null) && (left.symbol.symbol != null))  ==>  (left.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(left.symbol != null)  ==>  (left.symbol.frequency >= 1)
right != null
(right.symbol != null)  ==>  (right.symbol.symbol != null)
((right.symbol != null) && (right.symbol.symbol != null))  ==>  (right.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(right.symbol != null)  ==>  (right.symbol.frequency >= 1)
((left.symbol != null) && (right.symbol != null))  ==>  ((left.symbol.frequency >> right.symbol.frequency == 0))
((left.symbol != null) && (right.symbol != null))  ==>  (left.symbol.frequency <= right.symbol.frequency)
===========================================================================
six170.HuffmanTree.HuffmanTree(six170.HuffmanTree, six170.HuffmanTree):::EXIT
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right left left.symbol left.symbol.symbol left.symbol.symbol.getClass().getName() left.symbol.frequency left.left left.left.symbol left.left.left left.left.right left.right left.right.symbol left.right.left left.right.right right right.symbol right.symbol.symbol right.symbol.symbol.getClass().getName() right.symbol.frequency right.left right.left.symbol right.left.left right.left.right right.right right.right.symbol right.right.left right.right.right orig(left) orig(left.symbol) orig(left.symbol.symbol) orig(left.symbol.symbol.getClass().getName()) orig(left.symbol.frequency) orig(left.left) orig(left.left.symbol) orig(left.left.left) orig(left.left.right) orig(left.right) orig(left.right.symbol) orig(left.right.left) orig(left.right.right) orig(right) orig(right.symbol) orig(right.symbol.symbol) orig(right.symbol.symbol.getClass().getName()) orig(right.symbol.frequency) orig(right.left) orig(right.left.symbol) orig(right.left.left) orig(right.left.right) orig(right.right) orig(right.right.symbol) orig(right.right.left) orig(right.right.right)
this.left == \old(left)
this.left.symbol == left.symbol
((this.left.symbol != null) && (left.symbol != null))  ==>  (this.left.symbol.symbol == left.symbol.symbol)
((this.left.symbol != null) && (this.left.symbol.symbol != null) && (left.symbol != null) && (left.symbol.symbol != null))  ==>  (this.left.symbol.symbol.getClass().getName() == left.symbol.symbol.getClass().getName())
((this.left.symbol != null) && (left.symbol != null))  ==>  (this.left.symbol.frequency == left.symbol.frequency)
this.left.left == left.left
((this.left.left != null) && (left.left != null))  ==>  (this.left.left.symbol == left.left.symbol)
((this.left.left != null) && (left.left != null))  ==>  (this.left.left.left == left.left.left)
((this.left.left != null) && (left.left != null))  ==>  (this.left.left.right == left.left.right)
this.left.right == left.right
((this.left.right != null) && (left.right != null))  ==>  (this.left.right.symbol == left.right.symbol)
((this.left.right != null) && (left.right != null))  ==>  (this.left.right.left == left.right.left)
((this.left.right != null) && (left.right != null))  ==>  (this.left.right.right == left.right.right)
this.right == \old(right)
this.right.symbol == right.symbol
((this.right.symbol != null) && (right.symbol != null))  ==>  (this.right.symbol.symbol == right.symbol.symbol)
((this.right.symbol != null) && (this.right.symbol.symbol != null) && (right.symbol != null) && (right.symbol.symbol != null))  ==>  (this.right.symbol.symbol.getClass().getName() == right.symbol.symbol.getClass().getName())
((this.right.symbol != null) && (right.symbol != null))  ==>  (this.right.symbol.frequency == right.symbol.frequency)
this.right.left == right.left
((this.right.left != null) && (right.left != null))  ==>  (this.right.left.symbol == right.left.symbol)
((this.right.left != null) && (right.left != null))  ==>  (this.right.left.left == right.left.left)
((this.right.left != null) && (right.left != null))  ==>  (this.right.left.right == right.left.right)
this.right.right == right.right
((this.right.right != null) && (right.right != null))  ==>  (this.right.right.symbol == right.right.symbol)
((this.right.right != null) && (right.right != null))  ==>  (this.right.right.left == right.right.left)
((this.right.right != null) && (right.right != null))  ==>  (this.right.right.right == right.right.right)
left.symbol == \old(left.symbol)
((left.symbol != null) && (\old(left.symbol) != null))  ==>  (left.symbol.symbol == \old(left.symbol.symbol))
((left.symbol != null) && (left.symbol.symbol != null) && (right.symbol != null) && (right.symbol.symbol != null))  ==>  (left.symbol.symbol.getClass().getName() == right.symbol.symbol.getClass().getName())
((left.symbol != null) && (left.symbol.symbol != null) && (\old(left.symbol) != null) && (\old(left.symbol.symbol) != null))  ==>  (left.symbol.symbol.getClass().getName() == \old(left.symbol.symbol.getClass().getName()))
((left.symbol != null) && (\old(left.symbol) != null))  ==>  (left.symbol.frequency == \old(left.symbol.frequency))
left.left == \old(left.left)
((left.left != null) && (\old(left.left) != null))  ==>  (left.left.symbol == \old(left.left.symbol))
((left.left != null) && (\old(left.left) != null))  ==>  (left.left.left == \old(left.left.left))
((left.left != null) && (\old(left.left) != null))  ==>  (left.left.right == \old(left.left.right))
left.right == \old(left.right)
((left.right != null) && (\old(left.right) != null))  ==>  (left.right.symbol == \old(left.right.symbol))
((left.right != null) && (\old(left.right) != null))  ==>  (left.right.left == \old(left.right.left))
((left.right != null) && (\old(left.right) != null))  ==>  (left.right.right == \old(left.right.right))
right.symbol == \old(right.symbol)
((right.symbol != null) && (\old(right.symbol) != null))  ==>  (right.symbol.symbol == \old(right.symbol.symbol))
((right.symbol != null) && (right.symbol.symbol != null) && (\old(right.symbol) != null) && (\old(right.symbol.symbol) != null))  ==>  (right.symbol.symbol.getClass().getName() == \old(right.symbol.symbol.getClass().getName()))
((right.symbol != null) && (\old(right.symbol) != null))  ==>  (right.symbol.frequency == \old(right.symbol.frequency))
right.left == \old(right.left)
((right.left != null) && (\old(right.left) != null))  ==>  (right.left.symbol == \old(right.left.symbol))
((right.left != null) && (\old(right.left) != null))  ==>  (right.left.left == \old(right.left.left))
((right.left != null) && (\old(right.left) != null))  ==>  (right.left.right == \old(right.left.right))
right.right == \old(right.right)
((right.right != null) && (\old(right.right) != null))  ==>  (right.right.symbol == \old(right.right.symbol))
((right.right != null) && (\old(right.right) != null))  ==>  (right.right.left == \old(right.right.left))
((right.right != null) && (\old(right.right) != null))  ==>  (right.right.right == \old(right.right.right))
this.symbol == null
this.left != null
this.right != null
(left.symbol != null)  ==>  (left.symbol.symbol != null)
((left.symbol != null) && (left.symbol.symbol != null))  ==>  (left.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(left.symbol != null)  ==>  (left.symbol.frequency >= 1)
(right.symbol != null)  ==>  (right.symbol.symbol != null)
((right.symbol != null) && (right.symbol.symbol != null))  ==>  (right.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(right.symbol != null)  ==>  (right.symbol.frequency >= 1)
((left.symbol != null) && (right.symbol != null))  ==>  ((left.symbol.frequency >> right.symbol.frequency == 0))
((left.symbol != null) && (right.symbol != null))  ==>  (left.symbol.frequency <= right.symbol.frequency)
===========================================================================
six170.HuffmanTree.frequency():::ENTER
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right
===========================================================================
six170.HuffmanTree.frequency():::EXIT51
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right return orig(this) orig(this.symbol) orig(this.symbol.symbol) orig(this.symbol.symbol.getClass().getName()) orig(this.symbol.frequency) orig(this.left) orig(this.left.symbol) orig(this.left.symbol.symbol) orig(this.left.symbol.symbol.getClass().getName()) orig(this.left.symbol.frequency) orig(this.left.left) orig(this.left.left.symbol) orig(this.left.left.left) orig(this.left.left.right) orig(this.left.right) orig(this.left.right.symbol) orig(this.left.right.left) orig(this.left.right.right) orig(this.right) orig(this.right.symbol) orig(this.right.symbol.symbol) orig(this.right.symbol.symbol.getClass().getName()) orig(this.right.symbol.frequency) orig(this.right.left) orig(this.right.left.symbol) orig(this.right.left.left) orig(this.right.left.right) orig(this.right.right) orig(this.right.right.symbol) orig(this.right.right.left) orig(this.right.right.right)
assignable this.left.symbol, this.left.symbol.symbol, this.left.symbol.frequency, this.left.left, this.left.left.symbol, this.left.left.left, this.left.left.right, this.left.right, this.left.right.symbol, this.left.right.left, this.left.right.right, this.right.symbol, this.right.symbol.symbol, this.right.symbol.frequency, this.right.left, this.right.left.symbol, this.right.left.left, this.right.left.right, this.right.right, this.right.right.symbol, this.right.right.left, this.right.right.right
this.symbol.symbol == \old(this.symbol.symbol)
this.symbol.symbol.getClass().getName() == \old(this.symbol.symbol.getClass().getName())
this.symbol.frequency == \result
this.left == this.right
this.left == \old(this.right)
\result == \old(this.symbol.frequency)
this.symbol != null
this.symbol.symbol != null
this.symbol.symbol.getClass().getName() == java.lang.Character.class.getName()
this.left == null
===========================================================================
six170.HuffmanTree.frequency():::EXIT53
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right return orig(this) orig(this.symbol) orig(this.symbol.symbol) orig(this.symbol.symbol.getClass().getName()) orig(this.symbol.frequency) orig(this.left) orig(this.left.symbol) orig(this.left.symbol.symbol) orig(this.left.symbol.symbol.getClass().getName()) orig(this.left.symbol.frequency) orig(this.left.left) orig(this.left.left.symbol) orig(this.left.left.left) orig(this.left.left.right) orig(this.left.right) orig(this.left.right.symbol) orig(this.left.right.left) orig(this.left.right.right) orig(this.right) orig(this.right.symbol) orig(this.right.symbol.symbol) orig(this.right.symbol.symbol.getClass().getName()) orig(this.right.symbol.frequency) orig(this.right.left) orig(this.right.left.symbol) orig(this.right.left.left) orig(this.right.left.right) orig(this.right.right) orig(this.right.right.symbol) orig(this.right.right.left) orig(this.right.right.right)
assignable this.symbol.symbol, this.symbol.frequency
this.left.symbol == \old(this.left.symbol)
((this.left.symbol != null) && (\old(this.left.symbol) != null))  ==>  (this.left.symbol.symbol == \old(this.left.symbol.symbol))
((this.left.symbol != null) && (this.left.symbol.symbol != null) && (this.right.symbol != null) && (this.right.symbol.symbol != null))  ==>  (this.left.symbol.symbol.getClass().getName() == this.right.symbol.symbol.getClass().getName())
((this.left.symbol != null) && (this.left.symbol.symbol != null) && (\old(this.left.symbol) != null) && (\old(this.left.symbol.symbol) != null))  ==>  (this.left.symbol.symbol.getClass().getName() == \old(this.left.symbol.symbol.getClass().getName()))
((this.left.symbol != null) && (\old(this.left.symbol) != null))  ==>  (this.left.symbol.frequency == \old(this.left.symbol.frequency))
this.left.left == \old(this.left.left)
((this.left.left != null) && (\old(this.left.left) != null))  ==>  (this.left.left.symbol == \old(this.left.left.symbol))
((this.left.left != null) && (\old(this.left.left) != null))  ==>  (this.left.left.left == \old(this.left.left.left))
((this.left.left != null) && (\old(this.left.left) != null))  ==>  (this.left.left.right == \old(this.left.left.right))
this.left.right == \old(this.left.right)
((this.left.right != null) && (\old(this.left.right) != null))  ==>  (this.left.right.symbol == \old(this.left.right.symbol))
((this.left.right != null) && (\old(this.left.right) != null))  ==>  (this.left.right.left == \old(this.left.right.left))
((this.left.right != null) && (\old(this.left.right) != null))  ==>  (this.left.right.right == \old(this.left.right.right))
this.right.symbol == \old(this.right.symbol)
((this.right.symbol != null) && (\old(this.right.symbol) != null))  ==>  (this.right.symbol.symbol == \old(this.right.symbol.symbol))
((this.right.symbol != null) && (this.right.symbol.symbol != null) && (\old(this.right.symbol) != null) && (\old(this.right.symbol.symbol) != null))  ==>  (this.right.symbol.symbol.getClass().getName() == \old(this.right.symbol.symbol.getClass().getName()))
((this.right.symbol != null) && (\old(this.right.symbol) != null))  ==>  (this.right.symbol.frequency == \old(this.right.symbol.frequency))
this.right.left == \old(this.right.left)
((this.right.left != null) && (\old(this.right.left) != null))  ==>  (this.right.left.symbol == \old(this.right.left.symbol))
((this.right.left != null) && (\old(this.right.left) != null))  ==>  (this.right.left.left == \old(this.right.left.left))
((this.right.left != null) && (\old(this.right.left) != null))  ==>  (this.right.left.right == \old(this.right.left.right))
this.right.right == \old(this.right.right)
((this.right.right != null) && (\old(this.right.right) != null))  ==>  (this.right.right.symbol == \old(this.right.right.symbol))
((this.right.right != null) && (\old(this.right.right) != null))  ==>  (this.right.right.left == \old(this.right.right.left))
((this.right.right != null) && (\old(this.right.right) != null))  ==>  (this.right.right.right == \old(this.right.right.right))
this.symbol == null
this.left != null
(this.left.symbol != null)  ==>  (this.left.symbol.symbol != null)
((this.left.symbol != null) && (this.left.symbol.symbol != null))  ==>  (this.left.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(this.left.symbol != null)  ==>  (this.left.symbol.frequency >= 1)
this.right != null
(this.right.symbol != null)  ==>  (this.right.symbol.symbol != null)
((this.right.symbol != null) && (this.right.symbol.symbol != null))  ==>  (this.right.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(this.right.symbol != null)  ==>  (this.right.symbol.frequency >= 1)
\result >= 2
((this.left.symbol != null) && (this.right.symbol != null))  ==>  ((this.left.symbol.frequency >> this.right.symbol.frequency == 0))
((this.left.symbol != null) && (this.right.symbol != null))  ==>  (this.left.symbol.frequency <= this.right.symbol.frequency)
(this.left.symbol != null)  ==>  (this.left.symbol.frequency < \result)
(this.right.symbol != null)  ==>  (this.right.symbol.frequency < \result)
((this.left.symbol != null) && (this.right.symbol != null))  ==>  (this.left.symbol.frequency + this.right.symbol.frequency - \result == 0)
===========================================================================
six170.HuffmanTree.frequency():::EXIT
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right return orig(this) orig(this.symbol) orig(this.symbol.symbol) orig(this.symbol.symbol.getClass().getName()) orig(this.symbol.frequency) orig(this.left) orig(this.left.symbol) orig(this.left.symbol.symbol) orig(this.left.symbol.symbol.getClass().getName()) orig(this.left.symbol.frequency) orig(this.left.left) orig(this.left.left.symbol) orig(this.left.left.left) orig(this.left.left.right) orig(this.left.right) orig(this.left.right.symbol) orig(this.left.right.left) orig(this.left.right.right) orig(this.right) orig(this.right.symbol) orig(this.right.symbol.symbol) orig(this.right.symbol.symbol.getClass().getName()) orig(this.right.symbol.frequency) orig(this.right.left) orig(this.right.left.symbol) orig(this.right.left.left) orig(this.right.left.right) orig(this.right.right) orig(this.right.right.symbol) orig(this.right.right.left) orig(this.right.right.right)
this.symbol == \old(this.symbol)
((this.symbol != null) && (\old(this.symbol) != null))  ==>  (this.symbol.symbol == \old(this.symbol.symbol))
((this.symbol != null) && (this.symbol.symbol != null) && (\old(this.symbol) != null) && (\old(this.symbol.symbol) != null))  ==>  (this.symbol.symbol.getClass().getName() == \old(this.symbol.symbol.getClass().getName()))
(this.symbol != null)  ==>  (this.symbol.frequency == \result)
((this.symbol != null) && (\old(this.symbol) != null))  ==>  (this.symbol.frequency == \old(this.symbol.frequency))
this.left == \old(this.left)
((this.left != null) && (\old(this.left) != null))  ==>  (this.left.symbol == \old(this.left.symbol))
((this.left != null) && (this.left.symbol != null) && (\old(this.left) != null) && (\old(this.left.symbol) != null))  ==>  (this.left.symbol.symbol == \old(this.left.symbol.symbol))
((this.left != null) && (this.left.symbol != null) && (this.left.symbol.symbol != null) && (\old(this.left) != null) && (\old(this.left.symbol) != null) && (\old(this.left.symbol.symbol) != null))  ==>  (this.left.symbol.symbol.getClass().getName() == \old(this.left.symbol.symbol.getClass().getName()))
((this.left != null) && (this.left.symbol != null) && (\old(this.left) != null) && (\old(this.left.symbol) != null))  ==>  (this.left.symbol.frequency == \old(this.left.symbol.frequency))
((this.left != null) && (\old(this.left) != null))  ==>  (this.left.left == \old(this.left.left))
((this.left != null) && (this.left.left != null) && (\old(this.left) != null) && (\old(this.left.left) != null))  ==>  (this.left.left.symbol == \old(this.left.left.symbol))
((this.left != null) && (this.left.left != null) && (\old(this.left) != null) && (\old(this.left.left) != null))  ==>  (this.left.left.left == \old(this.left.left.left))
((this.left != null) && (this.left.left != null) && (\old(this.left) != null) && (\old(this.left.left) != null))  ==>  (this.left.left.right == \old(this.left.left.right))
((this.left != null) && (\old(this.left) != null))  ==>  (this.left.right == \old(this.left.right))
((this.left != null) && (this.left.right != null) && (\old(this.left) != null) && (\old(this.left.right) != null))  ==>  (this.left.right.symbol == \old(this.left.right.symbol))
((this.left != null) && (this.left.right != null) && (\old(this.left) != null) && (\old(this.left.right) != null))  ==>  (this.left.right.left == \old(this.left.right.left))
((this.left != null) && (this.left.right != null) && (\old(this.left) != null) && (\old(this.left.right) != null))  ==>  (this.left.right.right == \old(this.left.right.right))
this.right == \old(this.right)
((this.right != null) && (\old(this.right) != null))  ==>  (this.right.symbol == \old(this.right.symbol))
((this.right != null) && (this.right.symbol != null) && (\old(this.right) != null) && (\old(this.right.symbol) != null))  ==>  (this.right.symbol.symbol == \old(this.right.symbol.symbol))
((this.right != null) && (this.right.symbol != null) && (this.right.symbol.symbol != null) && (\old(this.right) != null) && (\old(this.right.symbol) != null) && (\old(this.right.symbol.symbol) != null))  ==>  (this.right.symbol.symbol.getClass().getName() == \old(this.right.symbol.symbol.getClass().getName()))
((this.right != null) && (this.right.symbol != null) && (\old(this.right) != null) && (\old(this.right.symbol) != null))  ==>  (this.right.symbol.frequency == \old(this.right.symbol.frequency))
((this.right != null) && (\old(this.right) != null))  ==>  (this.right.left == \old(this.right.left))
((this.right != null) && (this.right.left != null) && (\old(this.right) != null) && (\old(this.right.left) != null))  ==>  (this.right.left.symbol == \old(this.right.left.symbol))
((this.right != null) && (this.right.left != null) && (\old(this.right) != null) && (\old(this.right.left) != null))  ==>  (this.right.left.left == \old(this.right.left.left))
((this.right != null) && (this.right.left != null) && (\old(this.right) != null) && (\old(this.right.left) != null))  ==>  (this.right.left.right == \old(this.right.left.right))
((this.right != null) && (\old(this.right) != null))  ==>  (this.right.right == \old(this.right.right))
((this.right != null) && (this.right.right != null) && (\old(this.right) != null) && (\old(this.right.right) != null))  ==>  (this.right.right.symbol == \old(this.right.right.symbol))
((this.right != null) && (this.right.right != null) && (\old(this.right) != null) && (\old(this.right.right) != null))  ==>  (this.right.right.left == \old(this.right.right.left))
((this.right != null) && (this.right.right != null) && (\old(this.right) != null) && (\old(this.right.right) != null))  ==>  (this.right.right.right == \old(this.right.right.right))
(this.symbol != null)  <==>  (this.left == null)
(this.symbol != null)  <==>  (this.right == null)
(this.symbol != null)  ==>  (\result >= 1)
(this.symbol != null)  ==>  (this.left == this.right)
(this.symbol != null)  ==>  (this.symbol.frequency == \result)
(this.symbol != null)  ==>  (this.symbol.frequency >= 1)
(this.symbol != null)  ==>  (this.symbol.symbol != null)
(this.symbol != null)  ==>  (this.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(this.symbol == null)  <==>  (this.left != null)
(this.symbol == null)  <==>  (this.right != null)
(this.symbol == null)  ==>  ((this.left.symbol.frequency >> this.right.symbol.frequency == 0))
(this.symbol == null)  ==>  (\result >= 2)
(this.symbol == null)  ==>  (this.left.symbol.frequency + this.right.symbol.frequency - \result == 0)
(this.symbol == null)  ==>  (this.left.symbol.frequency < \result)
(this.symbol == null)  ==>  (this.left.symbol.frequency <= this.right.symbol.frequency)
(this.symbol == null)  ==>  (this.left.symbol.frequency >= 1)
(this.symbol == null)  ==>  (this.left.symbol.symbol != null)
(this.symbol == null)  ==>  (this.left.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(this.symbol == null)  ==>  (this.left.symbol.symbol.getClass().getName() == this.right.symbol.symbol.getClass().getName())
(this.symbol == null)  ==>  (this.right.symbol.frequency < \result)
(this.symbol == null)  ==>  (this.right.symbol.frequency >= 1)
(this.symbol == null)  ==>  (this.right.symbol.symbol != null)
(this.symbol == null)  ==>  (this.right.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
\result >= 1
((this.left != null) && (this.left.symbol != null))  ==>  (this.left.symbol.frequency < \result)
((this.right != null) && (this.right.symbol != null))  ==>  (this.right.symbol.frequency < \result)
((this.left != null) && (this.left.symbol != null) && (this.right != null) && (this.right.symbol != null))  ==>  (this.left.symbol.frequency + this.right.symbol.frequency - \result == 0)
===========================================================================
six170.HuffmanTree.left():::ENTER
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right
===========================================================================
six170.HuffmanTree.left():::EXIT
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right return return.symbol return.symbol.symbol return.symbol.symbol.getClass().getName() return.symbol.frequency return.left return.left.symbol return.left.left return.left.right return.right return.right.symbol return.right.left return.right.right orig(this) orig(this.symbol) orig(this.symbol.symbol) orig(this.symbol.symbol.getClass().getName()) orig(this.symbol.frequency) orig(this.left) orig(this.left.symbol) orig(this.left.symbol.symbol) orig(this.left.symbol.symbol.getClass().getName()) orig(this.left.symbol.frequency) orig(this.left.left) orig(this.left.left.symbol) orig(this.left.left.left) orig(this.left.left.right) orig(this.left.right) orig(this.left.right.symbol) orig(this.left.right.left) orig(this.left.right.right) orig(this.right) orig(this.right.symbol) orig(this.right.symbol.symbol) orig(this.right.symbol.symbol.getClass().getName()) orig(this.right.symbol.frequency) orig(this.right.left) orig(this.right.left.symbol) orig(this.right.left.left) orig(this.right.left.right) orig(this.right.right) orig(this.right.right.symbol) orig(this.right.right.left) orig(this.right.right.right)
this.symbol == \old(this.symbol)
((this.symbol != null) && (\old(this.symbol) != null))  ==>  (this.symbol.symbol == \old(this.symbol.symbol))
((this.symbol != null) && (this.symbol.symbol != null) && (\old(this.symbol) != null) && (\old(this.symbol.symbol) != null))  ==>  (this.symbol.symbol.getClass().getName() == \old(this.symbol.symbol.getClass().getName()))
((this.symbol != null) && (\old(this.symbol) != null))  ==>  (this.symbol.frequency == \old(this.symbol.frequency))
this.left == \result
((this.left != null) && (\result != null))  ==>  (this.left.symbol == \result.symbol)
((this.left != null) && (this.left.symbol != null) && (\result != null) && (\result.symbol != null))  ==>  (this.left.symbol.symbol == \result.symbol.symbol)
((this.left != null) && (this.left.symbol != null) && (this.left.symbol.symbol != null) && (\result != null) && (\result.symbol != null) && (\result.symbol.symbol != null))  ==>  (this.left.symbol.symbol.getClass().getName() == \result.symbol.symbol.getClass().getName())
((this.left != null) && (this.left.symbol != null) && (\result != null) && (\result.symbol != null))  ==>  (this.left.symbol.frequency == \result.symbol.frequency)
((this.left != null) && (\result != null))  ==>  (this.left.left == \result.left)
((this.left != null) && (this.left.left != null) && (\result != null) && (\result.left != null))  ==>  (this.left.left.symbol == \result.left.symbol)
((this.left != null) && (this.left.left != null) && (\result != null) && (\result.left != null))  ==>  (this.left.left.left == \result.left.left)
((this.left != null) && (this.left.left != null) && (\result != null) && (\result.left != null))  ==>  (this.left.left.right == \result.left.right)
((this.left != null) && (\result != null))  ==>  (this.left.right == \result.right)
((this.left != null) && (this.left.right != null) && (\result != null) && (\result.right != null))  ==>  (this.left.right.symbol == \result.right.symbol)
((this.left != null) && (this.left.right != null) && (\result != null) && (\result.right != null))  ==>  (this.left.right.left == \result.right.left)
((this.left != null) && (this.left.right != null) && (\result != null) && (\result.right != null))  ==>  (this.left.right.right == \result.right.right)
this.right == \old(this.right)
((this.right != null) && (\old(this.right) != null))  ==>  (this.right.symbol == \old(this.right.symbol))
((this.right != null) && (this.right.symbol != null) && (\old(this.right) != null) && (\old(this.right.symbol) != null))  ==>  (this.right.symbol.symbol == \old(this.right.symbol.symbol))
((this.right != null) && (this.right.symbol != null) && (this.right.symbol.symbol != null) && (\result != null) && (\result.symbol != null) && (\result.symbol.symbol != null))  ==>  (this.right.symbol.symbol.getClass().getName() == \result.symbol.symbol.getClass().getName())
((this.right != null) && (this.right.symbol != null) && (this.right.symbol.symbol != null) && (\old(this.right) != null) && (\old(this.right.symbol) != null) && (\old(this.right.symbol.symbol) != null))  ==>  (this.right.symbol.symbol.getClass().getName() == \old(this.right.symbol.symbol.getClass().getName()))
((this.right != null) && (this.right.symbol != null) && (\old(this.right) != null) && (\old(this.right.symbol) != null))  ==>  (this.right.symbol.frequency == \old(this.right.symbol.frequency))
((this.right != null) && (\old(this.right) != null))  ==>  (this.right.left == \old(this.right.left))
((this.right != null) && (this.right.left != null) && (\old(this.right) != null) && (\old(this.right.left) != null))  ==>  (this.right.left.symbol == \old(this.right.left.symbol))
((this.right != null) && (this.right.left != null) && (\old(this.right) != null) && (\old(this.right.left) != null))  ==>  (this.right.left.left == \old(this.right.left.left))
((this.right != null) && (this.right.left != null) && (\old(this.right) != null) && (\old(this.right.left) != null))  ==>  (this.right.left.right == \old(this.right.left.right))
((this.right != null) && (\old(this.right) != null))  ==>  (this.right.right == \old(this.right.right))
((this.right != null) && (this.right.right != null) && (\old(this.right) != null) && (\old(this.right.right) != null))  ==>  (this.right.right.symbol == \old(this.right.right.symbol))
((this.right != null) && (this.right.right != null) && (\old(this.right) != null) && (\old(this.right.right) != null))  ==>  (this.right.right.left == \old(this.right.right.left))
((this.right != null) && (this.right.right != null) && (\old(this.right) != null) && (\old(this.right.right) != null))  ==>  (this.right.right.right == \old(this.right.right.right))
\result == \old(this.left)
((\result != null) && (\old(this.left) != null))  ==>  (\result.symbol == \old(this.left.symbol))
((\result != null) && (\result.symbol != null) && (\old(this.left) != null) && (\old(this.left.symbol) != null))  ==>  (\result.symbol.symbol == \old(this.left.symbol.symbol))
((\result != null) && (\result.symbol != null) && (\result.symbol.symbol != null) && (\old(this.left) != null) && (\old(this.left.symbol) != null) && (\old(this.left.symbol.symbol) != null))  ==>  (\result.symbol.symbol.getClass().getName() == \old(this.left.symbol.symbol.getClass().getName()))
((\result != null) && (\result.symbol != null) && (\old(this.left) != null) && (\old(this.left.symbol) != null))  ==>  (\result.symbol.frequency == \old(this.left.symbol.frequency))
((\result != null) && (\old(this.left) != null))  ==>  (\result.left == \old(this.left.left))
((\result != null) && (\result.left != null) && (\old(this.left) != null) && (\old(this.left.left) != null))  ==>  (\result.left.symbol == \old(this.left.left.symbol))
((\result != null) && (\result.left != null) && (\old(this.left) != null) && (\old(this.left.left) != null))  ==>  (\result.left.left == \old(this.left.left.left))
((\result != null) && (\result.left != null) && (\old(this.left) != null) && (\old(this.left.left) != null))  ==>  (\result.left.right == \old(this.left.left.right))
((\result != null) && (\old(this.left) != null))  ==>  (\result.right == \old(this.left.right))
((\result != null) && (\result.right != null) && (\old(this.left) != null) && (\old(this.left.right) != null))  ==>  (\result.right.symbol == \old(this.left.right.symbol))
((\result != null) && (\result.right != null) && (\old(this.left) != null) && (\old(this.left.right) != null))  ==>  (\result.right.left == \old(this.left.right.left))
((\result != null) && (\result.right != null) && (\old(this.left) != null) && (\old(this.left.right) != null))  ==>  (\result.right.right == \old(this.left.right.right))
((\result != null) && (\result.symbol != null))  ==>  (\result.symbol.symbol != null)
((\result != null) && (\result.symbol != null) && (\result.symbol.symbol != null))  ==>  (\result.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
((\result != null) && (\result.symbol != null))  ==>  (\result.symbol.frequency >= 1)
((this.right != null) && (this.right.symbol != null) && (\result != null) && (\result.symbol != null))  ==>  ((\result.symbol.frequency >> this.right.symbol.frequency == 0))
((this.right != null) && (this.right.symbol != null) && (\result != null) && (\result.symbol != null))  ==>  (this.right.symbol.frequency >= \result.symbol.frequency)
===========================================================================
six170.HuffmanTree.right():::ENTER
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right
===========================================================================
six170.HuffmanTree.right():::EXIT
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right return return.symbol return.symbol.symbol return.symbol.symbol.getClass().getName() return.symbol.frequency return.left return.left.symbol return.left.left return.left.right return.right return.right.symbol return.right.left return.right.right orig(this) orig(this.symbol) orig(this.symbol.symbol) orig(this.symbol.symbol.getClass().getName()) orig(this.symbol.frequency) orig(this.left) orig(this.left.symbol) orig(this.left.symbol.symbol) orig(this.left.symbol.symbol.getClass().getName()) orig(this.left.symbol.frequency) orig(this.left.left) orig(this.left.left.symbol) orig(this.left.left.left) orig(this.left.left.right) orig(this.left.right) orig(this.left.right.symbol) orig(this.left.right.left) orig(this.left.right.right) orig(this.right) orig(this.right.symbol) orig(this.right.symbol.symbol) orig(this.right.symbol.symbol.getClass().getName()) orig(this.right.symbol.frequency) orig(this.right.left) orig(this.right.left.symbol) orig(this.right.left.left) orig(this.right.left.right) orig(this.right.right) orig(this.right.right.symbol) orig(this.right.right.left) orig(this.right.right.right)
this.symbol == \old(this.symbol)
((this.symbol != null) && (\old(this.symbol) != null))  ==>  (this.symbol.symbol == \old(this.symbol.symbol))
((this.symbol != null) && (this.symbol.symbol != null) && (\old(this.symbol) != null) && (\old(this.symbol.symbol) != null))  ==>  (this.symbol.symbol.getClass().getName() == \old(this.symbol.symbol.getClass().getName()))
((this.symbol != null) && (\old(this.symbol) != null))  ==>  (this.symbol.frequency == \old(this.symbol.frequency))
this.left == \old(this.left)
((this.left != null) && (\old(this.left) != null))  ==>  (this.left.symbol == \old(this.left.symbol))
((this.left != null) && (this.left.symbol != null) && (\old(this.left) != null) && (\old(this.left.symbol) != null))  ==>  (this.left.symbol.symbol == \old(this.left.symbol.symbol))
((this.left != null) && (this.left.symbol != null) && (this.left.symbol.symbol != null) && (\result != null) && (\result.symbol != null) && (\result.symbol.symbol != null))  ==>  (this.left.symbol.symbol.getClass().getName() == \result.symbol.symbol.getClass().getName())
((this.left != null) && (this.left.symbol != null) && (this.left.symbol.symbol != null) && (\old(this.left) != null) && (\old(this.left.symbol) != null) && (\old(this.left.symbol.symbol) != null))  ==>  (this.left.symbol.symbol.getClass().getName() == \old(this.left.symbol.symbol.getClass().getName()))
((this.left != null) && (this.left.symbol != null) && (\old(this.left) != null) && (\old(this.left.symbol) != null))  ==>  (this.left.symbol.frequency == \old(this.left.symbol.frequency))
((this.left != null) && (\old(this.left) != null))  ==>  (this.left.left == \old(this.left.left))
((this.left != null) && (this.left.left != null) && (\old(this.left) != null) && (\old(this.left.left) != null))  ==>  (this.left.left.symbol == \old(this.left.left.symbol))
((this.left != null) && (this.left.left != null) && (\old(this.left) != null) && (\old(this.left.left) != null))  ==>  (this.left.left.left == \old(this.left.left.left))
((this.left != null) && (this.left.left != null) && (\old(this.left) != null) && (\old(this.left.left) != null))  ==>  (this.left.left.right == \old(this.left.left.right))
((this.left != null) && (\old(this.left) != null))  ==>  (this.left.right == \old(this.left.right))
((this.left != null) && (this.left.right != null) && (\old(this.left) != null) && (\old(this.left.right) != null))  ==>  (this.left.right.symbol == \old(this.left.right.symbol))
((this.left != null) && (this.left.right != null) && (\old(this.left) != null) && (\old(this.left.right) != null))  ==>  (this.left.right.left == \old(this.left.right.left))
((this.left != null) && (this.left.right != null) && (\old(this.left) != null) && (\old(this.left.right) != null))  ==>  (this.left.right.right == \old(this.left.right.right))
this.right == \result
((this.right != null) && (\result != null))  ==>  (this.right.symbol == \result.symbol)
((this.right != null) && (this.right.symbol != null) && (\result != null) && (\result.symbol != null))  ==>  (this.right.symbol.symbol == \result.symbol.symbol)
((this.right != null) && (this.right.symbol != null) && (this.right.symbol.symbol != null) && (\result != null) && (\result.symbol != null) && (\result.symbol.symbol != null))  ==>  (this.right.symbol.symbol.getClass().getName() == \result.symbol.symbol.getClass().getName())
((this.right != null) && (this.right.symbol != null) && (\result != null) && (\result.symbol != null))  ==>  (this.right.symbol.frequency == \result.symbol.frequency)
((this.right != null) && (\result != null))  ==>  (this.right.left == \result.left)
((this.right != null) && (this.right.left != null) && (\result != null) && (\result.left != null))  ==>  (this.right.left.symbol == \result.left.symbol)
((this.right != null) && (this.right.left != null) && (\result != null) && (\result.left != null))  ==>  (this.right.left.left == \result.left.left)
((this.right != null) && (this.right.left != null) && (\result != null) && (\result.left != null))  ==>  (this.right.left.right == \result.left.right)
((this.right != null) && (\result != null))  ==>  (this.right.right == \result.right)
((this.right != null) && (this.right.right != null) && (\result != null) && (\result.right != null))  ==>  (this.right.right.symbol == \result.right.symbol)
((this.right != null) && (this.right.right != null) && (\result != null) && (\result.right != null))  ==>  (this.right.right.left == \result.right.left)
((this.right != null) && (this.right.right != null) && (\result != null) && (\result.right != null))  ==>  (this.right.right.right == \result.right.right)
\result == \old(this.right)
((\result != null) && (\old(this.right) != null))  ==>  (\result.symbol == \old(this.right.symbol))
((\result != null) && (\result.symbol != null) && (\old(this.right) != null) && (\old(this.right.symbol) != null))  ==>  (\result.symbol.symbol == \old(this.right.symbol.symbol))
((\result != null) && (\result.symbol != null) && (\result.symbol.symbol != null) && (\old(this.right) != null) && (\old(this.right.symbol) != null) && (\old(this.right.symbol.symbol) != null))  ==>  (\result.symbol.symbol.getClass().getName() == \old(this.right.symbol.symbol.getClass().getName()))
((\result != null) && (\result.symbol != null) && (\old(this.right) != null) && (\old(this.right.symbol) != null))  ==>  (\result.symbol.frequency == \old(this.right.symbol.frequency))
((\result != null) && (\old(this.right) != null))  ==>  (\result.left == \old(this.right.left))
((\result != null) && (\result.left != null) && (\old(this.right) != null) && (\old(this.right.left) != null))  ==>  (\result.left.symbol == \old(this.right.left.symbol))
((\result != null) && (\result.left != null) && (\old(this.right) != null) && (\old(this.right.left) != null))  ==>  (\result.left.left == \old(this.right.left.left))
((\result != null) && (\result.left != null) && (\old(this.right) != null) && (\old(this.right.left) != null))  ==>  (\result.left.right == \old(this.right.left.right))
((\result != null) && (\old(this.right) != null))  ==>  (\result.right == \old(this.right.right))
((\result != null) && (\result.right != null) && (\old(this.right) != null) && (\old(this.right.right) != null))  ==>  (\result.right.symbol == \old(this.right.right.symbol))
((\result != null) && (\result.right != null) && (\old(this.right) != null) && (\old(this.right.right) != null))  ==>  (\result.right.left == \old(this.right.right.left))
((\result != null) && (\result.right != null) && (\old(this.right) != null) && (\old(this.right.right) != null))  ==>  (\result.right.right == \old(this.right.right.right))
((\result != null) && (\result.symbol != null))  ==>  (\result.symbol.symbol != null)
((\result != null) && (\result.symbol != null) && (\result.symbol.symbol != null))  ==>  (\result.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
((\result != null) && (\result.symbol != null))  ==>  (\result.symbol.frequency >= 1)
((this.left != null) && (this.left.symbol != null) && (\result != null) && (\result.symbol != null))  ==>  ((this.left.symbol.frequency >> \result.symbol.frequency == 0))
((this.left != null) && (this.left.symbol != null) && (\result != null) && (\result.symbol != null))  ==>  (this.left.symbol.frequency <= \result.symbol.frequency)
===========================================================================
six170.HuffmanTree.symbol():::ENTER
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right
===========================================================================
six170.HuffmanTree.symbol():::EXIT63
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right return return.getClass().getName() orig(this) orig(this.symbol) orig(this.symbol.symbol) orig(this.symbol.symbol.getClass().getName()) orig(this.symbol.frequency) orig(this.left) orig(this.left.symbol) orig(this.left.symbol.symbol) orig(this.left.symbol.symbol.getClass().getName()) orig(this.left.symbol.frequency) orig(this.left.left) orig(this.left.left.symbol) orig(this.left.left.left) orig(this.left.left.right) orig(this.left.right) orig(this.left.right.symbol) orig(this.left.right.left) orig(this.left.right.right) orig(this.right) orig(this.right.symbol) orig(this.right.symbol.symbol) orig(this.right.symbol.symbol.getClass().getName()) orig(this.right.symbol.frequency) orig(this.right.left) orig(this.right.left.symbol) orig(this.right.left.left) orig(this.right.left.right) orig(this.right.right) orig(this.right.right.symbol) orig(this.right.right.left) orig(this.right.right.right)
assignable this.symbol.symbol, this.symbol.frequency
this.left.symbol == \old(this.left.symbol)
((this.left.symbol != null) && (\old(this.left.symbol) != null))  ==>  (this.left.symbol.symbol == \old(this.left.symbol.symbol))
((this.left.symbol != null) && (this.left.symbol.symbol != null) && (this.right.symbol != null) && (this.right.symbol.symbol != null))  ==>  (this.left.symbol.symbol.getClass().getName() == this.right.symbol.symbol.getClass().getName())
((this.left.symbol != null) && (this.left.symbol.symbol != null) && (\old(this.left.symbol) != null) && (\old(this.left.symbol.symbol) != null))  ==>  (this.left.symbol.symbol.getClass().getName() == \old(this.left.symbol.symbol.getClass().getName()))
((this.left.symbol != null) && (\old(this.left.symbol) != null))  ==>  (this.left.symbol.frequency == \old(this.left.symbol.frequency))
this.left.left == \old(this.left.left)
((this.left.left != null) && (\old(this.left.left) != null))  ==>  (this.left.left.symbol == \old(this.left.left.symbol))
((this.left.left != null) && (\old(this.left.left) != null))  ==>  (this.left.left.left == \old(this.left.left.left))
((this.left.left != null) && (\old(this.left.left) != null))  ==>  (this.left.left.right == \old(this.left.left.right))
this.left.right == \old(this.left.right)
((this.left.right != null) && (\old(this.left.right) != null))  ==>  (this.left.right.symbol == \old(this.left.right.symbol))
((this.left.right != null) && (\old(this.left.right) != null))  ==>  (this.left.right.left == \old(this.left.right.left))
((this.left.right != null) && (\old(this.left.right) != null))  ==>  (this.left.right.right == \old(this.left.right.right))
this.right.symbol == \old(this.right.symbol)
((this.right.symbol != null) && (\old(this.right.symbol) != null))  ==>  (this.right.symbol.symbol == \old(this.right.symbol.symbol))
((this.right.symbol != null) && (this.right.symbol.symbol != null) && (\old(this.right.symbol) != null) && (\old(this.right.symbol.symbol) != null))  ==>  (this.right.symbol.symbol.getClass().getName() == \old(this.right.symbol.symbol.getClass().getName()))
((this.right.symbol != null) && (\old(this.right.symbol) != null))  ==>  (this.right.symbol.frequency == \old(this.right.symbol.frequency))
this.right.left == \old(this.right.left)
((this.right.left != null) && (\old(this.right.left) != null))  ==>  (this.right.left.symbol == \old(this.right.left.symbol))
((this.right.left != null) && (\old(this.right.left) != null))  ==>  (this.right.left.left == \old(this.right.left.left))
((this.right.left != null) && (\old(this.right.left) != null))  ==>  (this.right.left.right == \old(this.right.left.right))
this.right.right == \old(this.right.right)
((this.right.right != null) && (\old(this.right.right) != null))  ==>  (this.right.right.symbol == \old(this.right.right.symbol))
((this.right.right != null) && (\old(this.right.right) != null))  ==>  (this.right.right.left == \old(this.right.right.left))
((this.right.right != null) && (\old(this.right.right) != null))  ==>  (this.right.right.right == \old(this.right.right.right))
this.symbol == null
this.left != null
(this.left.symbol != null)  ==>  (this.left.symbol.symbol != null)
((this.left.symbol != null) && (this.left.symbol.symbol != null))  ==>  (this.left.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(this.left.symbol != null)  ==>  (this.left.symbol.frequency >= 1)
this.right != null
(this.right.symbol != null)  ==>  (this.right.symbol.symbol != null)
((this.right.symbol != null) && (this.right.symbol.symbol != null))  ==>  (this.right.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(this.right.symbol != null)  ==>  (this.right.symbol.frequency >= 1)
\result == null
((this.left.symbol != null) && (this.right.symbol != null))  ==>  ((this.left.symbol.frequency >> this.right.symbol.frequency == 0))
((this.left.symbol != null) && (this.right.symbol != null))  ==>  (this.left.symbol.frequency <= this.right.symbol.frequency)
===========================================================================
six170.HuffmanTree.symbol():::EXIT65
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right return return.getClass().getName() orig(this) orig(this.symbol) orig(this.symbol.symbol) orig(this.symbol.symbol.getClass().getName()) orig(this.symbol.frequency) orig(this.left) orig(this.left.symbol) orig(this.left.symbol.symbol) orig(this.left.symbol.symbol.getClass().getName()) orig(this.left.symbol.frequency) orig(this.left.left) orig(this.left.left.symbol) orig(this.left.left.left) orig(this.left.left.right) orig(this.left.right) orig(this.left.right.symbol) orig(this.left.right.left) orig(this.left.right.right) orig(this.right) orig(this.right.symbol) orig(this.right.symbol.symbol) orig(this.right.symbol.symbol.getClass().getName()) orig(this.right.symbol.frequency) orig(this.right.left) orig(this.right.left.symbol) orig(this.right.left.left) orig(this.right.left.right) orig(this.right.right) orig(this.right.right.symbol) orig(this.right.right.left) orig(this.right.right.right)
assignable this.left.symbol, this.left.symbol.symbol, this.left.symbol.frequency, this.left.left, this.left.left.symbol, this.left.left.left, this.left.left.right, this.left.right, this.left.right.symbol, this.left.right.left, this.left.right.right, this.right.symbol, this.right.symbol.symbol, this.right.symbol.frequency, this.right.left, this.right.left.symbol, this.right.left.left, this.right.left.right, this.right.right, this.right.right.symbol, this.right.right.left, this.right.right.right
this.symbol.symbol == \result
this.symbol.symbol.getClass().getName() == \result.getClass().getName()
this.symbol.frequency == \old(this.symbol.frequency)
this.left == this.right
this.left == \old(this.right)
\result == \old(this.symbol.symbol)
\result.getClass().getName() == \old(this.symbol.symbol.getClass().getName())
this.symbol != null
this.symbol.frequency >= 1
this.left == null
\result != null
\result.getClass().getName() == java.lang.Character.class.getName()
===========================================================================
six170.HuffmanTree.symbol():::EXIT
    Variables: this this.symbol this.symbol.symbol this.symbol.symbol.getClass().getName() this.symbol.frequency this.left this.left.symbol this.left.symbol.symbol this.left.symbol.symbol.getClass().getName() this.left.symbol.frequency this.left.left this.left.left.symbol this.left.left.left this.left.left.right this.left.right this.left.right.symbol this.left.right.left this.left.right.right this.right this.right.symbol this.right.symbol.symbol this.right.symbol.symbol.getClass().getName() this.right.symbol.frequency this.right.left this.right.left.symbol this.right.left.left this.right.left.right this.right.right this.right.right.symbol this.right.right.left this.right.right.right return return.getClass().getName() orig(this) orig(this.symbol) orig(this.symbol.symbol) orig(this.symbol.symbol.getClass().getName()) orig(this.symbol.frequency) orig(this.left) orig(this.left.symbol) orig(this.left.symbol.symbol) orig(this.left.symbol.symbol.getClass().getName()) orig(this.left.symbol.frequency) orig(this.left.left) orig(this.left.left.symbol) orig(this.left.left.left) orig(this.left.left.right) orig(this.left.right) orig(this.left.right.symbol) orig(this.left.right.left) orig(this.left.right.right) orig(this.right) orig(this.right.symbol) orig(this.right.symbol.symbol) orig(this.right.symbol.symbol.getClass().getName()) orig(this.right.symbol.frequency) orig(this.right.left) orig(this.right.left.symbol) orig(this.right.left.left) orig(this.right.left.right) orig(this.right.right) orig(this.right.right.symbol) orig(this.right.right.left) orig(this.right.right.right)
this.symbol == \old(this.symbol)
(this.symbol != null)  ==>  (this.symbol.symbol == \result)
((this.symbol != null) && (\old(this.symbol) != null))  ==>  (this.symbol.symbol == \old(this.symbol.symbol))
((this.symbol != null) && (this.symbol.symbol != null) && (\result != null))  ==>  (this.symbol.symbol.getClass().getName() == \result.getClass().getName())
((this.symbol != null) && (\old(this.symbol) != null))  ==>  (this.symbol.frequency == \old(this.symbol.frequency))
this.left == \old(this.left)
((this.left != null) && (\old(this.left) != null))  ==>  (this.left.symbol == \old(this.left.symbol))
((this.left != null) && (this.left.symbol != null) && (\old(this.left) != null) && (\old(this.left.symbol) != null))  ==>  (this.left.symbol.symbol == \old(this.left.symbol.symbol))
((this.left != null) && (this.left.symbol != null) && (this.left.symbol.symbol != null) && (\old(this.left) != null) && (\old(this.left.symbol) != null) && (\old(this.left.symbol.symbol) != null))  ==>  (this.left.symbol.symbol.getClass().getName() == \old(this.left.symbol.symbol.getClass().getName()))
((this.left != null) && (this.left.symbol != null) && (\old(this.left) != null) && (\old(this.left.symbol) != null))  ==>  (this.left.symbol.frequency == \old(this.left.symbol.frequency))
((this.left != null) && (\old(this.left) != null))  ==>  (this.left.left == \old(this.left.left))
((this.left != null) && (this.left.left != null) && (\old(this.left) != null) && (\old(this.left.left) != null))  ==>  (this.left.left.symbol == \old(this.left.left.symbol))
((this.left != null) && (this.left.left != null) && (\old(this.left) != null) && (\old(this.left.left) != null))  ==>  (this.left.left.left == \old(this.left.left.left))
((this.left != null) && (this.left.left != null) && (\old(this.left) != null) && (\old(this.left.left) != null))  ==>  (this.left.left.right == \old(this.left.left.right))
((this.left != null) && (\old(this.left) != null))  ==>  (this.left.right == \old(this.left.right))
((this.left != null) && (this.left.right != null) && (\old(this.left) != null) && (\old(this.left.right) != null))  ==>  (this.left.right.symbol == \old(this.left.right.symbol))
((this.left != null) && (this.left.right != null) && (\old(this.left) != null) && (\old(this.left.right) != null))  ==>  (this.left.right.left == \old(this.left.right.left))
((this.left != null) && (this.left.right != null) && (\old(this.left) != null) && (\old(this.left.right) != null))  ==>  (this.left.right.right == \old(this.left.right.right))
this.right == \old(this.right)
((this.right != null) && (\old(this.right) != null))  ==>  (this.right.symbol == \old(this.right.symbol))
((this.right != null) && (this.right.symbol != null) && (\old(this.right) != null) && (\old(this.right.symbol) != null))  ==>  (this.right.symbol.symbol == \old(this.right.symbol.symbol))
((this.right != null) && (this.right.symbol != null) && (this.right.symbol.symbol != null) && (\old(this.right) != null) && (\old(this.right.symbol) != null) && (\old(this.right.symbol.symbol) != null))  ==>  (this.right.symbol.symbol.getClass().getName() == \old(this.right.symbol.symbol.getClass().getName()))
((this.right != null) && (this.right.symbol != null) && (\old(this.right) != null) && (\old(this.right.symbol) != null))  ==>  (this.right.symbol.frequency == \old(this.right.symbol.frequency))
((this.right != null) && (\old(this.right) != null))  ==>  (this.right.left == \old(this.right.left))
((this.right != null) && (this.right.left != null) && (\old(this.right) != null) && (\old(this.right.left) != null))  ==>  (this.right.left.symbol == \old(this.right.left.symbol))
((this.right != null) && (this.right.left != null) && (\old(this.right) != null) && (\old(this.right.left) != null))  ==>  (this.right.left.left == \old(this.right.left.left))
((this.right != null) && (this.right.left != null) && (\old(this.right) != null) && (\old(this.right.left) != null))  ==>  (this.right.left.right == \old(this.right.left.right))
((this.right != null) && (\old(this.right) != null))  ==>  (this.right.right == \old(this.right.right))
((this.right != null) && (this.right.right != null) && (\old(this.right) != null) && (\old(this.right.right) != null))  ==>  (this.right.right.symbol == \old(this.right.right.symbol))
((this.right != null) && (this.right.right != null) && (\old(this.right) != null) && (\old(this.right.right) != null))  ==>  (this.right.right.left == \old(this.right.right.left))
((this.right != null) && (this.right.right != null) && (\old(this.right) != null) && (\old(this.right.right) != null))  ==>  (this.right.right.right == \old(this.right.right.right))
((\result != null) && (\old(this.symbol) != null) && (\old(this.symbol.symbol) != null))  ==>  (\result.getClass().getName() == \old(this.symbol.symbol.getClass().getName()))
(this.symbol != null)  <==>  (\result != null)
(this.symbol != null)  <==>  (this.left == null)
(this.symbol != null)  <==>  (this.right == null)
(this.symbol != null)  ==>  (\result.getClass().getName() == java.lang.Character.class.getName())
(this.symbol != null)  ==>  (this.left == this.right)
(this.symbol != null)  ==>  (this.symbol.frequency >= 1)
(this.symbol != null)  ==>  (this.symbol.symbol != null)
(this.symbol != null)  ==>  (this.symbol.symbol == \result)
(this.symbol == null)  <==>  (\result == null)
(this.symbol == null)  <==>  (this.left != null)
(this.symbol == null)  <==>  (this.right != null)
(this.symbol == null)  ==>  ((this.left.symbol.frequency >> this.right.symbol.frequency == 0))
(this.symbol == null)  ==>  (this.left.symbol.frequency <= this.right.symbol.frequency)
(this.symbol == null)  ==>  (this.left.symbol.frequency >= 1)
(this.symbol == null)  ==>  (this.left.symbol.symbol != null)
(this.symbol == null)  ==>  (this.left.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(this.symbol == null)  ==>  (this.left.symbol.symbol.getClass().getName() == this.right.symbol.symbol.getClass().getName())
(this.symbol == null)  ==>  (this.right.symbol.frequency >= 1)
(this.symbol == null)  ==>  (this.right.symbol.symbol != null)
(this.symbol == null)  ==>  (this.right.symbol.symbol.getClass().getName() == java.lang.Character.class.getName())
(\result != null)  ==>  (\result.getClass().getName() == java.lang.Character.class.getName())
