// Declaration file written by daikon.dcomp

VarComparability
implicit
DECLARE
misc.Precedence:::CLASS

DECLARE
misc.Precedence:::OBJECT
this
misc.Precedence # isNonNull=true, isParam=true
hashcode
2
this.i
int # declaringClassPackageName=misc
int
3


DECLARE
misc.Precedence.Precedence():::ENTER

DECLARE
misc.Precedence.Precedence():::EXIT3
this
misc.Precedence # isNonNull=true, isParam=true
hashcode
2
this.i
int # declaringClassPackageName=misc
int
3


DECLARE
misc.Precedence.main(java.lang.String[]):::ENTER
args
java.lang.String[] # isParam=true
hashcode
2
args.getClass().getName()
java.lang.Class
java.lang.String
1
args[..]
java.lang.String[]
hashcode[]
3[5]
args[..].toString
java.lang.String[]
java.lang.String[]
4[6]

DECLARE
misc.Precedence.main(java.lang.String[]):::EXIT10
args
java.lang.String[] # isParam=true
hashcode
2
args.getClass().getName()
java.lang.Class
java.lang.String
1
args[..]
java.lang.String[]
hashcode[]
3[5]
args[..].toString
java.lang.String[]
java.lang.String[]
4[6]


DECLARE
misc.Precedence.lets_calculate(int):::ENTER
this
misc.Precedence # isNonNull=true, isParam=true
hashcode
3
this.i
int # declaringClassPackageName=misc
int
2
j
int # isParam=true
int
2

DECLARE
misc.Precedence.lets_calculate(int):::EXIT18
this
misc.Precedence # isNonNull=true, isParam=true
hashcode
3
this.i
int # declaringClassPackageName=misc
int
2
j
int # isParam=true
int
2
return
int
int
2


DECLARE
misc.Precedence.equals(java.lang.Object):::ENTER
this
misc.Precedence # isNonNull=true, isParam=true
hashcode
3
this.i
int # declaringClassPackageName=misc
int
4
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
misc.Precedence.equals(java.lang.Object):::EXIT1
this
misc.Precedence # isNonNull=true, isParam=true
hashcode
4
this.i
int # declaringClassPackageName=misc
int
5
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1
return
boolean
boolean
3


DECLARE
misc.Precedence.equals_dcomp_instrumented(java.lang.Object):::ENTER
this
misc.Precedence # isNonNull=true, isParam=true
hashcode
3
this.i
int # declaringClassPackageName=misc
int
4
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
misc.Precedence.equals_dcomp_instrumented(java.lang.Object):::EXIT1
this
misc.Precedence # isNonNull=true, isParam=true
hashcode
4
this.i
int # declaringClassPackageName=misc
int
5
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1
return
boolean
boolean
3

