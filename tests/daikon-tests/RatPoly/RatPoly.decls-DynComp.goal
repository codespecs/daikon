// Declarations for PolyCalc.RatNum
// Declarations written 2020-11-18T09:11:39.370 by daikon.DynComp

decl-version 2.0
var-comparability implicit

ppt PolyCalc.RatNum:::CLASS
ppt-type class

ppt PolyCalc.RatNum:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.RatNum(int):::ENTER
ppt-type enter
variable n
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatNum.RatNum(int):::EXIT45
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable n
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatNum.RatNum(int, int):::ENTER
ppt-type enter
variable n
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable d
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatNum.RatNum(int, int):::EXIT55
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable n
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable d
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatNum.RatNum(int, int):::EXIT67
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable n
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable d
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatNum.isNaN():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.isNaN():::EXIT71
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 2

ppt PolyCalc.RatNum.isNegative():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.isNegative():::EXIT77
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 2

ppt PolyCalc.RatNum.isPositive():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.isPositive():::EXIT83
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 2

ppt PolyCalc.RatNum.compareTo(PolyCalc.RatNum):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable rn
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 2
variable rn.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable rn.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.compareTo(PolyCalc.RatNum):::EXIT94
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable rn
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 3
variable rn.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable rn.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 2

ppt PolyCalc.RatNum.compareTo(PolyCalc.RatNum):::EXIT96
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable rn
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 3
variable rn.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable rn.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 2

ppt PolyCalc.RatNum.compareTo(PolyCalc.RatNum):::EXIT98
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable rn
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 3
variable rn.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable rn.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 2

ppt PolyCalc.RatNum.compareTo(PolyCalc.RatNum):::EXIT101
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable rn
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 3
variable rn.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable rn.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 2

ppt PolyCalc.RatNum.approx():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.approx():::EXIT117
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable return
  var-kind return
  dec-type double
  rep-type double
  comparability 2

ppt PolyCalc.RatNum.approx():::EXIT120
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable return
  var-kind return
  dec-type double
  rep-type double
  comparability 2

ppt PolyCalc.RatNum.unparse():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.unparse():::EXIT133
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 3

ppt PolyCalc.RatNum.unparse():::EXIT135
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 3

ppt PolyCalc.RatNum.unparse():::EXIT137
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 3

ppt PolyCalc.RatNum.negate():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.negate():::EXIT147
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable return
  var-kind return
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 2
variable return.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable return.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.add(PolyCalc.RatNum):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable arg
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 2
variable arg.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable arg.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.add(PolyCalc.RatNum):::EXIT156
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable arg
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 2
variable arg.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable arg.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable return
  var-kind return
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable return.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable return.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.sub(PolyCalc.RatNum):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable arg
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 2
variable arg.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable arg.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.sub(PolyCalc.RatNum):::EXIT166
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable arg
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 2
variable arg.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable arg.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable return
  var-kind return
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable return.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable return.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.mul(PolyCalc.RatNum):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable arg
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 2
variable arg.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable arg.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.mul(PolyCalc.RatNum):::EXIT175
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable arg
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 2
variable arg.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable arg.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable return
  var-kind return
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable return.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable return.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.div(PolyCalc.RatNum):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable arg
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 2
variable arg.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable arg.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.div(PolyCalc.RatNum):::EXIT187
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable arg
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 2
variable arg.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable arg.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable return
  var-kind return
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 2
variable return.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable return.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.div(PolyCalc.RatNum):::EXIT189
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable arg
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 2
variable arg.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable arg.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable return
  var-kind return
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 2
variable return.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable return.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.gcd(int, int):::ENTER
ppt-type enter
variable _a
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable _b
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatNum.gcd(int, int):::EXIT203
ppt-type subexit
variable _a
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable _b
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 2

ppt PolyCalc.RatNum.gcd(int, int):::EXIT209
ppt-type subexit
variable _a
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable _b
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 2

ppt PolyCalc.RatNum.hashCode():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.hashCode():::EXIT217
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 2

ppt PolyCalc.RatNum.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt PolyCalc.RatNum.equals(java.lang.Object):::EXIT230
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt PolyCalc.RatNum.equals(java.lang.Object):::EXIT232
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt PolyCalc.RatNum.equals(java.lang.Object):::EXIT235
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt PolyCalc.RatNum.debugPrint():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatNum.debugPrint():::EXIT241
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 3

ppt PolyCalc.RatNum.parse(java.lang.String):::ENTER
ppt-type enter
variable ratStr
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable ratStr.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args ratStr
  flags synthetic to_string
  comparability 3

ppt PolyCalc.RatNum.parse(java.lang.String):::EXIT264
ppt-type subexit
variable ratStr
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable ratStr.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args ratStr
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable return.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable return.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5

ppt PolyCalc.RatNum.parse(java.lang.String):::EXIT267
ppt-type subexit
variable ratStr
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable ratStr.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args ratStr
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable return.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable return.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5

ppt PolyCalc.RatNum.parse(java.lang.String):::EXIT273
ppt-type subexit
variable ratStr
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable ratStr.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args ratStr
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable return.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable return.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5

ppt PolyCalc.RatNum.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt PolyCalc.RatNum.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable this.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt PolyCalc.RatPoly:::CLASS
ppt-type class

ppt PolyCalc.RatPoly:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]

ppt PolyCalc.RatPoly.RatPoly():::ENTER
ppt-type enter

ppt PolyCalc.RatPoly.RatPoly():::EXIT57
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]

ppt PolyCalc.RatPoly.RatPoly(int, int):::ENTER
ppt-type enter
variable c
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable e
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3

ppt PolyCalc.RatPoly.RatPoly(int, int):::EXIT68
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 5
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[8]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable c
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable e
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3

ppt PolyCalc.RatPoly.RatPoly(PolyCalc.RatTermVec):::ENTER
ppt-type enter
variable rt
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 2
variable rt.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable rt.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[5]
variable rt.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args rt.wrapped[]
  flags synthetic classname non_null
  comparability 1[6]

ppt PolyCalc.RatPoly.RatPoly(PolyCalc.RatTermVec):::EXIT77
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 2
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable rt
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 2
variable rt.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable rt.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[8]
variable rt.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args rt.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]

ppt PolyCalc.RatPoly.isNaN():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]

ppt PolyCalc.RatPoly.isNaN():::EXIT86
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 4
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 2

ppt PolyCalc.RatPoly.isNaN():::EXIT90
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 4
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 2

ppt PolyCalc.RatPoly.degree():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]

ppt PolyCalc.RatPoly.degree():::EXIT102
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 4
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 2

ppt PolyCalc.RatPoly.degree():::EXIT105
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 4
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 2

ppt PolyCalc.RatPoly.coeff(int):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 4
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable deg
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatPoly.coeff(int):::EXIT120
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 5
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[8]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable deg
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable return.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable return.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2

ppt PolyCalc.RatPoly.coeff(int):::EXIT124
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 5
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[8]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable deg
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable return.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable return.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2

ppt PolyCalc.RatPoly.unparse():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]

ppt PolyCalc.RatPoly.unparse():::EXIT165
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 5
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[8]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 3

ppt PolyCalc.RatPoly.unparse():::EXIT196
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 5
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[8]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 3

ppt PolyCalc.RatPoly.appendTerm(java.lang.StringBuffer, PolyCalc.RatTerm):::ENTER
ppt-type enter
variable sb
  var-kind variable
  dec-type java.lang.StringBuffer
  rep-type hashcode
  flags is_param
  comparability 5
variable rt
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 2
variable rt.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable rt.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable rt.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable rt.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 4

ppt PolyCalc.RatPoly.appendTerm(java.lang.StringBuffer, PolyCalc.RatTerm):::EXIT212
ppt-type subexit
variable sb
  var-kind variable
  dec-type java.lang.StringBuffer
  rep-type hashcode
  flags is_param
  comparability 5
variable rt
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 2
variable rt.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable rt.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable rt.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable rt.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 4

ppt PolyCalc.RatPoly.appendTerm(java.lang.StringBuffer, PolyCalc.RatTerm):::EXIT229
ppt-type subexit
variable sb
  var-kind variable
  dec-type java.lang.StringBuffer
  rep-type hashcode
  flags is_param
  comparability 5
variable rt
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 2
variable rt.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable rt.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable rt.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable rt.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 4

ppt PolyCalc.RatPoly.scaleBy(PolyCalc.RatTerm):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 6
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[8]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable scalar
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 2
variable scalar.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable scalar.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable scalar.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable scalar.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 4

ppt PolyCalc.RatPoly.scaleBy(PolyCalc.RatTerm):::EXIT238
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 9
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 10
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[11]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[12]
variable scalar
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 6
variable scalar.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 7
variable scalar.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 8
variable scalar.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 8
variable scalar.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 8
variable return
  var-kind return
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  comparability 2
variable return.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable return.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable return.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[13]
variable return.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[14]

ppt PolyCalc.RatPoly.scaleCoeff(PolyCalc.RatTermVec, PolyCalc.RatNum):::ENTER
ppt-type enter
variable vec
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 4
variable vec.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable vec.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable vec.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args vec.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable scalar
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 2
variable scalar.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable scalar.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatPoly.scaleCoeff(PolyCalc.RatTermVec, PolyCalc.RatNum):::EXIT255
ppt-type subexit
variable vec
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 4
variable vec.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable vec.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable vec.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args vec.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable scalar
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 2
variable scalar.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable scalar.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatPoly.incremExpt(PolyCalc.RatTermVec, int):::ENTER
ppt-type enter
variable vec
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 3
variable vec.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable vec.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable vec.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args vec.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable degree
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatPoly.incremExpt(PolyCalc.RatTermVec, int):::EXIT271
ppt-type subexit
variable vec
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 3
variable vec.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable vec.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable vec.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args vec.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable degree
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatPoly.sortedAdd(PolyCalc.RatTermVec, PolyCalc.RatTerm):::ENTER
ppt-type enter
variable vec
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 5
variable vec.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable vec.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[7]
variable vec.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args vec.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable newTerm
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 2
variable newTerm.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable newTerm.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable newTerm.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable newTerm.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 4

ppt PolyCalc.RatPoly.sortedAdd(PolyCalc.RatTermVec, PolyCalc.RatTerm):::EXIT308
ppt-type subexit
variable vec
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 5
variable vec.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable vec.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[7]
variable vec.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args vec.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable newTerm
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 2
variable newTerm.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable newTerm.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable newTerm.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable newTerm.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 4

ppt PolyCalc.RatPoly.sortedAdd(PolyCalc.RatTermVec, PolyCalc.RatTerm):::EXIT312
ppt-type subexit
variable vec
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 5
variable vec.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable vec.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[7]
variable vec.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args vec.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable newTerm
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 2
variable newTerm.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable newTerm.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable newTerm.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable newTerm.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 4

ppt PolyCalc.RatPoly.sortedAdd(PolyCalc.RatTermVec, PolyCalc.RatTerm):::EXIT319
ppt-type subexit
variable vec
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 5
variable vec.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable vec.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[7]
variable vec.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args vec.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable newTerm
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 2
variable newTerm.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable newTerm.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable newTerm.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable newTerm.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 4

ppt PolyCalc.RatPoly.sortedAdd(PolyCalc.RatTermVec, PolyCalc.RatTerm):::EXIT328
ppt-type subexit
variable vec
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 5
variable vec.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable vec.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[7]
variable vec.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args vec.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable newTerm
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 2
variable newTerm.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable newTerm.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable newTerm.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable newTerm.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 4

ppt PolyCalc.RatPoly.assertSorted(PolyCalc.RatTermVec):::ENTER
ppt-type enter
variable v
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 2
variable v.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable v.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[5]
variable v.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args v.wrapped[]
  flags synthetic classname non_null
  comparability 1[6]

ppt PolyCalc.RatPoly.assertSorted(PolyCalc.RatTermVec):::EXIT342
ppt-type subexit
variable v
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 2
variable v.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable v.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[5]
variable v.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args v.wrapped[]
  flags synthetic classname non_null
  comparability 1[6]

ppt PolyCalc.RatPoly.add(PolyCalc.RatPoly):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[8]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]

ppt PolyCalc.RatPoly.add(PolyCalc.RatPoly):::EXIT350
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[8]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable return
  var-kind return
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  comparability 2
variable return.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable return.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable return.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[10]
variable return.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[11]

ppt PolyCalc.RatPoly.add(PolyCalc.RatPoly):::EXIT354
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[8]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable return
  var-kind return
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  comparability 2
variable return.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable return.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable return.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[10]
variable return.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[11]

ppt PolyCalc.RatPoly.add(PolyCalc.RatPoly):::EXIT363
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[8]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable return
  var-kind return
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  comparability 2
variable return.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable return.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable return.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[10]
variable return.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[11]

ppt PolyCalc.RatPoly.sub(PolyCalc.RatPoly):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[8]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]

ppt PolyCalc.RatPoly.sub(PolyCalc.RatPoly):::EXIT372
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[8]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable return
  var-kind return
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  comparability 2
variable return.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable return.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable return.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[10]
variable return.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[11]

ppt PolyCalc.RatPoly.sub(PolyCalc.RatPoly):::EXIT376
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[8]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable return
  var-kind return
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  comparability 2
variable return.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable return.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable return.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[10]
variable return.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[11]

ppt PolyCalc.RatPoly.sub(PolyCalc.RatPoly):::EXIT379
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[8]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable return
  var-kind return
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  comparability 2
variable return.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable return.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable return.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[10]
variable return.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[11]

ppt PolyCalc.RatPoly.mul(PolyCalc.RatPoly):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[8]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]

ppt PolyCalc.RatPoly.mul(PolyCalc.RatPoly):::EXIT390
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[8]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable return
  var-kind return
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  comparability 2
variable return.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable return.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable return.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[10]
variable return.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[11]

ppt PolyCalc.RatPoly.mul(PolyCalc.RatPoly):::EXIT394
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[8]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable return
  var-kind return
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  comparability 2
variable return.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable return.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable return.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[10]
variable return.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[11]

ppt PolyCalc.RatPoly.mul(PolyCalc.RatPoly):::EXIT404
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[8]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable return
  var-kind return
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  comparability 2
variable return.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable return.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable return.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[10]
variable return.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[11]

ppt PolyCalc.RatPoly.div(PolyCalc.RatPoly):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[8]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]

ppt PolyCalc.RatPoly.div(PolyCalc.RatPoly):::EXIT435
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[10]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[11]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[12]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[13]
variable return
  var-kind return
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  comparability 6
variable return.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 7
variable return.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable return.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[14]
variable return.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[15]

ppt PolyCalc.RatPoly.div(PolyCalc.RatPoly):::EXIT438
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[10]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[11]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[12]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[13]
variable return
  var-kind return
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  comparability 6
variable return.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 7
variable return.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable return.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[14]
variable return.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[15]

ppt PolyCalc.RatPoly.divAndRem(PolyCalc.RatPoly):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 7
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 8
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 9[10]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[11]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[12]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[13]

ppt PolyCalc.RatPoly.divAndRem(PolyCalc.RatPoly):::EXIT503
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 10
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 11
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 9
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 12[13]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[14]
variable p
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param
  comparability 2
variable p.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable p.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable p.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[15]
variable p.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args p.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[16]
variable return
  var-kind return
  dec-type PolyCalc.RatPoly[]
  rep-type hashcode
  comparability 6
variable return.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args return
  flags synthetic classname non_null
  comparability 1
variable return[..]
  var-kind array
  array 1
  dec-type PolyCalc.RatPoly[]
  rep-type hashcode[]
  comparability 7[17]
variable return[..].terms
  var-kind field terms
  array 1
  dec-type PolyCalc.RatTermVec[]
  rep-type hashcode[]
  comparability 8[18]
variable return[..].terms.wrapped
  var-kind field wrapped
  array 1
  dec-type java.util.ArrayList[]
  rep-type hashcode[]
  comparability 9[19]

ppt PolyCalc.RatPoly.containsNaN(PolyCalc.RatTermVec):::ENTER
ppt-type enter
variable vec
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 2
variable vec.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable vec.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[5]
variable vec.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args vec.wrapped[]
  flags synthetic classname non_null
  comparability 1[6]

ppt PolyCalc.RatPoly.containsNaN(PolyCalc.RatTermVec):::EXIT510
ppt-type subexit
variable vec
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 3
variable vec.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable vec.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable vec.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args vec.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 2

ppt PolyCalc.RatPoly.containsNaN(PolyCalc.RatTermVec):::EXIT513
ppt-type subexit
variable vec
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 3
variable vec.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable vec.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable vec.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args vec.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 2

ppt PolyCalc.RatPoly.findTermIndex(PolyCalc.RatTermVec, int):::ENTER
ppt-type enter
variable ts
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 3
variable ts.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable ts.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable ts.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args ts.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable expt
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatPoly.findTermIndex(PolyCalc.RatTermVec, int):::EXIT521
ppt-type subexit
variable ts
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 4
variable ts.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable ts.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable ts.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args ts.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable expt
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatPoly.findTermIndex(PolyCalc.RatTermVec, int):::EXIT523
ppt-type subexit
variable ts
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 4
variable ts.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable ts.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable ts.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args ts.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable expt
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatPoly.findTermIndex(PolyCalc.RatTermVec, int):::EXIT526
ppt-type subexit
variable ts
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 4
variable ts.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable ts.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable ts.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args ts.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable expt
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 3

ppt PolyCalc.RatPoly.hintedGet(PolyCalc.RatTermVec, int, int):::ENTER
ppt-type enter
variable ts
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 4
variable ts.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable ts.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable ts.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args ts.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable i
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable expt
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatPoly.hintedGet(PolyCalc.RatTermVec, int, int):::EXIT534
ppt-type subexit
variable ts
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 6
variable ts.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable ts.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[8]
variable ts.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args ts.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable i
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable expt
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  comparability 4
variable return.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 5
variable return.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable return.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable return.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 2

ppt PolyCalc.RatPoly.hintedGet(PolyCalc.RatTermVec, int, int):::EXIT537
ppt-type subexit
variable ts
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 6
variable ts.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable ts.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[8]
variable ts.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args ts.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable i
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3
variable expt
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  comparability 4
variable return.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 5
variable return.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 2
variable return.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 2
variable return.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 2

ppt PolyCalc.RatPoly.replaceExpt(PolyCalc.RatTerm, PolyCalc.RatTermVec, int):::ENTER
ppt-type enter
variable term
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 3
variable term.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable term.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable term.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5
variable term.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 5
variable ts
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 6
variable ts.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable ts.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 3[8]
variable ts.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args ts.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable index
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatPoly.replaceExpt(PolyCalc.RatTerm, PolyCalc.RatTermVec, int):::EXIT558
ppt-type subexit
variable term
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 3
variable term.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable term.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable term.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5
variable term.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 5
variable ts
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param
  comparability 6
variable ts.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable ts.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 3[8]
variable ts.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args ts.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable index
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatPoly.negate():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]

ppt PolyCalc.RatPoly.negate():::EXIT567
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 7
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 8[9]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[10]
variable return
  var-kind return
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  comparability 2
variable return.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable return.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable return.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[11]
variable return.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[12]

ppt PolyCalc.RatPoly.eval(double):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 4
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable d
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 2

ppt PolyCalc.RatPoly.eval(double):::EXIT581
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 5
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[8]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable d
  var-kind variable
  dec-type double
  rep-type double
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type double
  rep-type double
  comparability 3

ppt PolyCalc.RatPoly.parse(java.lang.String):::ENTER
ppt-type enter
variable polyStr
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable polyStr.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args polyStr
  flags synthetic to_string
  comparability 3

ppt PolyCalc.RatPoly.parse(java.lang.String):::EXIT673
ppt-type subexit
variable polyStr
  var-kind variable
  dec-type java.lang.String
  rep-type hashcode
  flags is_param
  comparability 2
variable polyStr.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args polyStr
  flags synthetic to_string
  comparability 3
variable return
  var-kind return
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  comparability 4
variable return.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 5
variable return.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable return.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[8]
variable return.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]

ppt PolyCalc.RatPoly.checkRep():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]

ppt PolyCalc.RatPoly.checkRep():::EXIT689
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 3
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]

ppt PolyCalc.RatPoly.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 4
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt PolyCalc.RatPoly.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 5
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[8]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt PolyCalc.RatPoly.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 4
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt PolyCalc.RatPoly.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatPoly
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.terms
  var-kind field terms
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 5
variable this.terms.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.terms.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 7[8]
variable this.terms.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.terms.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt PolyCalc.RatTermVec:::CLASS
ppt-type class

ppt PolyCalc.RatTermVec:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[5]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[6]

ppt PolyCalc.RatTermVec.RatTermVec():::ENTER
ppt-type enter

ppt PolyCalc.RatTermVec.RatTermVec():::EXIT27
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[5]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[6]

ppt PolyCalc.RatTermVec.size():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[5]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[6]

ppt PolyCalc.RatTermVec.size():::EXIT30
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable return
  var-kind return
  dec-type int
  rep-type int
  comparability 2

ppt PolyCalc.RatTermVec.get(int):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable index
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatTermVec.get(int):::EXIT39
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 3[8]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable index
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2
variable return
  var-kind return
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  comparability 3
variable return.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable return.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable return.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5
variable return.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 5

ppt PolyCalc.RatTermVec.addElement(PolyCalc.RatTerm):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[7]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable t
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 2
variable t.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable t.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable t.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable t.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 4

ppt PolyCalc.RatTermVec.addElement(PolyCalc.RatTerm):::EXIT50
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 6
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 2[7]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable t
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 2
variable t.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable t.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable t.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable t.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 4

ppt PolyCalc.RatTermVec.insert(PolyCalc.RatTerm, int):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 3[8]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable t
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 3
variable t.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable t.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable t.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5
variable t.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 5
variable index
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatTermVec.insert(PolyCalc.RatTerm, int):::EXIT64
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 3[8]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable t
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 3
variable t.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable t.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable t.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5
variable t.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 5
variable index
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatTermVec.remove(int):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable index
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatTermVec.remove(int):::EXIT78
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable index
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatTermVec.set(PolyCalc.RatTerm, int):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 3[8]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable t
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 3
variable t.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable t.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable t.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5
variable t.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 5
variable index
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatTermVec.set(PolyCalc.RatTerm, int):::EXIT89
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 6
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 7
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 3[8]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]
variable t
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param
  comparability 3
variable t.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable t.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable t.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5
variable t.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 5
variable index
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 2

ppt PolyCalc.RatTermVec.copy():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[5]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[6]

ppt PolyCalc.RatTermVec.copy():::EXIT101
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 5
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[6]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable return
  var-kind return
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  comparability 2
variable return.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable return.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[8]
variable return.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args return.wrapped[]
  flags synthetic classname non_null
  comparability 1[9]

ppt PolyCalc.RatTermVec.printDebug():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 3
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 4[5]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[6]

ppt PolyCalc.RatTermVec.printDebug():::EXIT106
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 3

ppt PolyCalc.RatTermVec.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt PolyCalc.RatTermVec.equals(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt PolyCalc.RatTermVec.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 4
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 5[6]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[7]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt PolyCalc.RatTermVec.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTermVec
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.wrapped
  var-kind field wrapped
  dec-type java.util.ArrayList
  rep-type hashcode
  comparability 5
variable this.wrapped[..]
  var-kind array
  array 1
  dec-type java.util.ArrayList
  rep-type hashcode[]
  comparability 6[7]
variable this.wrapped[..].getClass().getName()
  var-kind function getClass().getName()
  array 1
  dec-type java.lang.Class[]
  rep-type java.lang.String[]
  function-args this.wrapped[]
  flags synthetic classname non_null
  comparability 1[8]
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt PolyCalc.RatTerm:::CLASS
ppt-type class

ppt PolyCalc.RatTerm:::OBJECT
ppt-type object
variable this
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable this.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable this.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable this.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 4

ppt PolyCalc.RatTerm.RatTerm(PolyCalc.RatNum, int):::ENTER
ppt-type enter
variable c
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 2
variable c.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable c.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable e
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3

ppt PolyCalc.RatTerm.RatTerm(PolyCalc.RatNum, int):::EXIT33
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 2
variable this.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable this.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable this.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 3
variable c
  var-kind variable
  dec-type PolyCalc.RatNum
  rep-type hashcode
  flags is_param
  comparability 2
variable c.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 3
variable c.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 3
variable e
  var-kind variable
  dec-type int
  rep-type int
  flags is_param
  comparability 3

ppt PolyCalc.RatTerm.equals(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable this.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable this.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5
variable this.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 5
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt PolyCalc.RatTerm.equals(java.lang.Object):::EXIT41
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 5
variable this.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 6
variable this.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 6
variable this.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 6
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt PolyCalc.RatTerm.equals(java.lang.Object):::EXIT43
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 5
variable this.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 6
variable this.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 6
variable this.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 6
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

ppt PolyCalc.RatTerm.debugPrint():::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param non_null
  comparability 2
variable this.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 3
variable this.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 4
variable this.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 4
variable this.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 4

ppt PolyCalc.RatTerm.debugPrint():::EXIT49
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 5
variable this.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 6
variable this.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 6
variable this.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 6
variable return
  var-kind return
  dec-type java.lang.String
  rep-type hashcode
  comparability 2
variable return.toString
  var-kind function toString()
  dec-type java.lang.String
  rep-type java.lang.String
  function-args return
  flags synthetic to_string
  comparability 3

ppt PolyCalc.RatTerm.equals_dcomp_instrumented(java.lang.Object):::ENTER
ppt-type enter
variable this
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param non_null
  comparability 3
variable this.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 4
variable this.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 5
variable this.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 5
variable this.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 5
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1

ppt PolyCalc.RatTerm.equals_dcomp_instrumented(java.lang.Object):::EXIT1
ppt-type subexit
variable this
  var-kind variable
  dec-type PolyCalc.RatTerm
  rep-type hashcode
  flags is_param non_null
  comparability 4
variable this.coeff
  var-kind field coeff
  dec-type PolyCalc.RatNum
  rep-type hashcode
  comparability 5
variable this.coeff.numer
  var-kind field numer
  dec-type int
  rep-type int
  comparability 6
variable this.coeff.denom
  var-kind field denom
  dec-type int
  rep-type int
  comparability 6
variable this.expt
  var-kind field expt
  dec-type int
  rep-type int
  comparability 6
variable obj
  var-kind variable
  dec-type java.lang.Object
  rep-type hashcode
  flags is_param
  comparability 2
variable obj.getClass().getName()
  var-kind function getClass().getName()
  dec-type java.lang.Class
  rep-type java.lang.String
  function-args obj
  flags synthetic classname non_null
  comparability 1
variable return
  var-kind return
  dec-type boolean
  rep-type boolean
  comparability 3

