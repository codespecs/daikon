
Variable sets for PolyCalc.RatNum.<init>(int n) enter
  [1] [Parameter n]
Variable sets for PolyCalc.RatNum.<init>(int n) exit
  [3] [Parameter n, Field denom, Field numer]
  [1] [this]

Variable sets for PolyCalc.RatNum.<init>(int n, int d) enter
  [2] [Parameter d, Parameter n]
Variable sets for PolyCalc.RatNum.<init>(int n, int d) exit
  [4] [Parameter d, Parameter n, Field denom, Field numer]
  [1] [this]

Variable sets for PolyCalc.RatNum.isNaN() enter
  [1] [this]
  [2] [Field denom, Field numer]
Variable sets for PolyCalc.RatNum.isNaN() exit
  [1] [return]
  [1] [this]
  [2] [Field denom, Field numer]

Variable sets for PolyCalc.RatNum.isNegative() enter
  [1] [this]
  [2] [Field denom, Field numer]
Variable sets for PolyCalc.RatNum.isNegative() exit
  [1] [return]
  [1] [this]
  [2] [Field denom, Field numer]

Variable sets for PolyCalc.RatNum.isPositive() enter
  [1] [this]
  [2] [Field denom, Field numer]
Variable sets for PolyCalc.RatNum.isPositive() exit
  [1] [return]
  [1] [this]
  [2] [Field denom, Field numer]

Variable sets for PolyCalc.RatNum.compareTo(PolyCalc.RatNum rn) enter
  [2] [Parameter rn, this]
  [4] [Field rn.denom, Field rn.numer, Field denom, Field numer]
Variable sets for PolyCalc.RatNum.compareTo(PolyCalc.RatNum rn) exit
  [5] [return, Field rn.denom, Field rn.numer, Field denom, Field numer]
  [2] [Parameter rn, this]

Variable sets for PolyCalc.RatNum.approx() enter
  [1] [this]
  [2] [Field denom, Field numer]
Variable sets for PolyCalc.RatNum.approx() exit
  [3] [return, Field denom, Field numer]
  [1] [this]

Variable sets for PolyCalc.RatNum.unparse() enter
  [1] [this]
  [2] [Field denom, Field numer]
Variable sets for PolyCalc.RatNum.unparse() exit
  [1] [return]
  [1] [String return.toString]
  [1] [this]
  [2] [Field denom, Field numer]

Variable sets for PolyCalc.RatNum.negate() enter
  [1] [this]
  [2] [Field denom, Field numer]
Variable sets for PolyCalc.RatNum.negate() exit
  [1] [return]
  [4] [Field return.denom, Field return.numer, Field denom, Field numer]
  [1] [this]

Variable sets for PolyCalc.RatNum.add(PolyCalc.RatNum arg) enter
  [2] [Parameter arg, this]
  [4] [Field arg.denom, Field arg.numer, Field denom, Field numer]
Variable sets for PolyCalc.RatNum.add(PolyCalc.RatNum arg) exit
  [2] [Parameter arg, this]
  [6] [Field arg.denom, Field arg.numer, Field return.denom, Field return.numer, Field denom, Field numer]
  [1] [return]

Variable sets for PolyCalc.RatNum.sub(PolyCalc.RatNum arg) enter
  [2] [Parameter arg, this]
  [4] [Field arg.denom, Field arg.numer, Field denom, Field numer]
Variable sets for PolyCalc.RatNum.sub(PolyCalc.RatNum arg) exit
  [2] [Parameter arg, this]
  [6] [Field arg.denom, Field arg.numer, Field return.denom, Field return.numer, Field denom, Field numer]
  [1] [return]

Variable sets for PolyCalc.RatNum.mul(PolyCalc.RatNum arg) enter
  [2] [Parameter arg, this]
  [4] [Field arg.denom, Field arg.numer, Field denom, Field numer]
Variable sets for PolyCalc.RatNum.mul(PolyCalc.RatNum arg) exit
  [2] [Parameter arg, this]
  [6] [Field arg.denom, Field arg.numer, Field return.denom, Field return.numer, Field denom, Field numer]
  [1] [return]

Variable sets for PolyCalc.RatNum.div(PolyCalc.RatNum arg) enter
  [2] [Parameter arg, this]
  [4] [Field arg.denom, Field arg.numer, Field denom, Field numer]
Variable sets for PolyCalc.RatNum.div(PolyCalc.RatNum arg) exit
  [3] [Parameter arg, return, this]
  [6] [Field arg.denom, Field arg.numer, Field return.denom, Field return.numer, Field denom, Field numer]

Variable sets for PolyCalc.RatNum.gcd(int _a, int _b) enter
  [2] [Parameter _a, Parameter _b]
Variable sets for PolyCalc.RatNum.gcd(int _a, int _b) exit
  [3] [Parameter _a, Parameter _b, return]

Variable sets for PolyCalc.RatNum.hashCode() enter
  [1] [this]
  [2] [Field denom, Field numer]
Variable sets for PolyCalc.RatNum.hashCode() exit
  [1] [return]
  [1] [this]
  [2] [Field denom, Field numer]

Variable sets for PolyCalc.RatNum.equals(java.lang.Object obj) enter
  [2] [Parameter obj, this]
  [1] [Class of obj]
  [2] [Field denom, Field numer]
Variable sets for PolyCalc.RatNum.equals(java.lang.Object obj) exit
  [2] [Parameter obj, this]
  [1] [Class of obj]
  [1] [return]
  [2] [Field denom, Field numer]

Variable sets for PolyCalc.RatNum.debugPrint() enter
  [1] [this]
  [2] [Field denom, Field numer]
Variable sets for PolyCalc.RatNum.debugPrint() exit
  [1] [return]
  [1] [String return.toString]
  [1] [this]
  [2] [Field denom, Field numer]

Variable sets for PolyCalc.RatNum.parse(java.lang.String ratStr) enter
  [1] [Parameter ratStr]
  [1] [String ratStr.toString]
Variable sets for PolyCalc.RatNum.parse(java.lang.String ratStr) exit
  [1] [Parameter ratStr]
  [1] [String ratStr.toString]
  [1] [return]
  [2] [Field return.denom, Field return.numer]

Variable sets for PolyCalc.RatPoly.<init>() enter
Variable sets for PolyCalc.RatPoly.<init>() exit
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.<init>(int c, int e) enter
  [1] [Parameter c]
  [1] [Parameter e]
Variable sets for PolyCalc.RatPoly.<init>(int c, int e) exit
  [1] [Parameter c]
  [1] [Parameter e]
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.<init>(PolyCalc.RatTermVec rt) enter
  [1] [Parameter rt]
  [1] [Field rt.wrapped]
  [1] [List rt.wrapped[..]]
  [1] [Class of rt.wrapped[..]]
Variable sets for PolyCalc.RatPoly.<init>(PolyCalc.RatTermVec rt) exit
  [2] [Parameter rt, Field terms]
  [2] [Field rt.wrapped, Field terms.wrapped]
  [2] [List rt.wrapped[..], List Field terms.wrapped[..]]
  [1] [Class of rt.wrapped[..]]
  [1] [this]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.isNaN() enter
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]
Variable sets for PolyCalc.RatPoly.isNaN() exit
  [1] [return]
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.degree() enter
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]
Variable sets for PolyCalc.RatPoly.degree() exit
  [1] [return]
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.coeff(int deg) enter
  [1] [Parameter deg]
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]
Variable sets for PolyCalc.RatPoly.coeff(int deg) exit
  [3] [Parameter deg, Field return.denom, Field return.numer]
  [1] [return]
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.unparse() enter
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]
Variable sets for PolyCalc.RatPoly.unparse() exit
  [1] [return]
  [1] [String return.toString]
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.appendTerm(java.lang.StringBuffer sb, PolyCalc.RatTerm rt) enter
  [1] [Parameter rt]
  [1] [Field rt.coeff]
  [3] [Field rt.coeff.denom, Field rt.coeff.numer, Field rt.expt]
  [1] [Parameter sb]
Variable sets for PolyCalc.RatPoly.appendTerm(java.lang.StringBuffer sb, PolyCalc.RatTerm rt) exit
  [1] [Parameter rt]
  [1] [Field rt.coeff]
  [3] [Field rt.coeff.denom, Field rt.coeff.numer, Field rt.expt]
  [1] [Parameter sb]

Variable sets for PolyCalc.RatPoly.scaleBy(PolyCalc.RatTerm scalar) enter
  [2] [Parameter scalar, List Field terms.wrapped[..]]
  [1] [Field scalar.coeff]
  [3] [Field scalar.coeff.denom, Field scalar.coeff.numer, Field scalar.expt]
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [Class of Field terms.wrapped[..]]
Variable sets for PolyCalc.RatPoly.scaleBy(PolyCalc.RatTerm scalar) exit
  [1] [return]
  [1] [Field return.terms]
  [2] [Field return.terms.wrapped, Field terms.wrapped]
  [1] [List return.terms.wrapped[..]]
  [1] [Class of return.terms.wrapped[..]]
  [2] [Parameter scalar, List Field terms.wrapped[..]]
  [1] [Field scalar.coeff]
  [3] [Field scalar.coeff.denom, Field scalar.coeff.numer, Field scalar.expt]
  [1] [this]
  [1] [Field terms]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.scaleCoeff(PolyCalc.RatTermVec vec, PolyCalc.RatNum scalar) enter
  [1] [Parameter scalar]
  [2] [Field scalar.denom, Field scalar.numer]
  [1] [Parameter vec]
  [1] [Field vec.wrapped]
  [1] [List vec.wrapped[..]]
  [1] [Class of vec.wrapped[..]]
Variable sets for PolyCalc.RatPoly.scaleCoeff(PolyCalc.RatTermVec vec, PolyCalc.RatNum scalar) exit
  [1] [Parameter scalar]
  [2] [Field scalar.denom, Field scalar.numer]
  [1] [Parameter vec]
  [1] [Field vec.wrapped]
  [1] [List vec.wrapped[..]]
  [1] [Class of vec.wrapped[..]]

Variable sets for PolyCalc.RatPoly.incremExpt(PolyCalc.RatTermVec vec, int degree) enter
  [1] [Parameter degree]
  [1] [Parameter vec]
  [1] [Field vec.wrapped]
  [1] [List vec.wrapped[..]]
  [1] [Class of vec.wrapped[..]]
Variable sets for PolyCalc.RatPoly.incremExpt(PolyCalc.RatTermVec vec, int degree) exit
  [1] [Parameter degree]
  [1] [Parameter vec]
  [1] [Field vec.wrapped]
  [1] [List vec.wrapped[..]]
  [1] [Class of vec.wrapped[..]]

Variable sets for PolyCalc.RatPoly.sortedAdd(PolyCalc.RatTermVec vec, PolyCalc.RatTerm newTerm) enter
  [2] [Parameter newTerm, List vec.wrapped[..]]
  [1] [Field newTerm.coeff]
  [3] [Field newTerm.coeff.denom, Field newTerm.coeff.numer, Field newTerm.expt]
  [1] [Parameter vec]
  [1] [Field vec.wrapped]
  [1] [Class of vec.wrapped[..]]
Variable sets for PolyCalc.RatPoly.sortedAdd(PolyCalc.RatTermVec vec, PolyCalc.RatTerm newTerm) exit
  [2] [Parameter newTerm, List vec.wrapped[..]]
  [1] [Field newTerm.coeff]
  [3] [Field newTerm.coeff.denom, Field newTerm.coeff.numer, Field newTerm.expt]
  [1] [Parameter vec]
  [1] [Field vec.wrapped]
  [1] [Class of vec.wrapped[..]]

Variable sets for PolyCalc.RatPoly.assertSorted(PolyCalc.RatTermVec v) enter
  [1] [Parameter v]
  [1] [Field v.wrapped]
  [1] [List v.wrapped[..]]
  [1] [Class of v.wrapped[..]]
Variable sets for PolyCalc.RatPoly.assertSorted(PolyCalc.RatTermVec v) exit
  [1] [Parameter v]
  [1] [Field v.wrapped]
  [1] [List v.wrapped[..]]
  [1] [Class of v.wrapped[..]]

Variable sets for PolyCalc.RatPoly.add(PolyCalc.RatPoly p) enter
  [2] [Parameter p, this]
  [2] [Field p.terms, Field terms]
  [2] [Field p.terms.wrapped, Field terms.wrapped]
  [2] [List p.terms.wrapped[..], List Field terms.wrapped[..]]
  [1] [Class of p.terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]
Variable sets for PolyCalc.RatPoly.add(PolyCalc.RatPoly p) exit
  [3] [Parameter p, return, this]
  [3] [Field p.terms, Field return.terms, Field terms]
  [3] [Field p.terms.wrapped, Field return.terms.wrapped, Field terms.wrapped]
  [3] [List p.terms.wrapped[..], List return.terms.wrapped[..], List Field terms.wrapped[..]]
  [1] [Class of p.terms.wrapped[..]]
  [1] [Class of return.terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.sub(PolyCalc.RatPoly p) enter
  [2] [Parameter p, this]
  [2] [Field p.terms, Field terms]
  [2] [Field p.terms.wrapped, Field terms.wrapped]
  [2] [List p.terms.wrapped[..], List Field terms.wrapped[..]]
  [1] [Class of p.terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]
Variable sets for PolyCalc.RatPoly.sub(PolyCalc.RatPoly p) exit
  [3] [Parameter p, return, this]
  [3] [Field p.terms, Field return.terms, Field terms]
  [3] [Field p.terms.wrapped, Field return.terms.wrapped, Field terms.wrapped]
  [3] [List p.terms.wrapped[..], List return.terms.wrapped[..], List Field terms.wrapped[..]]
  [1] [Class of p.terms.wrapped[..]]
  [1] [Class of return.terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.mul(PolyCalc.RatPoly p) enter
  [2] [Parameter p, this]
  [2] [Field p.terms, Field terms]
  [2] [Field p.terms.wrapped, Field terms.wrapped]
  [2] [List p.terms.wrapped[..], List Field terms.wrapped[..]]
  [1] [Class of p.terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]
Variable sets for PolyCalc.RatPoly.mul(PolyCalc.RatPoly p) exit
  [3] [Parameter p, return, this]
  [3] [Field p.terms, Field return.terms, Field terms]
  [3] [Field p.terms.wrapped, Field return.terms.wrapped, Field terms.wrapped]
  [3] [List p.terms.wrapped[..], List return.terms.wrapped[..], List Field terms.wrapped[..]]
  [1] [Class of p.terms.wrapped[..]]
  [1] [Class of return.terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.div(PolyCalc.RatPoly p) enter
  [2] [Parameter p, this]
  [2] [Field p.terms, Field terms]
  [2] [Field p.terms.wrapped, Field terms.wrapped]
  [2] [List p.terms.wrapped[..], List Field terms.wrapped[..]]
  [1] [Class of p.terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]
Variable sets for PolyCalc.RatPoly.div(PolyCalc.RatPoly p) exit
  [2] [Parameter p, this]
  [2] [Field p.terms, Field terms]
  [2] [Field p.terms.wrapped, Field terms.wrapped]
  [2] [List p.terms.wrapped[..], List Field terms.wrapped[..]]
  [1] [Class of p.terms.wrapped[..]]
  [1] [return]
  [1] [Field return.terms]
  [1] [Field return.terms.wrapped]
  [1] [List return.terms.wrapped[..]]
  [1] [Class of return.terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.divAndRem(PolyCalc.RatPoly p) enter
  [1] [Parameter p]
  [1] [Field p.terms]
  [1] [Field p.terms.wrapped]
  [1] [List p.terms.wrapped[..]]
  [1] [Class of p.terms.wrapped[..]]
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]
Variable sets for PolyCalc.RatPoly.divAndRem(PolyCalc.RatPoly p) exit
  [1] [Parameter p]
  [1] [Field p.terms]
  [1] [Field p.terms.wrapped]
  [1] [List p.terms.wrapped[..]]
  [1] [Class of p.terms.wrapped[..]]
  [1] [return]
  [1] [Class of return]
  [1] [Array return[..]]
  [1] [Field return[..].terms]
  [2] [Field return[..].terms.wrapped, Field terms.wrapped]
  [1] [this]
  [1] [Field terms]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.containsNaN(PolyCalc.RatTermVec vec) enter
  [1] [Parameter vec]
  [1] [Field vec.wrapped]
  [1] [List vec.wrapped[..]]
  [1] [Class of vec.wrapped[..]]
Variable sets for PolyCalc.RatPoly.containsNaN(PolyCalc.RatTermVec vec) exit
  [1] [return]
  [1] [Parameter vec]
  [1] [Field vec.wrapped]
  [1] [List vec.wrapped[..]]
  [1] [Class of vec.wrapped[..]]

Variable sets for PolyCalc.RatPoly.findTermIndex(PolyCalc.RatTermVec ts, int expt) enter
  [1] [Parameter expt]
  [1] [Parameter ts]
  [1] [Field ts.wrapped]
  [1] [List ts.wrapped[..]]
  [1] [Class of ts.wrapped[..]]
Variable sets for PolyCalc.RatPoly.findTermIndex(PolyCalc.RatTermVec ts, int expt) exit
  [1] [Parameter expt]
  [1] [return]
  [1] [Parameter ts]
  [1] [Field ts.wrapped]
  [1] [List ts.wrapped[..]]
  [1] [Class of ts.wrapped[..]]

Variable sets for PolyCalc.RatPoly.hintedGet(PolyCalc.RatTermVec ts, int i, int expt) enter
  [1] [Parameter expt]
  [1] [Parameter i]
  [1] [Parameter ts]
  [1] [Field ts.wrapped]
  [1] [List ts.wrapped[..]]
  [1] [Class of ts.wrapped[..]]
Variable sets for PolyCalc.RatPoly.hintedGet(PolyCalc.RatTermVec ts, int i, int expt) exit
  [4] [Parameter expt, Field return.coeff.denom, Field return.coeff.numer, Field return.expt]
  [1] [Parameter i]
  [2] [return, List ts.wrapped[..]]
  [1] [Field return.coeff]
  [1] [Parameter ts]
  [1] [Field ts.wrapped]
  [1] [Class of ts.wrapped[..]]

Variable sets for PolyCalc.RatPoly.replaceExpt(PolyCalc.RatTerm term, PolyCalc.RatTermVec ts, int index) enter
  [1] [Parameter index]
  [2] [Parameter term, List ts.wrapped[..]]
  [1] [Field term.coeff]
  [3] [Field term.coeff.denom, Field term.coeff.numer, Field term.expt]
  [1] [Parameter ts]
  [1] [Field ts.wrapped]
  [1] [Class of ts.wrapped[..]]
Variable sets for PolyCalc.RatPoly.replaceExpt(PolyCalc.RatTerm term, PolyCalc.RatTermVec ts, int index) exit
  [1] [Parameter index]
  [2] [Parameter term, List ts.wrapped[..]]
  [1] [Field term.coeff]
  [3] [Field term.coeff.denom, Field term.coeff.numer, Field term.expt]
  [1] [Parameter ts]
  [1] [Field ts.wrapped]
  [1] [Class of ts.wrapped[..]]

Variable sets for PolyCalc.RatPoly.negate() enter
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]
Variable sets for PolyCalc.RatPoly.negate() exit
  [1] [return]
  [1] [Field return.terms]
  [2] [Field return.terms.wrapped, Field terms.wrapped]
  [1] [List return.terms.wrapped[..]]
  [1] [Class of return.terms.wrapped[..]]
  [1] [this]
  [1] [Field terms]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.eval(double d) enter
  [1] [Parameter d]
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]
Variable sets for PolyCalc.RatPoly.eval(double d) exit
  [2] [Parameter d, return]
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.parse(java.lang.String polyStr) enter
  [1] [Parameter polyStr]
  [1] [String polyStr.toString]
Variable sets for PolyCalc.RatPoly.parse(java.lang.String polyStr) exit
  [1] [Parameter polyStr]
  [1] [String polyStr.toString]
  [1] [return]
  [1] [Field return.terms]
  [1] [Field return.terms.wrapped]
  [1] [List return.terms.wrapped[..]]
  [1] [Class of return.terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.checkRep() enter
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]
Variable sets for PolyCalc.RatPoly.checkRep() exit
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatPoly.equals(java.lang.Object obj) enter
  [1] [Parameter obj]
  [1] [Class of obj]
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]
Variable sets for PolyCalc.RatPoly.equals(java.lang.Object obj) exit
  [1] [Parameter obj]
  [1] [Class of obj]
  [1] [return]
  [1] [this]
  [1] [Field terms]
  [1] [Field terms.wrapped]
  [1] [List Field terms.wrapped[..]]
  [1] [Class of Field terms.wrapped[..]]

Variable sets for PolyCalc.RatTermVec.<init>() enter
Variable sets for PolyCalc.RatTermVec.<init>() exit
  [1] [this]
  [1] [Field wrapped]
  [1] [List Field wrapped[..]]
  [1] [Class of Field wrapped[..]]

Variable sets for PolyCalc.RatTermVec.size() enter
  [1] [this]
  [1] [Field wrapped]
  [1] [List Field wrapped[..]]
  [1] [Class of Field wrapped[..]]
Variable sets for PolyCalc.RatTermVec.size() exit
  [1] [return]
  [1] [this]
  [1] [Field wrapped]
  [1] [List Field wrapped[..]]
  [1] [Class of Field wrapped[..]]

Variable sets for PolyCalc.RatTermVec.get(int index) enter
  [1] [Parameter index]
  [1] [this]
  [1] [Field wrapped]
  [1] [List Field wrapped[..]]
  [1] [Class of Field wrapped[..]]
Variable sets for PolyCalc.RatTermVec.get(int index) exit
  [1] [Parameter index]
  [2] [return, List Field wrapped[..]]
  [1] [Field return.coeff]
  [3] [Field return.coeff.denom, Field return.coeff.numer, Field return.expt]
  [1] [this]
  [1] [Field wrapped]
  [1] [Class of Field wrapped[..]]

Variable sets for PolyCalc.RatTermVec.addElement(PolyCalc.RatTerm t) enter
  [2] [Parameter t, List Field wrapped[..]]
  [1] [Field t.coeff]
  [3] [Field t.coeff.denom, Field t.coeff.numer, Field t.expt]
  [1] [this]
  [1] [Field wrapped]
  [1] [Class of Field wrapped[..]]
Variable sets for PolyCalc.RatTermVec.addElement(PolyCalc.RatTerm t) exit
  [2] [Parameter t, List Field wrapped[..]]
  [1] [Field t.coeff]
  [3] [Field t.coeff.denom, Field t.coeff.numer, Field t.expt]
  [1] [this]
  [1] [Field wrapped]
  [1] [Class of Field wrapped[..]]

Variable sets for PolyCalc.RatTermVec.insert(PolyCalc.RatTerm t, int index) enter
  [1] [Parameter index]
  [2] [Parameter t, List Field wrapped[..]]
  [1] [Field t.coeff]
  [3] [Field t.coeff.denom, Field t.coeff.numer, Field t.expt]
  [1] [this]
  [1] [Field wrapped]
  [1] [Class of Field wrapped[..]]
Variable sets for PolyCalc.RatTermVec.insert(PolyCalc.RatTerm t, int index) exit
  [1] [Parameter index]
  [2] [Parameter t, List Field wrapped[..]]
  [1] [Field t.coeff]
  [3] [Field t.coeff.denom, Field t.coeff.numer, Field t.expt]
  [1] [this]
  [1] [Field wrapped]
  [1] [Class of Field wrapped[..]]

Variable sets for PolyCalc.RatTermVec.remove(int index) enter
  [1] [Parameter index]
  [1] [this]
  [1] [Field wrapped]
  [1] [List Field wrapped[..]]
  [1] [Class of Field wrapped[..]]
Variable sets for PolyCalc.RatTermVec.remove(int index) exit
  [1] [Parameter index]
  [1] [this]
  [1] [Field wrapped]
  [1] [List Field wrapped[..]]
  [1] [Class of Field wrapped[..]]

Variable sets for PolyCalc.RatTermVec.set(PolyCalc.RatTerm t, int index) enter
  [1] [Parameter index]
  [2] [Parameter t, List Field wrapped[..]]
  [1] [Field t.coeff]
  [3] [Field t.coeff.denom, Field t.coeff.numer, Field t.expt]
  [1] [this]
  [1] [Field wrapped]
  [1] [Class of Field wrapped[..]]
Variable sets for PolyCalc.RatTermVec.set(PolyCalc.RatTerm t, int index) exit
  [1] [Parameter index]
  [2] [Parameter t, List Field wrapped[..]]
  [1] [Field t.coeff]
  [3] [Field t.coeff.denom, Field t.coeff.numer, Field t.expt]
  [1] [this]
  [1] [Field wrapped]
  [1] [Class of Field wrapped[..]]

Variable sets for PolyCalc.RatTermVec.copy() enter
  [1] [this]
  [1] [Field wrapped]
  [1] [List Field wrapped[..]]
  [1] [Class of Field wrapped[..]]
Variable sets for PolyCalc.RatTermVec.copy() exit
  [1] [return]
  [2] [Field return.wrapped, Field wrapped]
  [2] [List return.wrapped[..], List Field wrapped[..]]
  [1] [Class of return.wrapped[..]]
  [1] [this]
  [1] [Class of Field wrapped[..]]

Variable sets for PolyCalc.RatTermVec.printDebug() enter
  [1] [this]
  [1] [Field wrapped]
  [1] [List Field wrapped[..]]
  [1] [Class of Field wrapped[..]]
Variable sets for PolyCalc.RatTermVec.printDebug() exit
  [1] [return]
  [1] [String return.toString]
  [1] [this]
  [1] [Field wrapped]
  [1] [List Field wrapped[..]]
  [1] [Class of Field wrapped[..]]

Variable sets for PolyCalc.RatTermVec.equals(java.lang.Object obj) enter
  [1] [Parameter obj]
  [1] [Class of obj]
  [1] [this]
  [1] [Field wrapped]
  [1] [List Field wrapped[..]]
  [1] [Class of Field wrapped[..]]
Variable sets for PolyCalc.RatTermVec.equals(java.lang.Object obj) exit
  [1] [Parameter obj]
  [1] [Class of obj]
  [1] [return]
  [1] [this]
  [1] [Field wrapped]
  [1] [List Field wrapped[..]]
  [1] [Class of Field wrapped[..]]

Variable sets for PolyCalc.RatTerm.<init>(PolyCalc.RatNum c, int e) enter
  [1] [Parameter c]
  [3] [Field c.denom, Field c.numer, Parameter e]
Variable sets for PolyCalc.RatTerm.<init>(PolyCalc.RatNum c, int e) exit
  [2] [Parameter c, Field coeff]
  [6] [Field c.denom, Field c.numer, Parameter e, Field coeff.denom, Field coeff.numer, Field expt]
  [1] [this]

Variable sets for PolyCalc.RatTerm.equals(java.lang.Object obj) enter
  [1] [Parameter obj]
  [1] [Class of obj]
  [1] [this]
  [1] [Field coeff]
  [3] [Field coeff.denom, Field coeff.numer, Field expt]
Variable sets for PolyCalc.RatTerm.equals(java.lang.Object obj) exit
  [1] [Parameter obj]
  [1] [Class of obj]
  [1] [return]
  [1] [this]
  [1] [Field coeff]
  [3] [Field coeff.denom, Field coeff.numer, Field expt]

Variable sets for PolyCalc.RatTerm.debugPrint() enter
  [1] [this]
  [1] [Field coeff]
  [3] [Field coeff.denom, Field coeff.numer, Field expt]
Variable sets for PolyCalc.RatTerm.debugPrint() exit
  [1] [return]
  [1] [String return.toString]
  [1] [this]
  [1] [Field coeff]
  [3] [Field coeff.denom, Field coeff.numer, Field expt]
