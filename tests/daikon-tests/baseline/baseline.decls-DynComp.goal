// Declaration file written by daikon.dcomp

VarComparability
implicit
DECLARE
Main:::CLASS

DECLARE
Main:::OBJECT
this
Main # isNonNull=true, isParam=true
hashcode
2


DECLARE
Main.Main():::ENTER

DECLARE
Main.Main():::EXIT3
this
Main # isNonNull=true, isParam=true
hashcode
2


DECLARE
Main.main(java.lang.String[]):::ENTER
args
java.lang.String[] # isParam=true
hashcode
2
args.getClass().getName()
java.lang.Class
java.lang.String
1
args[..]
java.lang.String[]
hashcode[]
3[5]
args[..].toString
java.lang.String[]
java.lang.String[]
4[6]

DECLARE
Main.main(java.lang.String[]):::EXIT10
args
java.lang.String[] # isParam=true
hashcode
2
args.getClass().getName()
java.lang.Class
java.lang.String
1
args[..]
java.lang.String[]
hashcode[]
3[5]
args[..].toString
java.lang.String[]
java.lang.String[]
4[6]


DECLARE
Main.equals(java.lang.Object):::ENTER
this
Main # isNonNull=true, isParam=true
hashcode
3
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
Main.equals(java.lang.Object):::EXIT1
this
Main # isNonNull=true, isParam=true
hashcode
4
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1
return
boolean
boolean
3


DECLARE
Main.equals_dcomp_instrumented(java.lang.Object):::ENTER
this
Main # isNonNull=true, isParam=true
hashcode
3
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
Main.equals_dcomp_instrumented(java.lang.Object):::EXIT1
this
Main # isNonNull=true, isParam=true
hashcode
4
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1
return
boolean
boolean
3

DECLARE
TestScores:::CLASS

DECLARE
TestScores:::OBJECT
this
TestScores # isNonNull=true, isParam=true
hashcode
2


DECLARE
TestScores.TestScores():::ENTER

DECLARE
TestScores.TestScores():::EXIT3
this
TestScores # isNonNull=true, isParam=true
hashcode
2


DECLARE
TestScores.main(java.lang.String[]):::ENTER
args
java.lang.String[] # isParam=true
hashcode
2
args.getClass().getName()
java.lang.Class
java.lang.String
1
args[..]
java.lang.String[]
hashcode[]
3[5]
args[..].toString
java.lang.String[]
java.lang.String[]
4[6]

DECLARE
TestScores.main(java.lang.String[]):::EXIT9
args
java.lang.String[] # isParam=true
hashcode
2
args.getClass().getName()
java.lang.Class
java.lang.String
1
args[..]
java.lang.String[]
hashcode[]
3[5]
args[..].toString
java.lang.String[]
java.lang.String[]
4[6]


DECLARE
TestScores.classAve(int[]):::ENTER
scores
int[] # isParam=true
hashcode
2
scores[..]
int[]
int[]
3[4]

DECLARE
TestScores.classAve(int[]):::EXIT17
scores
int[] # isParam=true
hashcode
3
scores[..]
int[]
int[]
2[4]
return
int
int
2


DECLARE
TestScores.six170():::ENTER

DECLARE
TestScores.six170():::EXIT32


DECLARE
TestScores.six821():::ENTER

DECLARE
TestScores.six821():::EXIT46


DECLARE
TestScores.six893():::ENTER

DECLARE
TestScores.six893():::EXIT70


DECLARE
TestScores.equals(java.lang.Object):::ENTER
this
TestScores # isNonNull=true, isParam=true
hashcode
3
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
TestScores.equals(java.lang.Object):::EXIT1
this
TestScores # isNonNull=true, isParam=true
hashcode
4
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1
return
boolean
boolean
3


DECLARE
TestScores.equals_dcomp_instrumented(java.lang.Object):::ENTER
this
TestScores # isNonNull=true, isParam=true
hashcode
3
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
TestScores.equals_dcomp_instrumented(java.lang.Object):::EXIT1
this
TestScores # isNonNull=true, isParam=true
hashcode
4
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1
return
boolean
boolean
3

DECLARE
DataAvg:::CLASS

DECLARE
DataAvg:::OBJECT
this
DataAvg # isNonNull=true, isParam=true
hashcode
2
this.sum
int
int
3
this.count
int
int
3


DECLARE
DataAvg.DataAvg():::ENTER

DECLARE
DataAvg.DataAvg():::EXIT13
this
DataAvg # isNonNull=true, isParam=true
hashcode
2
this.sum
int
int
3
this.count
int
int
3


DECLARE
DataAvg.insert(int):::ENTER
this
DataAvg # isNonNull=true, isParam=true
hashcode
3
this.sum
int
int
2
this.count
int
int
2
element
int # isParam=true
int
2

DECLARE
DataAvg.insert(int):::EXIT19
this
DataAvg # isNonNull=true, isParam=true
hashcode
3
this.sum
int
int
2
this.count
int
int
2
element
int # isParam=true
int
2


DECLARE
DataAvg.average():::ENTER
this
DataAvg # isNonNull=true, isParam=true
hashcode
2
this.sum
int
int
3
this.count
int
int
3

DECLARE
DataAvg.average():::EXIT24
this
DataAvg # isNonNull=true, isParam=true
hashcode
3
this.sum
int
int
2
this.count
int
int
2
return
int
int
2


DECLARE
DataAvg.equals(java.lang.Object):::ENTER
this
DataAvg # isNonNull=true, isParam=true
hashcode
3
this.sum
int
int
4
this.count
int
int
4
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
DataAvg.equals(java.lang.Object):::EXIT1
this
DataAvg # isNonNull=true, isParam=true
hashcode
4
this.sum
int
int
5
this.count
int
int
5
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1
return
boolean
boolean
3


DECLARE
DataAvg.equals_dcomp_instrumented(java.lang.Object):::ENTER
this
DataAvg # isNonNull=true, isParam=true
hashcode
3
this.sum
int
int
4
this.count
int
int
4
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
DataAvg.equals_dcomp_instrumented(java.lang.Object):::EXIT1
this
DataAvg # isNonNull=true, isParam=true
hashcode
4
this.sum
int
int
5
this.count
int
int
5
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1
return
boolean
boolean
3

DECLARE
RandomMean:::CLASS

DECLARE
RandomMean:::OBJECT
this
RandomMean # isNonNull=true, isParam=true
hashcode
2


DECLARE
RandomMean.RandomMean():::ENTER

DECLARE
RandomMean.RandomMean():::EXIT3
this
RandomMean # isNonNull=true, isParam=true
hashcode
2


DECLARE
RandomMean.main():::ENTER

DECLARE
RandomMean.main():::EXIT7


DECLARE
RandomMean.compute():::ENTER

DECLARE
RandomMean.compute():::EXIT20


DECLARE
RandomMean.equals(java.lang.Object):::ENTER
this
RandomMean # isNonNull=true, isParam=true
hashcode
3
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
RandomMean.equals(java.lang.Object):::EXIT1
this
RandomMean # isNonNull=true, isParam=true
hashcode
4
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1
return
boolean
boolean
3


DECLARE
RandomMean.equals_dcomp_instrumented(java.lang.Object):::ENTER
this
RandomMean # isNonNull=true, isParam=true
hashcode
3
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
RandomMean.equals_dcomp_instrumented(java.lang.Object):::EXIT1
this
RandomMean # isNonNull=true, isParam=true
hashcode
4
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1
return
boolean
boolean
3

