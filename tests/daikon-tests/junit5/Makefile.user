###########################################################################

JAVA_VERSION_STRING := $(shell javac -version 2>&1 | head -1 | cut "-d " -f2 | sed 's/-ea//')
startJVS := $(shell echo start${JAVA_VERSION_STRING})
ifneq (,$(findstring start1.8,$(startJVS)))
  JAVA_RELEASE_NUMBER := 8
else
  # Old Java releases (e.g. 1.7) will set JAVA_RELEASE_NUMBER to 1.
  # This will cause the JAVA8_OR_NEWER test to fail as desired.
  JAVA_RELEASE_NUMBER := $(shell echo ${JAVA_VERSION_STRING} | sed 's/\([0-9]\+\)\(\..*\)\?\(-.*\)\?/\1/')
endif

ifeq ($(shell [ $(JAVA_RELEASE_NUMBER) -ge 24 ] && echo yes),yes)
  SKIP_TEST := 1
  $(info skipping this test for JDK $(JAVA_RELEASE_NUMBER))
endif

ifeq ($(shell uname), Darwin)
  JAVA_HOME ?= $(/usr/libexec/java_home)
else
ifeq ($(shell which javac > /dev/null 2>&1 && echo found || echo nonexistent), found)
  JAVA_HOME ?= $(shell readlink -f $(shell which javac) | sed "s:/bin/javac::")
else
  $(info Failure: Here is the output of: which javac)
  $(info $(shell which javac))
  $(error 'which javac' had exit status 1)
endif
endif

# need junit.jar on classpath to compile all junit references
JUNIT_CLASSPATH := ${DAIKONDIR}/java/lib/*
JAVAC := $(JAVA_HOME)/bin/javac -cp .:$(JUNIT_CLASSPATH)
