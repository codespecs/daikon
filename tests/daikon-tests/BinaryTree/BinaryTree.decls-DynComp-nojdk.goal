// Declaration file written by daikon.dcomp

VarComparability
implicit
DECLARE
DataStructures.BinarySearchTree:::CLASS

DECLARE
DataStructures.BinarySearchTree:::OBJECT
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
2
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3


DECLARE
DataStructures.BinarySearchTree.BinarySearchTree():::ENTER

DECLARE
DataStructures.BinarySearchTree.BinarySearchTree():::EXIT30
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
2
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3


DECLARE
DataStructures.BinarySearchTree.insert(DataStructures.Comparable):::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
2
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
DataStructures.BinarySearchTree.insert(DataStructures.Comparable):::EXIT39
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
2
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1


DECLARE
DataStructures.BinarySearchTree.remove(DataStructures.Comparable):::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
2
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
DataStructures.BinarySearchTree.remove(DataStructures.Comparable):::EXIT48
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
2
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1


DECLARE
DataStructures.BinarySearchTree.findMin():::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
2
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3

DECLARE
DataStructures.BinarySearchTree.findMin():::EXIT56
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
4
return
DataStructures.Comparable
hashcode
2
return.getClass().getName()
java.lang.Class
java.lang.String
1


DECLARE
DataStructures.BinarySearchTree.findMax():::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
2
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3

DECLARE
DataStructures.BinarySearchTree.findMax():::EXIT65
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
4
return
DataStructures.Comparable
hashcode
2
return.getClass().getName()
java.lang.Class
java.lang.String
1


DECLARE
DataStructures.BinarySearchTree.find(DataStructures.Comparable):::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
2
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
DataStructures.BinarySearchTree.find(DataStructures.Comparable):::EXIT75
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
4
x
DataStructures.Comparable # isParam=true
hashcode
2
x.getClass().getName()
java.lang.Class
java.lang.String
1
return
DataStructures.Comparable
hashcode
2
return.getClass().getName()
java.lang.Class
java.lang.String
1


DECLARE
DataStructures.BinarySearchTree.makeEmpty():::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
2
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3

DECLARE
DataStructures.BinarySearchTree.makeEmpty():::EXIT84
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
2
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3


DECLARE
DataStructures.BinarySearchTree.isEmpty():::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
2
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3

DECLARE
DataStructures.BinarySearchTree.isEmpty():::EXIT92
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
4
return
boolean
boolean
2


DECLARE
DataStructures.BinarySearchTree.printTree():::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
2
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3

DECLARE
DataStructures.BinarySearchTree.printTree():::EXIT104
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
2
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3


DECLARE
DataStructures.BinarySearchTree.elementAt(DataStructures.BinaryNode):::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
t
DataStructures.BinaryNode # isParam=true
hashcode
2

DECLARE
DataStructures.BinarySearchTree.elementAt(DataStructures.BinaryNode):::EXIT113
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
4
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
3
t
DataStructures.BinaryNode # isParam=true
hashcode
3
return
DataStructures.Comparable
hashcode
2
return.getClass().getName()
java.lang.Class
java.lang.String
1


DECLARE
DataStructures.BinarySearchTree.insert(DataStructures.Comparable, DataStructures.BinaryNode):::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1
t
DataStructures.BinaryNode # isParam=true
hashcode
2

DECLARE
DataStructures.BinarySearchTree.insert(DataStructures.Comparable, DataStructures.BinaryNode):::EXIT132
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1
t
DataStructures.BinaryNode # isParam=true
hashcode
2
return
DataStructures.BinaryNode
hashcode
2


DECLARE
DataStructures.BinarySearchTree.remove(DataStructures.Comparable, DataStructures.BinaryNode):::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1
t
DataStructures.BinaryNode # isParam=true
hashcode
2

DECLARE
DataStructures.BinarySearchTree.remove(DataStructures.Comparable, DataStructures.BinaryNode):::EXIT144
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1
t
DataStructures.BinaryNode # isParam=true
hashcode
2
return
DataStructures.BinaryNode
hashcode
2

DECLARE
DataStructures.BinarySearchTree.remove(DataStructures.Comparable, DataStructures.BinaryNode):::EXIT156
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1
t
DataStructures.BinaryNode # isParam=true
hashcode
2
return
DataStructures.BinaryNode
hashcode
2


DECLARE
DataStructures.BinarySearchTree.findMin(DataStructures.BinaryNode):::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
t
DataStructures.BinaryNode # isParam=true
hashcode
2

DECLARE
DataStructures.BinarySearchTree.findMin(DataStructures.BinaryNode):::EXIT167
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
t
DataStructures.BinaryNode # isParam=true
hashcode
2
return
DataStructures.BinaryNode
hashcode
2

DECLARE
DataStructures.BinarySearchTree.findMin(DataStructures.BinaryNode):::EXIT169
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
t
DataStructures.BinaryNode # isParam=true
hashcode
2
return
DataStructures.BinaryNode
hashcode
2

DECLARE
DataStructures.BinarySearchTree.findMin(DataStructures.BinaryNode):::EXIT170
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
t
DataStructures.BinaryNode # isParam=true
hashcode
2
return
DataStructures.BinaryNode
hashcode
2


DECLARE
DataStructures.BinarySearchTree.findMax(DataStructures.BinaryNode):::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
t
DataStructures.BinaryNode # isParam=true
hashcode
2

DECLARE
DataStructures.BinarySearchTree.findMax(DataStructures.BinaryNode):::EXIT184
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
t
DataStructures.BinaryNode # isParam=true
hashcode
2
return
DataStructures.BinaryNode
hashcode
2


DECLARE
DataStructures.BinarySearchTree.find(DataStructures.Comparable, DataStructures.BinaryNode):::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1
t
DataStructures.BinaryNode # isParam=true
hashcode
2

DECLARE
DataStructures.BinarySearchTree.find(DataStructures.Comparable, DataStructures.BinaryNode):::EXIT196
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1
t
DataStructures.BinaryNode # isParam=true
hashcode
2
return
DataStructures.BinaryNode
hashcode
2

DECLARE
DataStructures.BinarySearchTree.find(DataStructures.Comparable, DataStructures.BinaryNode):::EXIT198
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1
t
DataStructures.BinaryNode # isParam=true
hashcode
2
return
DataStructures.BinaryNode
hashcode
2

DECLARE
DataStructures.BinarySearchTree.find(DataStructures.Comparable, DataStructures.BinaryNode):::EXIT200
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1
t
DataStructures.BinaryNode # isParam=true
hashcode
2
return
DataStructures.BinaryNode
hashcode
2

DECLARE
DataStructures.BinarySearchTree.find(DataStructures.Comparable, DataStructures.BinaryNode):::EXIT202
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
2
x
DataStructures.Comparable # isParam=true
hashcode
4
x.getClass().getName()
java.lang.Class
java.lang.String
1
t
DataStructures.BinaryNode # isParam=true
hashcode
2
return
DataStructures.BinaryNode
hashcode
2


DECLARE
DataStructures.BinarySearchTree.printTree(DataStructures.BinaryNode):::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
4
t
DataStructures.BinaryNode # isParam=true
hashcode
2

DECLARE
DataStructures.BinarySearchTree.printTree(DataStructures.BinaryNode):::EXIT217
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
4
t
DataStructures.BinaryNode # isParam=true
hashcode
2


DECLARE
DataStructures.BinarySearchTree.equals(java.lang.Object):::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
4
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
DataStructures.BinarySearchTree.equals(java.lang.Object):::EXIT1
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
4
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
5
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1
return
boolean
boolean
3


DECLARE
DataStructures.BinarySearchTree.equals_dcomp_instrumented(java.lang.Object):::ENTER
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
3
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
4
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
DataStructures.BinarySearchTree.equals_dcomp_instrumented(java.lang.Object):::EXIT1
this
DataStructures.BinarySearchTree # isNonNull=true, isParam=true
hashcode
4
this.root
DataStructures.BinaryNode # declaringClassPackageName=DataStructures
hashcode
5
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1
return
boolean
boolean
3

