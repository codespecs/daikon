// Declaration file written by daikon.dcomp

VarComparability
implicit
DECLARE
DataStructures.DisjSets:::CLASS

DECLARE
DataStructures.DisjSets:::OBJECT
this
DataStructures.DisjSets # isNonNull=true, isParam=true
hashcode
2
this.s
int[] # declaringClassPackageName=DataStructures
hashcode
4
this.s[..]
int[]
int[]
3[3]


DECLARE
DataStructures.DisjSets.DisjSets(int):::ENTER
numElements
int # isParam=true
int
2

DECLARE
DataStructures.DisjSets.DisjSets(int):::EXIT32
this
DataStructures.DisjSets # isNonNull=true, isParam=true
hashcode
4
this.s
int[] # declaringClassPackageName=DataStructures
hashcode
3
this.s[..]
int[]
int[]
2[2]
numElements
int # isParam=true
int
2


DECLARE
DataStructures.DisjSets.unionDisjoint(int, int):::ENTER
this
DataStructures.DisjSets # isNonNull=true, isParam=true
hashcode
4
this.s
int[] # declaringClassPackageName=DataStructures
hashcode
3
this.s[..]
int[]
int[]
2[2]
root1
int # isParam=true
int
2
root2
int # isParam=true
int
2

DECLARE
DataStructures.DisjSets.unionDisjoint(int, int):::EXIT44
this
DataStructures.DisjSets # isNonNull=true, isParam=true
hashcode
4
this.s
int[] # declaringClassPackageName=DataStructures
hashcode
3
this.s[..]
int[]
int[]
2[2]
root1
int # isParam=true
int
2
root2
int # isParam=true
int
2


DECLARE
DataStructures.DisjSets.unionCareful(int, int):::ENTER
this
DataStructures.DisjSets # isNonNull=true, isParam=true
hashcode
4
this.s
int[] # declaringClassPackageName=DataStructures
hashcode
3
this.s[..]
int[]
int[]
2[2]
set1
int # isParam=true
int
2
set2
int # isParam=true
int
2

DECLARE
DataStructures.DisjSets.unionCareful(int, int):::EXIT57
this
DataStructures.DisjSets # isNonNull=true, isParam=true
hashcode
4
this.s
int[] # declaringClassPackageName=DataStructures
hashcode
3
this.s[..]
int[]
int[]
2[2]
set1
int # isParam=true
int
2
set2
int # isParam=true
int
2


DECLARE
DataStructures.DisjSets.find(int):::ENTER
this
DataStructures.DisjSets # isNonNull=true, isParam=true
hashcode
2
this.s
int[] # declaringClassPackageName=DataStructures
hashcode
4
this.s[..]
int[]
int[]
3[3]
x
int # isParam=true
int
3

DECLARE
DataStructures.DisjSets.find(int):::EXIT68
this
DataStructures.DisjSets # isNonNull=true, isParam=true
hashcode
4
this.s
int[] # declaringClassPackageName=DataStructures
hashcode
3
this.s[..]
int[]
int[]
2[2]
x
int # isParam=true
int
2
return
int
int
2

DECLARE
DataStructures.DisjSets.find(int):::EXIT70
this
DataStructures.DisjSets # isNonNull=true, isParam=true
hashcode
4
this.s
int[] # declaringClassPackageName=DataStructures
hashcode
3
this.s[..]
int[]
int[]
2[2]
x
int # isParam=true
int
2
return
int
int
2


DECLARE
DataStructures.DisjSets.equals(java.lang.Object):::ENTER
this
DataStructures.DisjSets # isNonNull=true, isParam=true
hashcode
3
this.s
int[] # declaringClassPackageName=DataStructures
hashcode
5
this.s[..]
int[]
int[]
4[4]
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
DataStructures.DisjSets.equals(java.lang.Object):::EXIT1
this
DataStructures.DisjSets # isNonNull=true, isParam=true
hashcode
4
this.s
int[] # declaringClassPackageName=DataStructures
hashcode
6
this.s[..]
int[]
int[]
5[5]
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1
return
boolean
boolean
3


DECLARE
DataStructures.DisjSets.equals_dcomp_instrumented(java.lang.Object):::ENTER
this
DataStructures.DisjSets # isNonNull=true, isParam=true
hashcode
3
this.s
int[] # declaringClassPackageName=DataStructures
hashcode
5
this.s[..]
int[]
int[]
4[4]
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1

DECLARE
DataStructures.DisjSets.equals_dcomp_instrumented(java.lang.Object):::EXIT1
this
DataStructures.DisjSets # isNonNull=true, isParam=true
hashcode
4
this.s
int[] # declaringClassPackageName=DataStructures
hashcode
6
this.s[..]
int[]
int[]
5[5]
obj
java.lang.Object # isParam=true
hashcode
2
obj.getClass().getName()
java.lang.Class
java.lang.String
1
return
boolean
boolean
3

